
/********************************************************
*                                                       *
*   Package generated using UEDumper by Spuckwaffel.    *
*                                                       *
********************************************************/

#pragma once
#include "BasicType.h"
#include "CoreUObject.h"
#include "merged_AudioMixer_Engine_UMG_MovieScene_MovieSceneTracks.h"
#include "PlayFabCommon.h"

#pragma pack(push, 0x1)

class UPlayFabAdminAPI;
class UPlayFabAdminModelDecoder;
class UPlayFabAuthenticationAPI;
class UPlayFabAuthenticationModelDecoder;
class UPlayFabClientAPI;
class UPlayFabClientModelDecoder;
class UPlayFabCloudScriptAPI;
class UPlayFabCloudScriptModelDecoder;
class UPlayFabDataAPI;
class UPlayFabDataModelDecoder;
class UPlayFabEconomyAPI;
class UPlayFabEconomyModelDecoder;
class UPlayFabEventsAPI;
class UPlayFabEventsModelDecoder;
class UPlayFabExperimentationAPI;
class UPlayFabExperimentationModelDecoder;
class UPlayFabGroupsAPI;
class UPlayFabGroupsModelDecoder;
class UPlayFabInsightsAPI;
class UPlayFabInsightsModelDecoder;
class UPlayFabJsonObject;
class UPlayFabJsonValue;
class UPlayFabLocalizationAPI;
class UPlayFabLocalizationModelDecoder;
class UPlayFabMatchmakerAPI;
class UPlayFabMatchmakerModelDecoder;
class UPlayFabMultiplayerAPI;
class UPlayFabMultiplayerModelDecoder;
class UPlayFabProfilesAPI;
class UPlayFabProfilesModelDecoder;
class UPlayFabServerAPI;
class UPlayFabServerModelDecoder;
class UPlayFabUtilities;

/// Enum /Script/PlayFab.EStatisticResetIntervalOption
/// Size: 0x01 (1 bytes)
enum class EStatisticResetIntervalOption : uint8_t
{
	EStatisticResetIntervalOption__pfenum_Never                                      = 0,
	EStatisticResetIntervalOption__pfenum_Hour                                       = 1,
	EStatisticResetIntervalOption__pfenum_Day                                        = 2,
	EStatisticResetIntervalOption__pfenum_Week                                       = 3,
	EStatisticResetIntervalOption__pfenum_Month                                      = 4
};

/// Enum /Script/PlayFab.EStatisticAggregationMethod
/// Size: 0x01 (1 bytes)
enum class EStatisticAggregationMethod : uint8_t
{
	EStatisticAggregationMethod__pfenum_Last                                         = 0,
	EStatisticAggregationMethod__pfenum_Min                                          = 1,
	EStatisticAggregationMethod__pfenum_Max                                          = 2,
	EStatisticAggregationMethod__pfenum_Sum                                          = 3
};

/// Enum /Script/PlayFab.ERegion
/// Size: 0x01 (1 bytes)
enum class ERegion : uint8_t
{
	ERegion__pfenum_USCentral                                                        = 0,
	ERegion__pfenum_USEast                                                           = 1,
	ERegion__pfenum_EUWest                                                           = 2,
	ERegion__pfenum_Singapore                                                        = 3,
	ERegion__pfenum_Japan                                                            = 4,
	ERegion__pfenum_Brazil                                                           = 5,
	ERegion__pfenum_Australia                                                        = 6
};

/// Enum /Script/PlayFab.EPfSourceType
/// Size: 0x01 (1 bytes)
enum class EPfSourceType : uint8_t
{
	EPfSourceType__pfenum_Admin                                                      = 0,
	EPfSourceType__pfenum_BackEnd                                                    = 1,
	EPfSourceType__pfenum_GameClient                                                 = 2,
	EPfSourceType__pfenum_GameServer                                                 = 3,
	EPfSourceType__pfenum_Partner                                                    = 4,
	EPfSourceType__pfenum_Custom                                                     = 5,
	EPfSourceType__pfenum_API                                                        = 6
};

/// Enum /Script/PlayFab.EGameBuildStatus
/// Size: 0x01 (1 bytes)
enum class EGameBuildStatus : uint8_t
{
	EGameBuildStatus__pfenum_Available                                               = 0,
	EGameBuildStatus__pfenum_Validating                                              = 1,
	EGameBuildStatus__pfenum_InvalidBuildPackage                                     = 2,
	EGameBuildStatus__pfenum_Processing                                              = 3,
	EGameBuildStatus__pfenum_FailedToProcess                                         = 4
};

/// Enum /Script/PlayFab.EAuthTokenType
/// Size: 0x01 (1 bytes)
enum class EAuthTokenType : uint8_t
{
	EAuthTokenType__pfenum_Email                                                     = 0
};

/// Enum /Script/PlayFab.ETaskInstanceStatus
/// Size: 0x01 (1 bytes)
enum class ETaskInstanceStatus : uint8_t
{
	ETaskInstanceStatus__pfenum_Succeeded                                            = 0,
	ETaskInstanceStatus__pfenum_Starting                                             = 1,
	ETaskInstanceStatus__pfenum_InProgress                                           = 2,
	ETaskInstanceStatus__pfenum_Failed                                               = 3,
	ETaskInstanceStatus__pfenum_Aborted                                              = 4,
	ETaskInstanceStatus__pfenum_Stalled                                              = 5
};

/// Enum /Script/PlayFab.EResolutionOutcome
/// Size: 0x01 (1 bytes)
enum class EResolutionOutcome : uint8_t
{
	EResolutionOutcome__pfenum_Revoke                                                = 0,
	EResolutionOutcome__pfenum_Reinstate                                             = 1,
	EResolutionOutcome__pfenum_Manual                                                = 2
};

/// Enum /Script/PlayFab.EPushSetupPlatform
/// Size: 0x01 (1 bytes)
enum class EPushSetupPlatform : uint8_t
{
	EPushSetupPlatform__pfenum_GCM                                                   = 0,
	EPushSetupPlatform__pfenum_APNS                                                  = 1,
	EPushSetupPlatform__pfenum_APNS_SANDBOX                                          = 2
};

/// Enum /Script/PlayFab.EScheduledTaskType
/// Size: 0x01 (1 bytes)
enum class EScheduledTaskType : uint8_t
{
	EScheduledTaskType__pfenum_CloudScript                                           = 0,
	EScheduledTaskType__pfenum_ActionsOnPlayerSegment                                = 1,
	EScheduledTaskType__pfenum_CloudScriptAzureFunctions                             = 2,
	EScheduledTaskType__pfenum_InsightsScheduledScaling                              = 3
};

/// Enum /Script/PlayFab.EUserDataPermission
/// Size: 0x01 (1 bytes)
enum class EUserDataPermission : uint8_t
{
	EUserDataPermission__pfenum_Private                                              = 0,
	EUserDataPermission__pfenum_Public                                               = 1
};

/// Enum /Script/PlayFab.ELoginIdentityProvider
/// Size: 0x01 (1 bytes)
enum class ELoginIdentityProvider : uint8_t
{
	ELoginIdentityProvider__pfenum_Unknown                                           = 0,
	ELoginIdentityProvider__pfenum_PlayFab                                           = 1,
	ELoginIdentityProvider__pfenum_Custom                                            = 2,
	ELoginIdentityProvider__pfenum_GameCenter                                        = 3,
	ELoginIdentityProvider__pfenum_GooglePlay                                        = 4,
	ELoginIdentityProvider__pfenum_Steam                                             = 5,
	ELoginIdentityProvider__pfenum_XBoxLive                                          = 6,
	ELoginIdentityProvider__pfenum_PSN                                               = 7,
	ELoginIdentityProvider__pfenum_Kongregate                                        = 8,
	ELoginIdentityProvider__pfenum_Facebook                                          = 9,
	ELoginIdentityProvider__pfenum_IOSDevice                                         = 10,
	ELoginIdentityProvider__pfenum_AndroidDevice                                     = 11,
	ELoginIdentityProvider__pfenum_Twitch                                            = 12,
	ELoginIdentityProvider__pfenum_WindowsHello                                      = 13,
	ELoginIdentityProvider__pfenum_GameServer                                        = 14,
	ELoginIdentityProvider__pfenum_CustomServer                                      = 15,
	ELoginIdentityProvider__pfenum_NintendoSwitch                                    = 16,
	ELoginIdentityProvider__pfenum_FacebookInstantGames                              = 17,
	ELoginIdentityProvider__pfenum_OpenIdConnect                                     = 18,
	ELoginIdentityProvider__pfenum_Apple                                             = 19,
	ELoginIdentityProvider__pfenum_NintendoSwitchAccount                             = 20
};

/// Enum /Script/PlayFab.EIdentifiedDeviceType
/// Size: 0x01 (1 bytes)
enum class EIdentifiedDeviceType : uint8_t
{
	EIdentifiedDeviceType__pfenum_Unknown                                            = 0,
	EIdentifiedDeviceType__pfenum_XboxOne                                            = 1,
	EIdentifiedDeviceType__pfenum_Scarlett                                           = 2
};

/// Enum /Script/PlayFab.EMatchmakeStatus
/// Size: 0x01 (1 bytes)
enum class EMatchmakeStatus : uint8_t
{
	EMatchmakeStatus__pfenum_Complete                                                = 0,
	EMatchmakeStatus__pfenum_Waiting                                                 = 1,
	EMatchmakeStatus__pfenum_GameNotFound                                            = 2,
	EMatchmakeStatus__pfenum_NoAvailableSlots                                        = 3,
	EMatchmakeStatus__pfenum_SessionClosed                                           = 4
};

/// Enum /Script/PlayFab.ETransactionStatus
/// Size: 0x01 (1 bytes)
enum class ETransactionStatus : uint8_t
{
	ETransactionStatus__pfenum_CreateCart                                            = 0,
	ETransactionStatus__pfenum_Init                                                  = 1,
	ETransactionStatus__pfenum_Approved                                              = 2,
	ETransactionStatus__pfenum_Succeeded                                             = 3,
	ETransactionStatus__pfenum_FailedByProvider                                      = 4,
	ETransactionStatus__pfenum_DisputePending                                        = 5,
	ETransactionStatus__pfenum_RefundPending                                         = 6,
	ETransactionStatus__pfenum_Refunded                                              = 7,
	ETransactionStatus__pfenum_RefundFailed                                          = 8,
	ETransactionStatus__pfenum_ChargedBack                                           = 9,
	ETransactionStatus__pfenum_FailedByUber                                          = 10,
	ETransactionStatus__pfenum_FailedByPlayFab                                       = 11,
	ETransactionStatus__pfenum_Revoked                                               = 12,
	ETransactionStatus__pfenum_TradePending                                          = 13,
	ETransactionStatus__pfenum_Traded                                                = 14,
	ETransactionStatus__pfenum_Upgraded                                              = 15,
	ETransactionStatus__pfenum_StackPending                                          = 16,
	ETransactionStatus__pfenum_Stacked                                               = 17,
	ETransactionStatus__pfenum_Other                                                 = 18,
	ETransactionStatus__pfenum_Failed                                                = 19
};

/// Enum /Script/PlayFab.ECloudScriptRevisionOption
/// Size: 0x01 (1 bytes)
enum class ECloudScriptRevisionOption : uint8_t
{
	ECloudScriptRevisionOption__pfenum_Live                                          = 0,
	ECloudScriptRevisionOption__pfenum_Latest                                        = 1,
	ECloudScriptRevisionOption__pfenum_Specific                                      = 2
};

/// Enum /Script/PlayFab.ETradeStatus
/// Size: 0x01 (1 bytes)
enum class ETradeStatus : uint8_t
{
	ETradeStatus__pfenum_Invalid                                                     = 0,
	ETradeStatus__pfenum_Opening                                                     = 1,
	ETradeStatus__pfenum_Open                                                        = 2,
	ETradeStatus__pfenum_Accepting                                                   = 3,
	ETradeStatus__pfenum_Accepted                                                    = 4,
	ETradeStatus__pfenum_Filled                                                      = 5,
	ETradeStatus__pfenum_Cancelled                                                   = 6
};

/// Enum /Script/PlayFab.EAdActivity
/// Size: 0x01 (1 bytes)
enum class EAdActivity : uint8_t
{
	EAdActivity__pfenum_Opened                                                       = 0,
	EAdActivity__pfenum_Closed                                                       = 1,
	EAdActivity__pfenum_Start                                                        = 2,
	EAdActivity__pfenum_End                                                          = 3
};

/// Enum /Script/PlayFab.EPublishResult
/// Size: 0x01 (1 bytes)
enum class EPublishResult : uint8_t
{
	EPublishResult__pfenum_Unknown                                                   = 0,
	EPublishResult__pfenum_Pending                                                   = 1,
	EPublishResult__pfenum_Succeeded                                                 = 2,
	EPublishResult__pfenum_Failed                                                    = 3,
	EPublishResult__pfenum_Canceled                                                  = 4
};

/// Enum /Script/PlayFab.EConcernCategory
/// Size: 0x01 (1 bytes)
enum class EConcernCategory : uint8_t
{
	EConcernCategory__pfenum_None                                                    = 0,
	EConcernCategory__pfenum_OffensiveContent                                        = 1,
	EConcernCategory__pfenum_ChildExploitation                                       = 2,
	EConcernCategory__pfenum_MalwareOrVirus                                          = 3,
	EConcernCategory__pfenum_PrivacyConcerns                                         = 4,
	EConcernCategory__pfenum_MisleadingApp                                           = 5,
	EConcernCategory__pfenum_PoorPerformance                                         = 6,
	EConcernCategory__pfenum_ReviewResponse                                          = 7,
	EConcernCategory__pfenum_SpamAdvertising                                         = 8,
	EConcernCategory__pfenum_Profanity                                               = 9
};

/// Enum /Script/PlayFab.EModerationStatus
/// Size: 0x01 (1 bytes)
enum class EModerationStatus : uint8_t
{
	EModerationStatus__pfenum_Unknown                                                = 0,
	EModerationStatus__pfenum_AwaitingModeration                                     = 1,
	EModerationStatus__pfenum_Approved                                               = 2,
	EModerationStatus__pfenum_Rejected                                               = 3
};

/// Enum /Script/PlayFab.EHelpfulnessVote
/// Size: 0x01 (1 bytes)
enum class EHelpfulnessVote : uint8_t
{
	EHelpfulnessVote__pfenum_None                                                    = 0,
	EHelpfulnessVote__pfenum_UnHelpful                                               = 1,
	EHelpfulnessVote__pfenum_Helpful                                                 = 2
};

/// Enum /Script/PlayFab.EExperimentType
/// Size: 0x01 (1 bytes)
enum class EExperimentType : uint8_t
{
	EExperimentType__pfenum_Active                                                   = 0,
	EExperimentType__pfenum_Snapshot                                                 = 1
};

/// Enum /Script/PlayFab.EOperationTypes
/// Size: 0x01 (1 bytes)
enum class EOperationTypes : uint8_t
{
	EOperationTypes__pfenum_Created                                                  = 0,
	EOperationTypes__pfenum_Updated                                                  = 1,
	EOperationTypes__pfenum_Deleted                                                  = 2,
	EOperationTypes__pfenum_None                                                     = 3
};

/// Enum /Script/PlayFab.EAzureVmSize
/// Size: 0x01 (1 bytes)
enum class EAzureVmSize : uint8_t
{
	EAzureVmSize__pfenum_Standard_A1                                                 = 0,
	EAzureVmSize__pfenum_Standard_A2                                                 = 1,
	EAzureVmSize__pfenum_Standard_A3                                                 = 2,
	EAzureVmSize__pfenum_Standard_A4                                                 = 3,
	EAzureVmSize__pfenum_Standard_A1_v2                                              = 4,
	EAzureVmSize__pfenum_Standard_A2_v2                                              = 5,
	EAzureVmSize__pfenum_Standard_A4_v2                                              = 6,
	EAzureVmSize__pfenum_Standard_A8_v2                                              = 7,
	EAzureVmSize__pfenum_Standard_D1_v2                                              = 8,
	EAzureVmSize__pfenum_Standard_D2_v2                                              = 9,
	EAzureVmSize__pfenum_Standard_D3_v2                                              = 10,
	EAzureVmSize__pfenum_Standard_D4_v2                                              = 11,
	EAzureVmSize__pfenum_Standard_D5_v2                                              = 12,
	EAzureVmSize__pfenum_Standard_D2_v3                                              = 13,
	EAzureVmSize__pfenum_Standard_D4_v3                                              = 14,
	EAzureVmSize__pfenum_Standard_D8_v3                                              = 15,
	EAzureVmSize__pfenum_Standard_D16_v3                                             = 16,
	EAzureVmSize__pfenum_Standard_F1                                                 = 17,
	EAzureVmSize__pfenum_Standard_F2                                                 = 18,
	EAzureVmSize__pfenum_Standard_F4                                                 = 19,
	EAzureVmSize__pfenum_Standard_F8                                                 = 20,
	EAzureVmSize__pfenum_Standard_F16                                                = 21,
	EAzureVmSize__pfenum_Standard_F2s_v2                                             = 22,
	EAzureVmSize__pfenum_Standard_F4s_v2                                             = 23,
	EAzureVmSize__pfenum_Standard_F8s_v2                                             = 24,
	EAzureVmSize__pfenum_Standard_F16s_v2                                            = 25,
	EAzureVmSize__pfenum_Standard_D2as_v4                                            = 26,
	EAzureVmSize__pfenum_Standard_D4as_v4                                            = 27,
	EAzureVmSize__pfenum_Standard_D8as_v4                                            = 28,
	EAzureVmSize__pfenum_Standard_D16as_v4                                           = 29,
	EAzureVmSize__pfenum_Standard_D2a_v4                                             = 30,
	EAzureVmSize__pfenum_Standard_D4a_v4                                             = 31,
	EAzureVmSize__pfenum_Standard_D8a_v4                                             = 32,
	EAzureVmSize__pfenum_Standard_D16a_v4                                            = 33,
	EAzureVmSize__pfenum_Standard_E2a_v4                                             = 34,
	EAzureVmSize__pfenum_Standard_E4a_v4                                             = 35,
	EAzureVmSize__pfenum_Standard_E8a_v4                                             = 36,
	EAzureVmSize__pfenum_Standard_E16a_v4                                            = 37,
	EAzureVmSize__pfenum_Standard_E2as_v4                                            = 38,
	EAzureVmSize__pfenum_Standard_E4as_v4                                            = 39,
	EAzureVmSize__pfenum_Standard_E8as_v4                                            = 40,
	EAzureVmSize__pfenum_Standard_E16as_v4                                           = 41,
	EAzureVmSize__pfenum_Standard_D2s_v3                                             = 42,
	EAzureVmSize__pfenum_Standard_D4s_v3                                             = 43,
	EAzureVmSize__pfenum_Standard_D8s_v3                                             = 44,
	EAzureVmSize__pfenum_Standard_D16s_v3                                            = 45,
	EAzureVmSize__pfenum_Standard_DS1_v2                                             = 46,
	EAzureVmSize__pfenum_Standard_DS2_v2                                             = 47,
	EAzureVmSize__pfenum_Standard_DS3_v2                                             = 48,
	EAzureVmSize__pfenum_Standard_DS4_v2                                             = 49,
	EAzureVmSize__pfenum_Standard_DS5_v2                                             = 50,
	EAzureVmSize__pfenum_Standard_NC4as_T4_v3                                        = 51,
	EAzureVmSize__pfenum_Standard_D2d_v4                                             = 52,
	EAzureVmSize__pfenum_Standard_D4d_v4                                             = 53,
	EAzureVmSize__pfenum_Standard_D8d_v4                                             = 54,
	EAzureVmSize__pfenum_Standard_D16d_v4                                            = 55,
	EAzureVmSize__pfenum_Standard_D2ds_v4                                            = 56,
	EAzureVmSize__pfenum_Standard_D4ds_v4                                            = 57,
	EAzureVmSize__pfenum_Standard_D8ds_v4                                            = 58,
	EAzureVmSize__pfenum_Standard_D16ds_v4                                           = 59,
	EAzureVmSize__pfenum_Standard_HB120_16rs_v3                                      = 60,
	EAzureVmSize__pfenum_Standard_HB120_32rs_v3                                      = 61,
	EAzureVmSize__pfenum_Standard_HB120_64rs_v3                                      = 62,
	EAzureVmSize__pfenum_Standard_HB120_96rs_v3                                      = 63,
	EAzureVmSize__pfenum_Standard_HB120rs_v3                                         = 64
};

/// Enum /Script/PlayFab.EContainerFlavor
/// Size: 0x01 (1 bytes)
enum class EContainerFlavor : uint8_t
{
	EContainerFlavor__pfenum_ManagedWindowsServerCore                                = 0,
	EContainerFlavor__pfenum_CustomLinux                                             = 1,
	EContainerFlavor__pfenum_ManagedWindowsServerCorePreview                         = 2,
	EContainerFlavor__pfenum_Invalid                                                 = 3
};

/// Enum /Script/PlayFab.EOwnerMigrationPolicy
/// Size: 0x01 (1 bytes)
enum class EOwnerMigrationPolicy : uint8_t
{
	EOwnerMigrationPolicy__pfenum_None                                               = 0,
	EOwnerMigrationPolicy__pfenum_Automatic                                          = 1,
	EOwnerMigrationPolicy__pfenum_Manual                                             = 2,
	EOwnerMigrationPolicy__pfenum_Server                                             = 3
};

/// Enum /Script/PlayFab.EAccessPolicy
/// Size: 0x01 (1 bytes)
enum class EAccessPolicy : uint8_t
{
	EAccessPolicy__pfenum_Public                                                     = 0,
	EAccessPolicy__pfenum_Friends                                                    = 1,
	EAccessPolicy__pfenum_Private                                                    = 2
};

/// Enum /Script/PlayFab.ETitleMultiplayerServerEnabledStatus
/// Size: 0x01 (1 bytes)
enum class ETitleMultiplayerServerEnabledStatus : uint8_t
{
	ETitleMultiplayerServerEnabledStatus__pfenum_Initializing                        = 0,
	ETitleMultiplayerServerEnabledStatus__pfenum_Enabled                             = 1,
	ETitleMultiplayerServerEnabledStatus__pfenum_Disabled                            = 2
};

/// Enum /Script/PlayFab.ESubscriptionType
/// Size: 0x01 (1 bytes)
enum class ESubscriptionType : uint8_t
{
	ESubscriptionType__pfenum_LobbyChange                                            = 0,
	ESubscriptionType__pfenum_LobbyInvite                                            = 1
};

/// Enum /Script/PlayFab.EMembershipLock
/// Size: 0x01 (1 bytes)
enum class EMembershipLock : uint8_t
{
	EMembershipLock__pfenum_Unlocked                                                 = 0,
	EMembershipLock__pfenum_Locked                                                   = 1
};

/// Enum /Script/PlayFab.EPlayerConnectionState
/// Size: 0x01 (1 bytes)
enum class EPlayerConnectionState : uint8_t
{
	EPlayerConnectionState__pfenum_Unassigned                                        = 0,
	EPlayerConnectionState__pfenum_Connecting                                        = 1,
	EPlayerConnectionState__pfenum_Participating                                     = 2,
	EPlayerConnectionState__pfenum_Participated                                      = 3
};

/// Enum /Script/PlayFab.EGameInstanceState
/// Size: 0x01 (1 bytes)
enum class EGameInstanceState : uint8_t
{
	EGameInstanceState__pfenum_Open                                                  = 0,
	EGameInstanceState__pfenum_Closed                                                = 1
};

/// Enum /Script/PlayFab.EServerType
/// Size: 0x01 (1 bytes)
enum class EServerType : uint8_t
{
	EServerType__pfenum_Container                                                    = 0,
	EServerType__pfenum_Process                                                      = 1
};

/// Enum /Script/PlayFab.EProtocolType
/// Size: 0x01 (1 bytes)
enum class EProtocolType : uint8_t
{
	EProtocolType__pfenum_TCP                                                        = 0,
	EProtocolType__pfenum_UDP                                                        = 1
};

/// Enum /Script/PlayFab.EOsPlatform
/// Size: 0x01 (1 bytes)
enum class EOsPlatform : uint8_t
{
	EOsPlatform__pfenum_Windows                                                      = 0,
	EOsPlatform__pfenum_Linux                                                        = 1
};

/// Enum /Script/PlayFab.ECancellationReason
/// Size: 0x01 (1 bytes)
enum class ECancellationReason : uint8_t
{
	ECancellationReason__pfenum_Requested                                            = 0,
	ECancellationReason__pfenum_Internal                                             = 1,
	ECancellationReason__pfenum_Timeout                                              = 2
};

/// Enum /Script/PlayFab.EAzureVmFamily
/// Size: 0x01 (1 bytes)
enum class EAzureVmFamily : uint8_t
{
	EAzureVmFamily__pfenum_A                                                         = 0,
	EAzureVmFamily__pfenum_Av2                                                       = 1,
	EAzureVmFamily__pfenum_Dv2                                                       = 2,
	EAzureVmFamily__pfenum_Dv3                                                       = 3,
	EAzureVmFamily__pfenum_F                                                         = 4,
	EAzureVmFamily__pfenum_Fsv2                                                      = 5,
	EAzureVmFamily__pfenum_Dasv4                                                     = 6,
	EAzureVmFamily__pfenum_Dav4                                                      = 7,
	EAzureVmFamily__pfenum_Eav4                                                      = 8,
	EAzureVmFamily__pfenum_Easv4                                                     = 9,
	EAzureVmFamily__pfenum_Ev4                                                       = 10,
	EAzureVmFamily__pfenum_Esv4                                                      = 11,
	EAzureVmFamily__pfenum_Dsv3                                                      = 12,
	EAzureVmFamily__pfenum_Dsv2                                                      = 13,
	EAzureVmFamily__pfenum_NCasT4_v3                                                 = 14,
	EAzureVmFamily__pfenum_Ddv4                                                      = 15,
	EAzureVmFamily__pfenum_Ddsv4                                                     = 16,
	EAzureVmFamily__pfenum_HBv3                                                      = 17
};

/// Enum /Script/PlayFab.EAzureRegion
/// Size: 0x01 (1 bytes)
enum class EAzureRegion : uint8_t
{
	EAzureRegion__pfenum_AustraliaEast                                               = 0,
	EAzureRegion__pfenum_AustraliaSoutheast                                          = 1,
	EAzureRegion__pfenum_BrazilSouth                                                 = 2,
	EAzureRegion__pfenum_CentralUs                                                   = 3,
	EAzureRegion__pfenum_EastAsia                                                    = 4,
	EAzureRegion__pfenum_EastUs                                                      = 5,
	EAzureRegion__pfenum_EastUs2                                                     = 6,
	EAzureRegion__pfenum_JapanEast                                                   = 7,
	EAzureRegion__pfenum_JapanWest                                                   = 8,
	EAzureRegion__pfenum_NorthCentralUs                                              = 9,
	EAzureRegion__pfenum_NorthEurope                                                 = 10,
	EAzureRegion__pfenum_SouthCentralUs                                              = 11,
	EAzureRegion__pfenum_SoutheastAsia                                               = 12,
	EAzureRegion__pfenum_WestEurope                                                  = 13,
	EAzureRegion__pfenum_WestUs                                                      = 14,
	EAzureRegion__pfenum_SouthAfricaNorth                                            = 15,
	EAzureRegion__pfenum_WestCentralUs                                               = 16,
	EAzureRegion__pfenum_KoreaCentral                                                = 17,
	EAzureRegion__pfenum_FranceCentral                                               = 18,
	EAzureRegion__pfenum_WestUs2                                                     = 19,
	EAzureRegion__pfenum_CentralIndia                                                = 20,
	EAzureRegion__pfenum_UaeNorth                                                    = 21,
	EAzureRegion__pfenum_UkSouth                                                     = 22
};

/// Enum /Script/PlayFab.EExperimentState
/// Size: 0x01 (1 bytes)
enum class EExperimentState : uint8_t
{
	EExperimentState__pfenum_New                                                     = 0,
	EExperimentState__pfenum_Started                                                 = 1,
	EExperimentState__pfenum_Stopped                                                 = 2,
	EExperimentState__pfenum_Deleted                                                 = 3
};

/// Enum /Script/PlayFab.EAnalysisTaskState
/// Size: 0x01 (1 bytes)
enum class EAnalysisTaskState : uint8_t
{
	EAnalysisTaskState__pfenum_Waiting                                               = 0,
	EAnalysisTaskState__pfenum_ReadyForSubmission                                    = 1,
	EAnalysisTaskState__pfenum_SubmittingToPipeline                                  = 2,
	EAnalysisTaskState__pfenum_Running                                               = 3,
	EAnalysisTaskState__pfenum_Completed                                             = 4,
	EAnalysisTaskState__pfenum_Failed                                                = 5,
	EAnalysisTaskState__pfenum_Canceled                                              = 6
};

/// Enum /Script/PlayFab.EDisplayPropertyType
/// Size: 0x01 (1 bytes)
enum class EDisplayPropertyType : uint8_t
{
	EDisplayPropertyType__pfenum_None                                                = 0,
	EDisplayPropertyType__pfenum_QueryDateTime                                       = 1,
	EDisplayPropertyType__pfenum_QueryDouble                                         = 2,
	EDisplayPropertyType__pfenum_QueryString                                         = 3,
	EDisplayPropertyType__pfenum_SearchString                                        = 4
};

/// Enum /Script/PlayFab.EPfTriggerType
/// Size: 0x01 (1 bytes)
enum class EPfTriggerType : uint8_t
{
	EPfTriggerType__pfenum_HTTP                                                      = 0,
	EPfTriggerType__pfenum_Queue                                                     = 1
};

/// Enum /Script/PlayFab.EUserOrigination
/// Size: 0x01 (1 bytes)
enum class EUserOrigination : uint8_t
{
	EUserOrigination__pfenum_Organic                                                 = 0,
	EUserOrigination__pfenum_Steam                                                   = 1,
	EUserOrigination__pfenum_Google                                                  = 2,
	EUserOrigination__pfenum_Amazon                                                  = 3,
	EUserOrigination__pfenum_Facebook                                                = 4,
	EUserOrigination__pfenum_Kongregate                                              = 5,
	EUserOrigination__pfenum_GamersFirst                                             = 6,
	EUserOrigination__pfenum_Unknown                                                 = 7,
	EUserOrigination__pfenum_IOS                                                     = 8,
	EUserOrigination__pfenum_LoadTest                                                = 9,
	EUserOrigination__pfenum_Android                                                 = 10,
	EUserOrigination__pfenum_PSN                                                     = 11,
	EUserOrigination__pfenum_GameCenter                                              = 12,
	EUserOrigination__pfenum_CustomId                                                = 13,
	EUserOrigination__pfenum_XboxLive                                                = 14,
	EUserOrigination__pfenum_Parse                                                   = 15,
	EUserOrigination__pfenum_Twitch                                                  = 16,
	EUserOrigination__pfenum_ServerCustomId                                          = 17,
	EUserOrigination__pfenum_NintendoSwitchDeviceId                                  = 18,
	EUserOrigination__pfenum_FacebookInstantGamesId                                  = 19,
	EUserOrigination__pfenum_OpenIdConnect                                           = 20,
	EUserOrigination__pfenum_Apple                                                   = 21,
	EUserOrigination__pfenum_NintendoSwitchAccount                                   = 22
};

/// Enum /Script/PlayFab.ETitleActivationStatus
/// Size: 0x01 (1 bytes)
enum class ETitleActivationStatus : uint8_t
{
	ETitleActivationStatus__pfenum_None                                              = 0,
	ETitleActivationStatus__pfenum_ActivatedTitleKey                                 = 1,
	ETitleActivationStatus__pfenum_PendingSteam                                      = 2,
	ETitleActivationStatus__pfenum_ActivatedSteam                                    = 3,
	ETitleActivationStatus__pfenum_RevokedSteam                                      = 4
};

/// Enum /Script/PlayFab.ESubscriptionProviderStatus
/// Size: 0x01 (1 bytes)
enum class ESubscriptionProviderStatus : uint8_t
{
	ESubscriptionProviderStatus__pfenum_NoError                                      = 0,
	ESubscriptionProviderStatus__pfenum_Cancelled                                    = 1,
	ESubscriptionProviderStatus__pfenum_UnknownError                                 = 2,
	ESubscriptionProviderStatus__pfenum_BillingError                                 = 3,
	ESubscriptionProviderStatus__pfenum_ProductUnavailable                           = 4,
	ESubscriptionProviderStatus__pfenum_CustomerDidNotAcceptPriceChange              = 5,
	ESubscriptionProviderStatus__pfenum_FreeTrial                                    = 6,
	ESubscriptionProviderStatus__pfenum_PaymentPending                               = 7
};

/// Enum /Script/PlayFab.EStatisticVersionStatus
/// Size: 0x01 (1 bytes)
enum class EStatisticVersionStatus : uint8_t
{
	EStatisticVersionStatus__pfenum_Active                                           = 0,
	EStatisticVersionStatus__pfenum_SnapshotPending                                  = 1,
	EStatisticVersionStatus__pfenum_Snapshot                                         = 2,
	EStatisticVersionStatus__pfenum_ArchivalPending                                  = 3,
	EStatisticVersionStatus__pfenum_Archived                                         = 4
};

/// Enum /Script/PlayFab.EStatisticVersionArchivalStatus
/// Size: 0x01 (1 bytes)
enum class EStatisticVersionArchivalStatus : uint8_t
{
	EStatisticVersionArchivalStatus__pfenum_NotScheduled                             = 0,
	EStatisticVersionArchivalStatus__pfenum_Scheduled                                = 1,
	EStatisticVersionArchivalStatus__pfenum_Queued                                   = 2,
	EStatisticVersionArchivalStatus__pfenum_InProgress                               = 3,
	EStatisticVersionArchivalStatus__pfenum_Complete                                 = 4
};

/// Enum /Script/PlayFab.ESegmentPushNotificationDevicePlatform
/// Size: 0x01 (1 bytes)
enum class ESegmentPushNotificationDevicePlatform : uint8_t
{
	ESegmentPushNotificationDevicePlatform__pfenum_ApplePushNotificationService      = 0,
	ESegmentPushNotificationDevicePlatform__pfenum_GoogleCloudMessaging              = 1
};

/// Enum /Script/PlayFab.ESegmentLoginIdentityProvider
/// Size: 0x01 (1 bytes)
enum class ESegmentLoginIdentityProvider : uint8_t
{
	ESegmentLoginIdentityProvider__pfenum_Unknown                                    = 0,
	ESegmentLoginIdentityProvider__pfenum_PlayFab                                    = 1,
	ESegmentLoginIdentityProvider__pfenum_Custom                                     = 2,
	ESegmentLoginIdentityProvider__pfenum_GameCenter                                 = 3,
	ESegmentLoginIdentityProvider__pfenum_GooglePlay                                 = 4,
	ESegmentLoginIdentityProvider__pfenum_Steam                                      = 5,
	ESegmentLoginIdentityProvider__pfenum_XBoxLive                                   = 6,
	ESegmentLoginIdentityProvider__pfenum_PSN                                        = 7,
	ESegmentLoginIdentityProvider__pfenum_Kongregate                                 = 8,
	ESegmentLoginIdentityProvider__pfenum_Facebook                                   = 9,
	ESegmentLoginIdentityProvider__pfenum_IOSDevice                                  = 10,
	ESegmentLoginIdentityProvider__pfenum_AndroidDevice                              = 11,
	ESegmentLoginIdentityProvider__pfenum_Twitch                                     = 12,
	ESegmentLoginIdentityProvider__pfenum_WindowsHello                               = 13,
	ESegmentLoginIdentityProvider__pfenum_GameServer                                 = 14,
	ESegmentLoginIdentityProvider__pfenum_CustomServer                               = 15,
	ESegmentLoginIdentityProvider__pfenum_NintendoSwitch                             = 16,
	ESegmentLoginIdentityProvider__pfenum_FacebookInstantGames                       = 17,
	ESegmentLoginIdentityProvider__pfenum_OpenIdConnect                              = 18,
	ESegmentLoginIdentityProvider__pfenum_Apple                                      = 19,
	ESegmentLoginIdentityProvider__pfenum_NintendoSwitchAccount                      = 20
};

/// Enum /Script/PlayFab.ESegmentFilterComparison
/// Size: 0x01 (1 bytes)
enum class ESegmentFilterComparison : uint8_t
{
	ESegmentFilterComparison__pfenum_GreaterThan                                     = 0,
	ESegmentFilterComparison__pfenum_LessThan                                        = 1,
	ESegmentFilterComparison__pfenum_EqualTo                                         = 2,
	ESegmentFilterComparison__pfenum_NotEqualTo                                      = 3,
	ESegmentFilterComparison__pfenum_GreaterThanOrEqual                              = 4,
	ESegmentFilterComparison__pfenum_LessThanOrEqual                                 = 5,
	ESegmentFilterComparison__pfenum_Exists                                          = 6,
	ESegmentFilterComparison__pfenum_Contains                                        = 7,
	ESegmentFilterComparison__pfenum_NotContains                                     = 8
};

/// Enum /Script/PlayFab.ESegmentCurrency
/// Size: 0x01 (1 bytes)
enum class ESegmentCurrency : uint8_t
{
	ESegmentCurrency__pfenum_AED                                                     = 0,
	ESegmentCurrency__pfenum_AFN                                                     = 1,
	ESegmentCurrency__pfenum_ALL                                                     = 2,
	ESegmentCurrency__pfenum_AMD                                                     = 3,
	ESegmentCurrency__pfenum_ANG                                                     = 4,
	ESegmentCurrency__pfenum_AOA                                                     = 5,
	ESegmentCurrency__pfenum_ARS                                                     = 6,
	ESegmentCurrency__pfenum_AUD                                                     = 7,
	ESegmentCurrency__pfenum_AWG                                                     = 8,
	ESegmentCurrency__pfenum_AZN                                                     = 9,
	ESegmentCurrency__pfenum_BAM                                                     = 10,
	ESegmentCurrency__pfenum_BBD                                                     = 11,
	ESegmentCurrency__pfenum_BDT                                                     = 12,
	ESegmentCurrency__pfenum_BGN                                                     = 13,
	ESegmentCurrency__pfenum_BHD                                                     = 14,
	ESegmentCurrency__pfenum_BIF                                                     = 15,
	ESegmentCurrency__pfenum_BMD                                                     = 16,
	ESegmentCurrency__pfenum_BND                                                     = 17,
	ESegmentCurrency__pfenum_BOB                                                     = 18,
	ESegmentCurrency__pfenum_BRL                                                     = 19,
	ESegmentCurrency__pfenum_BSD                                                     = 20,
	ESegmentCurrency__pfenum_BTN                                                     = 21,
	ESegmentCurrency__pfenum_BWP                                                     = 22,
	ESegmentCurrency__pfenum_BYR                                                     = 23,
	ESegmentCurrency__pfenum_BZD                                                     = 24,
	ESegmentCurrency__pfenum_CAD                                                     = 25,
	ESegmentCurrency__pfenum_CDF                                                     = 26,
	ESegmentCurrency__pfenum_CHF                                                     = 27,
	ESegmentCurrency__pfenum_CLP                                                     = 28,
	ESegmentCurrency__pfenum_CNY                                                     = 29,
	ESegmentCurrency__pfenum_COP                                                     = 30,
	ESegmentCurrency__pfenum_CRC                                                     = 31,
	ESegmentCurrency__pfenum_CUC                                                     = 32,
	ESegmentCurrency__pfenum_CUP                                                     = 33,
	ESegmentCurrency__pfenum_CVE                                                     = 34,
	ESegmentCurrency__pfenum_CZK                                                     = 35,
	ESegmentCurrency__pfenum_DJF                                                     = 36,
	ESegmentCurrency__pfenum_DKK                                                     = 37,
	ESegmentCurrency__pfenum_DOP                                                     = 38,
	ESegmentCurrency__pfenum_DZD                                                     = 39,
	ESegmentCurrency__pfenum_EGP                                                     = 40,
	ESegmentCurrency__pfenum_ERN                                                     = 41,
	ESegmentCurrency__pfenum_ETB                                                     = 42,
	ESegmentCurrency__pfenum_EUR                                                     = 43,
	ESegmentCurrency__pfenum_FJD                                                     = 44,
	ESegmentCurrency__pfenum_FKP                                                     = 45,
	ESegmentCurrency__pfenum_GBP                                                     = 46,
	ESegmentCurrency__pfenum_GEL                                                     = 47,
	ESegmentCurrency__pfenum_GGP                                                     = 48,
	ESegmentCurrency__pfenum_GHS                                                     = 49,
	ESegmentCurrency__pfenum_GIP                                                     = 50,
	ESegmentCurrency__pfenum_GMD                                                     = 51,
	ESegmentCurrency__pfenum_GNF                                                     = 52,
	ESegmentCurrency__pfenum_GTQ                                                     = 53,
	ESegmentCurrency__pfenum_GYD                                                     = 54,
	ESegmentCurrency__pfenum_HKD                                                     = 55,
	ESegmentCurrency__pfenum_HNL                                                     = 56,
	ESegmentCurrency__pfenum_HRK                                                     = 57,
	ESegmentCurrency__pfenum_HTG                                                     = 58,
	ESegmentCurrency__pfenum_HUF                                                     = 59,
	ESegmentCurrency__pfenum_IDR                                                     = 60,
	ESegmentCurrency__pfenum_ILS                                                     = 61,
	ESegmentCurrency__pfenum_IMP                                                     = 62,
	ESegmentCurrency__pfenum_INR                                                     = 63,
	ESegmentCurrency__pfenum_IQD                                                     = 64,
	ESegmentCurrency__pfenum_IRR                                                     = 65,
	ESegmentCurrency__pfenum_ISK                                                     = 66,
	ESegmentCurrency__pfenum_JEP                                                     = 67,
	ESegmentCurrency__pfenum_JMD                                                     = 68,
	ESegmentCurrency__pfenum_JOD                                                     = 69,
	ESegmentCurrency__pfenum_JPY                                                     = 70,
	ESegmentCurrency__pfenum_KES                                                     = 71,
	ESegmentCurrency__pfenum_KGS                                                     = 72,
	ESegmentCurrency__pfenum_KHR                                                     = 73,
	ESegmentCurrency__pfenum_KMF                                                     = 74,
	ESegmentCurrency__pfenum_KPW                                                     = 75,
	ESegmentCurrency__pfenum_KRW                                                     = 76,
	ESegmentCurrency__pfenum_KWD                                                     = 77,
	ESegmentCurrency__pfenum_KYD                                                     = 78,
	ESegmentCurrency__pfenum_KZT                                                     = 79,
	ESegmentCurrency__pfenum_LAK                                                     = 80,
	ESegmentCurrency__pfenum_LBP                                                     = 81,
	ESegmentCurrency__pfenum_LKR                                                     = 82,
	ESegmentCurrency__pfenum_LRD                                                     = 83,
	ESegmentCurrency__pfenum_LSL                                                     = 84,
	ESegmentCurrency__pfenum_LYD                                                     = 85,
	ESegmentCurrency__pfenum_MAD                                                     = 86,
	ESegmentCurrency__pfenum_MDL                                                     = 87,
	ESegmentCurrency__pfenum_MGA                                                     = 88,
	ESegmentCurrency__pfenum_MKD                                                     = 89,
	ESegmentCurrency__pfenum_MMK                                                     = 90,
	ESegmentCurrency__pfenum_MNT                                                     = 91,
	ESegmentCurrency__pfenum_MOP                                                     = 92,
	ESegmentCurrency__pfenum_MRO                                                     = 93,
	ESegmentCurrency__pfenum_MUR                                                     = 94,
	ESegmentCurrency__pfenum_MVR                                                     = 95,
	ESegmentCurrency__pfenum_MWK                                                     = 96,
	ESegmentCurrency__pfenum_MXN                                                     = 97,
	ESegmentCurrency__pfenum_MYR                                                     = 98,
	ESegmentCurrency__pfenum_MZN                                                     = 99,
	ESegmentCurrency__pfenum_NAD                                                     = 100,
	ESegmentCurrency__pfenum_NGN                                                     = 101,
	ESegmentCurrency__pfenum_NIO                                                     = 102,
	ESegmentCurrency__pfenum_NOK                                                     = 103,
	ESegmentCurrency__pfenum_NPR                                                     = 104,
	ESegmentCurrency__pfenum_NZD                                                     = 105,
	ESegmentCurrency__pfenum_OMR                                                     = 106,
	ESegmentCurrency__pfenum_PAB                                                     = 107,
	ESegmentCurrency__pfenum_PEN                                                     = 108,
	ESegmentCurrency__pfenum_PGK                                                     = 109,
	ESegmentCurrency__pfenum_PHP                                                     = 110,
	ESegmentCurrency__pfenum_PKR                                                     = 111,
	ESegmentCurrency__pfenum_PLN                                                     = 112,
	ESegmentCurrency__pfenum_PYG                                                     = 113,
	ESegmentCurrency__pfenum_QAR                                                     = 114,
	ESegmentCurrency__pfenum_RON                                                     = 115,
	ESegmentCurrency__pfenum_RSD                                                     = 116,
	ESegmentCurrency__pfenum_RUB                                                     = 117,
	ESegmentCurrency__pfenum_RWF                                                     = 118,
	ESegmentCurrency__pfenum_SAR                                                     = 119,
	ESegmentCurrency__pfenum_SBD                                                     = 120,
	ESegmentCurrency__pfenum_SCR                                                     = 121,
	ESegmentCurrency__pfenum_SDG                                                     = 122,
	ESegmentCurrency__pfenum_SEK                                                     = 123,
	ESegmentCurrency__pfenum_SGD                                                     = 124,
	ESegmentCurrency__pfenum_SHP                                                     = 125,
	ESegmentCurrency__pfenum_SLL                                                     = 126,
	ESegmentCurrency__pfenum_SOS                                                     = 127,
	ESegmentCurrency__pfenum_SPL                                                     = 128,
	ESegmentCurrency__pfenum_SRD                                                     = 129,
	ESegmentCurrency__pfenum_STD                                                     = 130,
	ESegmentCurrency__pfenum_SVC                                                     = 131,
	ESegmentCurrency__pfenum_SYP                                                     = 132,
	ESegmentCurrency__pfenum_SZL                                                     = 133,
	ESegmentCurrency__pfenum_THB                                                     = 134,
	ESegmentCurrency__pfenum_TJS                                                     = 135,
	ESegmentCurrency__pfenum_TMT                                                     = 136,
	ESegmentCurrency__pfenum_TND                                                     = 137,
	ESegmentCurrency__pfenum_TOP                                                     = 138,
	ESegmentCurrency__pfenum_TRY                                                     = 139,
	ESegmentCurrency__pfenum_TTD                                                     = 140,
	ESegmentCurrency__pfenum_TVD                                                     = 141,
	ESegmentCurrency__pfenum_TWD                                                     = 142,
	ESegmentCurrency__pfenum_TZS                                                     = 143,
	ESegmentCurrency__pfenum_UAH                                                     = 144,
	ESegmentCurrency__pfenum_UGX                                                     = 145,
	ESegmentCurrency__pfenum_USD                                                     = 146,
	ESegmentCurrency__pfenum_UYU                                                     = 147,
	ESegmentCurrency__pfenum_UZS                                                     = 148,
	ESegmentCurrency__pfenum_VEF                                                     = 149,
	ESegmentCurrency__pfenum_VND                                                     = 150,
	ESegmentCurrency__pfenum_VUV                                                     = 151,
	ESegmentCurrency__pfenum_WST                                                     = 152,
	ESegmentCurrency__pfenum_XAF                                                     = 153,
	ESegmentCurrency__pfenum_XCD                                                     = 154,
	ESegmentCurrency__pfenum_XDR                                                     = 155,
	ESegmentCurrency__pfenum_XOF                                                     = 156,
	ESegmentCurrency__pfenum_XPF                                                     = 157,
	ESegmentCurrency__pfenum_YER                                                     = 158,
	ESegmentCurrency__pfenum_ZAR                                                     = 159,
	ESegmentCurrency__pfenum_ZMW                                                     = 160,
	ESegmentCurrency__pfenum_ZWD                                                     = 161
};

/// Enum /Script/PlayFab.ESegmentCountryCode
/// Size: 0x01 (1 bytes)
enum class ESegmentCountryCode : uint8_t
{
	ESegmentCountryCode__pfenum_AF                                                   = 0,
	ESegmentCountryCode__pfenum_AX                                                   = 1,
	ESegmentCountryCode__pfenum_AL                                                   = 2,
	ESegmentCountryCode__pfenum_DZ                                                   = 3,
	ESegmentCountryCode__pfenum_AS                                                   = 4,
	ESegmentCountryCode__pfenum_AD                                                   = 5,
	ESegmentCountryCode__pfenum_AO                                                   = 6,
	ESegmentCountryCode__pfenum_AI                                                   = 7,
	ESegmentCountryCode__pfenum_AQ                                                   = 8,
	ESegmentCountryCode__pfenum_AG                                                   = 9,
	ESegmentCountryCode__pfenum_AR                                                   = 10,
	ESegmentCountryCode__pfenum_AM                                                   = 11,
	ESegmentCountryCode__pfenum_AW                                                   = 12,
	ESegmentCountryCode__pfenum_AU                                                   = 13,
	ESegmentCountryCode__pfenum_AT                                                   = 14,
	ESegmentCountryCode__pfenum_AZ                                                   = 15,
	ESegmentCountryCode__pfenum_BS                                                   = 16,
	ESegmentCountryCode__pfenum_BH                                                   = 17,
	ESegmentCountryCode__pfenum_BD                                                   = 18,
	ESegmentCountryCode__pfenum_BB                                                   = 19,
	ESegmentCountryCode__pfenum_BY                                                   = 20,
	ESegmentCountryCode__pfenum_BE                                                   = 21,
	ESegmentCountryCode__pfenum_BZ                                                   = 22,
	ESegmentCountryCode__pfenum_BJ                                                   = 23,
	ESegmentCountryCode__pfenum_BM                                                   = 24,
	ESegmentCountryCode__pfenum_BT                                                   = 25,
	ESegmentCountryCode__pfenum_BO                                                   = 26,
	ESegmentCountryCode__pfenum_BQ                                                   = 27,
	ESegmentCountryCode__pfenum_BA                                                   = 28,
	ESegmentCountryCode__pfenum_BW                                                   = 29,
	ESegmentCountryCode__pfenum_BV                                                   = 30,
	ESegmentCountryCode__pfenum_BR                                                   = 31,
	ESegmentCountryCode__pfenum_IO                                                   = 32,
	ESegmentCountryCode__pfenum_BN                                                   = 33,
	ESegmentCountryCode__pfenum_BG                                                   = 34,
	ESegmentCountryCode__pfenum_BF                                                   = 35,
	ESegmentCountryCode__pfenum_BI                                                   = 36,
	ESegmentCountryCode__pfenum_KH                                                   = 37,
	ESegmentCountryCode__pfenum_CM                                                   = 38,
	ESegmentCountryCode__pfenum_CA                                                   = 39,
	ESegmentCountryCode__pfenum_CV                                                   = 40,
	ESegmentCountryCode__pfenum_KY                                                   = 41,
	ESegmentCountryCode__pfenum_CF                                                   = 42,
	ESegmentCountryCode__pfenum_TD                                                   = 43,
	ESegmentCountryCode__pfenum_CL                                                   = 44,
	ESegmentCountryCode__pfenum_CN                                                   = 45,
	ESegmentCountryCode__pfenum_CX                                                   = 46,
	ESegmentCountryCode__pfenum_CC                                                   = 47,
	ESegmentCountryCode__pfenum_CO                                                   = 48,
	ESegmentCountryCode__pfenum_KM                                                   = 49,
	ESegmentCountryCode__pfenum_CG                                                   = 50,
	ESegmentCountryCode__pfenum_CD                                                   = 51,
	ESegmentCountryCode__pfenum_CK                                                   = 52,
	ESegmentCountryCode__pfenum_CR                                                   = 53,
	ESegmentCountryCode__pfenum_CI                                                   = 54,
	ESegmentCountryCode__pfenum_HR                                                   = 55,
	ESegmentCountryCode__pfenum_CU                                                   = 56,
	ESegmentCountryCode__pfenum_CW                                                   = 57,
	ESegmentCountryCode__pfenum_CY                                                   = 58,
	ESegmentCountryCode__pfenum_CZ                                                   = 59,
	ESegmentCountryCode__pfenum_DK                                                   = 60,
	ESegmentCountryCode__pfenum_DJ                                                   = 61,
	ESegmentCountryCode__pfenum_DM                                                   = 62,
	ESegmentCountryCode__pfenum_DO                                                   = 63,
	ESegmentCountryCode__pfenum_EC                                                   = 64,
	ESegmentCountryCode__pfenum_EG                                                   = 65,
	ESegmentCountryCode__pfenum_SV                                                   = 66,
	ESegmentCountryCode__pfenum_GQ                                                   = 67,
	ESegmentCountryCode__pfenum_ER                                                   = 68,
	ESegmentCountryCode__pfenum_EE                                                   = 69,
	ESegmentCountryCode__pfenum_ET                                                   = 70,
	ESegmentCountryCode__pfenum_FK                                                   = 71,
	ESegmentCountryCode__pfenum_FO                                                   = 72,
	ESegmentCountryCode__pfenum_FJ                                                   = 73,
	ESegmentCountryCode__pfenum_FI                                                   = 74,
	ESegmentCountryCode__pfenum_FR                                                   = 75,
	ESegmentCountryCode__pfenum_GF                                                   = 76,
	ESegmentCountryCode__pfenum_PF                                                   = 77,
	ESegmentCountryCode__pfenum_TF                                                   = 78,
	ESegmentCountryCode__pfenum_GA                                                   = 79,
	ESegmentCountryCode__pfenum_GM                                                   = 80,
	ESegmentCountryCode__pfenum_GE                                                   = 81,
	ESegmentCountryCode__pfenum_DE                                                   = 82,
	ESegmentCountryCode__pfenum_GH                                                   = 83,
	ESegmentCountryCode__pfenum_GI                                                   = 84,
	ESegmentCountryCode__pfenum_GR                                                   = 85,
	ESegmentCountryCode__pfenum_GL                                                   = 86,
	ESegmentCountryCode__pfenum_GD                                                   = 87,
	ESegmentCountryCode__pfenum_GP                                                   = 88,
	ESegmentCountryCode__pfenum_GU                                                   = 89,
	ESegmentCountryCode__pfenum_GT                                                   = 90,
	ESegmentCountryCode__pfenum_GG                                                   = 91,
	ESegmentCountryCode__pfenum_GN                                                   = 92,
	ESegmentCountryCode__pfenum_GW                                                   = 93,
	ESegmentCountryCode__pfenum_GY                                                   = 94,
	ESegmentCountryCode__pfenum_HT                                                   = 95,
	ESegmentCountryCode__pfenum_HM                                                   = 96,
	ESegmentCountryCode__pfenum_VA                                                   = 97,
	ESegmentCountryCode__pfenum_HN                                                   = 98,
	ESegmentCountryCode__pfenum_HK                                                   = 99,
	ESegmentCountryCode__pfenum_HU                                                   = 100,
	ESegmentCountryCode__pfenum_IS                                                   = 101,
	ESegmentCountryCode__pfenum_IN                                                   = 102,
	ESegmentCountryCode__pfenum_ID                                                   = 103,
	ESegmentCountryCode__pfenum_IR                                                   = 104,
	ESegmentCountryCode__pfenum_IQ                                                   = 105,
	ESegmentCountryCode__pfenum_IE                                                   = 106,
	ESegmentCountryCode__pfenum_IM                                                   = 107,
	ESegmentCountryCode__pfenum_IL                                                   = 108,
	ESegmentCountryCode__pfenum_IT                                                   = 109,
	ESegmentCountryCode__pfenum_JM                                                   = 110,
	ESegmentCountryCode__pfenum_JP                                                   = 111,
	ESegmentCountryCode__pfenum_JE                                                   = 112,
	ESegmentCountryCode__pfenum_JO                                                   = 113,
	ESegmentCountryCode__pfenum_KZ                                                   = 114,
	ESegmentCountryCode__pfenum_KE                                                   = 115,
	ESegmentCountryCode__pfenum_KI                                                   = 116,
	ESegmentCountryCode__pfenum_KP                                                   = 117,
	ESegmentCountryCode__pfenum_KR                                                   = 118,
	ESegmentCountryCode__pfenum_KW                                                   = 119,
	ESegmentCountryCode__pfenum_KG                                                   = 120,
	ESegmentCountryCode__pfenum_LA                                                   = 121,
	ESegmentCountryCode__pfenum_LV                                                   = 122,
	ESegmentCountryCode__pfenum_LB                                                   = 123,
	ESegmentCountryCode__pfenum_LS                                                   = 124,
	ESegmentCountryCode__pfenum_LR                                                   = 125,
	ESegmentCountryCode__pfenum_LY                                                   = 126,
	ESegmentCountryCode__pfenum_LI                                                   = 127,
	ESegmentCountryCode__pfenum_LT                                                   = 128,
	ESegmentCountryCode__pfenum_LU                                                   = 129,
	ESegmentCountryCode__pfenum_MO                                                   = 130,
	ESegmentCountryCode__pfenum_MK                                                   = 131,
	ESegmentCountryCode__pfenum_MG                                                   = 132,
	ESegmentCountryCode__pfenum_MW                                                   = 133,
	ESegmentCountryCode__pfenum_MY                                                   = 134,
	ESegmentCountryCode__pfenum_MV                                                   = 135,
	ESegmentCountryCode__pfenum_ML                                                   = 136,
	ESegmentCountryCode__pfenum_MT                                                   = 137,
	ESegmentCountryCode__pfenum_MH                                                   = 138,
	ESegmentCountryCode__pfenum_MQ                                                   = 139,
	ESegmentCountryCode__pfenum_MR                                                   = 140,
	ESegmentCountryCode__pfenum_MU                                                   = 141,
	ESegmentCountryCode__pfenum_YT                                                   = 142,
	ESegmentCountryCode__pfenum_MX                                                   = 143,
	ESegmentCountryCode__pfenum_FM                                                   = 144,
	ESegmentCountryCode__pfenum_MD                                                   = 145,
	ESegmentCountryCode__pfenum_MC                                                   = 146,
	ESegmentCountryCode__pfenum_MN                                                   = 147,
	ESegmentCountryCode__pfenum_ME                                                   = 148,
	ESegmentCountryCode__pfenum_MS                                                   = 149,
	ESegmentCountryCode__pfenum_MA                                                   = 150,
	ESegmentCountryCode__pfenum_MZ                                                   = 151,
	ESegmentCountryCode__pfenum_MM                                                   = 152,
	ESegmentCountryCode__pfenum_NA                                                   = 153,
	ESegmentCountryCode__pfenum_NR                                                   = 154,
	ESegmentCountryCode__pfenum_NP                                                   = 155,
	ESegmentCountryCode__pfenum_NL                                                   = 156,
	ESegmentCountryCode__pfenum_NC                                                   = 157,
	ESegmentCountryCode__pfenum_NZ                                                   = 158,
	ESegmentCountryCode__pfenum_NI                                                   = 159,
	ESegmentCountryCode__pfenum_NE                                                   = 160,
	ESegmentCountryCode__pfenum_NG                                                   = 161,
	ESegmentCountryCode__pfenum_NU                                                   = 162,
	ESegmentCountryCode__pfenum_NF                                                   = 163,
	ESegmentCountryCode__pfenum_MP                                                   = 164,
	ESegmentCountryCode__pfenum_NO                                                   = 165,
	ESegmentCountryCode__pfenum_OM                                                   = 166,
	ESegmentCountryCode__pfenum_PK                                                   = 167,
	ESegmentCountryCode__pfenum_PW                                                   = 168,
	ESegmentCountryCode__pfenum_PS                                                   = 169,
	ESegmentCountryCode__pfenum_PA                                                   = 170,
	ESegmentCountryCode__pfenum_PG                                                   = 171,
	ESegmentCountryCode__pfenum_PY                                                   = 172,
	ESegmentCountryCode__pfenum_PE                                                   = 173,
	ESegmentCountryCode__pfenum_PH                                                   = 174,
	ESegmentCountryCode__pfenum_PN                                                   = 175,
	ESegmentCountryCode__pfenum_PL                                                   = 176,
	ESegmentCountryCode__pfenum_PT                                                   = 177,
	ESegmentCountryCode__pfenum_PR                                                   = 178,
	ESegmentCountryCode__pfenum_QA                                                   = 179,
	ESegmentCountryCode__pfenum_RE                                                   = 180,
	ESegmentCountryCode__pfenum_RO                                                   = 181,
	ESegmentCountryCode__pfenum_RU                                                   = 182,
	ESegmentCountryCode__pfenum_RW                                                   = 183,
	ESegmentCountryCode__pfenum_BL                                                   = 184,
	ESegmentCountryCode__pfenum_SH                                                   = 185,
	ESegmentCountryCode__pfenum_KN                                                   = 186,
	ESegmentCountryCode__pfenum_LC                                                   = 187,
	ESegmentCountryCode__pfenum_MF                                                   = 188,
	ESegmentCountryCode__pfenum_PM                                                   = 189,
	ESegmentCountryCode__pfenum_VC                                                   = 190,
	ESegmentCountryCode__pfenum_WS                                                   = 191,
	ESegmentCountryCode__pfenum_SM                                                   = 192,
	ESegmentCountryCode__pfenum_ST                                                   = 193,
	ESegmentCountryCode__pfenum_SA                                                   = 194,
	ESegmentCountryCode__pfenum_SN                                                   = 195,
	ESegmentCountryCode__pfenum_RS                                                   = 196,
	ESegmentCountryCode__pfenum_SC                                                   = 197,
	ESegmentCountryCode__pfenum_SL                                                   = 198,
	ESegmentCountryCode__pfenum_SG                                                   = 199,
	ESegmentCountryCode__pfenum_SX                                                   = 200,
	ESegmentCountryCode__pfenum_SK                                                   = 201,
	ESegmentCountryCode__pfenum_SI                                                   = 202,
	ESegmentCountryCode__pfenum_SB                                                   = 203,
	ESegmentCountryCode__pfenum_SO                                                   = 204,
	ESegmentCountryCode__pfenum_ZA                                                   = 205,
	ESegmentCountryCode__pfenum_GS                                                   = 206,
	ESegmentCountryCode__pfenum_SS                                                   = 207,
	ESegmentCountryCode__pfenum_ES                                                   = 208,
	ESegmentCountryCode__pfenum_LK                                                   = 209,
	ESegmentCountryCode__pfenum_SD                                                   = 210,
	ESegmentCountryCode__pfenum_SR                                                   = 211,
	ESegmentCountryCode__pfenum_SJ                                                   = 212,
	ESegmentCountryCode__pfenum_SZ                                                   = 213,
	ESegmentCountryCode__pfenum_SE                                                   = 214,
	ESegmentCountryCode__pfenum_CH                                                   = 215,
	ESegmentCountryCode__pfenum_SY                                                   = 216,
	ESegmentCountryCode__pfenum_TW                                                   = 217,
	ESegmentCountryCode__pfenum_TJ                                                   = 218,
	ESegmentCountryCode__pfenum_TZ                                                   = 219,
	ESegmentCountryCode__pfenum_TH                                                   = 220,
	ESegmentCountryCode__pfenum_TL                                                   = 221,
	ESegmentCountryCode__pfenum_TG                                                   = 222,
	ESegmentCountryCode__pfenum_TK                                                   = 223,
	ESegmentCountryCode__pfenum_TO                                                   = 224,
	ESegmentCountryCode__pfenum_TT                                                   = 225,
	ESegmentCountryCode__pfenum_TN                                                   = 226,
	ESegmentCountryCode__pfenum_TR                                                   = 227,
	ESegmentCountryCode__pfenum_TM                                                   = 228,
	ESegmentCountryCode__pfenum_TC                                                   = 229,
	ESegmentCountryCode__pfenum_TV                                                   = 230,
	ESegmentCountryCode__pfenum_UG                                                   = 231,
	ESegmentCountryCode__pfenum_UA                                                   = 232,
	ESegmentCountryCode__pfenum_AE                                                   = 233,
	ESegmentCountryCode__pfenum_GB                                                   = 234,
	ESegmentCountryCode__pfenum_US                                                   = 235,
	ESegmentCountryCode__pfenum_UM                                                   = 236,
	ESegmentCountryCode__pfenum_UY                                                   = 237,
	ESegmentCountryCode__pfenum_UZ                                                   = 238,
	ESegmentCountryCode__pfenum_VU                                                   = 239,
	ESegmentCountryCode__pfenum_VE                                                   = 240,
	ESegmentCountryCode__pfenum_VN                                                   = 241,
	ESegmentCountryCode__pfenum_VG                                                   = 242,
	ESegmentCountryCode__pfenum_VI                                                   = 243,
	ESegmentCountryCode__pfenum_WF                                                   = 244,
	ESegmentCountryCode__pfenum_EH                                                   = 245,
	ESegmentCountryCode__pfenum_YE                                                   = 246,
	ESegmentCountryCode__pfenum_ZM                                                   = 247,
	ESegmentCountryCode__pfenum_ZW                                                   = 248
};

/// Enum /Script/PlayFab.EResultTableNodeType
/// Size: 0x01 (1 bytes)
enum class EResultTableNodeType : uint8_t
{
	EResultTableNodeType__pfenum_ItemId                                              = 0,
	EResultTableNodeType__pfenum_TableId                                             = 1
};

/// Enum /Script/PlayFab.EPushNotificationPlatform
/// Size: 0x01 (1 bytes)
enum class EPushNotificationPlatform : uint8_t
{
	EPushNotificationPlatform__pfenum_ApplePushNotificationService                   = 0,
	EPushNotificationPlatform__pfenum_GoogleCloudMessaging                           = 1
};

/// Enum /Script/PlayFab.EEmailVerificationStatus
/// Size: 0x01 (1 bytes)
enum class EEmailVerificationStatus : uint8_t
{
	EEmailVerificationStatus__pfenum_Unverified                                      = 0,
	EEmailVerificationStatus__pfenum_Pending                                         = 1,
	EEmailVerificationStatus__pfenum_Confirmed                                       = 2
};

/// Enum /Script/PlayFab.EEffectType
/// Size: 0x01 (1 bytes)
enum class EEffectType : uint8_t
{
	EEffectType__pfenum_Allow                                                        = 0,
	EEffectType__pfenum_Deny                                                         = 1
};

/// Enum /Script/PlayFab.ECurrency
/// Size: 0x01 (1 bytes)
enum class ECurrency : uint8_t
{
	ECurrency__pfenum_AED                                                            = 0,
	ECurrency__pfenum_AFN                                                            = 1,
	ECurrency__pfenum_ALL                                                            = 2,
	ECurrency__pfenum_AMD                                                            = 3,
	ECurrency__pfenum_ANG                                                            = 4,
	ECurrency__pfenum_AOA                                                            = 5,
	ECurrency__pfenum_ARS                                                            = 6,
	ECurrency__pfenum_AUD                                                            = 7,
	ECurrency__pfenum_AWG                                                            = 8,
	ECurrency__pfenum_AZN                                                            = 9,
	ECurrency__pfenum_BAM                                                            = 10,
	ECurrency__pfenum_BBD                                                            = 11,
	ECurrency__pfenum_BDT                                                            = 12,
	ECurrency__pfenum_BGN                                                            = 13,
	ECurrency__pfenum_BHD                                                            = 14,
	ECurrency__pfenum_BIF                                                            = 15,
	ECurrency__pfenum_BMD                                                            = 16,
	ECurrency__pfenum_BND                                                            = 17,
	ECurrency__pfenum_BOB                                                            = 18,
	ECurrency__pfenum_BRL                                                            = 19,
	ECurrency__pfenum_BSD                                                            = 20,
	ECurrency__pfenum_BTN                                                            = 21,
	ECurrency__pfenum_BWP                                                            = 22,
	ECurrency__pfenum_BYR                                                            = 23,
	ECurrency__pfenum_BZD                                                            = 24,
	ECurrency__pfenum_CAD                                                            = 25,
	ECurrency__pfenum_CDF                                                            = 26,
	ECurrency__pfenum_CHF                                                            = 27,
	ECurrency__pfenum_CLP                                                            = 28,
	ECurrency__pfenum_CNY                                                            = 29,
	ECurrency__pfenum_COP                                                            = 30,
	ECurrency__pfenum_CRC                                                            = 31,
	ECurrency__pfenum_CUC                                                            = 32,
	ECurrency__pfenum_CUP                                                            = 33,
	ECurrency__pfenum_CVE                                                            = 34,
	ECurrency__pfenum_CZK                                                            = 35,
	ECurrency__pfenum_DJF                                                            = 36,
	ECurrency__pfenum_DKK                                                            = 37,
	ECurrency__pfenum_DOP                                                            = 38,
	ECurrency__pfenum_DZD                                                            = 39,
	ECurrency__pfenum_EGP                                                            = 40,
	ECurrency__pfenum_ERN                                                            = 41,
	ECurrency__pfenum_ETB                                                            = 42,
	ECurrency__pfenum_EUR                                                            = 43,
	ECurrency__pfenum_FJD                                                            = 44,
	ECurrency__pfenum_FKP                                                            = 45,
	ECurrency__pfenum_GBP                                                            = 46,
	ECurrency__pfenum_GEL                                                            = 47,
	ECurrency__pfenum_GGP                                                            = 48,
	ECurrency__pfenum_GHS                                                            = 49,
	ECurrency__pfenum_GIP                                                            = 50,
	ECurrency__pfenum_GMD                                                            = 51,
	ECurrency__pfenum_GNF                                                            = 52,
	ECurrency__pfenum_GTQ                                                            = 53,
	ECurrency__pfenum_GYD                                                            = 54,
	ECurrency__pfenum_HKD                                                            = 55,
	ECurrency__pfenum_HNL                                                            = 56,
	ECurrency__pfenum_HRK                                                            = 57,
	ECurrency__pfenum_HTG                                                            = 58,
	ECurrency__pfenum_HUF                                                            = 59,
	ECurrency__pfenum_IDR                                                            = 60,
	ECurrency__pfenum_ILS                                                            = 61,
	ECurrency__pfenum_IMP                                                            = 62,
	ECurrency__pfenum_INR                                                            = 63,
	ECurrency__pfenum_IQD                                                            = 64,
	ECurrency__pfenum_IRR                                                            = 65,
	ECurrency__pfenum_ISK                                                            = 66,
	ECurrency__pfenum_JEP                                                            = 67,
	ECurrency__pfenum_JMD                                                            = 68,
	ECurrency__pfenum_JOD                                                            = 69,
	ECurrency__pfenum_JPY                                                            = 70,
	ECurrency__pfenum_KES                                                            = 71,
	ECurrency__pfenum_KGS                                                            = 72,
	ECurrency__pfenum_KHR                                                            = 73,
	ECurrency__pfenum_KMF                                                            = 74,
	ECurrency__pfenum_KPW                                                            = 75,
	ECurrency__pfenum_KRW                                                            = 76,
	ECurrency__pfenum_KWD                                                            = 77,
	ECurrency__pfenum_KYD                                                            = 78,
	ECurrency__pfenum_KZT                                                            = 79,
	ECurrency__pfenum_LAK                                                            = 80,
	ECurrency__pfenum_LBP                                                            = 81,
	ECurrency__pfenum_LKR                                                            = 82,
	ECurrency__pfenum_LRD                                                            = 83,
	ECurrency__pfenum_LSL                                                            = 84,
	ECurrency__pfenum_LYD                                                            = 85,
	ECurrency__pfenum_MAD                                                            = 86,
	ECurrency__pfenum_MDL                                                            = 87,
	ECurrency__pfenum_MGA                                                            = 88,
	ECurrency__pfenum_MKD                                                            = 89,
	ECurrency__pfenum_MMK                                                            = 90,
	ECurrency__pfenum_MNT                                                            = 91,
	ECurrency__pfenum_MOP                                                            = 92,
	ECurrency__pfenum_MRO                                                            = 93,
	ECurrency__pfenum_MUR                                                            = 94,
	ECurrency__pfenum_MVR                                                            = 95,
	ECurrency__pfenum_MWK                                                            = 96,
	ECurrency__pfenum_MXN                                                            = 97,
	ECurrency__pfenum_MYR                                                            = 98,
	ECurrency__pfenum_MZN                                                            = 99,
	ECurrency__pfenum_NAD                                                            = 100,
	ECurrency__pfenum_NGN                                                            = 101,
	ECurrency__pfenum_NIO                                                            = 102,
	ECurrency__pfenum_NOK                                                            = 103,
	ECurrency__pfenum_NPR                                                            = 104,
	ECurrency__pfenum_NZD                                                            = 105,
	ECurrency__pfenum_OMR                                                            = 106,
	ECurrency__pfenum_PAB                                                            = 107,
	ECurrency__pfenum_PEN                                                            = 108,
	ECurrency__pfenum_PGK                                                            = 109,
	ECurrency__pfenum_PHP                                                            = 110,
	ECurrency__pfenum_PKR                                                            = 111,
	ECurrency__pfenum_PLN                                                            = 112,
	ECurrency__pfenum_PYG                                                            = 113,
	ECurrency__pfenum_QAR                                                            = 114,
	ECurrency__pfenum_RON                                                            = 115,
	ECurrency__pfenum_RSD                                                            = 116,
	ECurrency__pfenum_RUB                                                            = 117,
	ECurrency__pfenum_RWF                                                            = 118,
	ECurrency__pfenum_SAR                                                            = 119,
	ECurrency__pfenum_SBD                                                            = 120,
	ECurrency__pfenum_SCR                                                            = 121,
	ECurrency__pfenum_SDG                                                            = 122,
	ECurrency__pfenum_SEK                                                            = 123,
	ECurrency__pfenum_SGD                                                            = 124,
	ECurrency__pfenum_SHP                                                            = 125,
	ECurrency__pfenum_SLL                                                            = 126,
	ECurrency__pfenum_SOS                                                            = 127,
	ECurrency__pfenum_SPL                                                            = 128,
	ECurrency__pfenum_SRD                                                            = 129,
	ECurrency__pfenum_STD                                                            = 130,
	ECurrency__pfenum_SVC                                                            = 131,
	ECurrency__pfenum_SYP                                                            = 132,
	ECurrency__pfenum_SZL                                                            = 133,
	ECurrency__pfenum_THB                                                            = 134,
	ECurrency__pfenum_TJS                                                            = 135,
	ECurrency__pfenum_TMT                                                            = 136,
	ECurrency__pfenum_TND                                                            = 137,
	ECurrency__pfenum_TOP                                                            = 138,
	ECurrency__pfenum_TRY                                                            = 139,
	ECurrency__pfenum_TTD                                                            = 140,
	ECurrency__pfenum_TVD                                                            = 141,
	ECurrency__pfenum_TWD                                                            = 142,
	ECurrency__pfenum_TZS                                                            = 143,
	ECurrency__pfenum_UAH                                                            = 144,
	ECurrency__pfenum_UGX                                                            = 145,
	ECurrency__pfenum_USD                                                            = 146,
	ECurrency__pfenum_UYU                                                            = 147,
	ECurrency__pfenum_UZS                                                            = 148,
	ECurrency__pfenum_VEF                                                            = 149,
	ECurrency__pfenum_VND                                                            = 150,
	ECurrency__pfenum_VUV                                                            = 151,
	ECurrency__pfenum_WST                                                            = 152,
	ECurrency__pfenum_XAF                                                            = 153,
	ECurrency__pfenum_XCD                                                            = 154,
	ECurrency__pfenum_XDR                                                            = 155,
	ECurrency__pfenum_XOF                                                            = 156,
	ECurrency__pfenum_XPF                                                            = 157,
	ECurrency__pfenum_YER                                                            = 158,
	ECurrency__pfenum_ZAR                                                            = 159,
	ECurrency__pfenum_ZMW                                                            = 160,
	ECurrency__pfenum_ZWD                                                            = 161
};

/// Enum /Script/PlayFab.ECountryCode
/// Size: 0x01 (1 bytes)
enum class ECountryCode : uint8_t
{
	ECountryCode__pfenum_AF                                                          = 0,
	ECountryCode__pfenum_AX                                                          = 1,
	ECountryCode__pfenum_AL                                                          = 2,
	ECountryCode__pfenum_DZ                                                          = 3,
	ECountryCode__pfenum_AS                                                          = 4,
	ECountryCode__pfenum_AD                                                          = 5,
	ECountryCode__pfenum_AO                                                          = 6,
	ECountryCode__pfenum_AI                                                          = 7,
	ECountryCode__pfenum_AQ                                                          = 8,
	ECountryCode__pfenum_AG                                                          = 9,
	ECountryCode__pfenum_AR                                                          = 10,
	ECountryCode__pfenum_AM                                                          = 11,
	ECountryCode__pfenum_AW                                                          = 12,
	ECountryCode__pfenum_AU                                                          = 13,
	ECountryCode__pfenum_AT                                                          = 14,
	ECountryCode__pfenum_AZ                                                          = 15,
	ECountryCode__pfenum_BS                                                          = 16,
	ECountryCode__pfenum_BH                                                          = 17,
	ECountryCode__pfenum_BD                                                          = 18,
	ECountryCode__pfenum_BB                                                          = 19,
	ECountryCode__pfenum_BY                                                          = 20,
	ECountryCode__pfenum_BE                                                          = 21,
	ECountryCode__pfenum_BZ                                                          = 22,
	ECountryCode__pfenum_BJ                                                          = 23,
	ECountryCode__pfenum_BM                                                          = 24,
	ECountryCode__pfenum_BT                                                          = 25,
	ECountryCode__pfenum_BO                                                          = 26,
	ECountryCode__pfenum_BQ                                                          = 27,
	ECountryCode__pfenum_BA                                                          = 28,
	ECountryCode__pfenum_BW                                                          = 29,
	ECountryCode__pfenum_BV                                                          = 30,
	ECountryCode__pfenum_BR                                                          = 31,
	ECountryCode__pfenum_IO                                                          = 32,
	ECountryCode__pfenum_BN                                                          = 33,
	ECountryCode__pfenum_BG                                                          = 34,
	ECountryCode__pfenum_BF                                                          = 35,
	ECountryCode__pfenum_BI                                                          = 36,
	ECountryCode__pfenum_KH                                                          = 37,
	ECountryCode__pfenum_CM                                                          = 38,
	ECountryCode__pfenum_CA                                                          = 39,
	ECountryCode__pfenum_CV                                                          = 40,
	ECountryCode__pfenum_KY                                                          = 41,
	ECountryCode__pfenum_CF                                                          = 42,
	ECountryCode__pfenum_TD                                                          = 43,
	ECountryCode__pfenum_CL                                                          = 44,
	ECountryCode__pfenum_CN                                                          = 45,
	ECountryCode__pfenum_CX                                                          = 46,
	ECountryCode__pfenum_CC                                                          = 47,
	ECountryCode__pfenum_CO                                                          = 48,
	ECountryCode__pfenum_KM                                                          = 49,
	ECountryCode__pfenum_CG                                                          = 50,
	ECountryCode__pfenum_CD                                                          = 51,
	ECountryCode__pfenum_CK                                                          = 52,
	ECountryCode__pfenum_CR                                                          = 53,
	ECountryCode__pfenum_CI                                                          = 54,
	ECountryCode__pfenum_HR                                                          = 55,
	ECountryCode__pfenum_CU                                                          = 56,
	ECountryCode__pfenum_CW                                                          = 57,
	ECountryCode__pfenum_CY                                                          = 58,
	ECountryCode__pfenum_CZ                                                          = 59,
	ECountryCode__pfenum_DK                                                          = 60,
	ECountryCode__pfenum_DJ                                                          = 61,
	ECountryCode__pfenum_DM                                                          = 62,
	ECountryCode__pfenum_DO                                                          = 63,
	ECountryCode__pfenum_EC                                                          = 64,
	ECountryCode__pfenum_EG                                                          = 65,
	ECountryCode__pfenum_SV                                                          = 66,
	ECountryCode__pfenum_GQ                                                          = 67,
	ECountryCode__pfenum_ER                                                          = 68,
	ECountryCode__pfenum_EE                                                          = 69,
	ECountryCode__pfenum_ET                                                          = 70,
	ECountryCode__pfenum_FK                                                          = 71,
	ECountryCode__pfenum_FO                                                          = 72,
	ECountryCode__pfenum_FJ                                                          = 73,
	ECountryCode__pfenum_FI                                                          = 74,
	ECountryCode__pfenum_FR                                                          = 75,
	ECountryCode__pfenum_GF                                                          = 76,
	ECountryCode__pfenum_PF                                                          = 77,
	ECountryCode__pfenum_TF                                                          = 78,
	ECountryCode__pfenum_GA                                                          = 79,
	ECountryCode__pfenum_GM                                                          = 80,
	ECountryCode__pfenum_GE                                                          = 81,
	ECountryCode__pfenum_DE                                                          = 82,
	ECountryCode__pfenum_GH                                                          = 83,
	ECountryCode__pfenum_GI                                                          = 84,
	ECountryCode__pfenum_GR                                                          = 85,
	ECountryCode__pfenum_GL                                                          = 86,
	ECountryCode__pfenum_GD                                                          = 87,
	ECountryCode__pfenum_GP                                                          = 88,
	ECountryCode__pfenum_GU                                                          = 89,
	ECountryCode__pfenum_GT                                                          = 90,
	ECountryCode__pfenum_GG                                                          = 91,
	ECountryCode__pfenum_GN                                                          = 92,
	ECountryCode__pfenum_GW                                                          = 93,
	ECountryCode__pfenum_GY                                                          = 94,
	ECountryCode__pfenum_HT                                                          = 95,
	ECountryCode__pfenum_HM                                                          = 96,
	ECountryCode__pfenum_VA                                                          = 97,
	ECountryCode__pfenum_HN                                                          = 98,
	ECountryCode__pfenum_HK                                                          = 99,
	ECountryCode__pfenum_HU                                                          = 100,
	ECountryCode__pfenum_IS                                                          = 101,
	ECountryCode__pfenum_IN                                                          = 102,
	ECountryCode__pfenum_ID                                                          = 103,
	ECountryCode__pfenum_IR                                                          = 104,
	ECountryCode__pfenum_IQ                                                          = 105,
	ECountryCode__pfenum_IE                                                          = 106,
	ECountryCode__pfenum_IM                                                          = 107,
	ECountryCode__pfenum_IL                                                          = 108,
	ECountryCode__pfenum_IT                                                          = 109,
	ECountryCode__pfenum_JM                                                          = 110,
	ECountryCode__pfenum_JP                                                          = 111,
	ECountryCode__pfenum_JE                                                          = 112,
	ECountryCode__pfenum_JO                                                          = 113,
	ECountryCode__pfenum_KZ                                                          = 114,
	ECountryCode__pfenum_KE                                                          = 115,
	ECountryCode__pfenum_KI                                                          = 116,
	ECountryCode__pfenum_KP                                                          = 117,
	ECountryCode__pfenum_KR                                                          = 118,
	ECountryCode__pfenum_KW                                                          = 119,
	ECountryCode__pfenum_KG                                                          = 120,
	ECountryCode__pfenum_LA                                                          = 121,
	ECountryCode__pfenum_LV                                                          = 122,
	ECountryCode__pfenum_LB                                                          = 123,
	ECountryCode__pfenum_LS                                                          = 124,
	ECountryCode__pfenum_LR                                                          = 125,
	ECountryCode__pfenum_LY                                                          = 126,
	ECountryCode__pfenum_LI                                                          = 127,
	ECountryCode__pfenum_LT                                                          = 128,
	ECountryCode__pfenum_LU                                                          = 129,
	ECountryCode__pfenum_MO                                                          = 130,
	ECountryCode__pfenum_MK                                                          = 131,
	ECountryCode__pfenum_MG                                                          = 132,
	ECountryCode__pfenum_MW                                                          = 133,
	ECountryCode__pfenum_MY                                                          = 134,
	ECountryCode__pfenum_MV                                                          = 135,
	ECountryCode__pfenum_ML                                                          = 136,
	ECountryCode__pfenum_MT                                                          = 137,
	ECountryCode__pfenum_MH                                                          = 138,
	ECountryCode__pfenum_MQ                                                          = 139,
	ECountryCode__pfenum_MR                                                          = 140,
	ECountryCode__pfenum_MU                                                          = 141,
	ECountryCode__pfenum_YT                                                          = 142,
	ECountryCode__pfenum_MX                                                          = 143,
	ECountryCode__pfenum_FM                                                          = 144,
	ECountryCode__pfenum_MD                                                          = 145,
	ECountryCode__pfenum_MC                                                          = 146,
	ECountryCode__pfenum_MN                                                          = 147,
	ECountryCode__pfenum_ME                                                          = 148,
	ECountryCode__pfenum_MS                                                          = 149,
	ECountryCode__pfenum_MA                                                          = 150,
	ECountryCode__pfenum_MZ                                                          = 151,
	ECountryCode__pfenum_MM                                                          = 152,
	ECountryCode__pfenum_NA                                                          = 153,
	ECountryCode__pfenum_NR                                                          = 154,
	ECountryCode__pfenum_NP                                                          = 155,
	ECountryCode__pfenum_NL                                                          = 156,
	ECountryCode__pfenum_NC                                                          = 157,
	ECountryCode__pfenum_NZ                                                          = 158,
	ECountryCode__pfenum_NI                                                          = 159,
	ECountryCode__pfenum_NE                                                          = 160,
	ECountryCode__pfenum_NG                                                          = 161,
	ECountryCode__pfenum_NU                                                          = 162,
	ECountryCode__pfenum_NF                                                          = 163,
	ECountryCode__pfenum_MP                                                          = 164,
	ECountryCode__pfenum_NO                                                          = 165,
	ECountryCode__pfenum_OM                                                          = 166,
	ECountryCode__pfenum_PK                                                          = 167,
	ECountryCode__pfenum_PW                                                          = 168,
	ECountryCode__pfenum_PS                                                          = 169,
	ECountryCode__pfenum_PA                                                          = 170,
	ECountryCode__pfenum_PG                                                          = 171,
	ECountryCode__pfenum_PY                                                          = 172,
	ECountryCode__pfenum_PE                                                          = 173,
	ECountryCode__pfenum_PH                                                          = 174,
	ECountryCode__pfenum_PN                                                          = 175,
	ECountryCode__pfenum_PL                                                          = 176,
	ECountryCode__pfenum_PT                                                          = 177,
	ECountryCode__pfenum_PR                                                          = 178,
	ECountryCode__pfenum_QA                                                          = 179,
	ECountryCode__pfenum_RE                                                          = 180,
	ECountryCode__pfenum_RO                                                          = 181,
	ECountryCode__pfenum_RU                                                          = 182,
	ECountryCode__pfenum_RW                                                          = 183,
	ECountryCode__pfenum_BL                                                          = 184,
	ECountryCode__pfenum_SH                                                          = 185,
	ECountryCode__pfenum_KN                                                          = 186,
	ECountryCode__pfenum_LC                                                          = 187,
	ECountryCode__pfenum_MF                                                          = 188,
	ECountryCode__pfenum_PM                                                          = 189,
	ECountryCode__pfenum_VC                                                          = 190,
	ECountryCode__pfenum_WS                                                          = 191,
	ECountryCode__pfenum_SM                                                          = 192,
	ECountryCode__pfenum_ST                                                          = 193,
	ECountryCode__pfenum_SA                                                          = 194,
	ECountryCode__pfenum_SN                                                          = 195,
	ECountryCode__pfenum_RS                                                          = 196,
	ECountryCode__pfenum_SC                                                          = 197,
	ECountryCode__pfenum_SL                                                          = 198,
	ECountryCode__pfenum_SG                                                          = 199,
	ECountryCode__pfenum_SX                                                          = 200,
	ECountryCode__pfenum_SK                                                          = 201,
	ECountryCode__pfenum_SI                                                          = 202,
	ECountryCode__pfenum_SB                                                          = 203,
	ECountryCode__pfenum_SO                                                          = 204,
	ECountryCode__pfenum_ZA                                                          = 205,
	ECountryCode__pfenum_GS                                                          = 206,
	ECountryCode__pfenum_SS                                                          = 207,
	ECountryCode__pfenum_ES                                                          = 208,
	ECountryCode__pfenum_LK                                                          = 209,
	ECountryCode__pfenum_SD                                                          = 210,
	ECountryCode__pfenum_SR                                                          = 211,
	ECountryCode__pfenum_SJ                                                          = 212,
	ECountryCode__pfenum_SZ                                                          = 213,
	ECountryCode__pfenum_SE                                                          = 214,
	ECountryCode__pfenum_CH                                                          = 215,
	ECountryCode__pfenum_SY                                                          = 216,
	ECountryCode__pfenum_TW                                                          = 217,
	ECountryCode__pfenum_TJ                                                          = 218,
	ECountryCode__pfenum_TZ                                                          = 219,
	ECountryCode__pfenum_TH                                                          = 220,
	ECountryCode__pfenum_TL                                                          = 221,
	ECountryCode__pfenum_TG                                                          = 222,
	ECountryCode__pfenum_TK                                                          = 223,
	ECountryCode__pfenum_TO                                                          = 224,
	ECountryCode__pfenum_TT                                                          = 225,
	ECountryCode__pfenum_TN                                                          = 226,
	ECountryCode__pfenum_TR                                                          = 227,
	ECountryCode__pfenum_TM                                                          = 228,
	ECountryCode__pfenum_TC                                                          = 229,
	ECountryCode__pfenum_TV                                                          = 230,
	ECountryCode__pfenum_UG                                                          = 231,
	ECountryCode__pfenum_UA                                                          = 232,
	ECountryCode__pfenum_AE                                                          = 233,
	ECountryCode__pfenum_GB                                                          = 234,
	ECountryCode__pfenum_US                                                          = 235,
	ECountryCode__pfenum_UM                                                          = 236,
	ECountryCode__pfenum_UY                                                          = 237,
	ECountryCode__pfenum_UZ                                                          = 238,
	ECountryCode__pfenum_VU                                                          = 239,
	ECountryCode__pfenum_VE                                                          = 240,
	ECountryCode__pfenum_VN                                                          = 241,
	ECountryCode__pfenum_VG                                                          = 242,
	ECountryCode__pfenum_VI                                                          = 243,
	ECountryCode__pfenum_WF                                                          = 244,
	ECountryCode__pfenum_EH                                                          = 245,
	ECountryCode__pfenum_YE                                                          = 246,
	ECountryCode__pfenum_ZM                                                          = 247,
	ECountryCode__pfenum_ZW                                                          = 248
};

/// Enum /Script/PlayFab.EContinentCode
/// Size: 0x01 (1 bytes)
enum class EContinentCode : uint8_t
{
	EContinentCode__pfenum_AF                                                        = 0,
	EContinentCode__pfenum_AN                                                        = 1,
	EContinentCode__pfenum_AS                                                        = 2,
	EContinentCode__pfenum_EU                                                        = 3,
	EContinentCode__pfenum_NA                                                        = 4,
	EContinentCode__pfenum_OC                                                        = 5,
	EContinentCode__pfenum_SA                                                        = 6
};

/// Enum /Script/PlayFab.EConditionals
/// Size: 0x01 (1 bytes)
enum class EConditionals : uint8_t
{
	EConditionals__pfenum_Any                                                        = 0,
	EConditionals__pfenum_True                                                       = 1,
	EConditionals__pfenum_False                                                      = 2
};

/// Enum /Script/PlayFab.EChurnRiskLevel
/// Size: 0x01 (1 bytes)
enum class EChurnRiskLevel : uint8_t
{
	EChurnRiskLevel__pfenum_NoData                                                   = 0,
	EChurnRiskLevel__pfenum_LowRisk                                                  = 1,
	EChurnRiskLevel__pfenum_MediumRisk                                               = 2,
	EChurnRiskLevel__pfenum_HighRisk                                                 = 3
};

/// Enum /Script/PlayFab.EPFJson
/// Size: 0x01 (1 bytes)
enum class EPFJson : uint8_t
{
	EPFJson__None                                                                    = 0,
	EPFJson__Null                                                                    = 1,
	EPFJson__String                                                                  = 2,
	EPFJson__Number                                                                  = 3,
	EPFJson__Boolean                                                                 = 4,
	EPFJson__Array                                                                   = 5,
	EPFJson__Object                                                                  = 6
};

/// Struct /Script/PlayFab.PlayFabError
/// Size: 0x0038 (56 bytes) (0x000000 - 0x000038) align 8 MaxSize: 0x0038
struct FPlayFabError
{ 
	bool                                               HasError;                                                   // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            ErrorCode;                                                  // 0x0004   (0x0004)  
	FString                                            ErrorName;                                                  // 0x0008   (0x0010)  
	FString                                            ErrorMessage;                                               // 0x0018   (0x0010)  
	FString                                            ErrorDetails;                                               // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.PlayFabBaseModel
/// Size: 0x0040 (64 bytes) (0x000000 - 0x000040) align 8 MaxSize: 0x0040
struct FPlayFabBaseModel
{ 
	FPlayFabError                                      responseError;                                              // 0x0000   (0x0038)  
	class UPlayFabJsonObject*                          responseData;                                               // 0x0038   (0x0008)  
};

/// Struct /Script/PlayFab.PlayFabResultCommon
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 8 MaxSize: 0x0008
struct FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Request;                                                    // 0x0000   (0x0008)  
};

/// Struct /Script/PlayFab.AdminEmptyResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminEmptyResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.PlayFabRequestCommon
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 8 MaxSize: 0x0008
struct FPlayFabRequestCommon
{ 
	class UPlayFabAuthenticationContext*               AuthenticationContext;                                      // 0x0000   (0x0008)  
};

/// Struct /Script/PlayFab.AdminAbortTaskInstanceRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FAdminAbortTaskInstanceRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            TaskInstanceId;                                             // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.AdminAddLocalizedNewsResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminAddLocalizedNewsResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminAddLocalizedNewsRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FAdminAddLocalizedNewsRequest : FPlayFabRequestCommon
{ 
	FString                                            Body;                                                       // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            Language;                                                   // 0x0020   (0x0010)  
	FString                                            NewsId;                                                     // 0x0030   (0x0010)  
	FString                                            Title;                                                      // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.AdminAddNewsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminAddNewsResult : FPlayFabResultCommon
{ 
	FString                                            NewsId;                                                     // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminAddNewsRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FAdminAddNewsRequest : FPlayFabRequestCommon
{ 
	FString                                            Body;                                                       // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            Timestamp;                                                  // 0x0020   (0x0010)  
	FString                                            Title;                                                      // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.AdminAddPlayerTagResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminAddPlayerTagResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminAddPlayerTagRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminAddPlayerTagRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
	FString                                            TagName;                                                    // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AdminModifyUserVirtualCurrencyResult
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminModifyUserVirtualCurrencyResult : FPlayFabResultCommon
{ 
	int32_t                                            Balance;                                                    // 0x0008   (0x0004)  
	int32_t                                            BalanceChange;                                              // 0x000C   (0x0004)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
	FString                                            VirtualCurrency;                                            // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AdminAddUserVirtualCurrencyRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FAdminAddUserVirtualCurrencyRequest : FPlayFabRequestCommon
{ 
	int32_t                                            Amount;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	FString                                            VirtualCurrency;                                            // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.AdminBlankResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminBlankResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminAddVirtualCurrencyTypesRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminAddVirtualCurrencyTypesRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  VirtualCurrencies;                                          // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminBanUsersResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminBanUsersResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  BanData;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminBanUsersRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FAdminBanUsersRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Bans;                                                       // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.AdminCheckLimitedEditionItemAvailabilityResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminCheckLimitedEditionItemAvailabilityResult : FPlayFabResultCommon
{ 
	int32_t                                            Amount;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.AdminCheckLimitedEditionItemAvailabilityRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminCheckLimitedEditionItemAvailabilityRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            ItemId;                                                     // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminCreateTaskResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminCreateTaskResult : FPlayFabResultCommon
{ 
	FString                                            TaskId;                                                     // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminCreateActionsOnPlayerSegmentTaskRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FAdminCreateActionsOnPlayerSegmentTaskRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Description;                                                // 0x0010   (0x0010)  
	bool                                               IsActive;                                                   // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
	FString                                            Name;                                                       // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          Parameter;                                                  // 0x0038   (0x0008)  
	FString                                            Schedule;                                                   // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.AdminCreateCloudScriptTaskRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FAdminCreateCloudScriptTaskRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Description;                                                // 0x0010   (0x0010)  
	bool                                               IsActive;                                                   // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
	FString                                            Name;                                                       // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          Parameter;                                                  // 0x0038   (0x0008)  
	FString                                            Schedule;                                                   // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.AdminCreateInsightsScheduledScalingTaskRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FAdminCreateInsightsScheduledScalingTaskRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Description;                                                // 0x0010   (0x0010)  
	bool                                               IsActive;                                                   // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
	FString                                            Name;                                                       // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          Parameter;                                                  // 0x0038   (0x0008)  
	FString                                            Schedule;                                                   // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.AdminCreateOpenIdConnectionRequest
/// Size: 0x0058 (88 bytes) (0x000008 - 0x000058) align 8 MaxSize: 0x0058
struct FAdminCreateOpenIdConnectionRequest : FPlayFabRequestCommon
{ 
	FString                                            ClientId;                                                   // 0x0008   (0x0010)  
	FString                                            ClientSecret;                                               // 0x0018   (0x0010)  
	FString                                            ConnectionId;                                               // 0x0028   (0x0010)  
	bool                                               IgnoreNonce;                                                // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
	FString                                            IssuerDiscoveryUrl;                                         // 0x0040   (0x0010)  
	class UPlayFabJsonObject*                          IssuerInformation;                                          // 0x0050   (0x0008)  
};

/// Struct /Script/PlayFab.AdminCreatePlayerSharedSecretResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminCreatePlayerSharedSecretResult : FPlayFabResultCommon
{ 
	FString                                            SecretKey;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminCreatePlayerSharedSecretRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminCreatePlayerSharedSecretRequest : FPlayFabRequestCommon
{ 
	FString                                            FriendlyName;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminCreatePlayerStatisticDefinitionResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminCreatePlayerStatisticDefinitionResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Statistic;                                                  // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.AdminCreatePlayerStatisticDefinitionRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminCreatePlayerStatisticDefinitionRequest : FPlayFabRequestCommon
{ 
	EStatisticAggregationMethod                        AggregationMethod;                                          // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            StatisticName;                                              // 0x0018   (0x0010)  
	EStatisticResetIntervalOption                      VersionChangeInterval;                                      // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_7[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.AdminCreateSegmentResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminCreateSegmentResponse : FPlayFabResultCommon
{ 
	FString                                            ErrorMessage;                                               // 0x0008   (0x0010)  
	FString                                            SegmentId;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminCreateSegmentRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminCreateSegmentRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          SegmentModel;                                               // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.AdminDeleteMasterPlayerAccountResult
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminDeleteMasterPlayerAccountResult : FPlayFabResultCommon
{ 
	FString                                            JobReceiptId;                                               // 0x0008   (0x0010)  
	FString                                            TitleIds;                                                   // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminDeleteMembershipSubscriptionResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminDeleteMembershipSubscriptionResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminDeletePlayerResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminDeletePlayerResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminDeletePlayerSharedSecretResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminDeletePlayerSharedSecretResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminDeleteSegmentsResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminDeleteSegmentsResponse : FPlayFabResultCommon
{ 
	FString                                            ErrorMessage;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminDeleteStoreResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminDeleteStoreResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminDeleteTitleResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminDeleteTitleResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminDeleteTitleDataOverrideResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminDeleteTitleDataOverrideResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminExportMasterPlayerDataResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminExportMasterPlayerDataResult : FPlayFabResultCommon
{ 
	FString                                            JobReceiptId;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetActionsOnPlayersInSegmentTaskInstanceResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetActionsOnPlayersInSegmentTaskInstanceResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Parameter;                                                  // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Summary;                                                    // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.AdminGetAllSegmentsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetAllSegmentsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Segments;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetCatalogItemsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetCatalogItemsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Catalog;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetCloudScriptRevisionResult
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FAdminGetCloudScriptRevisionResult : FPlayFabResultCommon
{ 
	FString                                            CreatedAt;                                                  // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Files;                                                      // 0x0018   (0x0010)  
	bool                                               IsPublished;                                                // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0029   (0x0003)  MISSED
	int32_t                                            Revision;                                                   // 0x002C   (0x0004)  
	int32_t                                            Version;                                                    // 0x0030   (0x0004)  
	unsigned char                                      UnknownData01_7[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.AdminGetCloudScriptTaskInstanceResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetCloudScriptTaskInstanceResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Parameter;                                                  // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Summary;                                                    // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.AdminGetCloudScriptVersionsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetCloudScriptVersionsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Versions;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetContentListResult
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FAdminGetContentListResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Contents;                                                   // 0x0008   (0x0010)  
	int32_t                                            ItemCount;                                                  // 0x0018   (0x0004)  
	int32_t                                            TotalSize;                                                  // 0x001C   (0x0004)  
};

/// Struct /Script/PlayFab.AdminGetContentUploadUrlResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetContentUploadUrlResult : FPlayFabResultCommon
{ 
	FString                                            URL;                                                        // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetDataReportResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetDataReportResult : FPlayFabResultCommon
{ 
	FString                                            DownloadUrl;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetMatchmakerGameInfoResult
/// Size: 0x00B8 (184 bytes) (0x000008 - 0x0000B8) align 8 MaxSize: 0x00B8
struct FAdminGetMatchmakerGameInfoResult : FPlayFabResultCommon
{ 
	FString                                            BuildVersion;                                               // 0x0008   (0x0010)  
	FString                                            EndTime;                                                    // 0x0018   (0x0010)  
	FString                                            LobbyId;                                                    // 0x0028   (0x0010)  
	FString                                            Mode;                                                       // 0x0038   (0x0010)  
	FString                                            Players;                                                    // 0x0048   (0x0010)  
	ERegion                                            Region;                                                     // 0x0058   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0059   (0x0007)  MISSED
	FString                                            ServerIPV4Address;                                          // 0x0060   (0x0010)  
	FString                                            ServerIPV6Address;                                          // 0x0070   (0x0010)  
	int32_t                                            ServerPort;                                                 // 0x0080   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0084   (0x0004)  MISSED
	FString                                            ServerPublicDNSName;                                        // 0x0088   (0x0010)  
	FString                                            StartTime;                                                  // 0x0098   (0x0010)  
	FString                                            TitleID;                                                    // 0x00A8   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetMatchmakerGameModesResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetMatchmakerGameModesResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  GameModes;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPlayedTitleListResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetPlayedTitleListResult : FPlayFabResultCommon
{ 
	FString                                            TitleIds;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPlayerIdFromAuthTokenResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetPlayerIdFromAuthTokenResult : FPlayFabResultCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPlayerProfileResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminGetPlayerProfileResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          PlayerProfile;                                              // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.AdminGetPlayerSegmentsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetPlayerSegmentsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Segments;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPlayerSharedSecretsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetPlayerSharedSecretsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  SharedSecrets;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPlayersInSegmentResult
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminGetPlayersInSegmentResult : FPlayFabResultCommon
{ 
	FString                                            ContinuationToken;                                          // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  PlayerProfiles;                                             // 0x0018   (0x0010)  
	int32_t                                            ProfilesInSegment;                                          // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.AdminGetPlayerStatisticDefinitionsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetPlayerStatisticDefinitionsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Statistics;                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPlayerStatisticVersionsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetPlayerStatisticVersionsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  StatisticVersions;                                          // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPlayerTagsResult
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminGetPlayerTagsResult : FPlayFabResultCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
	FString                                            Tags;                                                       // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPolicyResponse
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminGetPolicyResponse : FPlayFabResultCommon
{ 
	FString                                            PolicyName;                                                 // 0x0008   (0x0010)  
	int32_t                                            PolicyVersion;                                              // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	TArray<class UPlayFabJsonObject*>                  Statements;                                                 // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPublisherDataResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminGetPublisherDataResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Data;                                                       // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.AdminGetRandomResultTablesResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminGetRandomResultTablesResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Tables;                                                     // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.AdminGetSegmentsResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminGetSegmentsResponse : FPlayFabResultCommon
{ 
	FString                                            ErrorMessage;                                               // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Segments;                                                   // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetStoreItemsResult
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FAdminGetStoreItemsResult : FPlayFabResultCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          MarketingData;                                              // 0x0018   (0x0008)  
	EPfSourceType                                      Source;                                                     // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
	TArray<class UPlayFabJsonObject*>                  Store;                                                      // 0x0028   (0x0010)  
	FString                                            StoreId;                                                    // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetTaskInstancesResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetTaskInstancesResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Summaries;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetTasksResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetTasksResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Tasks;                                                      // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetTitleDataResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminGetTitleDataResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Data;                                                       // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.AdminLookupUserAccountInfoResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminLookupUserAccountInfoResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          UserInfo;                                                   // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.AdminGetUserBansResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetUserBansResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  BanData;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetUserDataResult
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminGetUserDataResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Data;                                                       // 0x0008   (0x0008)  
	int32_t                                            DataVersion;                                                // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetUserInventoryResult
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FAdminGetUserInventoryResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Inventory;                                                  // 0x0008   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          VirtualCurrency;                                            // 0x0028   (0x0008)  
	class UPlayFabJsonObject*                          VirtualCurrencyRechargeTimes;                               // 0x0030   (0x0008)  
};

/// Struct /Script/PlayFab.AdminGrantItemsToUsersResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGrantItemsToUsersResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  ItemGrantResults;                                           // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminIncrementLimitedEditionItemAvailabilityResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminIncrementLimitedEditionItemAvailabilityResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminIncrementPlayerStatisticVersionResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminIncrementPlayerStatisticVersionResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          StatisticVersion;                                           // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.AdminListOpenIdConnectionResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminListOpenIdConnectionResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Connections;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminListVirtualCurrencyTypesResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminListVirtualCurrencyTypesResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  VirtualCurrencies;                                          // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminModifyServerBuildResult
/// Size: 0x0088 (136 bytes) (0x000008 - 0x000088) align 8 MaxSize: 0x0088
struct FAdminModifyServerBuildResult : FPlayFabResultCommon
{ 
	FString                                            ActiveRegions;                                              // 0x0008   (0x0010)  
	FString                                            BuildId;                                                    // 0x0018   (0x0010)  
	FString                                            CommandLineTemplate;                                        // 0x0028   (0x0010)  
	FString                                            Comment;                                                    // 0x0038   (0x0010)  
	FString                                            ExecutablePath;                                             // 0x0048   (0x0010)  
	int32_t                                            MaxGamesPerHost;                                            // 0x0058   (0x0004)  
	int32_t                                            MinFreeGameSlots;                                           // 0x005C   (0x0004)  
	EGameBuildStatus                                   Status;                                                     // 0x0060   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0061   (0x0007)  MISSED
	FString                                            Timestamp;                                                  // 0x0068   (0x0010)  
	FString                                            TitleID;                                                    // 0x0078   (0x0010)  
};

/// Struct /Script/PlayFab.AdminRefundPurchaseResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminRefundPurchaseResponse : FPlayFabResultCommon
{ 
	FString                                            PurchaseStatus;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminRemovePlayerTagResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminRemovePlayerTagResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminResetCharacterStatisticsResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminResetCharacterStatisticsResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminResetPasswordResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminResetPasswordResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminResetUserStatisticsResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminResetUserStatisticsResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminResolvePurchaseDisputeResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminResolvePurchaseDisputeResponse : FPlayFabResultCommon
{ 
	FString                                            PurchaseStatus;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminRevokeAllBansForUserResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminRevokeAllBansForUserResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  BanData;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminRevokeBansResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminRevokeBansResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  BanData;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminRevokeInventoryResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminRevokeInventoryResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminRevokeInventoryItemsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminRevokeInventoryItemsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Errors;                                                     // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminRunTaskResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminRunTaskResult : FPlayFabResultCommon
{ 
	FString                                            TaskInstanceId;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminSendAccountRecoveryEmailResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminSendAccountRecoveryEmailResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminUpdateCatalogItemsResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminUpdateCatalogItemsResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminSetMembershipOverrideResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminSetMembershipOverrideResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminSetPlayerSecretResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminSetPlayerSecretResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminSetPublishedRevisionResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminSetPublishedRevisionResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminSetPublisherDataResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminSetPublisherDataResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminUpdateStoreItemsResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminUpdateStoreItemsResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminSetTitleDataResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminSetTitleDataResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminSetTitleDataAndOverridesResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminSetTitleDataAndOverridesResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminSetupPushNotificationResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminSetupPushNotificationResult : FPlayFabResultCommon
{ 
	FString                                            ARN;                                                        // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminUpdateBansResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminUpdateBansResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  BanData;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminUpdateCloudScriptResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminUpdateCloudScriptResult : FPlayFabResultCommon
{ 
	int32_t                                            Revision;                                                   // 0x0008   (0x0004)  
	int32_t                                            Version;                                                    // 0x000C   (0x0004)  
};

/// Struct /Script/PlayFab.AdminUpdatePlayerSharedSecretResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminUpdatePlayerSharedSecretResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminUpdatePlayerStatisticDefinitionResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminUpdatePlayerStatisticDefinitionResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Statistic;                                                  // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.AdminUpdatePolicyResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminUpdatePolicyResponse : FPlayFabResultCommon
{ 
	FString                                            PolicyName;                                                 // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Statements;                                                 // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminUpdateRandomResultTablesResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminUpdateRandomResultTablesResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.AdminUpdateSegmentResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminUpdateSegmentResponse : FPlayFabResultCommon
{ 
	FString                                            ErrorMessage;                                               // 0x0008   (0x0010)  
	FString                                            SegmentId;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminUpdateUserDataResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminUpdateUserDataResult : FPlayFabResultCommon
{ 
	int32_t                                            DataVersion;                                                // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.AdminUpdateUserTitleDisplayNameResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminUpdateUserTitleDisplayNameResult : FPlayFabResultCommon
{ 
	FString                                            DisplayName;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminDeleteContentRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminDeleteContentRequest : FPlayFabRequestCommon
{ 
	FString                                            Key;                                                        // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminDeleteMasterPlayerAccountRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminDeleteMasterPlayerAccountRequest : FPlayFabRequestCommon
{ 
	FString                                            MetaData;                                                   // 0x0008   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminDeleteMembershipSubscriptionRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FAdminDeleteMembershipSubscriptionRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            MembershipId;                                               // 0x0010   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
	FString                                            SubscriptionId;                                             // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.AdminDeleteOpenIdConnectionRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminDeleteOpenIdConnectionRequest : FPlayFabRequestCommon
{ 
	FString                                            ConnectionId;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminDeletePlayerRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminDeletePlayerRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminDeletePlayerSharedSecretRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminDeletePlayerSharedSecretRequest : FPlayFabRequestCommon
{ 
	FString                                            SecretKey;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminDeleteSegmentRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminDeleteSegmentRequest : FPlayFabRequestCommon
{ 
	FString                                            SegmentId;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminDeleteStoreRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminDeleteStoreRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            StoreId;                                                    // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AdminDeleteTaskRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminDeleteTaskRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          Identifier;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.AdminDeleteTitleRequest
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminDeleteTitleRequest : FPlayFabRequestCommon
{ 
};

/// Struct /Script/PlayFab.AdminDeleteTitleDataOverrideRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminDeleteTitleDataOverrideRequest : FPlayFabRequestCommon
{ 
	FString                                            OverrideLabel;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminExportMasterPlayerDataRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminExportMasterPlayerDataRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetTaskInstanceRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetTaskInstanceRequest : FPlayFabRequestCommon
{ 
	FString                                            TaskInstanceId;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetAllSegmentsRequest
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminGetAllSegmentsRequest : FPlayFabRequestCommon
{ 
};

/// Struct /Script/PlayFab.AdminGetCatalogItemsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetCatalogItemsRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetCloudScriptRevisionRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminGetCloudScriptRevisionRequest : FPlayFabRequestCommon
{ 
	int32_t                                            Revision;                                                   // 0x0008   (0x0004)  
	int32_t                                            Version;                                                    // 0x000C   (0x0004)  
};

/// Struct /Script/PlayFab.AdminGetCloudScriptVersionsRequest
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminGetCloudScriptVersionsRequest : FPlayFabRequestCommon
{ 
};

/// Struct /Script/PlayFab.AdminGetContentListRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetContentListRequest : FPlayFabRequestCommon
{ 
	FString                                            Prefix;                                                     // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetContentUploadUrlRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminGetContentUploadUrlRequest : FPlayFabRequestCommon
{ 
	FString                                            ContentType;                                                // 0x0008   (0x0010)  
	FString                                            Key;                                                        // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetDataReportRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminGetDataReportRequest : FPlayFabRequestCommon
{ 
	int32_t                                            Day;                                                        // 0x0008   (0x0004)  
	int32_t                                            Month;                                                      // 0x000C   (0x0004)  
	FString                                            ReportName;                                                 // 0x0010   (0x0010)  
	int32_t                                            Year;                                                       // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.AdminGetMatchmakerGameInfoRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetMatchmakerGameInfoRequest : FPlayFabRequestCommon
{ 
	FString                                            LobbyId;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetMatchmakerGameModesRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetMatchmakerGameModesRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildVersion;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPlayedTitleListRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetPlayedTitleListRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPlayerIdFromAuthTokenRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FAdminGetPlayerIdFromAuthTokenRequest : FPlayFabRequestCommon
{ 
	FString                                            Token;                                                      // 0x0008   (0x0010)  
	EAuthTokenType                                     TokenType;                                                  // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.AdminGetPlayerProfileRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminGetPlayerProfileRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          ProfileConstraints;                                         // 0x0020   (0x0008)  
};

/// Struct /Script/PlayFab.AdminGetPlayersSegmentsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FAdminGetPlayersSegmentsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPlayerSharedSecretsRequest
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminGetPlayerSharedSecretsRequest : FPlayFabRequestCommon
{ 
};

/// Struct /Script/PlayFab.AdminGetPlayersInSegmentRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FAdminGetPlayersInSegmentRequest : FPlayFabRequestCommon
{ 
	FString                                            ContinuationToken;                                          // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	int32_t                                            MaxBatchSize;                                               // 0x0020   (0x0004)  
	int32_t                                            SecondsToLive;                                              // 0x0024   (0x0004)  
	FString                                            SegmentId;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPlayerStatisticDefinitionsRequest
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminGetPlayerStatisticDefinitionsRequest : FPlayFabRequestCommon
{ 
};

/// Struct /Script/PlayFab.AdminGetPlayerStatisticVersionsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FAdminGetPlayerStatisticVersionsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            StatisticName;                                              // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPlayerTagsRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminGetPlayerTagsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Namespace;                                                  // 0x0010   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPolicyRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetPolicyRequest : FPlayFabRequestCommon
{ 
	FString                                            PolicyName;                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetPublisherDataRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetPublisherDataRequest : FPlayFabRequestCommon
{ 
	FString                                            Keys;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetRandomResultTablesRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetRandomResultTablesRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetSegmentsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetSegmentsRequest : FPlayFabRequestCommon
{ 
	FString                                            SegmentIds;                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetStoreItemsRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminGetStoreItemsRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            StoreId;                                                    // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetTaskInstancesRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FAdminGetTaskInstancesRequest : FPlayFabRequestCommon
{ 
	FString                                            StartedAtRangeFrom;                                         // 0x0008   (0x0010)  
	FString                                            StartedAtRangeTo;                                           // 0x0018   (0x0010)  
	ETaskInstanceStatus                                StatusFilter;                                               // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0029   (0x0007)  MISSED
	class UPlayFabJsonObject*                          TaskIdentifier;                                             // 0x0030   (0x0008)  
};

/// Struct /Script/PlayFab.AdminGetTasksRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminGetTasksRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          Identifier;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.AdminGetTitleDataRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminGetTitleDataRequest : FPlayFabRequestCommon
{ 
	FString                                            Keys;                                                       // 0x0008   (0x0010)  
	FString                                            OverrideLabel;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminLookupUserAccountInfoRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FAdminLookupUserAccountInfoRequest : FPlayFabRequestCommon
{ 
	FString                                            Email;                                                      // 0x0008   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	FString                                            TitleDisplayName;                                           // 0x0028   (0x0010)  
	FString                                            Username;                                                   // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetUserBansRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminGetUserBansRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetUserDataRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminGetUserDataRequest : FPlayFabRequestCommon
{ 
	int32_t                                            IfChangedFromDataVersion;                                   // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            Keys;                                                       // 0x0010   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGetUserInventoryRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FAdminGetUserInventoryRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.AdminGrantItemsToUsersRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminGrantItemsToUsersRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  ItemGrants;                                                 // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AdminIncrementLimitedEditionItemAvailabilityRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FAdminIncrementLimitedEditionItemAvailabilityRequest : FPlayFabRequestCommon
{ 
	int32_t                                            Amount;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            CatalogVersion;                                             // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            ItemId;                                                     // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.AdminIncrementPlayerStatisticVersionRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FAdminIncrementPlayerStatisticVersionRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            StatisticName;                                              // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.AdminListOpenIdConnectionRequest
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminListOpenIdConnectionRequest : FPlayFabRequestCommon
{ 
};

/// Struct /Script/PlayFab.AdminListVirtualCurrencyTypesRequest
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FAdminListVirtualCurrencyTypesRequest : FPlayFabRequestCommon
{ 
};

/// Struct /Script/PlayFab.AdminModifyServerBuildRequest
/// Size: 0x0078 (120 bytes) (0x000008 - 0x000078) align 8 MaxSize: 0x0078
struct FAdminModifyServerBuildRequest : FPlayFabRequestCommon
{ 
	FString                                            ActiveRegions;                                              // 0x0008   (0x0010)  
	FString                                            BuildId;                                                    // 0x0018   (0x0010)  
	FString                                            CommandLineTemplate;                                        // 0x0028   (0x0010)  
	FString                                            Comment;                                                    // 0x0038   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0048   (0x0008)  
	FString                                            ExecutablePath;                                             // 0x0050   (0x0010)  
	int32_t                                            MaxGamesPerHost;                                            // 0x0060   (0x0004)  
	int32_t                                            MinFreeGameSlots;                                           // 0x0064   (0x0004)  
	FString                                            Timestamp;                                                  // 0x0068   (0x0010)  
};

/// Struct /Script/PlayFab.AdminRefundPurchaseRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FAdminRefundPurchaseRequest : FPlayFabRequestCommon
{ 
	FString                                            OrderId;                                                    // 0x0008   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	FString                                            Reason;                                                     // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.AdminRemovePlayerTagRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminRemovePlayerTagRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
	FString                                            TagName;                                                    // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AdminRemoveVirtualCurrencyTypesRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminRemoveVirtualCurrencyTypesRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  VirtualCurrencies;                                          // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminResetCharacterStatisticsRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminResetCharacterStatisticsRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AdminResetPasswordRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminResetPasswordRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Password;                                                   // 0x0010   (0x0010)  
	FString                                            Token;                                                      // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AdminResetUserStatisticsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FAdminResetUserStatisticsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.AdminResolvePurchaseDisputeRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FAdminResolvePurchaseDisputeRequest : FPlayFabRequestCommon
{ 
	FString                                            OrderId;                                                    // 0x0008   (0x0010)  
	EResolutionOutcome                                 Outcome;                                                    // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
	FString                                            Reason;                                                     // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.AdminRevokeAllBansForUserRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminRevokeAllBansForUserRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminRevokeBansRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminRevokeBansRequest : FPlayFabRequestCommon
{ 
	FString                                            BanIds;                                                     // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminRevokeInventoryItemRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FAdminRevokeInventoryItemRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	FString                                            ItemInstanceId;                                             // 0x0018   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.AdminRevokeInventoryItemsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminRevokeInventoryItemsRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Items;                                                      // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminRunTaskRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminRunTaskRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Identifier;                                                 // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.AdminSendAccountRecoveryEmailRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminSendAccountRecoveryEmailRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Email;                                                      // 0x0010   (0x0010)  
	FString                                            EmailTemplateId;                                            // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AdminUpdateCatalogItemsRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FAdminUpdateCatalogItemsRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Catalog;                                                    // 0x0008   (0x0010)  
	FString                                            CatalogVersion;                                             // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
	bool                                               SetAsDefaultCatalog;                                        // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.AdminSetMembershipOverrideRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FAdminSetMembershipOverrideRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            ExpirationTime;                                             // 0x0010   (0x0010)  
	FString                                            MembershipId;                                               // 0x0020   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.AdminSetPlayerSecretRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminSetPlayerSecretRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayerSecret;                                               // 0x0008   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminSetPublishedRevisionRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminSetPublishedRevisionRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            Revision;                                                   // 0x0010   (0x0004)  
	int32_t                                            Version;                                                    // 0x0014   (0x0004)  
};

/// Struct /Script/PlayFab.AdminSetPublisherDataRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminSetPublisherDataRequest : FPlayFabRequestCommon
{ 
	FString                                            Key;                                                        // 0x0008   (0x0010)  
	FString                                            Value;                                                      // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminUpdateStoreItemsRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FAdminUpdateStoreItemsRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          MarketingData;                                              // 0x0020   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  Store;                                                      // 0x0028   (0x0010)  
	FString                                            StoreId;                                                    // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.AdminSetTitleDataRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminSetTitleDataRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Key;                                                        // 0x0010   (0x0010)  
	FString                                            Value;                                                      // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AdminSetTitleDataAndOverridesRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminSetTitleDataAndOverridesRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  KeyValues;                                                  // 0x0008   (0x0010)  
	FString                                            OverrideLabel;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.AdminSetupPushNotificationRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FAdminSetupPushNotificationRequest : FPlayFabRequestCommon
{ 
	FString                                            Credential;                                                 // 0x0008   (0x0010)  
	FString                                            Key;                                                        // 0x0018   (0x0010)  
	FString                                            Name;                                                       // 0x0028   (0x0010)  
	bool                                               OverwriteOldARN;                                            // 0x0038   (0x0001)  
	EPushSetupPlatform                                 PLATFORM;                                                   // 0x0039   (0x0001)  
	unsigned char                                      UnknownData00_7[0x6];                                       // 0x003A   (0x0006)  MISSED
};

/// Struct /Script/PlayFab.AdminSubtractUserVirtualCurrencyRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FAdminSubtractUserVirtualCurrencyRequest : FPlayFabRequestCommon
{ 
	int32_t                                            Amount;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	FString                                            VirtualCurrency;                                            // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.AdminUpdateBansRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAdminUpdateBansRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Bans;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.AdminUpdateCloudScriptRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FAdminUpdateCloudScriptRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            DeveloperPlayFabId;                                         // 0x0010   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Files;                                                      // 0x0020   (0x0010)  
	bool                                               Publish;                                                    // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.AdminUpdateOpenIdConnectionRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FAdminUpdateOpenIdConnectionRequest : FPlayFabRequestCommon
{ 
	FString                                            ClientId;                                                   // 0x0008   (0x0010)  
	FString                                            ClientSecret;                                               // 0x0018   (0x0010)  
	FString                                            ConnectionId;                                               // 0x0028   (0x0010)  
	FString                                            IssuerDiscoveryUrl;                                         // 0x0038   (0x0010)  
	class UPlayFabJsonObject*                          IssuerInformation;                                          // 0x0048   (0x0008)  
};

/// Struct /Script/PlayFab.AdminUpdatePlayerSharedSecretRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminUpdatePlayerSharedSecretRequest : FPlayFabRequestCommon
{ 
	bool                                               Disabled;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            FriendlyName;                                               // 0x0010   (0x0010)  
	FString                                            SecretKey;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AdminUpdatePlayerStatisticDefinitionRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FAdminUpdatePlayerStatisticDefinitionRequest : FPlayFabRequestCommon
{ 
	EStatisticAggregationMethod                        AggregationMethod;                                          // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            StatisticName;                                              // 0x0010   (0x0010)  
	EStatisticResetIntervalOption                      VersionChangeInterval;                                      // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_7[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.AdminUpdatePolicyRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FAdminUpdatePolicyRequest : FPlayFabRequestCommon
{ 
	bool                                               OverwritePolicy;                                            // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            PolicyName;                                                 // 0x0010   (0x0010)  
	int32_t                                            PolicyVersion;                                              // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	TArray<class UPlayFabJsonObject*>                  Statements;                                                 // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.AdminUpdateRandomResultTablesRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminUpdateRandomResultTablesRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  Tables;                                                     // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AdminUpdateSegmentRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FAdminUpdateSegmentRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          SegmentModel;                                               // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.AdminUpdateTaskRequest
/// Size: 0x0060 (96 bytes) (0x000008 - 0x000060) align 8 MaxSize: 0x0060
struct FAdminUpdateTaskRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Description;                                                // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          Identifier;                                                 // 0x0020   (0x0008)  
	bool                                               IsActive;                                                   // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0029   (0x0007)  MISSED
	FString                                            Name;                                                       // 0x0030   (0x0010)  
	class UPlayFabJsonObject*                          Parameter;                                                  // 0x0040   (0x0008)  
	FString                                            Schedule;                                                   // 0x0048   (0x0010)  
	EScheduledTaskType                                 Type;                                                       // 0x0058   (0x0001)  
	unsigned char                                      UnknownData01_7[0x7];                                       // 0x0059   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.AdminUpdateUserDataRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FAdminUpdateUserDataRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Data;                                                       // 0x0010   (0x0008)  
	FString                                            KeysToRemove;                                               // 0x0018   (0x0010)  
	EUserDataPermission                                Permission;                                                 // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0029   (0x0007)  MISSED
	FString                                            PlayFabId;                                                  // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.AdminUpdateUserInternalDataRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FAdminUpdateUserInternalDataRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Data;                                                       // 0x0010   (0x0008)  
	FString                                            KeysToRemove;                                               // 0x0018   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.AdminUpdateUserTitleDisplayNameRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAdminUpdateUserTitleDisplayNameRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            DisplayName;                                                // 0x0010   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AuthenticationGetEntityTokenResponse
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAuthenticationGetEntityTokenResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0008   (0x0008)  
	FString                                            EntityToken;                                                // 0x0010   (0x0010)  
	FString                                            TokenExpiration;                                            // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.AuthenticationValidateEntityTokenResponse
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FAuthenticationValidateEntityTokenResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0008   (0x0008)  
	EIdentifiedDeviceType                              IdentifiedDeviceType;                                       // 0x0010   (0x0001)  
	ELoginIdentityProvider                             IdentityProvider;                                           // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0012   (0x0006)  MISSED
	FString                                            IdentityProviderIssuedId;                                   // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          Lineage;                                                    // 0x0028   (0x0008)  
};

/// Struct /Script/PlayFab.AuthenticationGetEntityTokenRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FAuthenticationGetEntityTokenRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.AuthenticationValidateEntityTokenRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FAuthenticationValidateEntityTokenRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            EntityToken;                                                // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ClientAcceptTradeResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientAcceptTradeResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Trade;                                                      // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientAcceptTradeRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FClientAcceptTradeRequest : FPlayFabRequestCommon
{ 
	FString                                            AcceptedInventoryInstanceIds;                               // 0x0008   (0x0010)  
	FString                                            OfferingPlayerId;                                           // 0x0018   (0x0010)  
	FString                                            TradeId;                                                    // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ClientAddFriendResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientAddFriendResult : FPlayFabResultCommon
{ 
	bool                                               Created;                                                    // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ClientAddFriendRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FClientAddFriendRequest : FPlayFabRequestCommon
{ 
	FString                                            FriendEmail;                                                // 0x0008   (0x0010)  
	FString                                            FriendPlayFabId;                                            // 0x0018   (0x0010)  
	FString                                            FriendTitleDisplayName;                                     // 0x0028   (0x0010)  
	FString                                            FriendUsername;                                             // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ClientAddGenericIDResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientAddGenericIDResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientAddGenericIDRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientAddGenericIDRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          GenericId;                                                  // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientAddOrUpdateContactEmailResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientAddOrUpdateContactEmailResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientAddOrUpdateContactEmailRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientAddOrUpdateContactEmailRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            EmailAddress;                                               // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ClientAddSharedGroupMembersResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientAddSharedGroupMembersResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientAddSharedGroupMembersRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientAddSharedGroupMembersRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabIds;                                                 // 0x0008   (0x0010)  
	FString                                            SharedGroupId;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientAddUsernamePasswordResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientAddUsernamePasswordResult : FPlayFabResultCommon
{ 
	FString                                            Username;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientAddUsernamePasswordRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FClientAddUsernamePasswordRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Email;                                                      // 0x0010   (0x0010)  
	FString                                            Password;                                                   // 0x0020   (0x0010)  
	FString                                            Username;                                                   // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ClientModifyUserVirtualCurrencyResult
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientModifyUserVirtualCurrencyResult : FPlayFabResultCommon
{ 
	int32_t                                            Balance;                                                    // 0x0008   (0x0004)  
	int32_t                                            BalanceChange;                                              // 0x000C   (0x0004)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
	FString                                            VirtualCurrency;                                            // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ClientAddUserVirtualCurrencyRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientAddUserVirtualCurrencyRequest : FPlayFabRequestCommon
{ 
	int32_t                                            Amount;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            VirtualCurrency;                                            // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientAndroidDevicePushNotificationRegistrationResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientAndroidDevicePushNotificationRegistrationResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientAndroidDevicePushNotificationRegistrationRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientAndroidDevicePushNotificationRegistrationRequest : FPlayFabRequestCommon
{ 
	FString                                            ConfirmationMessage;                                        // 0x0008   (0x0010)  
	FString                                            DeviceToken;                                                // 0x0018   (0x0010)  
	bool                                               SendPushNotificationConfirmation;                           // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ClientAttributeInstallResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientAttributeInstallResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientAttributeInstallRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientAttributeInstallRequest : FPlayFabRequestCommon
{ 
	FString                                            Adid;                                                       // 0x0008   (0x0010)  
	FString                                            Idfa;                                                       // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientCancelTradeResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientCancelTradeResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Trade;                                                      // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientCancelTradeRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientCancelTradeRequest : FPlayFabRequestCommon
{ 
	FString                                            TradeId;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientConfirmPurchaseResult
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FClientConfirmPurchaseResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Items;                                                      // 0x0008   (0x0010)  
	FString                                            OrderId;                                                    // 0x0018   (0x0010)  
	FString                                            PurchaseDate;                                               // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ClientConfirmPurchaseRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientConfirmPurchaseRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            OrderId;                                                    // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ClientConsumeItemResult
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientConsumeItemResult : FPlayFabResultCommon
{ 
	FString                                            ItemInstanceId;                                             // 0x0008   (0x0010)  
	int32_t                                            RemainingUses;                                              // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ClientConsumeItemRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FClientConsumeItemRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	int32_t                                            ConsumeCount;                                               // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            ItemInstanceId;                                             // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ClientConsumeMicrosoftStoreEntitlementsResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientConsumeMicrosoftStoreEntitlementsResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Items;                                                      // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientConsumeMicrosoftStoreEntitlementsRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientConsumeMicrosoftStoreEntitlementsRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          MarketplaceSpecificData;                                    // 0x0020   (0x0008)  
};

/// Struct /Script/PlayFab.ClientConsumePS5EntitlementsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientConsumePS5EntitlementsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Items;                                                      // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientConsumePS5EntitlementsRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientConsumePS5EntitlementsRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          MarketplaceSpecificData;                                    // 0x0020   (0x0008)  
};

/// Struct /Script/PlayFab.ClientConsumePSNEntitlementsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientConsumePSNEntitlementsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  ItemsGranted;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientConsumePSNEntitlementsRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientConsumePSNEntitlementsRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	int32_t                                            ServiceLabel;                                               // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ClientConsumeXboxEntitlementsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientConsumeXboxEntitlementsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Items;                                                      // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientConsumeXboxEntitlementsRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientConsumeXboxEntitlementsRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            XboxToken;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ClientCreateSharedGroupResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientCreateSharedGroupResult : FPlayFabResultCommon
{ 
	FString                                            SharedGroupId;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientCreateSharedGroupRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientCreateSharedGroupRequest : FPlayFabRequestCommon
{ 
	FString                                            SharedGroupId;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientExecuteCloudScriptResult
/// Size: 0x0060 (96 bytes) (0x000008 - 0x000060) align 8 MaxSize: 0x0060
struct FClientExecuteCloudScriptResult : FPlayFabResultCommon
{ 
	int32_t                                            APIRequestsIssued;                                          // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          Error;                                                      // 0x0010   (0x0008)  
	int32_t                                            ExecutionTimeSeconds;                                       // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            FunctionName;                                               // 0x0020   (0x0010)  
	class UPlayFabJsonObject*                          FunctionResult;                                             // 0x0030   (0x0008)  
	bool                                               FunctionResultTooLarge;                                     // 0x0038   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0039   (0x0003)  MISSED
	int32_t                                            HttpRequestsIssued;                                         // 0x003C   (0x0004)  
	TArray<class UPlayFabJsonObject*>                  Logs;                                                       // 0x0040   (0x0010)  
	bool                                               LogsTooLarge;                                               // 0x0050   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0051   (0x0003)  MISSED
	int32_t                                            MemoryConsumedBytes;                                        // 0x0054   (0x0004)  
	int32_t                                            ProcessorTimeSeconds;                                       // 0x0058   (0x0004)  
	int32_t                                            Revision;                                                   // 0x005C   (0x0004)  
};

/// Struct /Script/PlayFab.ClientGetAccountInfoResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientGetAccountInfoResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          AccountInfo;                                                // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientGetAdPlacementsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetAdPlacementsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  AdPlacements;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientListUsersCharactersResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientListUsersCharactersResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Characters;                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetCatalogItemsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetCatalogItemsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Catalog;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetCharacterDataResult
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientGetCharacterDataResult : FPlayFabResultCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          Data;                                                       // 0x0018   (0x0008)  
	int32_t                                            DataVersion;                                                // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ClientGetCharacterInventoryResult
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FClientGetCharacterInventoryResult : FPlayFabResultCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Inventory;                                                  // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          VirtualCurrency;                                            // 0x0028   (0x0008)  
	class UPlayFabJsonObject*                          VirtualCurrencyRechargeTimes;                               // 0x0030   (0x0008)  
};

/// Struct /Script/PlayFab.ClientGetCharacterLeaderboardResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetCharacterLeaderboardResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Leaderboard;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetCharacterStatisticsResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientGetCharacterStatisticsResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          CharacterStatistics;                                        // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientGetContentDownloadUrlResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetContentDownloadUrlResult : FPlayFabResultCommon
{ 
	FString                                            URL;                                                        // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientCurrentGamesResult
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientCurrentGamesResult : FPlayFabResultCommon
{ 
	int32_t                                            GameCount;                                                  // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<class UPlayFabJsonObject*>                  Games;                                                      // 0x0010   (0x0010)  
	int32_t                                            PlayerCount;                                                // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_7[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ClientGetLeaderboardResult
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientGetLeaderboardResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Leaderboard;                                                // 0x0008   (0x0010)  
	FString                                            NextReset;                                                  // 0x0018   (0x0010)  
	int32_t                                            Version;                                                    // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ClientGetFriendLeaderboardAroundPlayerResult
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientGetFriendLeaderboardAroundPlayerResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Leaderboard;                                                // 0x0008   (0x0010)  
	FString                                            NextReset;                                                  // 0x0018   (0x0010)  
	int32_t                                            Version;                                                    // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ClientGetFriendsListResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetFriendsListResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Friends;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGameServerRegionsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGameServerRegionsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Regions;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetLeaderboardAroundCharacterResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetLeaderboardAroundCharacterResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Leaderboard;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetLeaderboardAroundPlayerResult
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientGetLeaderboardAroundPlayerResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Leaderboard;                                                // 0x0008   (0x0010)  
	FString                                            NextReset;                                                  // 0x0018   (0x0010)  
	int32_t                                            Version;                                                    // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ClientGetLeaderboardForUsersCharactersResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetLeaderboardForUsersCharactersResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Leaderboard;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPaymentTokenResult
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientGetPaymentTokenResult : FPlayFabResultCommon
{ 
	FString                                            OrderId;                                                    // 0x0008   (0x0010)  
	FString                                            ProviderToken;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPhotonAuthenticationTokenResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPhotonAuthenticationTokenResult : FPlayFabResultCommon
{ 
	FString                                            PhotonCustomAuthenticationToken;                            // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayerCombinedInfoResult
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientGetPlayerCombinedInfoResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          InfoResultPayload;                                          // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayerProfileResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientGetPlayerProfileResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          PlayerProfile;                                              // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientGetPlayerSegmentsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayerSegmentsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Segments;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayerStatisticsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayerStatisticsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Statistics;                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayerStatisticVersionsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayerStatisticVersionsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  StatisticVersions;                                          // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayerTagsResult
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientGetPlayerTagsResult : FPlayFabResultCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
	FString                                            Tags;                                                       // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayerTradesResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientGetPlayerTradesResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  AcceptedTrades;                                             // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  OpenedTrades;                                               // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromFacebookIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromFacebookIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromFacebookInstantGamesIdsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromGameCenterIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromGameCenterIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromGenericIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromGenericIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromGoogleIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromGoogleIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromKongregateIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromKongregateIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromPSNAccountIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromPSNAccountIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromSteamIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromSteamIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromTwitchIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromTwitchIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromXboxLiveIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromXboxLiveIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPublisherDataResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientGetPublisherDataResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Data;                                                       // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientGetPurchaseResult
/// Size: 0x0058 (88 bytes) (0x000008 - 0x000058) align 8 MaxSize: 0x0058
struct FClientGetPurchaseResult : FPlayFabResultCommon
{ 
	FString                                            OrderId;                                                    // 0x0008   (0x0010)  
	FString                                            PaymentProvider;                                            // 0x0018   (0x0010)  
	FString                                            PurchaseDate;                                               // 0x0028   (0x0010)  
	FString                                            TransactionId;                                              // 0x0038   (0x0010)  
	FString                                            TransactionStatus;                                          // 0x0048   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetSharedGroupDataResult
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientGetSharedGroupDataResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Data;                                                       // 0x0008   (0x0008)  
	FString                                            Members;                                                    // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetStoreItemsResult
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FClientGetStoreItemsResult : FPlayFabResultCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          MarketingData;                                              // 0x0018   (0x0008)  
	EPfSourceType                                      Source;                                                     // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
	TArray<class UPlayFabJsonObject*>                  Store;                                                      // 0x0028   (0x0010)  
	FString                                            StoreId;                                                    // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetTimeResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetTimeResult : FPlayFabResultCommon
{ 
	FString                                            Time;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetTitleDataResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientGetTitleDataResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Data;                                                       // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientGetTitleNewsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetTitleNewsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  News;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetTitlePublicKeyResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetTitlePublicKeyResult : FPlayFabResultCommon
{ 
	FString                                            RSAPublicKey;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetTradeStatusResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientGetTradeStatusResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Trade;                                                      // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientGetUserDataResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetUserDataResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Data;                                                       // 0x0008   (0x0008)  
	int32_t                                            DataVersion;                                                // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ClientGetUserInventoryResult
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientGetUserInventoryResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Inventory;                                                  // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          VirtualCurrency;                                            // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          VirtualCurrencyRechargeTimes;                               // 0x0020   (0x0008)  
};

/// Struct /Script/PlayFab.ClientGrantCharacterToUserResult
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientGrantCharacterToUserResult : FPlayFabResultCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	FString                                            CharacterType;                                              // 0x0018   (0x0010)  
	bool                                               Result;                                                     // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ClientLinkAndroidDeviceIDResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientLinkAndroidDeviceIDResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientEmptyResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientEmptyResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientLinkCustomIDResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientLinkCustomIDResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientLinkFacebookAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientLinkFacebookAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientLinkFacebookInstantGamesIdResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientLinkFacebookInstantGamesIdResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientLinkGameCenterAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientLinkGameCenterAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientLinkGoogleAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientLinkGoogleAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientLinkIOSDeviceIDResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientLinkIOSDeviceIDResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientLinkKongregateAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientLinkKongregateAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientLinkNintendoSwitchDeviceIdResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientLinkNintendoSwitchDeviceIdResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientLinkPSNAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientLinkPSNAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientLinkSteamAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientLinkSteamAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientLinkTwitchAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientLinkTwitchAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientLinkXboxAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientLinkXboxAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.PlayFabLoginResultCommon
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FPlayFabLoginResultCommon : FPlayFabResultCommon
{ 
	class UPlayFabAuthenticationContext*               AuthenticationContext;                                      // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientLoginResult
/// Size: 0x0068 (104 bytes) (0x000010 - 0x000068) align 8 MaxSize: 0x0068
struct FClientLoginResult : FPlayFabLoginResultCommon
{ 
	class UPlayFabJsonObject*                          EntityToken;                                                // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          InfoResultPayload;                                          // 0x0018   (0x0008)  
	FString                                            LastLoginTime;                                              // 0x0020   (0x0010)  
	bool                                               NewlyCreated;                                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
	FString                                            PlayFabId;                                                  // 0x0038   (0x0010)  
	FString                                            SessionTicket;                                              // 0x0048   (0x0010)  
	class UPlayFabJsonObject*                          SettingsForUser;                                            // 0x0058   (0x0008)  
	class UPlayFabJsonObject*                          TreatmentAssignment;                                        // 0x0060   (0x0008)  
};

/// Struct /Script/PlayFab.ClientMatchmakeResult
/// Size: 0x0080 (128 bytes) (0x000008 - 0x000080) align 8 MaxSize: 0x0080
struct FClientMatchmakeResult : FPlayFabResultCommon
{ 
	FString                                            Expires;                                                    // 0x0008   (0x0010)  
	FString                                            LobbyId;                                                    // 0x0018   (0x0010)  
	int32_t                                            PollWaitTimeMS;                                             // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
	FString                                            ServerIPV4Address;                                          // 0x0030   (0x0010)  
	FString                                            ServerIPV6Address;                                          // 0x0040   (0x0010)  
	int32_t                                            ServerPort;                                                 // 0x0050   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0054   (0x0004)  MISSED
	FString                                            ServerPublicDNSName;                                        // 0x0058   (0x0010)  
	EMatchmakeStatus                                   Status;                                                     // 0x0068   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0069   (0x0007)  MISSED
	FString                                            Ticket;                                                     // 0x0070   (0x0010)  
};

/// Struct /Script/PlayFab.ClientOpenTradeResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientOpenTradeResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Trade;                                                      // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientPayForPurchaseResult
/// Size: 0x0078 (120 bytes) (0x000008 - 0x000078) align 8 MaxSize: 0x0078
struct FClientPayForPurchaseResult : FPlayFabResultCommon
{ 
	int32_t                                            CreditApplied;                                              // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            OrderId;                                                    // 0x0010   (0x0010)  
	FString                                            ProviderData;                                               // 0x0020   (0x0010)  
	FString                                            ProviderToken;                                              // 0x0030   (0x0010)  
	FString                                            PurchaseConfirmationPageURL;                                // 0x0040   (0x0010)  
	FString                                            PurchaseCurrency;                                           // 0x0050   (0x0010)  
	int32_t                                            PurchasePrice;                                              // 0x0060   (0x0004)  
	ETransactionStatus                                 Status;                                                     // 0x0064   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0065   (0x0003)  MISSED
	class UPlayFabJsonObject*                          VCAmount;                                                   // 0x0068   (0x0008)  
	class UPlayFabJsonObject*                          VirtualCurrency;                                            // 0x0070   (0x0008)  
};

/// Struct /Script/PlayFab.ClientPurchaseItemResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientPurchaseItemResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Items;                                                      // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientRedeemCouponResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientRedeemCouponResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  GrantedItems;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientEmptyResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientEmptyResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientRegisterForIOSPushNotificationResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientRegisterForIOSPushNotificationResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientRegisterPlayFabUserResult
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FClientRegisterPlayFabUserResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          EntityToken;                                                // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
	FString                                            SessionTicket;                                              // 0x0020   (0x0010)  
	class UPlayFabJsonObject*                          SettingsForUser;                                            // 0x0030   (0x0008)  
	FString                                            Username;                                                   // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ClientRemoveContactEmailResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientRemoveContactEmailResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientRemoveFriendResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientRemoveFriendResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientRemoveGenericIDResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientRemoveGenericIDResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientRemoveSharedGroupMembersResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientRemoveSharedGroupMembersResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientReportAdActivityResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientReportAdActivityResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientReportPlayerClientResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientReportPlayerClientResult : FPlayFabResultCommon
{ 
	int32_t                                            SubmissionsRemaining;                                       // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ClientRestoreIOSPurchasesResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientRestoreIOSPurchasesResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Fulfillments;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientRewardAdActivityResult
/// Size: 0x0058 (88 bytes) (0x000008 - 0x000058) align 8 MaxSize: 0x0058
struct FClientRewardAdActivityResult : FPlayFabResultCommon
{ 
	FString                                            AdActivityEventId;                                          // 0x0008   (0x0010)  
	FString                                            DebugResults;                                               // 0x0018   (0x0010)  
	FString                                            PlacementId;                                                // 0x0028   (0x0010)  
	FString                                            PlacementName;                                              // 0x0038   (0x0010)  
	int32_t                                            PlacementViewsRemaining;                                    // 0x0048   (0x0004)  
	int32_t                                            PlacementViewsResetMinutes;                                 // 0x004C   (0x0004)  
	class UPlayFabJsonObject*                          RewardResults;                                              // 0x0050   (0x0008)  
};

/// Struct /Script/PlayFab.ClientSendAccountRecoveryEmailResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientSendAccountRecoveryEmailResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientSetFriendTagsResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientSetFriendTagsResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientSetPlayerSecretResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientSetPlayerSecretResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientStartPurchaseResult
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FClientStartPurchaseResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Contents;                                                   // 0x0008   (0x0010)  
	FString                                            OrderId;                                                    // 0x0018   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  PaymentOptions;                                             // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          VirtualCurrencyBalances;                                    // 0x0038   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUnlinkAndroidDeviceIDResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUnlinkAndroidDeviceIDResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUnlinkCustomIDResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUnlinkCustomIDResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUnlinkFacebookAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUnlinkFacebookAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUnlinkFacebookInstantGamesIdResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUnlinkFacebookInstantGamesIdResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUnlinkGameCenterAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUnlinkGameCenterAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUnlinkGoogleAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUnlinkGoogleAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUnlinkIOSDeviceIDResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUnlinkIOSDeviceIDResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUnlinkKongregateAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUnlinkKongregateAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUnlinkNintendoSwitchDeviceIdResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUnlinkNintendoSwitchDeviceIdResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUnlinkPSNAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUnlinkPSNAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUnlinkSteamAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUnlinkSteamAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUnlinkTwitchAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUnlinkTwitchAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUnlinkXboxAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUnlinkXboxAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUnlockContainerItemResult
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FClientUnlockContainerItemResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  GrantedItems;                                               // 0x0008   (0x0010)  
	FString                                            UnlockedItemInstanceId;                                     // 0x0018   (0x0010)  
	FString                                            UnlockedWithItemInstanceId;                                 // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          VirtualCurrency;                                            // 0x0038   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUpdateCharacterDataResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientUpdateCharacterDataResult : FPlayFabResultCommon
{ 
	int32_t                                            DataVersion;                                                // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ClientUpdateCharacterStatisticsResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUpdateCharacterStatisticsResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUpdatePlayerStatisticsResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUpdatePlayerStatisticsResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUpdateSharedGroupDataResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientUpdateSharedGroupDataResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ClientUpdateUserDataResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientUpdateUserDataResult : FPlayFabResultCommon
{ 
	int32_t                                            DataVersion;                                                // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ClientUpdateUserTitleDisplayNameResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientUpdateUserTitleDisplayNameResult : FPlayFabResultCommon
{ 
	FString                                            DisplayName;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientValidateAmazonReceiptResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientValidateAmazonReceiptResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Fulfillments;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientValidateGooglePlayPurchaseResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientValidateGooglePlayPurchaseResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Fulfillments;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientValidateIOSReceiptResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientValidateIOSReceiptResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Fulfillments;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientValidateWindowsReceiptResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientValidateWindowsReceiptResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Fulfillments;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientWriteEventResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientWriteEventResponse : FPlayFabResultCommon
{ 
	FString                                            EventId;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientExecuteCloudScriptRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientExecuteCloudScriptRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            FunctionName;                                               // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          FunctionParameter;                                          // 0x0020   (0x0008)  
	bool                                               GeneratePlayStreamEvent;                                    // 0x0028   (0x0001)  
	ECloudScriptRevisionOption                         RevisionSelection;                                          // 0x0029   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x002A   (0x0002)  MISSED
	int32_t                                            SpecificRevision;                                           // 0x002C   (0x0004)  
};

/// Struct /Script/PlayFab.ClientGetAccountInfoRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FClientGetAccountInfoRequest : FPlayFabRequestCommon
{ 
	FString                                            Email;                                                      // 0x0008   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	FString                                            TitleDisplayName;                                           // 0x0028   (0x0010)  
	FString                                            Username;                                                   // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetAdPlacementsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientGetAdPlacementsRequest : FPlayFabRequestCommon
{ 
	FString                                            AppId;                                                      // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          Identifier;                                                 // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.ClientListUsersCharactersRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientListUsersCharactersRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetCatalogItemsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetCatalogItemsRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetCharacterDataRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FClientGetCharacterDataRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	int32_t                                            IfChangedFromDataVersion;                                   // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            Keys;                                                       // 0x0020   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetCharacterInventoryRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientGetCharacterInventoryRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            CharacterId;                                                // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
};

/// Struct /Script/PlayFab.ClientGetCharacterLeaderboardRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientGetCharacterLeaderboardRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterType;                                              // 0x0008   (0x0010)  
	int32_t                                            MaxResultsCount;                                            // 0x0018   (0x0004)  
	int32_t                                            StartPosition;                                              // 0x001C   (0x0004)  
	FString                                            StatisticName;                                              // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetCharacterStatisticsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetCharacterStatisticsRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetContentDownloadUrlRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientGetContentDownloadUrlRequest : FPlayFabRequestCommon
{ 
	FString                                            HttpMethod;                                                 // 0x0008   (0x0010)  
	FString                                            Key;                                                        // 0x0018   (0x0010)  
	bool                                               ThruCDN;                                                    // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ClientCurrentGamesRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FClientCurrentGamesRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildVersion;                                               // 0x0008   (0x0010)  
	FString                                            GAMEMODE;                                                   // 0x0018   (0x0010)  
	ERegion                                            Region;                                                     // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0029   (0x0007)  MISSED
	FString                                            StatisticName;                                              // 0x0030   (0x0010)  
	class UPlayFabJsonObject*                          TagFilter;                                                  // 0x0040   (0x0008)  
};

/// Struct /Script/PlayFab.ClientGetFriendLeaderboardRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FClientGetFriendLeaderboardRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               IncludeFacebookFriends;                                     // 0x0010   (0x0001)  
	bool                                               IncludeSteamFriends;                                        // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0012   (0x0002)  MISSED
	int32_t                                            MaxResultsCount;                                            // 0x0014   (0x0004)  
	class UPlayFabJsonObject*                          ProfileConstraints;                                         // 0x0018   (0x0008)  
	int32_t                                            StartPosition;                                              // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	FString                                            StatisticName;                                              // 0x0028   (0x0010)  
	bool                                               UseSpecificVersion;                                         // 0x0038   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0039   (0x0003)  MISSED
	int32_t                                            Version;                                                    // 0x003C   (0x0004)  
	FString                                            XboxToken;                                                  // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetFriendLeaderboardAroundPlayerRequest
/// Size: 0x0058 (88 bytes) (0x000008 - 0x000058) align 8 MaxSize: 0x0058
struct FClientGetFriendLeaderboardAroundPlayerRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               IncludeFacebookFriends;                                     // 0x0010   (0x0001)  
	bool                                               IncludeSteamFriends;                                        // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0012   (0x0002)  MISSED
	int32_t                                            MaxResultsCount;                                            // 0x0014   (0x0004)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          ProfileConstraints;                                         // 0x0028   (0x0008)  
	FString                                            StatisticName;                                              // 0x0030   (0x0010)  
	bool                                               UseSpecificVersion;                                         // 0x0040   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0041   (0x0003)  MISSED
	int32_t                                            Version;                                                    // 0x0044   (0x0004)  
	FString                                            XboxToken;                                                  // 0x0048   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetFriendsListRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientGetFriendsListRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               IncludeFacebookFriends;                                     // 0x0010   (0x0001)  
	bool                                               IncludeSteamFriends;                                        // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0012   (0x0006)  MISSED
	class UPlayFabJsonObject*                          ProfileConstraints;                                         // 0x0018   (0x0008)  
	FString                                            XboxToken;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGameServerRegionsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGameServerRegionsRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildVersion;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetLeaderboardRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FClientGetLeaderboardRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            MaxResultsCount;                                            // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	class UPlayFabJsonObject*                          ProfileConstraints;                                         // 0x0018   (0x0008)  
	int32_t                                            StartPosition;                                              // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	FString                                            StatisticName;                                              // 0x0028   (0x0010)  
	bool                                               UseSpecificVersion;                                         // 0x0038   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0039   (0x0003)  MISSED
	int32_t                                            Version;                                                    // 0x003C   (0x0004)  
};

/// Struct /Script/PlayFab.ClientGetLeaderboardAroundCharacterRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FClientGetLeaderboardAroundCharacterRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	FString                                            CharacterType;                                              // 0x0018   (0x0010)  
	int32_t                                            MaxResultsCount;                                            // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
	FString                                            StatisticName;                                              // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetLeaderboardAroundPlayerRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FClientGetLeaderboardAroundPlayerRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            MaxResultsCount;                                            // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          ProfileConstraints;                                         // 0x0028   (0x0008)  
	FString                                            StatisticName;                                              // 0x0030   (0x0010)  
	bool                                               UseSpecificVersion;                                         // 0x0040   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0041   (0x0003)  MISSED
	int32_t                                            Version;                                                    // 0x0044   (0x0004)  
};

/// Struct /Script/PlayFab.ClientGetLeaderboardForUsersCharactersRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetLeaderboardForUsersCharactersRequest : FPlayFabRequestCommon
{ 
	FString                                            StatisticName;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPaymentTokenRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPaymentTokenRequest : FPlayFabRequestCommon
{ 
	FString                                            TokenProvider;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPhotonAuthenticationTokenRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPhotonAuthenticationTokenRequest : FPlayFabRequestCommon
{ 
	FString                                            PhotonApplicationId;                                        // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayerCombinedInfoRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientGetPlayerCombinedInfoRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0010   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayerProfileRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientGetPlayerProfileRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          ProfileConstraints;                                         // 0x0020   (0x0008)  
};

/// Struct /Script/PlayFab.ClientGetPlayerSegmentsRequest
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientGetPlayerSegmentsRequest : FPlayFabRequestCommon
{ 
};

/// Struct /Script/PlayFab.ClientGetPlayerStatisticsRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientGetPlayerStatisticsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            StatisticNames;                                             // 0x0010   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  StatisticNameVersions;                                      // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayerStatisticVersionsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientGetPlayerStatisticVersionsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            StatisticName;                                              // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayerTagsRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientGetPlayerTagsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Namespace;                                                  // 0x0010   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayerTradesRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientGetPlayerTradesRequest : FPlayFabRequestCommon
{ 
	ETradeStatus                                       StatusFilter;                                               // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromFacebookIDsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromFacebookIDsRequest : FPlayFabRequestCommon
{ 
	FString                                            FacebookIDs;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromFacebookInstantGamesIdsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsRequest : FPlayFabRequestCommon
{ 
	FString                                            FacebookInstantGamesIds;                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromGameCenterIDsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromGameCenterIDsRequest : FPlayFabRequestCommon
{ 
	FString                                            GameCenterIDs;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromGenericIDsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromGenericIDsRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  GenericIDs;                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromGoogleIDsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromGoogleIDsRequest : FPlayFabRequestCommon
{ 
	FString                                            GoogleIDs;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromKongregateIDsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromKongregateIDsRequest : FPlayFabRequestCommon
{ 
	FString                                            KongregateIDs;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest : FPlayFabRequestCommon
{ 
	FString                                            NintendoSwitchDeviceIds;                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromPSNAccountIDsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientGetPlayFabIDsFromPSNAccountIDsRequest : FPlayFabRequestCommon
{ 
	int32_t                                            IssuerId;                                                   // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            PSNAccountIDs;                                              // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromSteamIDsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromSteamIDsRequest : FPlayFabRequestCommon
{ 
	FString                                            SteamStringIDs;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromTwitchIDsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPlayFabIDsFromTwitchIDsRequest : FPlayFabRequestCommon
{ 
	FString                                            TwitchIds;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPlayFabIDsFromXboxLiveIDsRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientGetPlayFabIDsFromXboxLiveIDsRequest : FPlayFabRequestCommon
{ 
	FString                                            Sandbox;                                                    // 0x0008   (0x0010)  
	FString                                            XboxLiveAccountIDs;                                         // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPublisherDataRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPublisherDataRequest : FPlayFabRequestCommon
{ 
	FString                                            Keys;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetPurchaseRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetPurchaseRequest : FPlayFabRequestCommon
{ 
	FString                                            OrderId;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetSharedGroupDataRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientGetSharedGroupDataRequest : FPlayFabRequestCommon
{ 
	bool                                               GetMembers;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            Keys;                                                       // 0x0010   (0x0010)  
	FString                                            SharedGroupId;                                              // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetStoreItemsRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientGetStoreItemsRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            StoreId;                                                    // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetTimeRequest
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FClientGetTimeRequest : FPlayFabRequestCommon
{ 
};

/// Struct /Script/PlayFab.ClientGetTitleDataRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientGetTitleDataRequest : FPlayFabRequestCommon
{ 
	FString                                            Keys;                                                       // 0x0008   (0x0010)  
	FString                                            OverrideLabel;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetTitleNewsRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientGetTitleNewsRequest : FPlayFabRequestCommon
{ 
	int32_t                                            Count;                                                      // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ClientGetTitlePublicKeyRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientGetTitlePublicKeyRequest : FPlayFabRequestCommon
{ 
	FString                                            TitleSharedSecret;                                          // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetTradeStatusRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientGetTradeStatusRequest : FPlayFabRequestCommon
{ 
	FString                                            OfferingPlayerId;                                           // 0x0008   (0x0010)  
	FString                                            TradeId;                                                    // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetUserDataRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientGetUserDataRequest : FPlayFabRequestCommon
{ 
	int32_t                                            IfChangedFromDataVersion;                                   // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            Keys;                                                       // 0x0010   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ClientGetUserInventoryRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientGetUserInventoryRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientGrantCharacterToUserRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FClientGrantCharacterToUserRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            CharacterName;                                              // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
	FString                                            ItemId;                                                     // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLinkAndroidDeviceIDRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FClientLinkAndroidDeviceIDRequest : FPlayFabRequestCommon
{ 
	FString                                            AndroidDevice;                                              // 0x0008   (0x0010)  
	FString                                            AndroidDeviceId;                                            // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
	FString                                            OS;                                                         // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLinkAppleRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientLinkAppleRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FString                                            IdentityToken;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLinkCustomIDRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientLinkCustomIDRequest : FPlayFabRequestCommon
{ 
	FString                                            CustomId;                                                   // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ClientLinkFacebookAccountRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientLinkFacebookAccountRequest : FPlayFabRequestCommon
{ 
	FString                                            AccessToken;                                                // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ClientLinkFacebookInstantGamesIdRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientLinkFacebookInstantGamesIdRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            FacebookInstantGamesSignature;                              // 0x0010   (0x0010)  
	bool                                               ForceLink;                                                  // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ClientLinkGameCenterAccountRequest
/// Size: 0x0068 (104 bytes) (0x000008 - 0x000068) align 8 MaxSize: 0x0068
struct FClientLinkGameCenterAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FString                                            GameCenterId;                                               // 0x0018   (0x0010)  
	FString                                            PublicKeyUrl;                                               // 0x0028   (0x0010)  
	FString                                            Salt;                                                       // 0x0038   (0x0010)  
	FString                                            Signature;                                                  // 0x0048   (0x0010)  
	FString                                            Timestamp;                                                  // 0x0058   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLinkGoogleAccountRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientLinkGoogleAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FString                                            ServerAuthCode;                                             // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLinkIOSDeviceIDRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FClientLinkIOSDeviceIDRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            DeviceID;                                                   // 0x0010   (0x0010)  
	FString                                            DeviceModel;                                                // 0x0020   (0x0010)  
	bool                                               ForceLink;                                                  // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
	FString                                            OS;                                                         // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLinkKongregateAccountRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FClientLinkKongregateAccountRequest : FPlayFabRequestCommon
{ 
	FString                                            AuthTicket;                                                 // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
	FString                                            KongregateId;                                               // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLinkNintendoServiceAccountRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientLinkNintendoServiceAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FString                                            IdentityToken;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLinkNintendoSwitchDeviceIdRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientLinkNintendoSwitchDeviceIdRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FString                                            NintendoSwitchDeviceId;                                     // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLinkOpenIdConnectRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FClientLinkOpenIdConnectRequest : FPlayFabRequestCommon
{ 
	FString                                            ConnectionId;                                               // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
	FString                                            IdToken;                                                    // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLinkPSNAccountRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FClientLinkPSNAccountRequest : FPlayFabRequestCommon
{ 
	FString                                            AuthCode;                                                   // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0021   (0x0003)  MISSED
	int32_t                                            IssuerId;                                                   // 0x0024   (0x0004)  
	FString                                            RedirectUri;                                                // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLinkSteamAccountRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientLinkSteamAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FString                                            SteamTicket;                                                // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLinkTwitchAccountRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientLinkTwitchAccountRequest : FPlayFabRequestCommon
{ 
	FString                                            AccessToken;                                                // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ClientLinkXboxAccountRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientLinkXboxAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FString                                            XboxToken;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithAndroidDeviceIDRequest
/// Size: 0x0070 (112 bytes) (0x000008 - 0x000070) align 8 MaxSize: 0x0070
struct FClientLoginWithAndroidDeviceIDRequest : FPlayFabRequestCommon
{ 
	FString                                            AndroidDevice;                                              // 0x0008   (0x0010)  
	FString                                            AndroidDeviceId;                                            // 0x0018   (0x0010)  
	bool                                               CreateAccount;                                              // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0029   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0030   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0038   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0048   (0x0008)  
	FString                                            OS;                                                         // 0x0050   (0x0010)  
	FString                                            PlayerSecret;                                               // 0x0060   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithAppleRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FClientLoginWithAppleRequest : FPlayFabRequestCommon
{ 
	bool                                               CreateAccount;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0018   (0x0010)  
	FString                                            IdentityToken;                                              // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0038   (0x0008)  
	FString                                            PlayerSecret;                                               // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithCustomIDRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FClientLoginWithCustomIDRequest : FPlayFabRequestCommon
{ 
	bool                                               CreateAccount;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            CustomId;                                                   // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0038   (0x0008)  
	FString                                            PlayerSecret;                                               // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithEmailAddressRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FClientLoginWithEmailAddressRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Email;                                                      // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0020   (0x0008)  
	FString                                            Password;                                                   // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithFacebookRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FClientLoginWithFacebookRequest : FPlayFabRequestCommon
{ 
	FString                                            AccessToken;                                                // 0x0008   (0x0010)  
	bool                                               CreateAccount;                                              // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0038   (0x0008)  
	FString                                            PlayerSecret;                                               // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithFacebookInstantGamesIdRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FClientLoginWithFacebookInstantGamesIdRequest : FPlayFabRequestCommon
{ 
	bool                                               CreateAccount;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0018   (0x0010)  
	FString                                            FacebookInstantGamesSignature;                              // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0038   (0x0008)  
	FString                                            PlayerSecret;                                               // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithGameCenterRequest
/// Size: 0x0090 (144 bytes) (0x000008 - 0x000090) align 8 MaxSize: 0x0090
struct FClientLoginWithGameCenterRequest : FPlayFabRequestCommon
{ 
	bool                                               CreateAccount;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0028   (0x0008)  
	FString                                            PlayerId;                                                   // 0x0030   (0x0010)  
	FString                                            PlayerSecret;                                               // 0x0040   (0x0010)  
	FString                                            PublicKeyUrl;                                               // 0x0050   (0x0010)  
	FString                                            Salt;                                                       // 0x0060   (0x0010)  
	FString                                            Signature;                                                  // 0x0070   (0x0010)  
	FString                                            Timestamp;                                                  // 0x0080   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithGoogleAccountRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FClientLoginWithGoogleAccountRequest : FPlayFabRequestCommon
{ 
	bool                                               CreateAccount;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0028   (0x0008)  
	FString                                            PlayerSecret;                                               // 0x0030   (0x0010)  
	FString                                            ServerAuthCode;                                             // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithIOSDeviceIDRequest
/// Size: 0x0070 (112 bytes) (0x000008 - 0x000070) align 8 MaxSize: 0x0070
struct FClientLoginWithIOSDeviceIDRequest : FPlayFabRequestCommon
{ 
	bool                                               CreateAccount;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            DeviceID;                                                   // 0x0018   (0x0010)  
	FString                                            DeviceModel;                                                // 0x0028   (0x0010)  
	FString                                            EncryptedRequest;                                           // 0x0038   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0048   (0x0008)  
	FString                                            OS;                                                         // 0x0050   (0x0010)  
	FString                                            PlayerSecret;                                               // 0x0060   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithKongregateRequest
/// Size: 0x0060 (96 bytes) (0x000008 - 0x000060) align 8 MaxSize: 0x0060
struct FClientLoginWithKongregateRequest : FPlayFabRequestCommon
{ 
	FString                                            AuthTicket;                                                 // 0x0008   (0x0010)  
	bool                                               CreateAccount;                                              // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0038   (0x0008)  
	FString                                            KongregateId;                                               // 0x0040   (0x0010)  
	FString                                            PlayerSecret;                                               // 0x0050   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithNintendoServiceAccountRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FClientLoginWithNintendoServiceAccountRequest : FPlayFabRequestCommon
{ 
	bool                                               CreateAccount;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0018   (0x0010)  
	FString                                            IdentityToken;                                              // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0038   (0x0008)  
	FString                                            PlayerSecret;                                               // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithNintendoSwitchDeviceIdRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FClientLoginWithNintendoSwitchDeviceIdRequest : FPlayFabRequestCommon
{ 
	bool                                               CreateAccount;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0028   (0x0008)  
	FString                                            NintendoSwitchDeviceId;                                     // 0x0030   (0x0010)  
	FString                                            PlayerSecret;                                               // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithOpenIdConnectRequest
/// Size: 0x0060 (96 bytes) (0x000008 - 0x000060) align 8 MaxSize: 0x0060
struct FClientLoginWithOpenIdConnectRequest : FPlayFabRequestCommon
{ 
	FString                                            ConnectionId;                                               // 0x0008   (0x0010)  
	bool                                               CreateAccount;                                              // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0028   (0x0010)  
	FString                                            IdToken;                                                    // 0x0038   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0048   (0x0008)  
	FString                                            PlayerSecret;                                               // 0x0050   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithPlayFabRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FClientLoginWithPlayFabRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0010   (0x0008)  
	FString                                            Password;                                                   // 0x0018   (0x0010)  
	FString                                            Username;                                                   // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithPSNRequest
/// Size: 0x0068 (104 bytes) (0x000008 - 0x000068) align 8 MaxSize: 0x0068
struct FClientLoginWithPSNRequest : FPlayFabRequestCommon
{ 
	FString                                            AuthCode;                                                   // 0x0008   (0x0010)  
	bool                                               CreateAccount;                                              // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0038   (0x0008)  
	int32_t                                            IssuerId;                                                   // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
	FString                                            PlayerSecret;                                               // 0x0048   (0x0010)  
	FString                                            RedirectUri;                                                // 0x0058   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithSteamRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FClientLoginWithSteamRequest : FPlayFabRequestCommon
{ 
	bool                                               CreateAccount;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0028   (0x0008)  
	FString                                            PlayerSecret;                                               // 0x0030   (0x0010)  
	FString                                            SteamTicket;                                                // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithTwitchRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FClientLoginWithTwitchRequest : FPlayFabRequestCommon
{ 
	FString                                            AccessToken;                                                // 0x0008   (0x0010)  
	bool                                               CreateAccount;                                              // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0038   (0x0008)  
	FString                                            PlayerSecret;                                               // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ClientLoginWithXboxRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FClientLoginWithXboxRequest : FPlayFabRequestCommon
{ 
	bool                                               CreateAccount;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            EncryptedRequest;                                           // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0028   (0x0008)  
	FString                                            PlayerSecret;                                               // 0x0030   (0x0010)  
	FString                                            XboxToken;                                                  // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ClientMatchmakeRequest
/// Size: 0x0070 (112 bytes) (0x000008 - 0x000070) align 8 MaxSize: 0x0070
struct FClientMatchmakeRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildVersion;                                               // 0x0008   (0x0010)  
	FString                                            CharacterId;                                                // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
	FString                                            GAMEMODE;                                                   // 0x0030   (0x0010)  
	FString                                            LobbyId;                                                    // 0x0040   (0x0010)  
	ERegion                                            Region;                                                     // 0x0050   (0x0001)  
	bool                                               StartNewIfNoneFound;                                        // 0x0051   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0052   (0x0006)  MISSED
	FString                                            StatisticName;                                              // 0x0058   (0x0010)  
	class UPlayFabJsonObject*                          TagFilter;                                                  // 0x0068   (0x0008)  
};

/// Struct /Script/PlayFab.ClientOpenTradeRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FClientOpenTradeRequest : FPlayFabRequestCommon
{ 
	FString                                            AllowedPlayerIds;                                           // 0x0008   (0x0010)  
	FString                                            OfferedInventoryInstanceIds;                                // 0x0018   (0x0010)  
	FString                                            RequestedCatalogItemIds;                                    // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ClientPayForPurchaseRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FClientPayForPurchaseRequest : FPlayFabRequestCommon
{ 
	FString                                            Currency;                                                   // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            OrderId;                                                    // 0x0020   (0x0010)  
	FString                                            ProviderName;                                               // 0x0030   (0x0010)  
	FString                                            ProviderTransactionId;                                      // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ClientPurchaseItemRequest
/// Size: 0x0068 (104 bytes) (0x000008 - 0x000068) align 8 MaxSize: 0x0068
struct FClientPurchaseItemRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            CharacterId;                                                // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
	FString                                            ItemId;                                                     // 0x0030   (0x0010)  
	int32_t                                            Price;                                                      // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
	FString                                            StoreId;                                                    // 0x0048   (0x0010)  
	FString                                            VirtualCurrency;                                            // 0x0058   (0x0010)  
};

/// Struct /Script/PlayFab.ClientRedeemCouponRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FClientRedeemCouponRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            CharacterId;                                                // 0x0018   (0x0010)  
	FString                                            CouponCode;                                                 // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0038   (0x0008)  
};

/// Struct /Script/PlayFab.ClientRefreshPSNAuthTokenRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientRefreshPSNAuthTokenRequest : FPlayFabRequestCommon
{ 
	FString                                            AuthCode;                                                   // 0x0008   (0x0010)  
	int32_t                                            IssuerId;                                                   // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            RedirectUri;                                                // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ClientRegisterForIOSPushNotificationRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientRegisterForIOSPushNotificationRequest : FPlayFabRequestCommon
{ 
	FString                                            ConfirmationMessage;                                        // 0x0008   (0x0010)  
	FString                                            DeviceToken;                                                // 0x0018   (0x0010)  
	bool                                               SendPushNotificationConfirmation;                           // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ClientRegisterPlayFabUserRequest
/// Size: 0x0080 (128 bytes) (0x000008 - 0x000080) align 8 MaxSize: 0x0080
struct FClientRegisterPlayFabUserRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            DisplayName;                                                // 0x0010   (0x0010)  
	FString                                            Email;                                                      // 0x0020   (0x0010)  
	FString                                            EncryptedRequest;                                           // 0x0030   (0x0010)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0040   (0x0008)  
	FString                                            Password;                                                   // 0x0048   (0x0010)  
	FString                                            PlayerSecret;                                               // 0x0058   (0x0010)  
	bool                                               RequireBothUsernameAndEmail;                                // 0x0068   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0069   (0x0007)  MISSED
	FString                                            Username;                                                   // 0x0070   (0x0010)  
};

/// Struct /Script/PlayFab.ClientRemoveContactEmailRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientRemoveContactEmailRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientRemoveFriendRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientRemoveFriendRequest : FPlayFabRequestCommon
{ 
	FString                                            FriendPlayFabId;                                            // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientRemoveGenericIDRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientRemoveGenericIDRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          GenericId;                                                  // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientRemoveSharedGroupMembersRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientRemoveSharedGroupMembersRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabIds;                                                 // 0x0008   (0x0010)  
	FString                                            SharedGroupId;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientReportAdActivityRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FClientReportAdActivityRequest : FPlayFabRequestCommon
{ 
	EAdActivity                                        Activity;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            PlacementId;                                                // 0x0018   (0x0010)  
	FString                                            RewardId;                                                   // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ClientDeviceInfoRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientDeviceInfoRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          Info;                                                       // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientReportPlayerClientRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientReportPlayerClientRequest : FPlayFabRequestCommon
{ 
	FString                                            Comment;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            ReporteeId;                                                 // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ClientRestoreIOSPurchasesRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientRestoreIOSPurchasesRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            ReceiptData;                                                // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ClientRewardAdActivityRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientRewardAdActivityRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlacementId;                                                // 0x0010   (0x0010)  
	FString                                            RewardId;                                                   // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ClientSendAccountRecoveryEmailRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientSendAccountRecoveryEmailRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Email;                                                      // 0x0010   (0x0010)  
	FString                                            EmailTemplateId;                                            // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ClientSetFriendTagsRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientSetFriendTagsRequest : FPlayFabRequestCommon
{ 
	FString                                            FriendPlayFabId;                                            // 0x0008   (0x0010)  
	FString                                            Tags;                                                       // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientSetPlayerSecretRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientSetPlayerSecretRequest : FPlayFabRequestCommon
{ 
	FString                                            EncryptedRequest;                                           // 0x0008   (0x0010)  
	FString                                            PlayerSecret;                                               // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientStartPurchaseRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FClientStartPurchaseRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  Items;                                                      // 0x0020   (0x0010)  
	FString                                            StoreId;                                                    // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ClientSubtractUserVirtualCurrencyRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientSubtractUserVirtualCurrencyRequest : FPlayFabRequestCommon
{ 
	int32_t                                            Amount;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            VirtualCurrency;                                            // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ClientUnlinkAndroidDeviceIDRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientUnlinkAndroidDeviceIDRequest : FPlayFabRequestCommon
{ 
	FString                                            AndroidDeviceId;                                            // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUnlinkAppleRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientUnlinkAppleRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUnlinkCustomIDRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientUnlinkCustomIDRequest : FPlayFabRequestCommon
{ 
	FString                                            CustomId;                                                   // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUnlinkFacebookAccountRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientUnlinkFacebookAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUnlinkFacebookInstantGamesIdRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientUnlinkFacebookInstantGamesIdRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            FacebookInstantGamesId;                                     // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ClientUnlinkGameCenterAccountRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientUnlinkGameCenterAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUnlinkGoogleAccountRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientUnlinkGoogleAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUnlinkIOSDeviceIDRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientUnlinkIOSDeviceIDRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            DeviceID;                                                   // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ClientUnlinkKongregateAccountRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientUnlinkKongregateAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUnlinkNintendoServiceAccountRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientUnlinkNintendoServiceAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUnlinkNintendoSwitchDeviceIdRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientUnlinkNintendoSwitchDeviceIdRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            NintendoSwitchDeviceId;                                     // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ClientUnlinkOpenIdConnectRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientUnlinkOpenIdConnectRequest : FPlayFabRequestCommon
{ 
	FString                                            ConnectionId;                                               // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUnlinkPSNAccountRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientUnlinkPSNAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUnlinkSteamAccountRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientUnlinkSteamAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUnlinkTwitchAccountRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientUnlinkTwitchAccountRequest : FPlayFabRequestCommon
{ 
	FString                                            AccessToken;                                                // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUnlinkXboxAccountRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FClientUnlinkXboxAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUnlockContainerInstanceRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FClientUnlockContainerInstanceRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            CharacterId;                                                // 0x0018   (0x0010)  
	FString                                            ContainerItemInstanceId;                                    // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0038   (0x0008)  
	FString                                            KeyItemInstanceId;                                          // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ClientUnlockContainerItemRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FClientUnlockContainerItemRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            CharacterId;                                                // 0x0018   (0x0010)  
	FString                                            ContainerItemId;                                            // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0038   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUpdateAvatarUrlRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FClientUpdateAvatarUrlRequest : FPlayFabRequestCommon
{ 
	FString                                            ImageUrl;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ClientUpdateCharacterDataRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FClientUpdateCharacterDataRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          Data;                                                       // 0x0020   (0x0008)  
	FString                                            KeysToRemove;                                               // 0x0028   (0x0010)  
	EUserDataPermission                                Permission;                                                 // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ClientUpdateCharacterStatisticsRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FClientUpdateCharacterStatisticsRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CharacterStatistics;                                        // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
};

/// Struct /Script/PlayFab.ClientUpdatePlayerStatisticsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientUpdatePlayerStatisticsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  Statistics;                                                 // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ClientUpdateSharedGroupDataRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FClientUpdateSharedGroupDataRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Data;                                                       // 0x0010   (0x0008)  
	FString                                            KeysToRemove;                                               // 0x0018   (0x0010)  
	EUserDataPermission                                Permission;                                                 // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0029   (0x0007)  MISSED
	FString                                            SharedGroupId;                                              // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ClientUpdateUserDataRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FClientUpdateUserDataRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Data;                                                       // 0x0010   (0x0008)  
	FString                                            KeysToRemove;                                               // 0x0018   (0x0010)  
	EUserDataPermission                                Permission;                                                 // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ClientUpdateUserTitleDisplayNameRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FClientUpdateUserTitleDisplayNameRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            DisplayName;                                                // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ClientValidateAmazonReceiptRequest
/// Size: 0x0058 (88 bytes) (0x000008 - 0x000058) align 8 MaxSize: 0x0058
struct FClientValidateAmazonReceiptRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            CurrencyCode;                                               // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
	int32_t                                            PurchasePrice;                                              // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
	FString                                            ReceiptId;                                                  // 0x0038   (0x0010)  
	FString                                            UserId;                                                     // 0x0048   (0x0010)  
};

/// Struct /Script/PlayFab.ClientValidateGooglePlayPurchaseRequest
/// Size: 0x0058 (88 bytes) (0x000008 - 0x000058) align 8 MaxSize: 0x0058
struct FClientValidateGooglePlayPurchaseRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            CurrencyCode;                                               // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
	int32_t                                            PurchasePrice;                                              // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
	FString                                            ReceiptJson;                                                // 0x0038   (0x0010)  
	FString                                            Signature;                                                  // 0x0048   (0x0010)  
};

/// Struct /Script/PlayFab.ClientValidateIOSReceiptRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FClientValidateIOSReceiptRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            CurrencyCode;                                               // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
	int32_t                                            PurchasePrice;                                              // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
	FString                                            ReceiptData;                                                // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ClientValidateWindowsReceiptRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FClientValidateWindowsReceiptRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            CurrencyCode;                                               // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
	int32_t                                            PurchasePrice;                                              // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
	FString                                            Receipt;                                                    // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ClientWriteClientCharacterEventRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FClientWriteClientCharacterEventRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          Body;                                                       // 0x0008   (0x0008)  
	FString                                            CharacterId;                                                // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            EventName;                                                  // 0x0028   (0x0010)  
	FString                                            Timestamp;                                                  // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ClientWriteClientPlayerEventRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FClientWriteClientPlayerEventRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          Body;                                                       // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            EventName;                                                  // 0x0018   (0x0010)  
	FString                                            Timestamp;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ClientWriteTitleEventRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FClientWriteTitleEventRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          Body;                                                       // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            EventName;                                                  // 0x0018   (0x0010)  
	FString                                            Timestamp;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.CloudScriptExecuteCloudScriptResult
/// Size: 0x0060 (96 bytes) (0x000008 - 0x000060) align 8 MaxSize: 0x0060
struct FCloudScriptExecuteCloudScriptResult : FPlayFabResultCommon
{ 
	int32_t                                            APIRequestsIssued;                                          // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          Error;                                                      // 0x0010   (0x0008)  
	int32_t                                            ExecutionTimeSeconds;                                       // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            FunctionName;                                               // 0x0020   (0x0010)  
	class UPlayFabJsonObject*                          FunctionResult;                                             // 0x0030   (0x0008)  
	bool                                               FunctionResultTooLarge;                                     // 0x0038   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0039   (0x0003)  MISSED
	int32_t                                            HttpRequestsIssued;                                         // 0x003C   (0x0004)  
	TArray<class UPlayFabJsonObject*>                  Logs;                                                       // 0x0040   (0x0010)  
	bool                                               LogsTooLarge;                                               // 0x0050   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0051   (0x0003)  MISSED
	int32_t                                            MemoryConsumedBytes;                                        // 0x0054   (0x0004)  
	int32_t                                            ProcessorTimeSeconds;                                       // 0x0058   (0x0004)  
	int32_t                                            Revision;                                                   // 0x005C   (0x0004)  
};

/// Struct /Script/PlayFab.CloudScriptExecuteFunctionResult
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FCloudScriptExecuteFunctionResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Error;                                                      // 0x0008   (0x0008)  
	int32_t                                            ExecutionTimeMilliseconds;                                  // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            FunctionName;                                               // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          FunctionResult;                                             // 0x0028   (0x0008)  
	bool                                               FunctionResultTooLarge;                                     // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_7[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.CloudScriptGetFunctionResult
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FCloudScriptGetFunctionResult : FPlayFabResultCommon
{ 
	FString                                            ConnectionString;                                           // 0x0008   (0x0010)  
	FString                                            FunctionUrl;                                                // 0x0018   (0x0010)  
	FString                                            QueueName;                                                  // 0x0028   (0x0010)  
	FString                                            TriggerType;                                                // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.CloudScriptListFunctionsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FCloudScriptListFunctionsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Functions;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.CloudScriptListHttpFunctionsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FCloudScriptListHttpFunctionsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Functions;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.CloudScriptListQueuedFunctionsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FCloudScriptListQueuedFunctionsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Functions;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.CloudScriptEmptyResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FCloudScriptEmptyResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.CloudScriptExecuteEntityCloudScriptRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FCloudScriptExecuteEntityCloudScriptRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	FString                                            FunctionName;                                               // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          FunctionParameter;                                          // 0x0028   (0x0008)  
	bool                                               GeneratePlayStreamEvent;                                    // 0x0030   (0x0001)  
	ECloudScriptRevisionOption                         RevisionSelection;                                          // 0x0031   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0032   (0x0002)  MISSED
	int32_t                                            SpecificRevision;                                           // 0x0034   (0x0004)  
};

/// Struct /Script/PlayFab.CloudScriptExecuteFunctionRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FCloudScriptExecuteFunctionRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	FString                                            FunctionName;                                               // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          FunctionParameter;                                          // 0x0028   (0x0008)  
	bool                                               GeneratePlayStreamEvent;                                    // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.CloudScriptGetFunctionRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FCloudScriptGetFunctionRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            FunctionName;                                               // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.CloudScriptListFunctionsRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FCloudScriptListFunctionsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.CloudScriptPostFunctionResultForEntityTriggeredActionRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FCloudScriptPostFunctionResultForEntityTriggeredActionRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          FunctionResult;                                             // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.CloudScriptPostFunctionResultForFunctionExecutionRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FCloudScriptPostFunctionResultForFunctionExecutionRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          FunctionResult;                                             // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.CloudScriptPostFunctionResultForPlayerTriggeredActionRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FCloudScriptPostFunctionResultForPlayerTriggeredActionRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          FunctionResult;                                             // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          PlayerProfile;                                              // 0x0020   (0x0008)  
	class UPlayFabJsonObject*                          PlayStreamEventEnvelope;                                    // 0x0028   (0x0008)  
};

/// Struct /Script/PlayFab.CloudScriptPostFunctionResultForScheduledTaskRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FCloudScriptPostFunctionResultForScheduledTaskRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          FunctionResult;                                             // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          ScheduledTaskId;                                            // 0x0020   (0x0008)  
};

/// Struct /Script/PlayFab.CloudScriptRegisterHttpFunctionRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FCloudScriptRegisterHttpFunctionRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            FunctionName;                                               // 0x0010   (0x0010)  
	FString                                            FunctionUrl;                                                // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.CloudScriptRegisterQueuedFunctionRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FCloudScriptRegisterQueuedFunctionRequest : FPlayFabRequestCommon
{ 
	FString                                            ConnectionString;                                           // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            FunctionName;                                               // 0x0020   (0x0010)  
	FString                                            QueueName;                                                  // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.CloudScriptUnregisterFunctionRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FCloudScriptUnregisterFunctionRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            FunctionName;                                               // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.DataAbortFileUploadsResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FDataAbortFileUploadsResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0008   (0x0008)  
	int32_t                                            ProfileVersion;                                             // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.DataAbortFileUploadsRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FDataAbortFileUploadsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	FString                                            FileNames;                                                  // 0x0018   (0x0010)  
	int32_t                                            ProfileVersion;                                             // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.DataDeleteFilesResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FDataDeleteFilesResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0008   (0x0008)  
	int32_t                                            ProfileVersion;                                             // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.DataFinalizeFileUploadsResponse
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FDataFinalizeFileUploadsResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          MetaData;                                                   // 0x0010   (0x0008)  
	int32_t                                            ProfileVersion;                                             // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.DataGetFilesResponse
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FDataGetFilesResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          MetaData;                                                   // 0x0010   (0x0008)  
	int32_t                                            ProfileVersion;                                             // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.DataGetObjectsResponse
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FDataGetObjectsResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Objects;                                                    // 0x0010   (0x0008)  
	int32_t                                            ProfileVersion;                                             // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.DataInitiateFileUploadsResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FDataInitiateFileUploadsResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0008   (0x0008)  
	int32_t                                            ProfileVersion;                                             // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	TArray<class UPlayFabJsonObject*>                  UploadDetails;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.DataSetObjectsResponse
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FDataSetObjectsResponse : FPlayFabResultCommon
{ 
	int32_t                                            ProfileVersion;                                             // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<class UPlayFabJsonObject*>                  SetResults;                                                 // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.DataDeleteFilesRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FDataDeleteFilesRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	FString                                            FileNames;                                                  // 0x0018   (0x0010)  
	int32_t                                            ProfileVersion;                                             // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.DataFinalizeFileUploadsRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FDataFinalizeFileUploadsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	FString                                            FileNames;                                                  // 0x0018   (0x0010)  
	int32_t                                            ProfileVersion;                                             // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.DataGetFilesRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FDataGetFilesRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.DataGetObjectsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FDataGetObjectsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	bool                                               EscapeObject;                                               // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.DataInitiateFileUploadsRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FDataInitiateFileUploadsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	FString                                            FileNames;                                                  // 0x0018   (0x0010)  
	int32_t                                            ProfileVersion;                                             // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.DataSetObjectsRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FDataSetObjectsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	int32_t                                            ExpectedProfileVersion;                                     // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	TArray<class UPlayFabJsonObject*>                  Objects;                                                    // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyCreateDraftItemResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FEconomyCreateDraftItemResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Item;                                                       // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.EconomyCreateDraftItemRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FEconomyCreateDraftItemRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Item;                                                       // 0x0010   (0x0008)  
	bool                                               Publish;                                                    // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.EconomyCreateUploadUrlsResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FEconomyCreateUploadUrlsResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  UploadUrls;                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyCreateUploadUrlsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FEconomyCreateUploadUrlsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  Files;                                                      // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyDeleteEntityItemReviewsResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FEconomyDeleteEntityItemReviewsResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.EconomyDeleteItemResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FEconomyDeleteItemResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.EconomyGetCatalogConfigResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FEconomyGetCatalogConfigResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Config;                                                     // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.EconomyGetDraftItemResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FEconomyGetDraftItemResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Item;                                                       // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.EconomyGetDraftItemsResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FEconomyGetDraftItemsResponse : FPlayFabResultCommon
{ 
	FString                                            ContinuationToken;                                          // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Items;                                                      // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyGetEntityDraftItemsResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FEconomyGetEntityDraftItemsResponse : FPlayFabResultCommon
{ 
	FString                                            ContinuationToken;                                          // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Items;                                                      // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyGetEntityItemReviewResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FEconomyGetEntityItemReviewResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Review;                                                     // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.EconomyGetItemResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FEconomyGetItemResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Item;                                                       // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.EconomyGetItemModerationStateResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FEconomyGetItemModerationStateResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          State;                                                      // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.EconomyGetItemPublishStatusResponse
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FEconomyGetItemPublishStatusResponse : FPlayFabResultCommon
{ 
	EPublishResult                                     Result;                                                     // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            StatusMessage;                                              // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyGetItemReviewsResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FEconomyGetItemReviewsResponse : FPlayFabResultCommon
{ 
	FString                                            ContinuationToken;                                          // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Reviews;                                                    // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyGetItemReviewSummaryResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FEconomyGetItemReviewSummaryResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          LeastFavorableReview;                                       // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          MostFavorableReview;                                        // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Rating;                                                     // 0x0018   (0x0008)  
	int32_t                                            ReviewsCount;                                               // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.EconomyGetItemsResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FEconomyGetItemsResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Items;                                                      // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyPublishDraftItemResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FEconomyPublishDraftItemResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.EconomyReportItemResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FEconomyReportItemResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.EconomyReportItemReviewResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FEconomyReportItemReviewResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.EconomyReviewItemResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FEconomyReviewItemResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.EconomySearchItemsResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FEconomySearchItemsResponse : FPlayFabResultCommon
{ 
	FString                                            ContinuationToken;                                          // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Items;                                                      // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.EconomySetItemModerationStateResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FEconomySetItemModerationStateResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.EconomySubmitItemReviewVoteResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FEconomySubmitItemReviewVoteResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.EconomyTakedownItemReviewsResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FEconomyTakedownItemReviewsResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.EconomyUpdateCatalogConfigResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FEconomyUpdateCatalogConfigResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.EconomyUpdateDraftItemResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FEconomyUpdateDraftItemResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Item;                                                       // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.EconomyDeleteEntityItemReviewsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FEconomyDeleteEntityItemReviewsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.EconomyDeleteItemRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FEconomyDeleteItemRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          AlternateId;                                                // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0018   (0x0008)  
	FString                                            ID;                                                         // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyGetCatalogConfigRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FEconomyGetCatalogConfigRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.EconomyGetDraftItemRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FEconomyGetDraftItemRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          AlternateId;                                                // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0018   (0x0008)  
	FString                                            ID;                                                         // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyGetDraftItemsRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FEconomyGetDraftItemsRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  AlternateIds;                                               // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0020   (0x0008)  
	FString                                            Ids;                                                        // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyGetEntityDraftItemsRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FEconomyGetEntityDraftItemsRequest : FPlayFabRequestCommon
{ 
	FString                                            ContinuationToken;                                          // 0x0008   (0x0010)  
	int32_t                                            Count;                                                      // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0028   (0x0008)  
};

/// Struct /Script/PlayFab.EconomyGetEntityItemReviewRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FEconomyGetEntityItemReviewRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          AlternateId;                                                // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0018   (0x0008)  
	FString                                            ID;                                                         // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyGetItemRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FEconomyGetItemRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          AlternateId;                                                // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0018   (0x0008)  
	FString                                            ID;                                                         // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyGetItemModerationStateRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FEconomyGetItemModerationStateRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          AlternateId;                                                // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            ID;                                                         // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyGetItemPublishStatusRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FEconomyGetItemPublishStatusRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          AlternateId;                                                // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0018   (0x0008)  
	FString                                            ID;                                                         // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyGetItemReviewsRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FEconomyGetItemReviewsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          AlternateId;                                                // 0x0008   (0x0008)  
	FString                                            ContinuationToken;                                          // 0x0010   (0x0010)  
	int32_t                                            Count;                                                      // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
	FString                                            ID;                                                         // 0x0030   (0x0010)  
	FString                                            OrderBy;                                                    // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyGetItemReviewSummaryRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FEconomyGetItemReviewSummaryRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          AlternateId;                                                // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            ID;                                                         // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyGetItemsRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FEconomyGetItemsRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  AlternateIds;                                               // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0020   (0x0008)  
	FString                                            Ids;                                                        // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyPublishDraftItemRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FEconomyPublishDraftItemRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          AlternateId;                                                // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0018   (0x0008)  
	FString                                            ETag;                                                       // 0x0020   (0x0010)  
	FString                                            ID;                                                         // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyReportItemRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FEconomyReportItemRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          AlternateId;                                                // 0x0008   (0x0008)  
	EConcernCategory                                   ConcernCategory;                                            // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0020   (0x0008)  
	FString                                            ID;                                                         // 0x0028   (0x0010)  
	FString                                            Reason;                                                     // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyReportItemReviewRequest
/// Size: 0x0058 (88 bytes) (0x000008 - 0x000058) align 8 MaxSize: 0x0058
struct FEconomyReportItemReviewRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          AlternateId;                                                // 0x0008   (0x0008)  
	EConcernCategory                                   ConcernCategory;                                            // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0020   (0x0008)  
	FString                                            ItemId;                                                     // 0x0028   (0x0010)  
	FString                                            Reason;                                                     // 0x0038   (0x0010)  
	FString                                            ReviewId;                                                   // 0x0048   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyReviewItemRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FEconomyReviewItemRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          AlternateId;                                                // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0018   (0x0008)  
	FString                                            ID;                                                         // 0x0020   (0x0010)  
	class UPlayFabJsonObject*                          Review;                                                     // 0x0030   (0x0008)  
};

/// Struct /Script/PlayFab.EconomySearchItemsRequest
/// Size: 0x0070 (112 bytes) (0x000008 - 0x000070) align 8 MaxSize: 0x0070
struct FEconomySearchItemsRequest : FPlayFabRequestCommon
{ 
	FString                                            ContinuationToken;                                          // 0x0008   (0x0010)  
	int32_t                                            Count;                                                      // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0028   (0x0008)  
	FString                                            Filter;                                                     // 0x0030   (0x0010)  
	FString                                            OrderBy;                                                    // 0x0040   (0x0010)  
	FString                                            Search;                                                     // 0x0050   (0x0010)  
	FString                                            Select;                                                     // 0x0060   (0x0010)  
};

/// Struct /Script/PlayFab.EconomySetItemModerationStateRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FEconomySetItemModerationStateRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          AlternateId;                                                // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            ID;                                                         // 0x0018   (0x0010)  
	FString                                            Reason;                                                     // 0x0028   (0x0010)  
	EModerationStatus                                  Status;                                                     // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.EconomySubmitItemReviewVoteRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FEconomySubmitItemReviewVoteRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          AlternateId;                                                // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0018   (0x0008)  
	FString                                            ItemId;                                                     // 0x0020   (0x0010)  
	FString                                            ReviewId;                                                   // 0x0030   (0x0010)  
	EHelpfulnessVote                                   Vote;                                                       // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0041   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.EconomyTakedownItemReviewsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FEconomyTakedownItemReviewsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  Reviews;                                                    // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.EconomyUpdateCatalogConfigRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FEconomyUpdateCatalogConfigRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          Config;                                                     // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.EconomyUpdateDraftItemRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FEconomyUpdateDraftItemRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Item;                                                       // 0x0010   (0x0008)  
	bool                                               Publish;                                                    // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.EventsWriteEventsResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FEventsWriteEventsResponse : FPlayFabResultCommon
{ 
	FString                                            AssignedEventIds;                                           // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.EventsWriteEventsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FEventsWriteEventsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  Events;                                                     // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationCreateExclusionGroupResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FExperimentationCreateExclusionGroupResult : FPlayFabResultCommon
{ 
	FString                                            ExclusionGroupId;                                           // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationCreateExclusionGroupRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FExperimentationCreateExclusionGroupRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Description;                                                // 0x0010   (0x0010)  
	FString                                            Name;                                                       // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationCreateExperimentResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FExperimentationCreateExperimentResult : FPlayFabResultCommon
{ 
	FString                                            ExperimentId;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationCreateExperimentRequest
/// Size: 0x0098 (152 bytes) (0x000008 - 0x000098) align 8 MaxSize: 0x0098
struct FExperimentationCreateExperimentRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Description;                                                // 0x0010   (0x0010)  
	FString                                            EndDate;                                                    // 0x0020   (0x0010)  
	FString                                            ExclusionGroupId;                                           // 0x0030   (0x0010)  
	int32_t                                            ExclusionGroupTrafficAllocation;                            // 0x0040   (0x0004)  
	EExperimentType                                    ExperimentType;                                             // 0x0044   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0045   (0x0003)  MISSED
	FString                                            Name;                                                       // 0x0048   (0x0010)  
	FString                                            SegmentId;                                                  // 0x0058   (0x0010)  
	FString                                            StartDate;                                                  // 0x0068   (0x0010)  
	FString                                            TitlePlayerAccountTestIds;                                  // 0x0078   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Variants;                                                   // 0x0088   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationEmptyResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FExperimentationEmptyResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ExperimentationGetExclusionGroupsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FExperimentationGetExclusionGroupsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  ExclusionGroups;                                            // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationGetExclusionGroupTrafficResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FExperimentationGetExclusionGroupTrafficResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  TrafficAllocations;                                         // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationGetExperimentsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FExperimentationGetExperimentsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Experiments;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationGetLatestScorecardResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FExperimentationGetLatestScorecardResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Scorecard;                                                  // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ExperimentationGetTreatmentAssignmentResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FExperimentationGetTreatmentAssignmentResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          TreatmentAssignment;                                        // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ExperimentationDeleteExclusionGroupRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FExperimentationDeleteExclusionGroupRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            ExclusionGroupId;                                           // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationDeleteExperimentRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FExperimentationDeleteExperimentRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            ExperimentId;                                               // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationGetExclusionGroupsRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FExperimentationGetExclusionGroupsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ExperimentationGetExclusionGroupTrafficRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FExperimentationGetExclusionGroupTrafficRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            ExclusionGroupId;                                           // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationGetExperimentsRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FExperimentationGetExperimentsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ExperimentationGetLatestScorecardRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FExperimentationGetLatestScorecardRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            ExperimentId;                                               // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationGetTreatmentAssignmentRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FExperimentationGetTreatmentAssignmentRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.ExperimentationStartExperimentRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FExperimentationStartExperimentRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            ExperimentId;                                               // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationStopExperimentRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FExperimentationStopExperimentRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            ExperimentId;                                               // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationUpdateExclusionGroupRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FExperimentationUpdateExclusionGroupRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Description;                                                // 0x0010   (0x0010)  
	FString                                            ExclusionGroupId;                                           // 0x0020   (0x0010)  
	FString                                            Name;                                                       // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ExperimentationUpdateExperimentRequest
/// Size: 0x00A8 (168 bytes) (0x000008 - 0x0000A8) align 8 MaxSize: 0x00A8
struct FExperimentationUpdateExperimentRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Description;                                                // 0x0010   (0x0010)  
	FString                                            EndDate;                                                    // 0x0020   (0x0010)  
	FString                                            ExclusionGroupId;                                           // 0x0030   (0x0010)  
	int32_t                                            ExclusionGroupTrafficAllocation;                            // 0x0040   (0x0004)  
	EExperimentType                                    ExperimentType;                                             // 0x0044   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0045   (0x0003)  MISSED
	FString                                            ID;                                                         // 0x0048   (0x0010)  
	FString                                            Name;                                                       // 0x0058   (0x0010)  
	FString                                            SegmentId;                                                  // 0x0068   (0x0010)  
	FString                                            StartDate;                                                  // 0x0078   (0x0010)  
	FString                                            TitlePlayerAccountTestIds;                                  // 0x0088   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Variants;                                                   // 0x0098   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsEmptyResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FGroupsEmptyResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.GroupsAcceptGroupApplicationRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FGroupsAcceptGroupApplicationRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsAcceptGroupInvitationRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FGroupsAcceptGroupInvitationRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsAddMembersRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FGroupsAddMembersRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0010   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  Members;                                                    // 0x0018   (0x0010)  
	FString                                            RoleId;                                                     // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsApplyToGroupResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FGroupsApplyToGroupResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0008   (0x0008)  
	FString                                            Expires;                                                    // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0020   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsApplyToGroupRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FGroupsApplyToGroupRequest : FPlayFabRequestCommon
{ 
	bool                                               AutoAcceptOutstandingInvite;                                // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0020   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsBlockEntityRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FGroupsBlockEntityRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsChangeMemberRoleRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FGroupsChangeMemberRoleRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            DestinationRoleId;                                          // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0020   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  Members;                                                    // 0x0028   (0x0010)  
	FString                                            OriginRoleId;                                               // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsCreateGroupResponse
/// Size: 0x0060 (96 bytes) (0x000008 - 0x000060) align 8 MaxSize: 0x0060
struct FGroupsCreateGroupResponse : FPlayFabResultCommon
{ 
	FString                                            AdminRoleId;                                                // 0x0008   (0x0010)  
	FString                                            Created;                                                    // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0028   (0x0008)  
	FString                                            GroupName;                                                  // 0x0030   (0x0010)  
	FString                                            MemberRoleId;                                               // 0x0040   (0x0010)  
	int32_t                                            ProfileVersion;                                             // 0x0050   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0054   (0x0004)  MISSED
	class UPlayFabJsonObject*                          Roles;                                                      // 0x0058   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsCreateGroupRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FGroupsCreateGroupRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	FString                                            GroupName;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsCreateGroupRoleResponse
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FGroupsCreateGroupRoleResponse : FPlayFabResultCommon
{ 
	int32_t                                            ProfileVersion;                                             // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            RoleId;                                                     // 0x0010   (0x0010)  
	FString                                            RoleName;                                                   // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsCreateGroupRoleRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FGroupsCreateGroupRoleRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0010   (0x0008)  
	FString                                            RoleId;                                                     // 0x0018   (0x0010)  
	FString                                            RoleName;                                                   // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsGetGroupResponse
/// Size: 0x0060 (96 bytes) (0x000008 - 0x000060) align 8 MaxSize: 0x0060
struct FGroupsGetGroupResponse : FPlayFabResultCommon
{ 
	FString                                            AdminRoleId;                                                // 0x0008   (0x0010)  
	FString                                            Created;                                                    // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0028   (0x0008)  
	FString                                            GroupName;                                                  // 0x0030   (0x0010)  
	FString                                            MemberRoleId;                                               // 0x0040   (0x0010)  
	int32_t                                            ProfileVersion;                                             // 0x0050   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0054   (0x0004)  MISSED
	class UPlayFabJsonObject*                          Roles;                                                      // 0x0058   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsInviteToGroupResponse
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FGroupsInviteToGroupResponse : FPlayFabResultCommon
{ 
	FString                                            Expires;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          InvitedByEntity;                                            // 0x0020   (0x0008)  
	class UPlayFabJsonObject*                          InvitedEntity;                                              // 0x0028   (0x0008)  
	FString                                            RoleId;                                                     // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsIsMemberResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FGroupsIsMemberResponse : FPlayFabResultCommon
{ 
	bool                                               IsMember;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.GroupsListGroupApplicationsResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FGroupsListGroupApplicationsResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Applications;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsListGroupBlocksResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FGroupsListGroupBlocksResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  BlockedEntities;                                            // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsListGroupInvitationsResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FGroupsListGroupInvitationsResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Invitations;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsListGroupMembersResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FGroupsListGroupMembersResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Members;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsListMembershipResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FGroupsListMembershipResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Groups;                                                     // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsListMembershipOpportunitiesResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FGroupsListMembershipOpportunitiesResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Applications;                                               // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Invitations;                                                // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsUpdateGroupResponse
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FGroupsUpdateGroupResponse : FPlayFabResultCommon
{ 
	FString                                            OperationReason;                                            // 0x0008   (0x0010)  
	int32_t                                            ProfileVersion;                                             // 0x0018   (0x0004)  
	EOperationTypes                                    SetResult;                                                  // 0x001C   (0x0001)  
	unsigned char                                      UnknownData00_7[0x3];                                       // 0x001D   (0x0003)  MISSED
};

/// Struct /Script/PlayFab.GroupsUpdateGroupRoleResponse
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FGroupsUpdateGroupRoleResponse : FPlayFabResultCommon
{ 
	FString                                            OperationReason;                                            // 0x0008   (0x0010)  
	int32_t                                            ProfileVersion;                                             // 0x0018   (0x0004)  
	EOperationTypes                                    SetResult;                                                  // 0x001C   (0x0001)  
	unsigned char                                      UnknownData00_7[0x3];                                       // 0x001D   (0x0003)  MISSED
};

/// Struct /Script/PlayFab.GroupsDeleteGroupRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FGroupsDeleteGroupRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsDeleteRoleRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FGroupsDeleteRoleRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0010   (0x0008)  
	FString                                            RoleId;                                                     // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsGetGroupRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FGroupsGetGroupRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0010   (0x0008)  
	FString                                            GroupName;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsInviteToGroupRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FGroupsInviteToGroupRequest : FPlayFabRequestCommon
{ 
	bool                                               AutoAcceptOutstandingApplication;                           // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0020   (0x0008)  
	FString                                            RoleId;                                                     // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsIsMemberRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FGroupsIsMemberRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0018   (0x0008)  
	FString                                            RoleId;                                                     // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsListGroupApplicationsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FGroupsListGroupApplicationsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsListGroupBlocksRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FGroupsListGroupBlocksRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsListGroupInvitationsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FGroupsListGroupInvitationsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsListGroupMembersRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FGroupsListGroupMembersRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsListMembershipRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FGroupsListMembershipRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsListMembershipOpportunitiesRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FGroupsListMembershipOpportunitiesRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsRemoveGroupApplicationRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FGroupsRemoveGroupApplicationRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsRemoveGroupInvitationRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FGroupsRemoveGroupInvitationRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsRemoveMembersRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FGroupsRemoveMembersRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0010   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  Members;                                                    // 0x0018   (0x0010)  
	FString                                            RoleId;                                                     // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsUnblockEntityRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FGroupsUnblockEntityRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          Group;                                                      // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.GroupsUpdateGroupRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FGroupsUpdateGroupRequest : FPlayFabRequestCommon
{ 
	FString                                            AdminRoleId;                                                // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	int32_t                                            ExpectedProfileVersion;                                     // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	class UPlayFabJsonObject*                          Group;                                                      // 0x0028   (0x0008)  
	FString                                            GroupName;                                                  // 0x0030   (0x0010)  
	FString                                            MemberRoleId;                                               // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.GroupsUpdateGroupRoleRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FGroupsUpdateGroupRoleRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            ExpectedProfileVersion;                                     // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	class UPlayFabJsonObject*                          Group;                                                      // 0x0018   (0x0008)  
	FString                                            RoleId;                                                     // 0x0020   (0x0010)  
	FString                                            RoleName;                                                   // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.InsightsInsightsGetDetailsResponse
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FInsightsInsightsGetDetailsResponse : FPlayFabResultCommon
{ 
	int32_t                                            DataUsageMb;                                                // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            ErrorMessage;                                               // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          Limits;                                                     // 0x0020   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  PendingOperations;                                          // 0x0028   (0x0010)  
	int32_t                                            PerformanceLevel;                                           // 0x0038   (0x0004)  
	int32_t                                            RetentionDays;                                              // 0x003C   (0x0004)  
};

/// Struct /Script/PlayFab.InsightsInsightsGetLimitsResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FInsightsInsightsGetLimitsResponse : FPlayFabResultCommon
{ 
	int32_t                                            DefaultPerformanceLevel;                                    // 0x0008   (0x0004)  
	int32_t                                            DefaultStorageRetentionDays;                                // 0x000C   (0x0004)  
	int32_t                                            StorageMaxRetentionDays;                                    // 0x0010   (0x0004)  
	int32_t                                            StorageMinRetentionDays;                                    // 0x0014   (0x0004)  
	TArray<class UPlayFabJsonObject*>                  SubMeters;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.InsightsInsightsGetOperationStatusResponse
/// Size: 0x0080 (128 bytes) (0x000008 - 0x000080) align 8 MaxSize: 0x0080
struct FInsightsInsightsGetOperationStatusResponse : FPlayFabResultCommon
{ 
	FString                                            Message;                                                    // 0x0008   (0x0010)  
	FString                                            OperationCompletedTime;                                     // 0x0018   (0x0010)  
	FString                                            OperationId;                                                // 0x0028   (0x0010)  
	FString                                            OperationLastUpdated;                                       // 0x0038   (0x0010)  
	FString                                            OperationStartedTime;                                       // 0x0048   (0x0010)  
	FString                                            OperationType;                                              // 0x0058   (0x0010)  
	int32_t                                            OperationValue;                                             // 0x0068   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x006C   (0x0004)  MISSED
	FString                                            Status;                                                     // 0x0070   (0x0010)  
};

/// Struct /Script/PlayFab.InsightsInsightsGetPendingOperationsResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FInsightsInsightsGetPendingOperationsResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  PendingOperations;                                          // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.InsightsInsightsOperationResponse
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FInsightsInsightsOperationResponse : FPlayFabResultCommon
{ 
	FString                                            Message;                                                    // 0x0008   (0x0010)  
	FString                                            OperationId;                                                // 0x0018   (0x0010)  
	FString                                            OperationType;                                              // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.InsightsInsightsEmptyRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FInsightsInsightsEmptyRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.InsightsInsightsGetOperationStatusRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FInsightsInsightsGetOperationStatusRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            OperationId;                                                // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.InsightsInsightsGetPendingOperationsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FInsightsInsightsGetPendingOperationsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            OperationType;                                              // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.InsightsInsightsSetPerformanceRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FInsightsInsightsSetPerformanceRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            PerformanceLevel;                                           // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.InsightsInsightsSetStorageRetentionRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FInsightsInsightsSetStorageRetentionRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            RetentionDays;                                              // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.LocalizationGetLanguageListResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FLocalizationGetLanguageListResponse : FPlayFabResultCommon
{ 
	FString                                            LanguageList;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.LocalizationGetLanguageListRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FLocalizationGetLanguageListRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.MatchmakerAuthUserResponse
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMatchmakerAuthUserResponse : FPlayFabResultCommon
{ 
	bool                                               Authorized;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.MatchmakerAuthUserRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FMatchmakerAuthUserRequest : FPlayFabRequestCommon
{ 
	FString                                            AuthorizationTicket;                                        // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.MatchmakerPlayerJoinedResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FMatchmakerPlayerJoinedResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.MatchmakerPlayerLeftResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FMatchmakerPlayerLeftResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.MatchmakerUserInfoResponse
/// Size: 0x0070 (112 bytes) (0x000008 - 0x000070) align 8 MaxSize: 0x0070
struct FMatchmakerUserInfoResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Inventory;                                                  // 0x0008   (0x0010)  
	bool                                               IsDeveloper;                                                // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
	FString                                            SteamId;                                                    // 0x0030   (0x0010)  
	FString                                            TitleDisplayName;                                           // 0x0040   (0x0010)  
	FString                                            Username;                                                   // 0x0050   (0x0010)  
	class UPlayFabJsonObject*                          VirtualCurrency;                                            // 0x0060   (0x0008)  
	class UPlayFabJsonObject*                          VirtualCurrencyRechargeTimes;                               // 0x0068   (0x0008)  
};

/// Struct /Script/PlayFab.MatchmakerPlayerJoinedRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMatchmakerPlayerJoinedRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            LobbyId;                                                    // 0x0010   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MatchmakerPlayerLeftRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMatchmakerPlayerLeftRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            LobbyId;                                                    // 0x0010   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MatchmakerUserInfoRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMatchmakerUserInfoRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            MinCatalogVersion;                                          // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerCancelAllMatchmakingTicketsForPlayerResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FMultiplayerCancelAllMatchmakingTicketsForPlayerResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.MultiplayerCancelAllMatchmakingTicketsForPlayerRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	FString                                            QueueName;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerCancelAllServerBackfillTicketsForPlayerResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FMultiplayerCancelAllServerBackfillTicketsForPlayerResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.MultiplayerCancelAllServerBackfillTicketsForPlayerRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	FString                                            QueueName;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerCancelMatchmakingTicketResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FMultiplayerCancelMatchmakingTicketResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.MultiplayerCancelMatchmakingTicketRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerCancelMatchmakingTicketRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            QueueName;                                                  // 0x0010   (0x0010)  
	FString                                            TicketId;                                                   // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerCancelServerBackfillTicketResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FMultiplayerCancelServerBackfillTicketResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.MultiplayerCancelServerBackfillTicketRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerCancelServerBackfillTicketRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            QueueName;                                                  // 0x0010   (0x0010)  
	FString                                            TicketId;                                                   // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerBuildAliasDetailsResponse
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FMultiplayerBuildAliasDetailsResponse : FPlayFabResultCommon
{ 
	FString                                            AliasId;                                                    // 0x0008   (0x0010)  
	FString                                            AliasName;                                                  // 0x0018   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  BuildSelectionCriteria;                                     // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerCreateBuildAliasRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerCreateBuildAliasRequest : FPlayFabRequestCommon
{ 
	FString                                            AliasName;                                                  // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  BuildSelectionCriteria;                                     // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerCreateBuildWithCustomContainerResponse
/// Size: 0x00E8 (232 bytes) (0x000008 - 0x0000E8) align 8 MaxSize: 0x00E8
struct FMultiplayerCreateBuildWithCustomContainerResponse : FPlayFabResultCommon
{ 
	bool                                               AreAssetsReadonly;                                          // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            BuildId;                                                    // 0x0010   (0x0010)  
	FString                                            BuildName;                                                  // 0x0020   (0x0010)  
	EContainerFlavor                                   ContainerFlavor;                                            // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0031   (0x0007)  MISSED
	FString                                            ContainerRunCommand;                                        // 0x0038   (0x0010)  
	FString                                            CreationTime;                                               // 0x0048   (0x0010)  
	class UPlayFabJsonObject*                          CustomGameContainerImage;                                   // 0x0058   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  GameAssetReferences;                                        // 0x0060   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  GameCertificateReferences;                                  // 0x0070   (0x0010)  
	class UPlayFabJsonObject*                          LinuxInstrumentationConfiguration;                          // 0x0080   (0x0008)  
	class UPlayFabJsonObject*                          MetaData;                                                   // 0x0088   (0x0008)  
	class UPlayFabJsonObject*                          MonitoringApplicationConfiguration;                         // 0x0090   (0x0008)  
	int32_t                                            MultiplayerServerCountPerVm;                                // 0x0098   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x009C   (0x0004)  MISSED
	FString                                            OsPlatform;                                                 // 0x00A0   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Ports;                                                      // 0x00B0   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  RegionConfigurations;                                       // 0x00C0   (0x0010)  
	FString                                            ServerType;                                                 // 0x00D0   (0x0010)  
	bool                                               UseStreamingForAssetDownloads;                              // 0x00E0   (0x0001)  
	EAzureVmSize                                       VmSize;                                                     // 0x00E1   (0x0001)  
	unsigned char                                      UnknownData03_7[0x6];                                       // 0x00E2   (0x0006)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerCreateBuildWithCustomContainerRequest
/// Size: 0x00B0 (176 bytes) (0x000008 - 0x0000B0) align 8 MaxSize: 0x00B0
struct FMultiplayerCreateBuildWithCustomContainerRequest : FPlayFabRequestCommon
{ 
	bool                                               AreAssetsReadonly;                                          // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            BuildName;                                                  // 0x0010   (0x0010)  
	EContainerFlavor                                   ContainerFlavor;                                            // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0021   (0x0007)  MISSED
	class UPlayFabJsonObject*                          ContainerImageReference;                                    // 0x0028   (0x0008)  
	FString                                            ContainerRunCommand;                                        // 0x0030   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0040   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  GameAssetReferences;                                        // 0x0048   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  GameCertificateReferences;                                  // 0x0058   (0x0010)  
	class UPlayFabJsonObject*                          LinuxInstrumentationConfiguration;                          // 0x0068   (0x0008)  
	class UPlayFabJsonObject*                          MetaData;                                                   // 0x0070   (0x0008)  
	class UPlayFabJsonObject*                          MonitoringApplicationConfiguration;                         // 0x0078   (0x0008)  
	int32_t                                            MultiplayerServerCountPerVm;                                // 0x0080   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0084   (0x0004)  MISSED
	TArray<class UPlayFabJsonObject*>                  Ports;                                                      // 0x0088   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  RegionConfigurations;                                       // 0x0098   (0x0010)  
	bool                                               UseStreamingForAssetDownloads;                              // 0x00A8   (0x0001)  
	EAzureVmSize                                       VmSize;                                                     // 0x00A9   (0x0001)  
	unsigned char                                      UnknownData03_7[0x6];                                       // 0x00AA   (0x0006)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerCreateBuildWithManagedContainerResponse
/// Size: 0x00F0 (240 bytes) (0x000008 - 0x0000F0) align 8 MaxSize: 0x00F0
struct FMultiplayerCreateBuildWithManagedContainerResponse : FPlayFabResultCommon
{ 
	bool                                               AreAssetsReadonly;                                          // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            BuildId;                                                    // 0x0010   (0x0010)  
	FString                                            BuildName;                                                  // 0x0020   (0x0010)  
	EContainerFlavor                                   ContainerFlavor;                                            // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0031   (0x0007)  MISSED
	FString                                            CreationTime;                                               // 0x0038   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  GameAssetReferences;                                        // 0x0048   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  GameCertificateReferences;                                  // 0x0058   (0x0010)  
	FString                                            GameWorkingDirectory;                                       // 0x0068   (0x0010)  
	class UPlayFabJsonObject*                          InstrumentationConfiguration;                               // 0x0078   (0x0008)  
	class UPlayFabJsonObject*                          MetaData;                                                   // 0x0080   (0x0008)  
	class UPlayFabJsonObject*                          MonitoringApplicationConfiguration;                         // 0x0088   (0x0008)  
	int32_t                                            MultiplayerServerCountPerVm;                                // 0x0090   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0094   (0x0004)  MISSED
	FString                                            OsPlatform;                                                 // 0x0098   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Ports;                                                      // 0x00A8   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  RegionConfigurations;                                       // 0x00B8   (0x0010)  
	FString                                            ServerType;                                                 // 0x00C8   (0x0010)  
	FString                                            StartMultiplayerServerCommand;                              // 0x00D8   (0x0010)  
	bool                                               UseStreamingForAssetDownloads;                              // 0x00E8   (0x0001)  
	EAzureVmSize                                       VmSize;                                                     // 0x00E9   (0x0001)  
	unsigned char                                      UnknownData03_7[0x6];                                       // 0x00EA   (0x0006)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerCreateBuildWithManagedContainerRequest
/// Size: 0x00C0 (192 bytes) (0x000008 - 0x0000C0) align 8 MaxSize: 0x00C0
struct FMultiplayerCreateBuildWithManagedContainerRequest : FPlayFabRequestCommon
{ 
	bool                                               AreAssetsReadonly;                                          // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            BuildName;                                                  // 0x0010   (0x0010)  
	EContainerFlavor                                   ContainerFlavor;                                            // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0021   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  GameAssetReferences;                                        // 0x0030   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  GameCertificateReferences;                                  // 0x0040   (0x0010)  
	FString                                            GameWorkingDirectory;                                       // 0x0050   (0x0010)  
	class UPlayFabJsonObject*                          InstrumentationConfiguration;                               // 0x0060   (0x0008)  
	class UPlayFabJsonObject*                          MetaData;                                                   // 0x0068   (0x0008)  
	class UPlayFabJsonObject*                          MonitoringApplicationConfiguration;                         // 0x0070   (0x0008)  
	int32_t                                            MultiplayerServerCountPerVm;                                // 0x0078   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x007C   (0x0004)  MISSED
	TArray<class UPlayFabJsonObject*>                  Ports;                                                      // 0x0080   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  RegionConfigurations;                                       // 0x0090   (0x0010)  
	FString                                            StartMultiplayerServerCommand;                              // 0x00A0   (0x0010)  
	bool                                               UseStreamingForAssetDownloads;                              // 0x00B0   (0x0001)  
	EAzureVmSize                                       VmSize;                                                     // 0x00B1   (0x0001)  
	unsigned char                                      UnknownData03_6[0x6];                                       // 0x00B2   (0x0006)  MISSED
	class UPlayFabJsonObject*                          WindowsCrashDumpConfiguration;                              // 0x00B8   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerCreateBuildWithProcessBasedServerResponse
/// Size: 0x00F8 (248 bytes) (0x000008 - 0x0000F8) align 8 MaxSize: 0x00F8
struct FMultiplayerCreateBuildWithProcessBasedServerResponse : FPlayFabResultCommon
{ 
	bool                                               AreAssetsReadonly;                                          // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            BuildId;                                                    // 0x0010   (0x0010)  
	FString                                            BuildName;                                                  // 0x0020   (0x0010)  
	EContainerFlavor                                   ContainerFlavor;                                            // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0031   (0x0007)  MISSED
	FString                                            CreationTime;                                               // 0x0038   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  GameAssetReferences;                                        // 0x0048   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  GameCertificateReferences;                                  // 0x0058   (0x0010)  
	FString                                            GameWorkingDirectory;                                       // 0x0068   (0x0010)  
	class UPlayFabJsonObject*                          InstrumentationConfiguration;                               // 0x0078   (0x0008)  
	bool                                               IsOSPreview;                                                // 0x0080   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0081   (0x0007)  MISSED
	class UPlayFabJsonObject*                          MetaData;                                                   // 0x0088   (0x0008)  
	class UPlayFabJsonObject*                          MonitoringApplicationConfiguration;                         // 0x0090   (0x0008)  
	int32_t                                            MultiplayerServerCountPerVm;                                // 0x0098   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x009C   (0x0004)  MISSED
	FString                                            OsPlatform;                                                 // 0x00A0   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Ports;                                                      // 0x00B0   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  RegionConfigurations;                                       // 0x00C0   (0x0010)  
	FString                                            ServerType;                                                 // 0x00D0   (0x0010)  
	FString                                            StartMultiplayerServerCommand;                              // 0x00E0   (0x0010)  
	bool                                               UseStreamingForAssetDownloads;                              // 0x00F0   (0x0001)  
	EAzureVmSize                                       VmSize;                                                     // 0x00F1   (0x0001)  
	unsigned char                                      UnknownData04_7[0x6];                                       // 0x00F2   (0x0006)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerCreateBuildWithProcessBasedServerRequest
/// Size: 0x00C8 (200 bytes) (0x000008 - 0x0000C8) align 8 MaxSize: 0x00C8
struct FMultiplayerCreateBuildWithProcessBasedServerRequest : FPlayFabRequestCommon
{ 
	bool                                               AreAssetsReadonly;                                          // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            BuildName;                                                  // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  GameAssetReferences;                                        // 0x0028   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  GameCertificateReferences;                                  // 0x0038   (0x0010)  
	FString                                            GameWorkingDirectory;                                       // 0x0048   (0x0010)  
	class UPlayFabJsonObject*                          InstrumentationConfiguration;                               // 0x0058   (0x0008)  
	bool                                               IsOSPreview;                                                // 0x0060   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0061   (0x0007)  MISSED
	class UPlayFabJsonObject*                          MetaData;                                                   // 0x0068   (0x0008)  
	class UPlayFabJsonObject*                          MonitoringApplicationConfiguration;                         // 0x0070   (0x0008)  
	int32_t                                            MultiplayerServerCountPerVm;                                // 0x0078   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x007C   (0x0004)  MISSED
	FString                                            OsPlatform;                                                 // 0x0080   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Ports;                                                      // 0x0090   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  RegionConfigurations;                                       // 0x00A0   (0x0010)  
	FString                                            StartMultiplayerServerCommand;                              // 0x00B0   (0x0010)  
	bool                                               UseStreamingForAssetDownloads;                              // 0x00C0   (0x0001)  
	EAzureVmSize                                       VmSize;                                                     // 0x00C1   (0x0001)  
	unsigned char                                      UnknownData03_7[0x6];                                       // 0x00C2   (0x0006)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerCreateLobbyResult
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMultiplayerCreateLobbyResult : FPlayFabResultCommon
{ 
	FString                                            ConnectionString;                                           // 0x0008   (0x0010)  
	FString                                            LobbyId;                                                    // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerCreateLobbyRequest
/// Size: 0x0058 (88 bytes) (0x000008 - 0x000058) align 8 MaxSize: 0x0058
struct FMultiplayerCreateLobbyRequest : FPlayFabRequestCommon
{ 
	EAccessPolicy                                      AccessPolicy;                                               // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          LobbyData;                                                  // 0x0018   (0x0008)  
	int32_t                                            MaxPlayers;                                                 // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	TArray<class UPlayFabJsonObject*>                  Members;                                                    // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          Owner;                                                      // 0x0038   (0x0008)  
	EOwnerMigrationPolicy                              OwnerMigrationPolicy;                                       // 0x0040   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0041   (0x0007)  MISSED
	class UPlayFabJsonObject*                          SearchData;                                                 // 0x0048   (0x0008)  
	bool                                               UseConnections;                                             // 0x0050   (0x0001)  
	unsigned char                                      UnknownData03_7[0x7];                                       // 0x0051   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerCreateMatchmakingTicketResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FMultiplayerCreateMatchmakingTicketResult : FPlayFabResultCommon
{ 
	FString                                            TicketId;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerCreateMatchmakingTicketRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FMultiplayerCreateMatchmakingTicketRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          Creator;                                                    // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	int32_t                                            GiveUpAfterSeconds;                                         // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	TArray<class UPlayFabJsonObject*>                  MembersToMatchWith;                                         // 0x0020   (0x0010)  
	FString                                            QueueName;                                                  // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerCreateRemoteUserResponse
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FMultiplayerCreateRemoteUserResponse : FPlayFabResultCommon
{ 
	FString                                            ExpirationTime;                                             // 0x0008   (0x0010)  
	FString                                            Password;                                                   // 0x0018   (0x0010)  
	FString                                            Username;                                                   // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerCreateRemoteUserRequest
/// Size: 0x0060 (96 bytes) (0x000008 - 0x000060) align 8 MaxSize: 0x0060
struct FMultiplayerCreateRemoteUserRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildId;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            ExpirationTime;                                             // 0x0020   (0x0010)  
	FString                                            Region;                                                     // 0x0030   (0x0010)  
	FString                                            Username;                                                   // 0x0040   (0x0010)  
	FString                                            VmId;                                                       // 0x0050   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerCreateServerBackfillTicketResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FMultiplayerCreateServerBackfillTicketResult : FPlayFabResultCommon
{ 
	FString                                            TicketId;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerCreateServerBackfillTicketRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FMultiplayerCreateServerBackfillTicketRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            GiveUpAfterSeconds;                                         // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	TArray<class UPlayFabJsonObject*>                  Members;                                                    // 0x0018   (0x0010)  
	FString                                            QueueName;                                                  // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          ServerDetails;                                              // 0x0038   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerCreateServerMatchmakingTicketRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FMultiplayerCreateServerMatchmakingTicketRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            GiveUpAfterSeconds;                                         // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	TArray<class UPlayFabJsonObject*>                  Members;                                                    // 0x0018   (0x0010)  
	FString                                            QueueName;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse : FPlayFabResultCommon
{ 
	FString                                            RequestId;                                                  // 0x0008   (0x0010)  
	bool                                               WasApproved;                                                // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest
/// Size: 0x0060 (96 bytes) (0x000008 - 0x000060) align 8 MaxSize: 0x0060
struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest : FPlayFabRequestCommon
{ 
	FString                                            ChangeDescription;                                          // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Changes;                                                    // 0x0018   (0x0010)  
	FString                                            ContactEmail;                                               // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0038   (0x0008)  
	FString                                            Notes;                                                      // 0x0040   (0x0010)  
	FString                                            StartDate;                                                  // 0x0050   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerEmptyResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FMultiplayerEmptyResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.MultiplayerLobbyEmptyResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FMultiplayerLobbyEmptyResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.MultiplayerEnableMultiplayerServersForTitleResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FMultiplayerEnableMultiplayerServersForTitleResponse : FPlayFabResultCommon
{ 
	ETitleMultiplayerServerEnabledStatus               Status;                                                     // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerFindFriendLobbiesResult
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerFindFriendLobbiesResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Lobbies;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          Pagination;                                                 // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerFindLobbiesResult
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerFindLobbiesResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Lobbies;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          Pagination;                                                 // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerGetAssetDownloadUrlResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMultiplayerGetAssetDownloadUrlResponse : FPlayFabResultCommon
{ 
	FString                                            AssetDownloadUrl;                                           // 0x0008   (0x0010)  
	FString                                            Filename;                                                   // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetAssetUploadUrlResponse
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMultiplayerGetAssetUploadUrlResponse : FPlayFabResultCommon
{ 
	FString                                            AssetUploadUrl;                                             // 0x0008   (0x0010)  
	FString                                            Filename;                                                   // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetBuildResponse
/// Size: 0x0100 (256 bytes) (0x000008 - 0x000100) align 8 MaxSize: 0x0100
struct FMultiplayerGetBuildResponse : FPlayFabResultCommon
{ 
	bool                                               AreAssetsReadonly;                                          // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            BuildId;                                                    // 0x0010   (0x0010)  
	FString                                            BuildName;                                                  // 0x0020   (0x0010)  
	FString                                            BuildStatus;                                                // 0x0030   (0x0010)  
	EContainerFlavor                                   ContainerFlavor;                                            // 0x0040   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0041   (0x0007)  MISSED
	FString                                            ContainerRunCommand;                                        // 0x0048   (0x0010)  
	FString                                            CreationTime;                                               // 0x0058   (0x0010)  
	class UPlayFabJsonObject*                          CustomGameContainerImage;                                   // 0x0068   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  GameAssetReferences;                                        // 0x0070   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  GameCertificateReferences;                                  // 0x0080   (0x0010)  
	class UPlayFabJsonObject*                          InstrumentationConfiguration;                               // 0x0090   (0x0008)  
	class UPlayFabJsonObject*                          MetaData;                                                   // 0x0098   (0x0008)  
	int32_t                                            MultiplayerServerCountPerVm;                                // 0x00A0   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x00A4   (0x0004)  MISSED
	FString                                            OsPlatform;                                                 // 0x00A8   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Ports;                                                      // 0x00B8   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  RegionConfigurations;                                       // 0x00C8   (0x0010)  
	FString                                            ServerType;                                                 // 0x00D8   (0x0010)  
	FString                                            StartMultiplayerServerCommand;                              // 0x00E8   (0x0010)  
	EAzureVmSize                                       VmSize;                                                     // 0x00F8   (0x0001)  
	unsigned char                                      UnknownData03_7[0x7];                                       // 0x00F9   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerGetContainerRegistryCredentialsResponse
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FMultiplayerGetContainerRegistryCredentialsResponse : FPlayFabResultCommon
{ 
	FString                                            DnsName;                                                    // 0x0008   (0x0010)  
	FString                                            Password;                                                   // 0x0018   (0x0010)  
	FString                                            Username;                                                   // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetLobbyResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FMultiplayerGetLobbyResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Lobby;                                                      // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerGetMatchResult
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FMultiplayerGetMatchResult : FPlayFabResultCommon
{ 
	FString                                            ArrangementString;                                          // 0x0008   (0x0010)  
	FString                                            MatchID;                                                    // 0x0018   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Members;                                                    // 0x0028   (0x0010)  
	FString                                            RegionPreferences;                                          // 0x0038   (0x0010)  
	class UPlayFabJsonObject*                          ServerDetails;                                              // 0x0048   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerGetMatchmakingTicketResult
/// Size: 0x00A0 (160 bytes) (0x000008 - 0x0000A0) align 8 MaxSize: 0x00A0
struct FMultiplayerGetMatchmakingTicketResult : FPlayFabResultCommon
{ 
	FString                                            CancellationReasonString;                                   // 0x0008   (0x0010)  
	int32_t                                            ChangeNumber;                                               // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            Created;                                                    // 0x0020   (0x0010)  
	class UPlayFabJsonObject*                          Creator;                                                    // 0x0030   (0x0008)  
	int32_t                                            GiveUpAfterSeconds;                                         // 0x0038   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x003C   (0x0004)  MISSED
	FString                                            MatchID;                                                    // 0x0040   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Members;                                                    // 0x0050   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  MembersToMatchWith;                                         // 0x0060   (0x0010)  
	FString                                            QueueName;                                                  // 0x0070   (0x0010)  
	FString                                            Status;                                                     // 0x0080   (0x0010)  
	FString                                            TicketId;                                                   // 0x0090   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetMultiplayerServerDetailsResponse
/// Size: 0x00B8 (184 bytes) (0x000008 - 0x0000B8) align 8 MaxSize: 0x00B8
struct FMultiplayerGetMultiplayerServerDetailsResponse : FPlayFabResultCommon
{ 
	FString                                            BuildId;                                                    // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  ConnectedPlayers;                                           // 0x0018   (0x0010)  
	FString                                            FQDN;                                                       // 0x0028   (0x0010)  
	FString                                            IPV4Address;                                                // 0x0038   (0x0010)  
	FString                                            LastStateTransitionTime;                                    // 0x0048   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Ports;                                                      // 0x0058   (0x0010)  
	FString                                            Region;                                                     // 0x0068   (0x0010)  
	FString                                            ServerId;                                                   // 0x0078   (0x0010)  
	FString                                            SessionId;                                                  // 0x0088   (0x0010)  
	FString                                            State;                                                      // 0x0098   (0x0010)  
	FString                                            VmId;                                                       // 0x00A8   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetMultiplayerServerLogsResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FMultiplayerGetMultiplayerServerLogsResponse : FPlayFabResultCommon
{ 
	FString                                            LogDownloadUrl;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetQueueStatisticsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FMultiplayerGetQueueStatisticsResult : FPlayFabResultCommon
{ 
	int32_t                                            NumberOfPlayersMatching;                                    // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          TimeToMatchStatisticsInSeconds;                             // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerGetRemoteLoginEndpointResponse
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerGetRemoteLoginEndpointResponse : FPlayFabResultCommon
{ 
	FString                                            IPV4Address;                                                // 0x0008   (0x0010)  
	int32_t                                            Port;                                                       // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerGetServerBackfillTicketResult
/// Size: 0x0088 (136 bytes) (0x000008 - 0x000088) align 8 MaxSize: 0x0088
struct FMultiplayerGetServerBackfillTicketResult : FPlayFabResultCommon
{ 
	FString                                            CancellationReasonString;                                   // 0x0008   (0x0010)  
	FString                                            Created;                                                    // 0x0018   (0x0010)  
	int32_t                                            GiveUpAfterSeconds;                                         // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
	FString                                            MatchID;                                                    // 0x0030   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Members;                                                    // 0x0040   (0x0010)  
	FString                                            QueueName;                                                  // 0x0050   (0x0010)  
	class UPlayFabJsonObject*                          ServerDetails;                                              // 0x0060   (0x0008)  
	FString                                            Status;                                                     // 0x0068   (0x0010)  
	FString                                            TicketId;                                                   // 0x0078   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse : FPlayFabResultCommon
{ 
	ETitleMultiplayerServerEnabledStatus               Status;                                                     // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerGetTitleMultiplayerServersQuotaChangeResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Change;                                                     // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerGetTitleMultiplayerServersQuotasResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FMultiplayerGetTitleMultiplayerServersQuotasResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Quotas;                                                     // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerJoinLobbyResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FMultiplayerJoinLobbyResult : FPlayFabResultCommon
{ 
	FString                                            LobbyId;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerJoinMatchmakingTicketResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FMultiplayerJoinMatchmakingTicketResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.MultiplayerListMultiplayerServersResponse
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerListMultiplayerServersResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  MultiplayerServerSummaries;                                 // 0x0008   (0x0010)  
	int32_t                                            PageSize;                                                   // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            SkipToken;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListAssetSummariesResponse
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerListAssetSummariesResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  AssetSummaries;                                             // 0x0008   (0x0010)  
	int32_t                                            PageSize;                                                   // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            SkipToken;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListBuildAliasesResponse
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerListBuildAliasesResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  BuildAliases;                                               // 0x0008   (0x0010)  
	int32_t                                            PageSize;                                                   // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            SkipToken;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListBuildSummariesResponse
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerListBuildSummariesResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  BuildSummaries;                                             // 0x0008   (0x0010)  
	int32_t                                            PageSize;                                                   // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            SkipToken;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListCertificateSummariesResponse
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerListCertificateSummariesResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  CertificateSummaries;                                       // 0x0008   (0x0010)  
	int32_t                                            PageSize;                                                   // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            SkipToken;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListContainerImagesResponse
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerListContainerImagesResponse : FPlayFabResultCommon
{ 
	FString                                            Images;                                                     // 0x0008   (0x0010)  
	int32_t                                            PageSize;                                                   // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            SkipToken;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListContainerImageTagsResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FMultiplayerListContainerImageTagsResponse : FPlayFabResultCommon
{ 
	FString                                            Tags;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListMatchmakingTicketsForPlayerResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FMultiplayerListMatchmakingTicketsForPlayerResult : FPlayFabResultCommon
{ 
	FString                                            TicketIds;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListPartyQosServersResponse
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerListPartyQosServersResponse : FPlayFabResultCommon
{ 
	int32_t                                            PageSize;                                                   // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<class UPlayFabJsonObject*>                  QosServers;                                                 // 0x0010   (0x0010)  
	FString                                            SkipToken;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListQosServersForTitleResponse
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerListQosServersForTitleResponse : FPlayFabResultCommon
{ 
	int32_t                                            PageSize;                                                   // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<class UPlayFabJsonObject*>                  QosServers;                                                 // 0x0010   (0x0010)  
	FString                                            SkipToken;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListServerBackfillTicketsForPlayerResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FMultiplayerListServerBackfillTicketsForPlayerResult : FPlayFabResultCommon
{ 
	FString                                            TicketIds;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListTitleMultiplayerServersQuotaChangesResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FMultiplayerListTitleMultiplayerServersQuotaChangesResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Changes;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListVirtualMachineSummariesResponse
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerListVirtualMachineSummariesResponse : FPlayFabResultCommon
{ 
	int32_t                                            PageSize;                                                   // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            SkipToken;                                                  // 0x0010   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  VirtualMachines;                                            // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerRequestMultiplayerServerResponse
/// Size: 0x00B8 (184 bytes) (0x000008 - 0x0000B8) align 8 MaxSize: 0x00B8
struct FMultiplayerRequestMultiplayerServerResponse : FPlayFabResultCommon
{ 
	FString                                            BuildId;                                                    // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  ConnectedPlayers;                                           // 0x0018   (0x0010)  
	FString                                            FQDN;                                                       // 0x0028   (0x0010)  
	FString                                            IPV4Address;                                                // 0x0038   (0x0010)  
	FString                                            LastStateTransitionTime;                                    // 0x0048   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Ports;                                                      // 0x0058   (0x0010)  
	FString                                            Region;                                                     // 0x0068   (0x0010)  
	FString                                            ServerId;                                                   // 0x0078   (0x0010)  
	FString                                            SessionId;                                                  // 0x0088   (0x0010)  
	FString                                            State;                                                      // 0x0098   (0x0010)  
	FString                                            VmId;                                                       // 0x00A8   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerRolloverContainerRegistryCredentialsResponse
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FMultiplayerRolloverContainerRegistryCredentialsResponse : FPlayFabResultCommon
{ 
	FString                                            DnsName;                                                    // 0x0008   (0x0010)  
	FString                                            Password;                                                   // 0x0018   (0x0010)  
	FString                                            Username;                                                   // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerSubscribeToLobbyResourceResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FMultiplayerSubscribeToLobbyResourceResult : FPlayFabResultCommon
{ 
	FString                                            Topic;                                                      // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerDeleteAssetRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerDeleteAssetRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Filename;                                                   // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerDeleteBuildRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerDeleteBuildRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildId;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerDeleteBuildAliasRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerDeleteBuildAliasRequest : FPlayFabRequestCommon
{ 
	FString                                            AliasId;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerDeleteBuildRegionRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerDeleteBuildRegionRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildId;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            Region;                                                     // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerDeleteCertificateRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerDeleteCertificateRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Name;                                                       // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerDeleteContainerImageRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerDeleteContainerImageRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            ImageName;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerDeleteLobbyRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerDeleteLobbyRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            LobbyId;                                                    // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerDeleteRemoteUserRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FMultiplayerDeleteRemoteUserRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildId;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            Region;                                                     // 0x0020   (0x0010)  
	FString                                            Username;                                                   // 0x0030   (0x0010)  
	FString                                            VmId;                                                       // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerEnableMultiplayerServersForTitleRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FMultiplayerEnableMultiplayerServersForTitleRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerFindFriendLobbiesRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FMultiplayerFindFriendLobbiesRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               ExcludeFacebookFriends;                                     // 0x0010   (0x0001)  
	bool                                               ExcludeSteamFriends;                                        // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0012   (0x0006)  MISSED
	FString                                            Filter;                                                     // 0x0018   (0x0010)  
	FString                                            OrderBy;                                                    // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          Pagination;                                                 // 0x0038   (0x0008)  
	FString                                            XboxToken;                                                  // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerFindLobbiesRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FMultiplayerFindLobbiesRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Filter;                                                     // 0x0010   (0x0010)  
	FString                                            OrderBy;                                                    // 0x0020   (0x0010)  
	class UPlayFabJsonObject*                          Pagination;                                                 // 0x0030   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerGetAssetDownloadUrlRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerGetAssetDownloadUrlRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Filename;                                                   // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetAssetUploadUrlRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerGetAssetUploadUrlRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Filename;                                                   // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetBuildRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerGetBuildRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildId;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerGetBuildAliasRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerGetBuildAliasRequest : FPlayFabRequestCommon
{ 
	FString                                            AliasId;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerGetContainerRegistryCredentialsRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FMultiplayerGetContainerRegistryCredentialsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerGetLobbyRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerGetLobbyRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            LobbyId;                                                    // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetMatchRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FMultiplayerGetMatchRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               EscapeObject;                                               // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FString                                            MatchID;                                                    // 0x0018   (0x0010)  
	FString                                            QueueName;                                                  // 0x0028   (0x0010)  
	bool                                               ReturnMemberAttributes;                                     // 0x0038   (0x0001)  
	unsigned char                                      UnknownData01_7[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerGetMatchmakingTicketRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FMultiplayerGetMatchmakingTicketRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               EscapeObject;                                               // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FString                                            QueueName;                                                  // 0x0018   (0x0010)  
	FString                                            TicketId;                                                   // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetMultiplayerServerDetailsRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FMultiplayerGetMultiplayerServerDetailsRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildId;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            Region;                                                     // 0x0020   (0x0010)  
	FString                                            SessionId;                                                  // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetMultiplayerServerLogsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerGetMultiplayerServerLogsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            ServerId;                                                   // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetMultiplayerSessionLogsBySessionIdRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            SessionId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetQueueStatisticsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerGetQueueStatisticsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            QueueName;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetRemoteLoginEndpointRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FMultiplayerGetRemoteLoginEndpointRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildId;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            Region;                                                     // 0x0020   (0x0010)  
	FString                                            VmId;                                                       // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetServerBackfillTicketRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FMultiplayerGetServerBackfillTicketRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               EscapeObject;                                               // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FString                                            QueueName;                                                  // 0x0018   (0x0010)  
	FString                                            TicketId;                                                   // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerGetTitleMultiplayerServersQuotaChangeRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            RequestId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerGetTitleMultiplayerServersQuotasRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FMultiplayerGetTitleMultiplayerServersQuotasRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerInviteToLobbyRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerInviteToLobbyRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          InviteeEntity;                                              // 0x0010   (0x0008)  
	FString                                            LobbyId;                                                    // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          MemberEntity;                                               // 0x0028   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerJoinArrangedLobbyRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FMultiplayerJoinArrangedLobbyRequest : FPlayFabRequestCommon
{ 
	EAccessPolicy                                      AccessPolicy;                                               // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            ArrangementString;                                          // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	int32_t                                            MaxPlayers;                                                 // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x002C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          MemberData;                                                 // 0x0030   (0x0008)  
	class UPlayFabJsonObject*                          MemberEntity;                                               // 0x0038   (0x0008)  
	EOwnerMigrationPolicy                              OwnerMigrationPolicy;                                       // 0x0040   (0x0001)  
	bool                                               UseConnections;                                             // 0x0041   (0x0001)  
	unsigned char                                      UnknownData02_7[0x6];                                       // 0x0042   (0x0006)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerJoinLobbyRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerJoinLobbyRequest : FPlayFabRequestCommon
{ 
	FString                                            ConnectionString;                                           // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          MemberData;                                                 // 0x0020   (0x0008)  
	class UPlayFabJsonObject*                          MemberEntity;                                               // 0x0028   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerJoinMatchmakingTicketRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FMultiplayerJoinMatchmakingTicketRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Member;                                                     // 0x0010   (0x0008)  
	FString                                            QueueName;                                                  // 0x0018   (0x0010)  
	FString                                            TicketId;                                                   // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerLeaveLobbyRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMultiplayerLeaveLobbyRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            LobbyId;                                                    // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          MemberEntity;                                               // 0x0020   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerListMultiplayerServersRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FMultiplayerListMultiplayerServersRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildId;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	int32_t                                            PageSize;                                                   // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	FString                                            Region;                                                     // 0x0028   (0x0010)  
	FString                                            SkipToken;                                                  // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListAssetSummariesRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMultiplayerListAssetSummariesRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            PageSize;                                                   // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            SkipToken;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListBuildAliasesRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMultiplayerListBuildAliasesRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            PageSize;                                                   // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            SkipToken;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListBuildSummariesRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMultiplayerListBuildSummariesRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            PageSize;                                                   // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            SkipToken;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListCertificateSummariesRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMultiplayerListCertificateSummariesRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            PageSize;                                                   // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            SkipToken;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListContainerImagesRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMultiplayerListContainerImagesRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            PageSize;                                                   // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            SkipToken;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListContainerImageTagsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerListContainerImageTagsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            ImageName;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListMatchmakingTicketsForPlayerRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMultiplayerListMatchmakingTicketsForPlayerRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	FString                                            QueueName;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListPartyQosServersRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FMultiplayerListPartyQosServersRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerListQosServersForTitleRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FMultiplayerListQosServersForTitleRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               IncludeAllRegions;                                          // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerListServerBackfillTicketsForPlayerRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMultiplayerListServerBackfillTicketsForPlayerRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	FString                                            QueueName;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerListTitleMultiplayerServersQuotaChangesRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FMultiplayerListTitleMultiplayerServersQuotaChangesRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerListVirtualMachineSummariesRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FMultiplayerListVirtualMachineSummariesRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildId;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	int32_t                                            PageSize;                                                   // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	FString                                            Region;                                                     // 0x0028   (0x0010)  
	FString                                            SkipToken;                                                  // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerRemoveMemberFromLobbyRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerRemoveMemberFromLobbyRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            LobbyId;                                                    // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          MemberEntity;                                               // 0x0020   (0x0008)  
	bool                                               PreventRejoin;                                              // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerRequestMultiplayerServerRequest
/// Size: 0x0068 (104 bytes) (0x000008 - 0x000068) align 8 MaxSize: 0x0068
struct FMultiplayerRequestMultiplayerServerRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          BuildAliasParams;                                           // 0x0008   (0x0008)  
	FString                                            BuildId;                                                    // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            InitialPlayers;                                             // 0x0028   (0x0010)  
	FString                                            PreferredRegions;                                           // 0x0038   (0x0010)  
	FString                                            SessionCookie;                                              // 0x0048   (0x0010)  
	FString                                            SessionId;                                                  // 0x0058   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerRolloverContainerRegistryCredentialsRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FMultiplayerRolloverContainerRegistryCredentialsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerShutdownMultiplayerServerRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FMultiplayerShutdownMultiplayerServerRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            SessionId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerSubscribeToLobbyResourceRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FMultiplayerSubscribeToLobbyResourceRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          EntityKey;                                                  // 0x0010   (0x0008)  
	FString                                            PubSubConnectionHandle;                                     // 0x0018   (0x0010)  
	FString                                            ResourceId;                                                 // 0x0028   (0x0010)  
	int32_t                                            SubscriptionVersion;                                        // 0x0038   (0x0004)  
	ESubscriptionType                                  Type;                                                       // 0x003C   (0x0001)  
	unsigned char                                      UnknownData00_7[0x3];                                       // 0x003D   (0x0003)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerUnsubscribeFromLobbyResourceRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FMultiplayerUnsubscribeFromLobbyResourceRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          EntityKey;                                                  // 0x0010   (0x0008)  
	FString                                            PubSubConnectionHandle;                                     // 0x0018   (0x0010)  
	FString                                            ResourceId;                                                 // 0x0028   (0x0010)  
	int32_t                                            SubscriptionVersion;                                        // 0x0038   (0x0004)  
	ESubscriptionType                                  Type;                                                       // 0x003C   (0x0001)  
	unsigned char                                      UnknownData00_7[0x3];                                       // 0x003D   (0x0003)  MISSED
};

/// Struct /Script/PlayFab.MultiplayerUntagContainerImageRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerUntagContainerImageRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            ImageName;                                                  // 0x0010   (0x0010)  
	FString                                            Tag;                                                        // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerUpdateBuildAliasRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FMultiplayerUpdateBuildAliasRequest : FPlayFabRequestCommon
{ 
	FString                                            AliasId;                                                    // 0x0008   (0x0010)  
	FString                                            AliasName;                                                  // 0x0018   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  BuildSelectionCriteria;                                     // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0038   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerUpdateBuildNameRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerUpdateBuildNameRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildId;                                                    // 0x0008   (0x0010)  
	FString                                            BuildName;                                                  // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerUpdateBuildRegionRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FMultiplayerUpdateBuildRegionRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildId;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          BuildRegion;                                                // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerUpdateBuildRegionsRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FMultiplayerUpdateBuildRegionsRequest : FPlayFabRequestCommon
{ 
	FString                                            BuildId;                                                    // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  BuildRegions;                                               // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
};

/// Struct /Script/PlayFab.MultiplayerUpdateLobbyRequest
/// Size: 0x0090 (144 bytes) (0x000008 - 0x000090) align 8 MaxSize: 0x0090
struct FMultiplayerUpdateLobbyRequest : FPlayFabRequestCommon
{ 
	EAccessPolicy                                      AccessPolicy;                                               // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          LobbyData;                                                  // 0x0018   (0x0008)  
	FString                                            LobbyDataToDelete;                                          // 0x0020   (0x0010)  
	FString                                            LobbyId;                                                    // 0x0030   (0x0010)  
	int32_t                                            MaxPlayers;                                                 // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
	class UPlayFabJsonObject*                          MemberData;                                                 // 0x0048   (0x0008)  
	FString                                            MemberDataToDelete;                                         // 0x0050   (0x0010)  
	class UPlayFabJsonObject*                          MemberEntity;                                               // 0x0060   (0x0008)  
	EMembershipLock                                    MembershipLock;                                             // 0x0068   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0069   (0x0007)  MISSED
	class UPlayFabJsonObject*                          Owner;                                                      // 0x0070   (0x0008)  
	class UPlayFabJsonObject*                          SearchData;                                                 // 0x0078   (0x0008)  
	FString                                            SearchDataToDelete;                                         // 0x0080   (0x0010)  
};

/// Struct /Script/PlayFab.MultiplayerUploadCertificateRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FMultiplayerUploadCertificateRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          GameCertificate;                                            // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.ProfilesGetGlobalPolicyResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FProfilesGetGlobalPolicyResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Permissions;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ProfilesGetEntityProfileResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FProfilesGetEntityProfileResponse : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Profile;                                                    // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ProfilesGetEntityProfilesResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FProfilesGetEntityProfilesResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Profiles;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse : FPlayFabResultCommon
{ 
	FString                                            TitleID;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          TitlePlayerAccounts;                                        // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.ProfilesSetGlobalPolicyResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FProfilesSetGlobalPolicyResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ProfilesSetProfileLanguageResponse
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FProfilesSetProfileLanguageResponse : FPlayFabResultCommon
{ 
	EOperationTypes                                    OperationResult;                                            // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            VersionNumber;                                              // 0x000C   (0x0004)  
};

/// Struct /Script/PlayFab.ProfilesSetEntityProfilePolicyResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FProfilesSetEntityProfilePolicyResponse : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Permissions;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ProfilesGetGlobalPolicyRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FProfilesGetGlobalPolicyRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.ProfilesGetEntityProfileRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FProfilesGetEntityProfileRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               DataAsObject;                                               // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.ProfilesGetEntityProfilesRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FProfilesGetEntityProfilesRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               DataAsObject;                                               // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	TArray<class UPlayFabJsonObject*>                  Entities;                                                   // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ProfilesGetTitlePlayersFromMasterPlayerAccountIdsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            MasterPlayerAccountIds;                                     // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ProfilesSetGlobalPolicyRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FProfilesSetGlobalPolicyRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  Permissions;                                                // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ProfilesSetProfileLanguageRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FProfilesSetProfileLanguageRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	int32_t                                            ExpectedVersion;                                            // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            Language;                                                   // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ProfilesSetEntityProfilePolicyRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FProfilesSetEntityProfilePolicyRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Entity;                                                     // 0x0010   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  Statements;                                                 // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerModifyCharacterVirtualCurrencyResult
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerModifyCharacterVirtualCurrencyResult : FPlayFabResultCommon
{ 
	int32_t                                            Balance;                                                    // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            VirtualCurrency;                                            // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ServerAddCharacterVirtualCurrencyRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FServerAddCharacterVirtualCurrencyRequest : FPlayFabRequestCommon
{ 
	int32_t                                            Amount;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            CharacterId;                                                // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0028   (0x0010)  
	FString                                            VirtualCurrency;                                            // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ServerEmptyResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerEmptyResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerAddFriendRequest
/// Size: 0x0058 (88 bytes) (0x000008 - 0x000058) align 8 MaxSize: 0x0058
struct FServerAddFriendRequest : FPlayFabRequestCommon
{ 
	FString                                            FriendEmail;                                                // 0x0008   (0x0010)  
	FString                                            FriendPlayFabId;                                            // 0x0018   (0x0010)  
	FString                                            FriendTitleDisplayName;                                     // 0x0028   (0x0010)  
	FString                                            FriendUsername;                                             // 0x0038   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0048   (0x0010)  
};

/// Struct /Script/PlayFab.ServerEmptyResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerEmptyResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerAddGenericIDRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerAddGenericIDRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          GenericId;                                                  // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ServerAddPlayerTagResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerAddPlayerTagResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerAddPlayerTagRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerAddPlayerTagRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
	FString                                            TagName;                                                    // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerAddSharedGroupMembersResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerAddSharedGroupMembersResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerAddSharedGroupMembersRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerAddSharedGroupMembersRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabIds;                                                 // 0x0008   (0x0010)  
	FString                                            SharedGroupId;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerModifyUserVirtualCurrencyResult
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerModifyUserVirtualCurrencyResult : FPlayFabResultCommon
{ 
	int32_t                                            Balance;                                                    // 0x0008   (0x0004)  
	int32_t                                            BalanceChange;                                              // 0x000C   (0x0004)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
	FString                                            VirtualCurrency;                                            // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerAddUserVirtualCurrencyRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerAddUserVirtualCurrencyRequest : FPlayFabRequestCommon
{ 
	int32_t                                            Amount;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	FString                                            VirtualCurrency;                                            // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ServerAuthenticateSessionTicketResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerAuthenticateSessionTicketResult : FPlayFabResultCommon
{ 
	bool                                               IsSessionTicketExpired;                                     // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          UserInfo;                                                   // 0x0010   (0x0008)  
};

/// Struct /Script/PlayFab.ServerAuthenticateSessionTicketRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerAuthenticateSessionTicketRequest : FPlayFabRequestCommon
{ 
	FString                                            SessionTicket;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerAwardSteamAchievementResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerAwardSteamAchievementResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  AchievementResults;                                         // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerAwardSteamAchievementRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerAwardSteamAchievementRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Achievements;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerBanUsersResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerBanUsersResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  BanData;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerBanUsersRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerBanUsersRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Bans;                                                       // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.ServerConsumeItemResult
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerConsumeItemResult : FPlayFabResultCommon
{ 
	FString                                            ItemInstanceId;                                             // 0x0008   (0x0010)  
	int32_t                                            RemainingUses;                                              // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ServerConsumeItemRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FServerConsumeItemRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	int32_t                                            ConsumeCount;                                               // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            ItemInstanceId;                                             // 0x0028   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ServerCreateSharedGroupResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerCreateSharedGroupResult : FPlayFabResultCommon
{ 
	FString                                            SharedGroupId;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerCreateSharedGroupRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerCreateSharedGroupRequest : FPlayFabRequestCommon
{ 
	FString                                            SharedGroupId;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerDeleteCharacterFromUserResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerDeleteCharacterFromUserResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerDeletePlayerResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerDeletePlayerResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerDeletePushNotificationTemplateResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerDeletePushNotificationTemplateResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerDeregisterGameResponse
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerDeregisterGameResponse : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerEvaluateRandomResultTableResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerEvaluateRandomResultTableResult : FPlayFabResultCommon
{ 
	FString                                            ResultItemId;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerExecuteCloudScriptResult
/// Size: 0x0060 (96 bytes) (0x000008 - 0x000060) align 8 MaxSize: 0x0060
struct FServerExecuteCloudScriptResult : FPlayFabResultCommon
{ 
	int32_t                                            APIRequestsIssued;                                          // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          Error;                                                      // 0x0010   (0x0008)  
	int32_t                                            ExecutionTimeSeconds;                                       // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            FunctionName;                                               // 0x0020   (0x0010)  
	class UPlayFabJsonObject*                          FunctionResult;                                             // 0x0030   (0x0008)  
	bool                                               FunctionResultTooLarge;                                     // 0x0038   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0039   (0x0003)  MISSED
	int32_t                                            HttpRequestsIssued;                                         // 0x003C   (0x0004)  
	TArray<class UPlayFabJsonObject*>                  Logs;                                                       // 0x0040   (0x0010)  
	bool                                               LogsTooLarge;                                               // 0x0050   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0051   (0x0003)  MISSED
	int32_t                                            MemoryConsumedBytes;                                        // 0x0054   (0x0004)  
	int32_t                                            ProcessorTimeSeconds;                                       // 0x0058   (0x0004)  
	int32_t                                            Revision;                                                   // 0x005C   (0x0004)  
};

/// Struct /Script/PlayFab.ServerGetAllSegmentsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetAllSegmentsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Segments;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerListUsersCharactersResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerListUsersCharactersResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Characters;                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetCatalogItemsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetCatalogItemsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Catalog;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetCharacterDataResult
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerGetCharacterDataResult : FPlayFabResultCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          Data;                                                       // 0x0018   (0x0008)  
	int32_t                                            DataVersion;                                                // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	FString                                            PlayFabId;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetCharacterInventoryResult
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FServerGetCharacterInventoryResult : FPlayFabResultCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Inventory;                                                  // 0x0018   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          VirtualCurrency;                                            // 0x0038   (0x0008)  
	class UPlayFabJsonObject*                          VirtualCurrencyRechargeTimes;                               // 0x0040   (0x0008)  
};

/// Struct /Script/PlayFab.ServerGetCharacterLeaderboardResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetCharacterLeaderboardResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Leaderboard;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetCharacterStatisticsResult
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerGetCharacterStatisticsResult : FPlayFabResultCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CharacterStatistics;                                        // 0x0018   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetContentDownloadUrlResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetContentDownloadUrlResult : FPlayFabResultCommon
{ 
	FString                                            URL;                                                        // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetLeaderboardResult
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerGetLeaderboardResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Leaderboard;                                                // 0x0008   (0x0010)  
	FString                                            NextReset;                                                  // 0x0018   (0x0010)  
	int32_t                                            Version;                                                    // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ServerGetFriendsListResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetFriendsListResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Friends;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetLeaderboardAroundCharacterResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetLeaderboardAroundCharacterResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Leaderboard;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetLeaderboardAroundUserResult
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerGetLeaderboardAroundUserResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Leaderboard;                                                // 0x0008   (0x0010)  
	FString                                            NextReset;                                                  // 0x0018   (0x0010)  
	int32_t                                            Version;                                                    // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ServerGetLeaderboardForUsersCharactersResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetLeaderboardForUsersCharactersResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Leaderboard;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayerCombinedInfoResult
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerGetPlayerCombinedInfoResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          InfoResultPayload;                                          // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayerProfileResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FServerGetPlayerProfileResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          PlayerProfile;                                              // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ServerGetPlayerSegmentsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPlayerSegmentsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Segments;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayersInSegmentResult
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerGetPlayersInSegmentResult : FPlayFabResultCommon
{ 
	FString                                            ContinuationToken;                                          // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  PlayerProfiles;                                             // 0x0018   (0x0010)  
	int32_t                                            ProfilesInSegment;                                          // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ServerGetPlayerStatisticsResult
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerGetPlayerStatisticsResult : FPlayFabResultCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Statistics;                                                 // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayerStatisticVersionsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPlayerStatisticVersionsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  StatisticVersions;                                          // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayerTagsResult
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerGetPlayerTagsResult : FPlayFabResultCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
	FString                                            Tags;                                                       // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayFabIDsFromFacebookIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPlayFabIDsFromFacebookIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayFabIDsFromFacebookInstantGamesIdsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayFabIDsFromGenericIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPlayFabIDsFromGenericIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayFabIDsFromPSNAccountIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPlayFabIDsFromPSNAccountIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayFabIDsFromSteamIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPlayFabIDsFromSteamIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayFabIDsFromXboxLiveIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPlayFabIDsFromXboxLiveIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPublisherDataResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FServerGetPublisherDataResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Data;                                                       // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ServerGetRandomResultTablesResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FServerGetRandomResultTablesResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Tables;                                                     // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ServerGetServerCustomIDsFromPlayFabIDsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetServerCustomIDsFromPlayFabIDsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Data;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetSharedGroupDataResult
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerGetSharedGroupDataResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Data;                                                       // 0x0008   (0x0008)  
	FString                                            Members;                                                    // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetStoreItemsResult
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FServerGetStoreItemsResult : FPlayFabResultCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          MarketingData;                                              // 0x0018   (0x0008)  
	EPfSourceType                                      Source;                                                     // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
	TArray<class UPlayFabJsonObject*>                  Store;                                                      // 0x0028   (0x0010)  
	FString                                            StoreId;                                                    // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetTimeResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetTimeResult : FPlayFabResultCommon
{ 
	FString                                            Time;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetTitleDataResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FServerGetTitleDataResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Data;                                                       // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ServerGetTitleNewsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetTitleNewsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  News;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetUserAccountInfoResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FServerGetUserAccountInfoResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          UserInfo;                                                   // 0x0008   (0x0008)  
};

/// Struct /Script/PlayFab.ServerGetUserBansResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetUserBansResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  BanData;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetUserDataResult
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerGetUserDataResult : FPlayFabResultCommon
{ 
	class UPlayFabJsonObject*                          Data;                                                       // 0x0008   (0x0008)  
	int32_t                                            DataVersion;                                                // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetUserInventoryResult
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerGetUserInventoryResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Inventory;                                                  // 0x0008   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          VirtualCurrency;                                            // 0x0028   (0x0008)  
	class UPlayFabJsonObject*                          VirtualCurrencyRechargeTimes;                               // 0x0030   (0x0008)  
};

/// Struct /Script/PlayFab.ServerGrantCharacterToUserResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGrantCharacterToUserResult : FPlayFabResultCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGrantItemsToCharacterResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGrantItemsToCharacterResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  ItemGrantResults;                                           // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGrantItemsToUserResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGrantItemsToUserResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  ItemGrantResults;                                           // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGrantItemsToUsersResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGrantItemsToUsersResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  ItemGrantResults;                                           // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerLinkPSNAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerLinkPSNAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerLinkServerCustomIdResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerLinkServerCustomIdResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerLinkXboxAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerLinkXboxAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerServerLoginResult
/// Size: 0x0068 (104 bytes) (0x000010 - 0x000068) align 8 MaxSize: 0x0068
struct FServerServerLoginResult : FPlayFabLoginResultCommon
{ 
	class UPlayFabJsonObject*                          EntityToken;                                                // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          InfoResultPayload;                                          // 0x0018   (0x0008)  
	FString                                            LastLoginTime;                                              // 0x0020   (0x0010)  
	bool                                               NewlyCreated;                                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
	FString                                            PlayFabId;                                                  // 0x0038   (0x0010)  
	FString                                            SessionTicket;                                              // 0x0048   (0x0010)  
	class UPlayFabJsonObject*                          SettingsForUser;                                            // 0x0058   (0x0008)  
	class UPlayFabJsonObject*                          TreatmentAssignment;                                        // 0x0060   (0x0008)  
};

/// Struct /Script/PlayFab.ServerModifyItemUsesResult
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerModifyItemUsesResult : FPlayFabResultCommon
{ 
	FString                                            ItemInstanceId;                                             // 0x0008   (0x0010)  
	int32_t                                            RemainingUses;                                              // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ServerMoveItemToCharacterFromCharacterResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerMoveItemToCharacterFromCharacterResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerMoveItemToCharacterFromUserResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerMoveItemToCharacterFromUserResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerMoveItemToUserFromCharacterResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerMoveItemToUserFromCharacterResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerNotifyMatchmakerPlayerLeftResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FServerNotifyMatchmakerPlayerLeftResult : FPlayFabResultCommon
{ 
	EPlayerConnectionState                             PlayerState;                                                // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ServerRedeemCouponResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerRedeemCouponResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  GrantedItems;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRedeemMatchmakerTicketResult
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerRedeemMatchmakerTicketResult : FPlayFabResultCommon
{ 
	FString                                            Error;                                                      // 0x0008   (0x0010)  
	bool                                               TicketIsValid;                                              // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
	class UPlayFabJsonObject*                          UserInfo;                                                   // 0x0020   (0x0008)  
};

/// Struct /Script/PlayFab.ServerRefreshGameServerInstanceHeartbeatResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerRefreshGameServerInstanceHeartbeatResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerRegisterGameResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerRegisterGameResponse : FPlayFabResultCommon
{ 
	FString                                            LobbyId;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRemovePlayerTagResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerRemovePlayerTagResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerRemoveSharedGroupMembersResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerRemoveSharedGroupMembersResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerReportPlayerServerResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FServerReportPlayerServerResult : FPlayFabResultCommon
{ 
	int32_t                                            SubmissionsRemaining;                                       // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ServerRevokeAllBansForUserResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerRevokeAllBansForUserResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  BanData;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRevokeBansResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerRevokeBansResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  BanData;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRevokeInventoryResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerRevokeInventoryResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerRevokeInventoryItemsResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerRevokeInventoryItemsResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Errors;                                                     // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerSavePushNotificationTemplateResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerSavePushNotificationTemplateResult : FPlayFabResultCommon
{ 
	FString                                            PushNotificationTemplateId;                                 // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerSendCustomAccountRecoveryEmailResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerSendCustomAccountRecoveryEmailResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerSendEmailFromTemplateResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerSendEmailFromTemplateResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerSendPushNotificationResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerSendPushNotificationResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerSetGameServerInstanceDataResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerSetGameServerInstanceDataResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerSetGameServerInstanceStateResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerSetGameServerInstanceStateResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerSetGameServerInstanceTagsResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerSetGameServerInstanceTagsResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerSetPlayerSecretResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerSetPlayerSecretResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerSetPublisherDataResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerSetPublisherDataResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerSetTitleDataResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerSetTitleDataResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerUnlinkPSNAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerUnlinkPSNAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerUnlinkServerCustomIdResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerUnlinkServerCustomIdResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerUnlinkXboxAccountResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerUnlinkXboxAccountResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerUnlockContainerItemResult
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FServerUnlockContainerItemResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  GrantedItems;                                               // 0x0008   (0x0010)  
	FString                                            UnlockedItemInstanceId;                                     // 0x0018   (0x0010)  
	FString                                            UnlockedWithItemInstanceId;                                 // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          VirtualCurrency;                                            // 0x0038   (0x0008)  
};

/// Struct /Script/PlayFab.ServerUpdateBansResult
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerUpdateBansResult : FPlayFabResultCommon
{ 
	TArray<class UPlayFabJsonObject*>                  BanData;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUpdateCharacterDataResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FServerUpdateCharacterDataResult : FPlayFabResultCommon
{ 
	int32_t                                            DataVersion;                                                // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ServerUpdateCharacterStatisticsResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerUpdateCharacterStatisticsResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerUpdatePlayerStatisticsResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerUpdatePlayerStatisticsResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerUpdateSharedGroupDataResult
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerUpdateSharedGroupDataResult : FPlayFabResultCommon
{ 
};

/// Struct /Script/PlayFab.ServerUpdateUserDataResult
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FServerUpdateUserDataResult : FPlayFabResultCommon
{ 
	int32_t                                            DataVersion;                                                // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ServerWriteEventResponse
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerWriteEventResponse : FPlayFabResultCommon
{ 
	FString                                            EventId;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerDeleteCharacterFromUserRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerDeleteCharacterFromUserRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
	bool                                               SaveCharacterInventory;                                     // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ServerDeletePlayerRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerDeletePlayerRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerDeletePushNotificationTemplateRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerDeletePushNotificationTemplateRequest : FPlayFabRequestCommon
{ 
	FString                                            PushNotificationTemplateId;                                 // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerDeleteSharedGroupRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerDeleteSharedGroupRequest : FPlayFabRequestCommon
{ 
	FString                                            SharedGroupId;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerDeregisterGameRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerDeregisterGameRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            LobbyId;                                                    // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ServerEvaluateRandomResultTableRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerEvaluateRandomResultTableRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            TableId;                                                    // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerExecuteCloudScriptServerRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FServerExecuteCloudScriptServerRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            FunctionName;                                               // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          FunctionParameter;                                          // 0x0020   (0x0008)  
	bool                                               GeneratePlayStreamEvent;                                    // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0029   (0x0007)  MISSED
	FString                                            PlayFabId;                                                  // 0x0030   (0x0010)  
	ECloudScriptRevisionOption                         RevisionSelection;                                          // 0x0040   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0041   (0x0003)  MISSED
	int32_t                                            SpecificRevision;                                           // 0x0044   (0x0004)  
};

/// Struct /Script/PlayFab.ServerGetAllSegmentsRequest
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerGetAllSegmentsRequest : FPlayFabRequestCommon
{ 
};

/// Struct /Script/PlayFab.ServerListUsersCharactersRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerListUsersCharactersRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetCatalogItemsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetCatalogItemsRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetCharacterDataRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FServerGetCharacterDataRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	int32_t                                            IfChangedFromDataVersion;                                   // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            Keys;                                                       // 0x0020   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetCharacterInventoryRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FServerGetCharacterInventoryRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            CharacterId;                                                // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetCharacterLeaderboardRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerGetCharacterLeaderboardRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterType;                                              // 0x0008   (0x0010)  
	int32_t                                            MaxResultsCount;                                            // 0x0018   (0x0004)  
	int32_t                                            StartPosition;                                              // 0x001C   (0x0004)  
	FString                                            StatisticName;                                              // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetCharacterStatisticsRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerGetCharacterStatisticsRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetContentDownloadUrlRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerGetContentDownloadUrlRequest : FPlayFabRequestCommon
{ 
	FString                                            HttpMethod;                                                 // 0x0008   (0x0010)  
	FString                                            Key;                                                        // 0x0018   (0x0010)  
	bool                                               ThruCDN;                                                    // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ServerGetFriendLeaderboardRequest
/// Size: 0x0060 (96 bytes) (0x000008 - 0x000060) align 8 MaxSize: 0x0060
struct FServerGetFriendLeaderboardRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               IncludeFacebookFriends;                                     // 0x0010   (0x0001)  
	bool                                               IncludeSteamFriends;                                        // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0012   (0x0002)  MISSED
	int32_t                                            MaxResultsCount;                                            // 0x0014   (0x0004)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          ProfileConstraints;                                         // 0x0028   (0x0008)  
	int32_t                                            StartPosition;                                              // 0x0030   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0034   (0x0004)  MISSED
	FString                                            StatisticName;                                              // 0x0038   (0x0010)  
	bool                                               UseSpecificVersion;                                         // 0x0048   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0049   (0x0003)  MISSED
	int32_t                                            Version;                                                    // 0x004C   (0x0004)  
	FString                                            XboxToken;                                                  // 0x0050   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetFriendsListRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FServerGetFriendsListRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               IncludeFacebookFriends;                                     // 0x0010   (0x0001)  
	bool                                               IncludeSteamFriends;                                        // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0012   (0x0006)  MISSED
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          ProfileConstraints;                                         // 0x0028   (0x0008)  
	FString                                            XboxToken;                                                  // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetLeaderboardRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FServerGetLeaderboardRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            MaxResultsCount;                                            // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	class UPlayFabJsonObject*                          ProfileConstraints;                                         // 0x0018   (0x0008)  
	int32_t                                            StartPosition;                                              // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	FString                                            StatisticName;                                              // 0x0028   (0x0010)  
	bool                                               UseSpecificVersion;                                         // 0x0038   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0039   (0x0003)  MISSED
	int32_t                                            Version;                                                    // 0x003C   (0x0004)  
};

/// Struct /Script/PlayFab.ServerGetLeaderboardAroundCharacterRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FServerGetLeaderboardAroundCharacterRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	FString                                            CharacterType;                                              // 0x0018   (0x0010)  
	int32_t                                            MaxResultsCount;                                            // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
	FString                                            PlayFabId;                                                  // 0x0030   (0x0010)  
	FString                                            StatisticName;                                              // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetLeaderboardAroundUserRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FServerGetLeaderboardAroundUserRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	int32_t                                            MaxResultsCount;                                            // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          ProfileConstraints;                                         // 0x0028   (0x0008)  
	FString                                            StatisticName;                                              // 0x0030   (0x0010)  
	bool                                               UseSpecificVersion;                                         // 0x0040   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0041   (0x0003)  MISSED
	int32_t                                            Version;                                                    // 0x0044   (0x0004)  
};

/// Struct /Script/PlayFab.ServerGetLeaderboardForUsersCharactersRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerGetLeaderboardForUsersCharactersRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
	FString                                            StatisticName;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayerCombinedInfoRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerGetPlayerCombinedInfoRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0010   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayerProfileRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerGetPlayerProfileRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          ProfileConstraints;                                         // 0x0020   (0x0008)  
};

/// Struct /Script/PlayFab.ServerGetPlayersSegmentsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerGetPlayersSegmentsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayersInSegmentRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerGetPlayersInSegmentRequest : FPlayFabRequestCommon
{ 
	FString                                            ContinuationToken;                                          // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	int32_t                                            MaxBatchSize;                                               // 0x0020   (0x0004)  
	int32_t                                            SecondsToLive;                                              // 0x0024   (0x0004)  
	FString                                            SegmentId;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayerStatisticsRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FServerGetPlayerStatisticsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
	FString                                            StatisticNames;                                             // 0x0020   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  StatisticNameVersions;                                      // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayerStatisticVersionsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerGetPlayerStatisticVersionsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            StatisticName;                                              // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayerTagsRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerGetPlayerTagsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Namespace;                                                  // 0x0010   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayFabIDsFromFacebookIDsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPlayFabIDsFromFacebookIDsRequest : FPlayFabRequestCommon
{ 
	FString                                            FacebookIDs;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayFabIDsFromFacebookInstantGamesIdsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsRequest : FPlayFabRequestCommon
{ 
	FString                                            FacebookInstantGamesIds;                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayFabIDsFromGenericIDsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPlayFabIDsFromGenericIDsRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  GenericIDs;                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest : FPlayFabRequestCommon
{ 
	FString                                            NintendoSwitchDeviceIds;                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayFabIDsFromPSNAccountIDsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerGetPlayFabIDsFromPSNAccountIDsRequest : FPlayFabRequestCommon
{ 
	int32_t                                            IssuerId;                                                   // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            PSNAccountIDs;                                              // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayFabIDsFromSteamIDsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPlayFabIDsFromSteamIDsRequest : FPlayFabRequestCommon
{ 
	FString                                            SteamStringIDs;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPlayFabIDsFromXboxLiveIDsRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerGetPlayFabIDsFromXboxLiveIDsRequest : FPlayFabRequestCommon
{ 
	FString                                            Sandbox;                                                    // 0x0008   (0x0010)  
	FString                                            XboxLiveAccountIDs;                                         // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetPublisherDataRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetPublisherDataRequest : FPlayFabRequestCommon
{ 
	FString                                            Keys;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetRandomResultTablesRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerGetRandomResultTablesRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            TableIDs;                                                   // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetServerCustomIDsFromPlayFabIDsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetServerCustomIDsFromPlayFabIDsRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabIds;                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetSharedGroupDataRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerGetSharedGroupDataRequest : FPlayFabRequestCommon
{ 
	bool                                               GetMembers;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	FString                                            Keys;                                                       // 0x0010   (0x0010)  
	FString                                            SharedGroupId;                                              // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetStoreItemsServerRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FServerGetStoreItemsServerRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
	FString                                            StoreId;                                                    // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetTimeRequest
/// Size: 0x0008 (8 bytes) (0x000008 - 0x000008) align 8 MaxSize: 0x0008
struct FServerGetTimeRequest : FPlayFabRequestCommon
{ 
};

/// Struct /Script/PlayFab.ServerGetTitleDataRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerGetTitleDataRequest : FPlayFabRequestCommon
{ 
	FString                                            Keys;                                                       // 0x0008   (0x0010)  
	FString                                            OverrideLabel;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetTitleNewsRequest
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FServerGetTitleNewsRequest : FPlayFabRequestCommon
{ 
	int32_t                                            Count;                                                      // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ServerGetUserAccountInfoRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetUserAccountInfoRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetUserBansRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerGetUserBansRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetUserDataRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerGetUserDataRequest : FPlayFabRequestCommon
{ 
	int32_t                                            IfChangedFromDataVersion;                                   // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            Keys;                                                       // 0x0010   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGetUserInventoryRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerGetUserInventoryRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGrantCharacterToUserRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FServerGrantCharacterToUserRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterName;                                              // 0x0008   (0x0010)  
	FString                                            CharacterType;                                              // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGrantItemsToCharacterRequest
/// Size: 0x0060 (96 bytes) (0x000008 - 0x000060) align 8 MaxSize: 0x0060
struct FServerGrantItemsToCharacterRequest : FPlayFabRequestCommon
{ 
	FString                                            Annotation;                                                 // 0x0008   (0x0010)  
	FString                                            CatalogVersion;                                             // 0x0018   (0x0010)  
	FString                                            CharacterId;                                                // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0038   (0x0008)  
	FString                                            ItemIds;                                                    // 0x0040   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0050   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGrantItemsToUserRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FServerGrantItemsToUserRequest : FPlayFabRequestCommon
{ 
	FString                                            Annotation;                                                 // 0x0008   (0x0010)  
	FString                                            CatalogVersion;                                             // 0x0018   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0028   (0x0008)  
	FString                                            ItemIds;                                                    // 0x0030   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ServerGrantItemsToUsersRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerGrantItemsToUsersRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	TArray<class UPlayFabJsonObject*>                  ItemGrants;                                                 // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerLinkPSNAccountRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FServerLinkPSNAccountRequest : FPlayFabRequestCommon
{ 
	FString                                            AuthCode;                                                   // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0021   (0x0003)  MISSED
	int32_t                                            IssuerId;                                                   // 0x0024   (0x0004)  
	FString                                            PlayFabId;                                                  // 0x0028   (0x0010)  
	FString                                            RedirectUri;                                                // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ServerLinkServerCustomIdRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerLinkServerCustomIdRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	FString                                            ServerCustomId;                                             // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ServerLinkXboxAccountRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerLinkXboxAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               ForceLink;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	FString                                            XboxToken;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ServerLoginWithServerCustomIdRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FServerLoginWithServerCustomIdRequest : FPlayFabRequestCommon
{ 
	bool                                               CreateAccount;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0018   (0x0008)  
	FString                                            PlayerSecret;                                               // 0x0020   (0x0010)  
	FString                                            ServerCustomId;                                             // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ServerLoginWithSteamIdRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerLoginWithSteamIdRequest : FPlayFabRequestCommon
{ 
	bool                                               CreateAccount;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0018   (0x0008)  
	FString                                            SteamId;                                                    // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerLoginWithXboxRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerLoginWithXboxRequest : FPlayFabRequestCommon
{ 
	bool                                               CreateAccount;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0018   (0x0008)  
	FString                                            XboxToken;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerLoginWithXboxIdRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FServerLoginWithXboxIdRequest : FPlayFabRequestCommon
{ 
	bool                                               CreateAccount;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	class UPlayFabJsonObject*                          InfoRequestParameters;                                      // 0x0018   (0x0008)  
	FString                                            Sandbox;                                                    // 0x0020   (0x0010)  
	FString                                            XboxId;                                                     // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ServerModifyItemUsesRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerModifyItemUsesRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            ItemInstanceId;                                             // 0x0010   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
	int32_t                                            UsesToAdd;                                                  // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/PlayFab.ServerMoveItemToCharacterFromCharacterRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FServerMoveItemToCharacterFromCharacterRequest : FPlayFabRequestCommon
{ 
	FString                                            GivingCharacterId;                                          // 0x0008   (0x0010)  
	FString                                            ItemInstanceId;                                             // 0x0018   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0028   (0x0010)  
	FString                                            ReceivingCharacterId;                                       // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ServerMoveItemToCharacterFromUserRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerMoveItemToCharacterFromUserRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	FString                                            ItemInstanceId;                                             // 0x0018   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ServerMoveItemToUserFromCharacterRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerMoveItemToUserFromCharacterRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	FString                                            ItemInstanceId;                                             // 0x0018   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ServerNotifyMatchmakerPlayerLeftRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerNotifyMatchmakerPlayerLeftRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            LobbyId;                                                    // 0x0010   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRedeemCouponRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FServerRedeemCouponRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            CharacterId;                                                // 0x0018   (0x0010)  
	FString                                            CouponCode;                                                 // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0038   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRedeemMatchmakerTicketRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerRedeemMatchmakerTicketRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            LobbyId;                                                    // 0x0010   (0x0010)  
	FString                                            Ticket;                                                     // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRefreshGameServerInstanceHeartbeatRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerRefreshGameServerInstanceHeartbeatRequest : FPlayFabRequestCommon
{ 
	FString                                            LobbyId;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRegisterGameRequest
/// Size: 0x0090 (144 bytes) (0x000008 - 0x000090) align 8 MaxSize: 0x0090
struct FServerRegisterGameRequest : FPlayFabRequestCommon
{ 
	FString                                            Build;                                                      // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            GAMEMODE;                                                   // 0x0020   (0x0010)  
	FString                                            LobbyId;                                                    // 0x0030   (0x0010)  
	ERegion                                            Region;                                                     // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0041   (0x0007)  MISSED
	FString                                            ServerIPV4Address;                                          // 0x0048   (0x0010)  
	FString                                            ServerIPV6Address;                                          // 0x0058   (0x0010)  
	FString                                            ServerPort;                                                 // 0x0068   (0x0010)  
	FString                                            ServerPublicDNSName;                                        // 0x0078   (0x0010)  
	class UPlayFabJsonObject*                          Tags;                                                       // 0x0088   (0x0008)  
};

/// Struct /Script/PlayFab.ServerRemoveFriendRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerRemoveFriendRequest : FPlayFabRequestCommon
{ 
	FString                                            FriendPlayFabId;                                            // 0x0008   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRemoveGenericIDRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerRemoveGenericIDRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          GenericId;                                                  // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRemovePlayerTagRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerRemovePlayerTagRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
	FString                                            TagName;                                                    // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRemoveSharedGroupMembersRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerRemoveSharedGroupMembersRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabIds;                                                 // 0x0008   (0x0010)  
	FString                                            SharedGroupId;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerReportPlayerServerRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FServerReportPlayerServerRequest : FPlayFabRequestCommon
{ 
	FString                                            Comment;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            ReporteeId;                                                 // 0x0020   (0x0010)  
	FString                                            ReporterId;                                                 // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRevokeAllBansForUserRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerRevokeAllBansForUserRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayFabId;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRevokeBansRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerRevokeBansRequest : FPlayFabRequestCommon
{ 
	FString                                            BanIds;                                                     // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRevokeInventoryItemRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerRevokeInventoryItemRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	FString                                            ItemInstanceId;                                             // 0x0018   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ServerRevokeInventoryItemsRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerRevokeInventoryItemsRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Items;                                                      // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerSavePushNotificationTemplateRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FServerSavePushNotificationTemplateRequest : FPlayFabRequestCommon
{ 
	FString                                            AndroidPayload;                                             // 0x0008   (0x0010)  
	FString                                            ID;                                                         // 0x0018   (0x0010)  
	FString                                            IOSPayload;                                                 // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          LocalizedPushNotificationTemplates;                         // 0x0038   (0x0008)  
	FString                                            Name;                                                       // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ServerSendCustomAccountRecoveryEmailRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FServerSendCustomAccountRecoveryEmailRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Email;                                                      // 0x0010   (0x0010)  
	FString                                            EmailTemplateId;                                            // 0x0020   (0x0010)  
	FString                                            Username;                                                   // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ServerSendEmailFromTemplateRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerSendEmailFromTemplateRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            EmailTemplateId;                                            // 0x0010   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerSendPushNotificationRequest
/// Size: 0x0068 (104 bytes) (0x000008 - 0x000068) align 8 MaxSize: 0x0068
struct FServerSendPushNotificationRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  AdvancedPlatformDelivery;                                   // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	FString                                            Message;                                                    // 0x0020   (0x0010)  
	class UPlayFabJsonObject*                          Package;                                                    // 0x0030   (0x0008)  
	FString                                            Recipient;                                                  // 0x0038   (0x0010)  
	FString                                            Subject;                                                    // 0x0048   (0x0010)  
	FString                                            TargetPlatforms;                                            // 0x0058   (0x0010)  
};

/// Struct /Script/PlayFab.ServerSendPushNotificationFromTemplateRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerSendPushNotificationFromTemplateRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PushNotificationTemplateId;                                 // 0x0010   (0x0010)  
	FString                                            Recipient;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerSetFriendTagsRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerSetFriendTagsRequest : FPlayFabRequestCommon
{ 
	FString                                            FriendPlayFabId;                                            // 0x0008   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	FString                                            Tags;                                                       // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ServerSetGameServerInstanceDataRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerSetGameServerInstanceDataRequest : FPlayFabRequestCommon
{ 
	FString                                            GameServerData;                                             // 0x0008   (0x0010)  
	FString                                            LobbyId;                                                    // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerSetGameServerInstanceStateRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerSetGameServerInstanceStateRequest : FPlayFabRequestCommon
{ 
	FString                                            LobbyId;                                                    // 0x0008   (0x0010)  
	EGameInstanceState                                 State;                                                      // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/PlayFab.ServerSetGameServerInstanceTagsRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerSetGameServerInstanceTagsRequest : FPlayFabRequestCommon
{ 
	FString                                            LobbyId;                                                    // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          Tags;                                                       // 0x0018   (0x0008)  
};

/// Struct /Script/PlayFab.ServerSetPlayerSecretRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerSetPlayerSecretRequest : FPlayFabRequestCommon
{ 
	FString                                            PlayerSecret;                                               // 0x0008   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerSetPublisherDataRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerSetPublisherDataRequest : FPlayFabRequestCommon
{ 
	FString                                            Key;                                                        // 0x0008   (0x0010)  
	FString                                            Value;                                                      // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerSetTitleDataRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerSetTitleDataRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            Key;                                                        // 0x0010   (0x0010)  
	FString                                            Value;                                                      // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerSubtractCharacterVirtualCurrencyRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FServerSubtractCharacterVirtualCurrencyRequest : FPlayFabRequestCommon
{ 
	int32_t                                            Amount;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            CharacterId;                                                // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0028   (0x0010)  
	FString                                            VirtualCurrency;                                            // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ServerSubtractUserVirtualCurrencyRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerSubtractUserVirtualCurrencyRequest : FPlayFabRequestCommon
{ 
	int32_t                                            Amount;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	FString                                            VirtualCurrency;                                            // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUnlinkPSNAccountRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerUnlinkPSNAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUnlinkServerCustomIdRequest
/// Size: 0x0030 (48 bytes) (0x000008 - 0x000030) align 8 MaxSize: 0x0030
struct FServerUnlinkServerCustomIdRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
	FString                                            ServerCustomId;                                             // 0x0020   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUnlinkXboxAccountRequest
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FServerUnlinkXboxAccountRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUnlockContainerInstanceRequest
/// Size: 0x0060 (96 bytes) (0x000008 - 0x000060) align 8 MaxSize: 0x0060
struct FServerUnlockContainerInstanceRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            CharacterId;                                                // 0x0018   (0x0010)  
	FString                                            ContainerItemInstanceId;                                    // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0038   (0x0008)  
	FString                                            KeyItemInstanceId;                                          // 0x0040   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0050   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUnlockContainerItemRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FServerUnlockContainerItemRequest : FPlayFabRequestCommon
{ 
	FString                                            CatalogVersion;                                             // 0x0008   (0x0010)  
	FString                                            CharacterId;                                                // 0x0018   (0x0010)  
	FString                                            ContainerItemId;                                            // 0x0028   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0038   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUpdateAvatarUrlRequest
/// Size: 0x0028 (40 bytes) (0x000008 - 0x000028) align 8 MaxSize: 0x0028
struct FServerUpdateAvatarUrlRequest : FPlayFabRequestCommon
{ 
	FString                                            ImageUrl;                                                   // 0x0008   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUpdateBansRequest
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FServerUpdateBansRequest : FPlayFabRequestCommon
{ 
	TArray<class UPlayFabJsonObject*>                  Bans;                                                       // 0x0008   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUpdateCharacterDataRequest
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FServerUpdateCharacterDataRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          Data;                                                       // 0x0020   (0x0008)  
	FString                                            KeysToRemove;                                               // 0x0028   (0x0010)  
	EUserDataPermission                                Permission;                                                 // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
	FString                                            PlayFabId;                                                  // 0x0040   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUpdateCharacterStatisticsRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerUpdateCharacterStatisticsRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CharacterStatistics;                                        // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            PlayFabId;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUpdatePlayerStatisticsRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerUpdatePlayerStatisticsRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	bool                                               ForceUpdate;                                                // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FString                                            PlayFabId;                                                  // 0x0018   (0x0010)  
	TArray<class UPlayFabJsonObject*>                  Statistics;                                                 // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUpdateSharedGroupDataRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FServerUpdateSharedGroupDataRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Data;                                                       // 0x0010   (0x0008)  
	FString                                            KeysToRemove;                                               // 0x0018   (0x0010)  
	EUserDataPermission                                Permission;                                                 // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0029   (0x0007)  MISSED
	FString                                            SharedGroupId;                                              // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUpdateUserDataRequest
/// Size: 0x0040 (64 bytes) (0x000008 - 0x000040) align 8 MaxSize: 0x0040
struct FServerUpdateUserDataRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Data;                                                       // 0x0010   (0x0008)  
	FString                                            KeysToRemove;                                               // 0x0018   (0x0010)  
	EUserDataPermission                                Permission;                                                 // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0029   (0x0007)  MISSED
	FString                                            PlayFabId;                                                  // 0x0030   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUpdateUserInternalDataRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerUpdateUserInternalDataRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          Data;                                                       // 0x0010   (0x0008)  
	FString                                            KeysToRemove;                                               // 0x0018   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/PlayFab.ServerUpdateUserInventoryItemDataRequest
/// Size: 0x0058 (88 bytes) (0x000008 - 0x000058) align 8 MaxSize: 0x0058
struct FServerUpdateUserInventoryItemDataRequest : FPlayFabRequestCommon
{ 
	FString                                            CharacterId;                                                // 0x0008   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0018   (0x0008)  
	class UPlayFabJsonObject*                          Data;                                                       // 0x0020   (0x0008)  
	FString                                            ItemInstanceId;                                             // 0x0028   (0x0010)  
	FString                                            KeysToRemove;                                               // 0x0038   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0048   (0x0010)  
};

/// Struct /Script/PlayFab.ServerWriteServerCharacterEventRequest
/// Size: 0x0058 (88 bytes) (0x000008 - 0x000058) align 8 MaxSize: 0x0058
struct FServerWriteServerCharacterEventRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          Body;                                                       // 0x0008   (0x0008)  
	FString                                            CharacterId;                                                // 0x0010   (0x0010)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0020   (0x0008)  
	FString                                            EventName;                                                  // 0x0028   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0038   (0x0010)  
	FString                                            Timestamp;                                                  // 0x0048   (0x0010)  
};

/// Struct /Script/PlayFab.ServerWriteServerPlayerEventRequest
/// Size: 0x0048 (72 bytes) (0x000008 - 0x000048) align 8 MaxSize: 0x0048
struct FServerWriteServerPlayerEventRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          Body;                                                       // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            EventName;                                                  // 0x0018   (0x0010)  
	FString                                            PlayFabId;                                                  // 0x0028   (0x0010)  
	FString                                            Timestamp;                                                  // 0x0038   (0x0010)  
};

/// Struct /Script/PlayFab.ServerWriteTitleEventRequest
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FServerWriteTitleEventRequest : FPlayFabRequestCommon
{ 
	class UPlayFabJsonObject*                          Body;                                                       // 0x0008   (0x0008)  
	class UPlayFabJsonObject*                          CustomTags;                                                 // 0x0010   (0x0008)  
	FString                                            EventName;                                                  // 0x0018   (0x0010)  
	FString                                            Timestamp;                                                  // 0x0028   (0x0010)  
};

/// Class /Script/PlayFab.PlayFabAdminAPI
/// Size: 0x0800 (2048 bytes) (0x000030 - 0x000800) align 8 MaxSize: 0x0800
class UPlayFabAdminAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,812) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x758];                                     // 0x0040   (0x0758)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x0798   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x07A0   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x07A8   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x07B0   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateUserTitleDisplayName
	// UPlayFabAdminAPI* UpdateUserTitleDisplayName(FAdminUpdateUserTitleDisplayNameRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1859560] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateUserReadOnlyData
	// UPlayFabAdminAPI* UpdateUserReadOnlyData(FAdminUpdateUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1859310] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateUserPublisherReadOnlyData
	// UPlayFabAdminAPI* UpdateUserPublisherReadOnlyData(FAdminUpdateUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18590c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateUserPublisherInternalData
	// UPlayFabAdminAPI* UpdateUserPublisherInternalData(FAdminUpdateUserInternalDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1858e80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateUserPublisherData
	// UPlayFabAdminAPI* UpdateUserPublisherData(FAdminUpdateUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1858c30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateUserInternalData
	// UPlayFabAdminAPI* UpdateUserInternalData(FAdminUpdateUserInternalDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18589f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateUserData
	// UPlayFabAdminAPI* UpdateUserData(FAdminUpdateUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18587a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateTask
	// UPlayFabAdminAPI* UpdateTask(FAdminUpdateTaskRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18584d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateStoreItems
	// UPlayFabAdminAPI* UpdateStoreItems(FAdminUpdateStoreItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1858230] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateSegment
	// UPlayFabAdminAPI* UpdateSegment(FAdminUpdateSegmentRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18580a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateRandomResultTables
	// UPlayFabAdminAPI* UpdateRandomResultTables(FAdminUpdateRandomResultTablesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1857e70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdatePolicy
	// UPlayFabAdminAPI* UpdatePolicy(FAdminUpdatePolicyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1857c30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdatePlayerStatisticDefinition
	// UPlayFabAdminAPI* UpdatePlayerStatisticDefinition(FAdminUpdatePlayerStatisticDefinitionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1857a40] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdatePlayerSharedSecret
	// UPlayFabAdminAPI* UpdatePlayerSharedSecret(FAdminUpdatePlayerSharedSecretRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1857810] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateOpenIdConnection
	// UPlayFabAdminAPI* UpdateOpenIdConnection(FAdminUpdateOpenIdConnectionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1857530] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateCloudScript
	// UPlayFabAdminAPI* UpdateCloudScript(FAdminUpdateCloudScriptRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18572f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateCatalogItems
	// UPlayFabAdminAPI* UpdateCatalogItems(FAdminUpdateCatalogItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18570b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.UpdateBans
	// UPlayFabAdminAPI* UpdateBans(FAdminUpdateBansRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1856ed0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.SubtractUserVirtualCurrency
	// UPlayFabAdminAPI* SubtractUserVirtualCurrency(FAdminSubtractUserVirtualCurrencyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1856c90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.SetupPushNotification
	// UPlayFabAdminAPI* SetupPushNotification(FAdminSetupPushNotificationRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1856a00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.SetTitleInternalData
	// UPlayFabAdminAPI* SetTitleInternalData(FAdminSetTitleDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18567c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.SetTitleDataAndOverrides
	// UPlayFabAdminAPI* SetTitleDataAndOverrides(FAdminSetTitleDataAndOverridesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1856590] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.SetTitleData
	// UPlayFabAdminAPI* SetTitleData(FAdminSetTitleDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1856350] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.SetStoreItems
	// UPlayFabAdminAPI* SetStoreItems(FAdminUpdateStoreItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18560b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.SetPublisherData
	// UPlayFabAdminAPI* SetPublisherData(FAdminSetPublisherDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1855e80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.SetPublishedRevision
	// UPlayFabAdminAPI* SetPublishedRevision(FAdminSetPublishedRevisionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1855ce0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.SetPlayerSecret
	// UPlayFabAdminAPI* SetPlayerSecret(FAdminSetPlayerSecretRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1855ab0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.SetMembershipOverride
	// UPlayFabAdminAPI* SetMembershipOverride(FAdminSetMembershipOverrideRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1855830] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.SetCatalogItems
	// UPlayFabAdminAPI* SetCatalogItems(FAdminUpdateCatalogItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18555f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.SendAccountRecoveryEmail
	// UPlayFabAdminAPI* SendAccountRecoveryEmail(FAdminSendAccountRecoveryEmailRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18553b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.RunTask
	// UPlayFabAdminAPI* RunTask(FAdminRunTaskRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1855210] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.RevokeInventoryItems
	// UPlayFabAdminAPI* RevokeInventoryItems(FAdminRevokeInventoryItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1855030] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.RevokeInventoryItem
	// UPlayFabAdminAPI* RevokeInventoryItem(FAdminRevokeInventoryItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1854db0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.RevokeBans
	// UPlayFabAdminAPI* RevokeBans(FAdminRevokeBansRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1854bd0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.RevokeAllBansForUser
	// UPlayFabAdminAPI* RevokeAllBansForUser(FAdminRevokeAllBansForUserRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18549f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.ResolvePurchaseDispute
	// UPlayFabAdminAPI* ResolvePurchaseDispute(FAdminResolvePurchaseDisputeRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1854770] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.ResetUserStatistics
	// UPlayFabAdminAPI* ResetUserStatistics(FAdminResetUserStatisticsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1854580] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.ResetPassword
	// UPlayFabAdminAPI* ResetPassword(FAdminResetPasswordRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1854340] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.ResetCharacterStatistics
	// UPlayFabAdminAPI* ResetCharacterStatistics(FAdminResetCharacterStatisticsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1854110] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.RemoveVirtualCurrencyTypes
	// UPlayFabAdminAPI* RemoveVirtualCurrencyTypes(FAdminRemoveVirtualCurrencyTypesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1853f30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.RemovePlayerTag
	// UPlayFabAdminAPI* RemovePlayerTag(FAdminRemovePlayerTagRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1853cf0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.RefundPurchase
	// UPlayFabAdminAPI* RefundPurchase(FAdminRefundPurchaseRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1853a70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.ModifyServerBuild
	// UPlayFabAdminAPI* ModifyServerBuild(FAdminModifyServerBuildRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18536c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.ListVirtualCurrencyTypes
	// UPlayFabAdminAPI* ListVirtualCurrencyTypes(FAdminListVirtualCurrencyTypesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1853550] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.ListOpenIdConnection
	// UPlayFabAdminAPI* ListOpenIdConnection(FAdminListOpenIdConnectionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18533e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.IncrementPlayerStatisticVersion
	// UPlayFabAdminAPI* IncrementPlayerStatisticVersion(FAdminIncrementPlayerStatisticVersionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18531f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.IncrementLimitedEditionItemAvailability
	// UPlayFabAdminAPI* IncrementLimitedEditionItemAvailability(FAdminIncrementLimitedEditionItemAvailabilityRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1852fb0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateUserTitleDisplayName
	void HelperUpdateUserTitleDisplayName(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1852d80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateUserReadOnlyData
	void HelperUpdateUserReadOnlyData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1852b50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateUserPublisherReadOnlyData
	void HelperUpdateUserPublisherReadOnlyData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1852920] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateUserPublisherInternalData
	void HelperUpdateUserPublisherInternalData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18526f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateUserPublisherData
	void HelperUpdateUserPublisherData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18524c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateUserInternalData
	void HelperUpdateUserInternalData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1852290] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateUserData
	void HelperUpdateUserData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1852060] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateTask
	void HelperUpdateTask(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1851e30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateStoreItems
	void HelperUpdateStoreItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1851c00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[55]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateSegment
	void HelperUpdateSegment(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18519d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[56]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateRandomResultTables
	void HelperUpdateRandomResultTables(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18517a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[57]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdatePolicy
	void HelperUpdatePolicy(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1851570] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[58]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdatePlayerStatisticDefinition
	void HelperUpdatePlayerStatisticDefinition(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1851340] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[59]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdatePlayerSharedSecret
	void HelperUpdatePlayerSharedSecret(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1851110] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[60]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateOpenIdConnection
	void HelperUpdateOpenIdConnection(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1850ee0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[61]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateCloudScript
	void HelperUpdateCloudScript(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1850cb0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[62]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateCatalogItems
	void HelperUpdateCatalogItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1850a80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[63]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperUpdateBans
	void HelperUpdateBans(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1850850] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[64]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperSubtractUserVirtualCurrency
	void HelperSubtractUserVirtualCurrency(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1850620] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[65]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperSetupPushNotification
	void HelperSetupPushNotification(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18503f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[66]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperSetTitleInternalData
	void HelperSetTitleInternalData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18501c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[67]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperSetTitleDataAndOverrides
	void HelperSetTitleDataAndOverrides(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184ff90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[68]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperSetTitleData
	void HelperSetTitleData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184fd60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[69]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperSetStoreItems
	void HelperSetStoreItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184fb30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[70]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperSetPublisherData
	void HelperSetPublisherData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184f900] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[71]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperSetPublishedRevision
	void HelperSetPublishedRevision(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184f6d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[72]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperSetPlayerSecret
	void HelperSetPlayerSecret(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184f4a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[73]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperSetMembershipOverride
	void HelperSetMembershipOverride(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184f270] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[74]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperSetCatalogItems
	void HelperSetCatalogItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184f040] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[75]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperSendAccountRecoveryEmail
	void HelperSendAccountRecoveryEmail(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184ee10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[76]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperRunTask
	void HelperRunTask(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184ebe0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[77]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperRevokeInventoryItems
	void HelperRevokeInventoryItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184e9b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[78]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperRevokeInventoryItem
	void HelperRevokeInventoryItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184e780] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[79]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperRevokeBans
	void HelperRevokeBans(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184e550] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[80]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperRevokeAllBansForUser
	void HelperRevokeAllBansForUser(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184e320] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[81]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperResolvePurchaseDispute
	void HelperResolvePurchaseDispute(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184e0f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[82]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperResetUserStatistics
	void HelperResetUserStatistics(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184dec0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[83]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperResetPassword
	void HelperResetPassword(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184dc90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[84]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperResetCharacterStatistics
	void HelperResetCharacterStatistics(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184da60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[85]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperRemoveVirtualCurrencyTypes
	void HelperRemoveVirtualCurrencyTypes(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184d830] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[86]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperRemovePlayerTag
	void HelperRemovePlayerTag(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184d600] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[87]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperRefundPurchase
	void HelperRefundPurchase(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184d3d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[88]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperModifyServerBuild
	void HelperModifyServerBuild(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184d1a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[89]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperListVirtualCurrencyTypes
	void HelperListVirtualCurrencyTypes(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184cf70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[90]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperListOpenIdConnection
	void HelperListOpenIdConnection(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184cd40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[91]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperIncrementPlayerStatisticVersion
	void HelperIncrementPlayerStatisticVersion(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184cb10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[92]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperIncrementLimitedEditionItemAvailability
	void HelperIncrementLimitedEditionItemAvailability(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184c8e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[93]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGrantItemsToUsers
	void HelperGrantItemsToUsers(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184c6b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[94]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetUserReadOnlyData
	void HelperGetUserReadOnlyData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184c480] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[95]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetUserPublisherReadOnlyData
	void HelperGetUserPublisherReadOnlyData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184c250] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[96]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetUserPublisherInternalData
	void HelperGetUserPublisherInternalData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184c020] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[97]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetUserPublisherData
	void HelperGetUserPublisherData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184bdf0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[98]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetUserInventory
	void HelperGetUserInventory(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184bbc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[99]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetUserInternalData
	void HelperGetUserInternalData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184b990] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[100]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetUserData
	void HelperGetUserData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184b760] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[101]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetUserBans
	void HelperGetUserBans(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184b530] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[102]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetUserAccountInfo
	void HelperGetUserAccountInfo(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184b300] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[103]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetTitleInternalData
	void HelperGetTitleInternalData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184b0d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[104]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetTitleData
	void HelperGetTitleData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184aea0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[105]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetTasks
	void HelperGetTasks(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184ac70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[106]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetTaskInstances
	void HelperGetTaskInstances(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184aa40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[107]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetStoreItems
	void HelperGetStoreItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184a810] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[108]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetSegments
	void HelperGetSegments(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184a5e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[109]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetRandomResultTables
	void HelperGetRandomResultTables(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184a3b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[110]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetPublisherData
	void HelperGetPublisherData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184a180] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[111]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetPolicy
	void HelperGetPolicy(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1849f50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[112]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetPlayerTags
	void HelperGetPlayerTags(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1849af0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[113]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetPlayerStatisticVersions
	void HelperGetPlayerStatisticVersions(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18498c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[114]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetPlayerStatisticDefinitions
	void HelperGetPlayerStatisticDefinitions(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1849690] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[115]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetPlayersInSegment
	void HelperGetPlayersInSegment(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1849d20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[116]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetPlayerSharedSecrets
	void HelperGetPlayerSharedSecrets(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1849460] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[117]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetPlayerSegments
	void HelperGetPlayerSegments(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1849230] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[118]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetPlayerProfile
	void HelperGetPlayerProfile(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1849000] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[119]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetPlayerIdFromAuthToken
	void HelperGetPlayerIdFromAuthToken(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1848dd0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[120]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetPlayedTitleList
	void HelperGetPlayedTitleList(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1848ba0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[121]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetMatchmakerGameModes
	void HelperGetMatchmakerGameModes(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1848970] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[122]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetMatchmakerGameInfo
	void HelperGetMatchmakerGameInfo(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1848740] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[123]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetDataReport
	void HelperGetDataReport(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1848510] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[124]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetContentUploadUrl
	void HelperGetContentUploadUrl(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18482e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[125]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetContentList
	void HelperGetContentList(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18480b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[126]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetCloudScriptVersions
	void HelperGetCloudScriptVersions(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1847e80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[127]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetCloudScriptTaskInstance
	void HelperGetCloudScriptTaskInstance(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1847c50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[128]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetCloudScriptRevision
	void HelperGetCloudScriptRevision(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1847a20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[129]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetCatalogItems
	void HelperGetCatalogItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18477f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[130]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetAllSegments
	void HelperGetAllSegments(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18475c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[131]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperGetActionsOnPlayersInSegmentTaskInstance
	void HelperGetActionsOnPlayersInSegmentTaskInstance(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1847390] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[132]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperExportMasterPlayerData
	void HelperExportMasterPlayerData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1847160] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[133]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperDeleteTitleDataOverride
	void HelperDeleteTitleDataOverride(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1846f30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[134]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperDeleteTitle
	void HelperDeleteTitle(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1846d00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[135]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperDeleteTask
	void HelperDeleteTask(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1846ad0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[136]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperDeleteStore
	void HelperDeleteStore(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18468a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[137]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperDeleteSegment
	void HelperDeleteSegment(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1846670] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[138]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperDeletePlayerSharedSecret
	void HelperDeletePlayerSharedSecret(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1846440] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[139]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperDeletePlayer
	void HelperDeletePlayer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1846210] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[140]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperDeleteOpenIdConnection
	void HelperDeleteOpenIdConnection(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1845fe0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[141]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperDeleteMembershipSubscription
	void HelperDeleteMembershipSubscription(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1845db0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[142]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperDeleteMasterPlayerAccount
	void HelperDeleteMasterPlayerAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1845b80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[143]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperDeleteContent
	void HelperDeleteContent(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1845950] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[144]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperCreateSegment
	void HelperCreateSegment(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1845720] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[145]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperCreatePlayerStatisticDefinition
	void HelperCreatePlayerStatisticDefinition(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18454f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[146]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperCreatePlayerSharedSecret
	void HelperCreatePlayerSharedSecret(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18452c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[147]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperCreateOpenIdConnection
	void HelperCreateOpenIdConnection(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1845090] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[148]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperCreateInsightsScheduledScalingTask
	void HelperCreateInsightsScheduledScalingTask(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1844e60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[149]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperCreateCloudScriptTask
	void HelperCreateCloudScriptTask(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1844c30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[150]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperCreateActionsOnPlayersInSegmentTask
	void HelperCreateActionsOnPlayersInSegmentTask(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1844a00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[151]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperCheckLimitedEditionItemAvailability
	void HelperCheckLimitedEditionItemAvailability(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18447d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[152]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperBanUsers
	void HelperBanUsers(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18445a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[153]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperAddVirtualCurrencyTypes
	void HelperAddVirtualCurrencyTypes(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1844370] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[154]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperAddUserVirtualCurrency
	void HelperAddUserVirtualCurrency(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1844140] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[155]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperAddPlayerTag
	void HelperAddPlayerTag(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1843f10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[156]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperAddNews
	void HelperAddNews(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1843ce0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[157]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperAddLocalizedNews
	void HelperAddLocalizedNews(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1843ab0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[158]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.HelperAbortTaskInstance
	void HelperAbortTaskInstance(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1843880] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[159]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.GrantItemsToUsers
	// UPlayFabAdminAPI* GrantItemsToUsers(FAdminGrantItemsToUsersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1843650] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetUserReadOnlyData
	// UPlayFabAdminAPI* GetUserReadOnlyData(FAdminGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1843420] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetUserPublisherReadOnlyData
	// UPlayFabAdminAPI* GetUserPublisherReadOnlyData(FAdminGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18431f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetUserPublisherInternalData
	// UPlayFabAdminAPI* GetUserPublisherInternalData(FAdminGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1842fc0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetUserPublisherData
	// UPlayFabAdminAPI* GetUserPublisherData(FAdminGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1842d90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetUserInventory
	// UPlayFabAdminAPI* GetUserInventory(FAdminGetUserInventoryRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1842ba0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetUserInternalData
	// UPlayFabAdminAPI* GetUserInternalData(FAdminGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1842970] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetUserData
	// UPlayFabAdminAPI* GetUserData(FAdminGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1842740] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetUserBans
	// UPlayFabAdminAPI* GetUserBans(FAdminGetUserBansRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1842560] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetUserAccountInfo
	// UPlayFabAdminAPI* GetUserAccountInfo(FAdminLookupUserAccountInfoRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1842290] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetTitleInternalData
	// UPlayFabAdminAPI* GetTitleInternalData(FAdminGetTitleDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1842060] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetTitleData
	// UPlayFabAdminAPI* GetTitleData(FAdminGetTitleDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1841e30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetTasks
	// UPlayFabAdminAPI* GetTasks(FAdminGetTasksRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1841ca0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetTaskInstances
	// UPlayFabAdminAPI* GetTaskInstances(FAdminGetTaskInstancesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1841a60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetStoreItems
	// UPlayFabAdminAPI* GetStoreItems(FAdminGetStoreItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1841830] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetSegments
	// UPlayFabAdminAPI* GetSegments(FAdminGetSegmentsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1841650] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetRandomResultTables
	// UPlayFabAdminAPI* GetRandomResultTables(FAdminGetRandomResultTablesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1841470] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetPublisherData
	// UPlayFabAdminAPI* GetPublisherData(FAdminGetPublisherDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1841290] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetPolicy
	// UPlayFabAdminAPI* GetPolicy(FAdminGetPolicyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18410b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetPlayerTags
	// UPlayFabAdminAPI* GetPlayerTags(FAdminGetPlayerTagsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1840c20] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetPlayerStatisticVersions
	// UPlayFabAdminAPI* GetPlayerStatisticVersions(FAdminGetPlayerStatisticVersionsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1840a30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetPlayerStatisticDefinitions
	// UPlayFabAdminAPI* GetPlayerStatisticDefinitions(FAdminGetPlayerStatisticDefinitionsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18408c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetPlayersInSegment
	// UPlayFabAdminAPI* GetPlayersInSegment(FAdminGetPlayersInSegmentRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1840e60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetPlayerSharedSecrets
	// UPlayFabAdminAPI* GetPlayerSharedSecrets(FAdminGetPlayerSharedSecretsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1840750] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetPlayerSegments
	// UPlayFabAdminAPI* GetPlayerSegments(FAdminGetPlayersSegmentsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1840560] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetPlayerProfile
	// UPlayFabAdminAPI* GetPlayerProfile(FAdminGetPlayerProfileRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1840370] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetPlayerIdFromAuthToken
	// UPlayFabAdminAPI* GetPlayerIdFromAuthToken(FAdminGetPlayerIdFromAuthTokenRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1840190] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetPlayedTitleList
	// UPlayFabAdminAPI* GetPlayedTitleList(FAdminGetPlayedTitleListRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183ffb0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetMatchmakerGameModes
	// UPlayFabAdminAPI* GetMatchmakerGameModes(FAdminGetMatchmakerGameModesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183fdd0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetMatchmakerGameInfo
	// UPlayFabAdminAPI* GetMatchmakerGameInfo(FAdminGetMatchmakerGameInfoRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183fbf0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetDataReport
	// UPlayFabAdminAPI* GetDataReport(FAdminGetDataReportRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183fa00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetContentUploadUrl
	// UPlayFabAdminAPI* GetContentUploadUrl(FAdminGetContentUploadUrlRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183f7d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetContentList
	// UPlayFabAdminAPI* GetContentList(FAdminGetContentListRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183f5f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetCloudScriptVersions
	// UPlayFabAdminAPI* GetCloudScriptVersions(FAdminGetCloudScriptVersionsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183f480] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetCloudScriptTaskInstance
	// UPlayFabAdminAPI* GetCloudScriptTaskInstance(FAdminGetTaskInstanceRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183f2a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetCloudScriptRevision
	// UPlayFabAdminAPI* GetCloudScriptRevision(FAdminGetCloudScriptRevisionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183f110] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetCatalogItems
	// UPlayFabAdminAPI* GetCatalogItems(FAdminGetCatalogItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183ef30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetAllSegments
	// UPlayFabAdminAPI* GetAllSegments(FAdminGetAllSegmentsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183edc0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.GetActionsOnPlayersInSegmentTaskInstance
	// UPlayFabAdminAPI* GetActionsOnPlayersInSegmentTaskInstance(FAdminGetTaskInstanceRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183ebe0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.ExportMasterPlayerData
	// UPlayFabAdminAPI* ExportMasterPlayerData(FAdminExportMasterPlayerDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183ea00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.DeleteTitleDataOverride
	// UPlayFabAdminAPI* DeleteTitleDataOverride(FAdminDeleteTitleDataOverrideRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183e820] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.DeleteTitle
	// UPlayFabAdminAPI* DeleteTitle(FAdminDeleteTitleRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183e6b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.DeleteTask
	// UPlayFabAdminAPI* DeleteTask(FAdminDeleteTaskRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183e520] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.DeleteStore
	// UPlayFabAdminAPI* DeleteStore(FAdminDeleteStoreRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183e2f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.DeleteSegment
	// UPlayFabAdminAPI* DeleteSegment(FAdminDeleteSegmentRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183e110] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.DeletePlayerSharedSecret
	// UPlayFabAdminAPI* DeletePlayerSharedSecret(FAdminDeletePlayerSharedSecretRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183df30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.DeletePlayer
	// UPlayFabAdminAPI* DeletePlayer(FAdminDeletePlayerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183dd50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.DeleteOpenIdConnection
	// UPlayFabAdminAPI* DeleteOpenIdConnection(FAdminDeleteOpenIdConnectionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183db70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.DeleteMembershipSubscription
	// UPlayFabAdminAPI* DeleteMembershipSubscription(FAdminDeleteMembershipSubscriptionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183d8f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.DeleteMasterPlayerAccount
	// UPlayFabAdminAPI* DeleteMasterPlayerAccount(FAdminDeleteMasterPlayerAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183d6c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.DeleteContent
	// UPlayFabAdminAPI* DeleteContent(FAdminDeleteContentRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183d4e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature
	void DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature(FAdminUpdateUserTitleDisplayNameResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateUserTitleDisplayNameResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[211]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature
	void DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature(FAdminUpdateUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[212]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature
	void DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature(FAdminUpdateUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[213]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature
	void DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature(FAdminUpdateUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[214]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateUserPublisherData__DelegateSignature
	void DelegateOnSuccessUpdateUserPublisherData__DelegateSignature(FAdminUpdateUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[215]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateUserInternalData__DelegateSignature
	void DelegateOnSuccessUpdateUserInternalData__DelegateSignature(FAdminUpdateUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[216]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateUserData__DelegateSignature
	void DelegateOnSuccessUpdateUserData__DelegateSignature(FAdminUpdateUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[217]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateTask__DelegateSignature
	void DelegateOnSuccessUpdateTask__DelegateSignature(FAdminEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[218]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateStoreItems__DelegateSignature
	void DelegateOnSuccessUpdateStoreItems__DelegateSignature(FAdminUpdateStoreItemsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateStoreItemsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[219]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateSegment__DelegateSignature
	void DelegateOnSuccessUpdateSegment__DelegateSignature(FAdminUpdateSegmentResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateSegmentResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[220]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateRandomResultTables__DelegateSignature
	void DelegateOnSuccessUpdateRandomResultTables__DelegateSignature(FAdminUpdateRandomResultTablesResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateRandomResultTablesResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[221]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdatePolicy__DelegateSignature
	void DelegateOnSuccessUpdatePolicy__DelegateSignature(FAdminUpdatePolicyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdatePolicyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[222]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdatePlayerStatisticDefinition__DelegateSignature
	void DelegateOnSuccessUpdatePlayerStatisticDefinition__DelegateSignature(FAdminUpdatePlayerStatisticDefinitionResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdatePlayerStatisticDefinitionResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[223]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdatePlayerSharedSecret__DelegateSignature
	void DelegateOnSuccessUpdatePlayerSharedSecret__DelegateSignature(FAdminUpdatePlayerSharedSecretResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdatePlayerSharedSecretResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[224]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateOpenIdConnection__DelegateSignature
	void DelegateOnSuccessUpdateOpenIdConnection__DelegateSignature(FAdminEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[225]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateCloudScript__DelegateSignature
	void DelegateOnSuccessUpdateCloudScript__DelegateSignature(FAdminUpdateCloudScriptResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateCloudScriptResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[226]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateCatalogItems__DelegateSignature
	void DelegateOnSuccessUpdateCatalogItems__DelegateSignature(FAdminUpdateCatalogItemsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateCatalogItemsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[227]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateBans__DelegateSignature
	void DelegateOnSuccessUpdateBans__DelegateSignature(FAdminUpdateBansResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateBansResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[228]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature
	void DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature(FAdminModifyUserVirtualCurrencyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminModifyUserVirtualCurrencyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[229]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetupPushNotification__DelegateSignature
	void DelegateOnSuccessSetupPushNotification__DelegateSignature(FAdminSetupPushNotificationResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminSetupPushNotificationResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[230]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetTitleInternalData__DelegateSignature
	void DelegateOnSuccessSetTitleInternalData__DelegateSignature(FAdminSetTitleDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminSetTitleDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[231]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetTitleDataAndOverrides__DelegateSignature
	void DelegateOnSuccessSetTitleDataAndOverrides__DelegateSignature(FAdminSetTitleDataAndOverridesResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminSetTitleDataAndOverridesResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[232]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetTitleData__DelegateSignature
	void DelegateOnSuccessSetTitleData__DelegateSignature(FAdminSetTitleDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminSetTitleDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[233]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetStoreItems__DelegateSignature
	void DelegateOnSuccessSetStoreItems__DelegateSignature(FAdminUpdateStoreItemsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateStoreItemsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[234]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetPublisherData__DelegateSignature
	void DelegateOnSuccessSetPublisherData__DelegateSignature(FAdminSetPublisherDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminSetPublisherDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[235]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetPublishedRevision__DelegateSignature
	void DelegateOnSuccessSetPublishedRevision__DelegateSignature(FAdminSetPublishedRevisionResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminSetPublishedRevisionResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[236]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetPlayerSecret__DelegateSignature
	void DelegateOnSuccessSetPlayerSecret__DelegateSignature(FAdminSetPlayerSecretResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminSetPlayerSecretResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[237]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetMembershipOverride__DelegateSignature
	void DelegateOnSuccessSetMembershipOverride__DelegateSignature(FAdminSetMembershipOverrideResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminSetMembershipOverrideResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[238]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetCatalogItems__DelegateSignature
	void DelegateOnSuccessSetCatalogItems__DelegateSignature(FAdminUpdateCatalogItemsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminUpdateCatalogItemsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[239]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature
	void DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature(FAdminSendAccountRecoveryEmailResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminSendAccountRecoveryEmailResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[240]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessRunTask__DelegateSignature
	void DelegateOnSuccessRunTask__DelegateSignature(FAdminRunTaskResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminRunTaskResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[241]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessRevokeInventoryItems__DelegateSignature
	void DelegateOnSuccessRevokeInventoryItems__DelegateSignature(FAdminRevokeInventoryItemsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminRevokeInventoryItemsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[242]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessRevokeInventoryItem__DelegateSignature
	void DelegateOnSuccessRevokeInventoryItem__DelegateSignature(FAdminRevokeInventoryResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminRevokeInventoryResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[243]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessRevokeBans__DelegateSignature
	void DelegateOnSuccessRevokeBans__DelegateSignature(FAdminRevokeBansResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminRevokeBansResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[244]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessRevokeAllBansForUser__DelegateSignature
	void DelegateOnSuccessRevokeAllBansForUser__DelegateSignature(FAdminRevokeAllBansForUserResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminRevokeAllBansForUserResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[245]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessResolvePurchaseDispute__DelegateSignature
	void DelegateOnSuccessResolvePurchaseDispute__DelegateSignature(FAdminResolvePurchaseDisputeResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminResolvePurchaseDisputeResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[246]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessResetUserStatistics__DelegateSignature
	void DelegateOnSuccessResetUserStatistics__DelegateSignature(FAdminResetUserStatisticsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminResetUserStatisticsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[247]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessResetPassword__DelegateSignature
	void DelegateOnSuccessResetPassword__DelegateSignature(FAdminResetPasswordResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminResetPasswordResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[248]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessResetCharacterStatistics__DelegateSignature
	void DelegateOnSuccessResetCharacterStatistics__DelegateSignature(FAdminResetCharacterStatisticsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminResetCharacterStatisticsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[249]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessRemoveVirtualCurrencyTypes__DelegateSignature
	void DelegateOnSuccessRemoveVirtualCurrencyTypes__DelegateSignature(FAdminBlankResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminBlankResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[250]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessRemovePlayerTag__DelegateSignature
	void DelegateOnSuccessRemovePlayerTag__DelegateSignature(FAdminRemovePlayerTagResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminRemovePlayerTagResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[251]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessRefundPurchase__DelegateSignature
	void DelegateOnSuccessRefundPurchase__DelegateSignature(FAdminRefundPurchaseResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminRefundPurchaseResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[252]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessModifyServerBuild__DelegateSignature
	void DelegateOnSuccessModifyServerBuild__DelegateSignature(FAdminModifyServerBuildResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminModifyServerBuildResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[253]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessListVirtualCurrencyTypes__DelegateSignature
	void DelegateOnSuccessListVirtualCurrencyTypes__DelegateSignature(FAdminListVirtualCurrencyTypesResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminListVirtualCurrencyTypesResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[254]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessListOpenIdConnection__DelegateSignature
	void DelegateOnSuccessListOpenIdConnection__DelegateSignature(FAdminListOpenIdConnectionResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminListOpenIdConnectionResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[255]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessIncrementPlayerStatisticVersion__DelegateSignature
	void DelegateOnSuccessIncrementPlayerStatisticVersion__DelegateSignature(FAdminIncrementPlayerStatisticVersionResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminIncrementPlayerStatisticVersionResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[256]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessIncrementLimitedEditionItemAvailability__DelegateSignature
	void DelegateOnSuccessIncrementLimitedEditionItemAvailability__DelegateSignature(FAdminIncrementLimitedEditionItemAvailabilityResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminIncrementLimitedEditionItemAvailabilityResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[257]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGrantItemsToUsers__DelegateSignature
	void DelegateOnSuccessGrantItemsToUsers__DelegateSignature(FAdminGrantItemsToUsersResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGrantItemsToUsersResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[258]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserReadOnlyData__DelegateSignature
	void DelegateOnSuccessGetUserReadOnlyData__DelegateSignature(FAdminGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[259]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature
	void DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature(FAdminGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[260]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature
	void DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature(FAdminGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[261]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserPublisherData__DelegateSignature
	void DelegateOnSuccessGetUserPublisherData__DelegateSignature(FAdminGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[262]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserInventory__DelegateSignature
	void DelegateOnSuccessGetUserInventory__DelegateSignature(FAdminGetUserInventoryResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetUserInventoryResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[263]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserInternalData__DelegateSignature
	void DelegateOnSuccessGetUserInternalData__DelegateSignature(FAdminGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[264]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserData__DelegateSignature
	void DelegateOnSuccessGetUserData__DelegateSignature(FAdminGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[265]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserBans__DelegateSignature
	void DelegateOnSuccessGetUserBans__DelegateSignature(FAdminGetUserBansResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetUserBansResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[266]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserAccountInfo__DelegateSignature
	void DelegateOnSuccessGetUserAccountInfo__DelegateSignature(FAdminLookupUserAccountInfoResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminLookupUserAccountInfoResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[267]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetTitleInternalData__DelegateSignature
	void DelegateOnSuccessGetTitleInternalData__DelegateSignature(FAdminGetTitleDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetTitleDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[268]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetTitleData__DelegateSignature
	void DelegateOnSuccessGetTitleData__DelegateSignature(FAdminGetTitleDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetTitleDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[269]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetTasks__DelegateSignature
	void DelegateOnSuccessGetTasks__DelegateSignature(FAdminGetTasksResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetTasksResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[270]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetTaskInstances__DelegateSignature
	void DelegateOnSuccessGetTaskInstances__DelegateSignature(FAdminGetTaskInstancesResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetTaskInstancesResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[271]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetStoreItems__DelegateSignature
	void DelegateOnSuccessGetStoreItems__DelegateSignature(FAdminGetStoreItemsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetStoreItemsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[272]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetSegments__DelegateSignature
	void DelegateOnSuccessGetSegments__DelegateSignature(FAdminGetSegmentsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetSegmentsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[273]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetRandomResultTables__DelegateSignature
	void DelegateOnSuccessGetRandomResultTables__DelegateSignature(FAdminGetRandomResultTablesResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetRandomResultTablesResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[274]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPublisherData__DelegateSignature
	void DelegateOnSuccessGetPublisherData__DelegateSignature(FAdminGetPublisherDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetPublisherDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[275]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPolicy__DelegateSignature
	void DelegateOnSuccessGetPolicy__DelegateSignature(FAdminGetPolicyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetPolicyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[276]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayerTags__DelegateSignature
	void DelegateOnSuccessGetPlayerTags__DelegateSignature(FAdminGetPlayerTagsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetPlayerTagsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[277]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature
	void DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature(FAdminGetPlayerStatisticVersionsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetPlayerStatisticVersionsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[278]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayerStatisticDefinitions__DelegateSignature
	void DelegateOnSuccessGetPlayerStatisticDefinitions__DelegateSignature(FAdminGetPlayerStatisticDefinitionsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetPlayerStatisticDefinitionsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[279]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayersInSegment__DelegateSignature
	void DelegateOnSuccessGetPlayersInSegment__DelegateSignature(FAdminGetPlayersInSegmentResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetPlayersInSegmentResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[280]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayerSharedSecrets__DelegateSignature
	void DelegateOnSuccessGetPlayerSharedSecrets__DelegateSignature(FAdminGetPlayerSharedSecretsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetPlayerSharedSecretsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[281]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayerSegments__DelegateSignature
	void DelegateOnSuccessGetPlayerSegments__DelegateSignature(FAdminGetPlayerSegmentsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetPlayerSegmentsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[282]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayerProfile__DelegateSignature
	void DelegateOnSuccessGetPlayerProfile__DelegateSignature(FAdminGetPlayerProfileResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetPlayerProfileResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[283]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayerIdFromAuthToken__DelegateSignature
	void DelegateOnSuccessGetPlayerIdFromAuthToken__DelegateSignature(FAdminGetPlayerIdFromAuthTokenResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetPlayerIdFromAuthTokenResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[284]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayedTitleList__DelegateSignature
	void DelegateOnSuccessGetPlayedTitleList__DelegateSignature(FAdminGetPlayedTitleListResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetPlayedTitleListResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[285]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetMatchmakerGameModes__DelegateSignature
	void DelegateOnSuccessGetMatchmakerGameModes__DelegateSignature(FAdminGetMatchmakerGameModesResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetMatchmakerGameModesResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[286]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetMatchmakerGameInfo__DelegateSignature
	void DelegateOnSuccessGetMatchmakerGameInfo__DelegateSignature(FAdminGetMatchmakerGameInfoResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetMatchmakerGameInfoResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[287]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetDataReport__DelegateSignature
	void DelegateOnSuccessGetDataReport__DelegateSignature(FAdminGetDataReportResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetDataReportResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[288]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetContentUploadUrl__DelegateSignature
	void DelegateOnSuccessGetContentUploadUrl__DelegateSignature(FAdminGetContentUploadUrlResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetContentUploadUrlResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[289]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetContentList__DelegateSignature
	void DelegateOnSuccessGetContentList__DelegateSignature(FAdminGetContentListResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetContentListResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[290]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetCloudScriptVersions__DelegateSignature
	void DelegateOnSuccessGetCloudScriptVersions__DelegateSignature(FAdminGetCloudScriptVersionsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetCloudScriptVersionsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[291]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetCloudScriptTaskInstance__DelegateSignature
	void DelegateOnSuccessGetCloudScriptTaskInstance__DelegateSignature(FAdminGetCloudScriptTaskInstanceResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetCloudScriptTaskInstanceResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[292]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetCloudScriptRevision__DelegateSignature
	void DelegateOnSuccessGetCloudScriptRevision__DelegateSignature(FAdminGetCloudScriptRevisionResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetCloudScriptRevisionResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[293]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetCatalogItems__DelegateSignature
	void DelegateOnSuccessGetCatalogItems__DelegateSignature(FAdminGetCatalogItemsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetCatalogItemsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[294]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetAllSegments__DelegateSignature
	void DelegateOnSuccessGetAllSegments__DelegateSignature(FAdminGetAllSegmentsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetAllSegmentsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[295]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetActionsOnPlayersInSegmentTaskInstance__DelegateSignature
	void DelegateOnSuccessGetActionsOnPlayersInSegmentTaskInstance__DelegateSignature(FAdminGetActionsOnPlayersInSegmentTaskInstanceResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminGetActionsOnPlayersInSegmentTaskInstanceResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[296]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessExportMasterPlayerData__DelegateSignature
	void DelegateOnSuccessExportMasterPlayerData__DelegateSignature(FAdminExportMasterPlayerDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminExportMasterPlayerDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[297]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteTitleDataOverride__DelegateSignature
	void DelegateOnSuccessDeleteTitleDataOverride__DelegateSignature(FAdminDeleteTitleDataOverrideResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminDeleteTitleDataOverrideResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[298]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteTitle__DelegateSignature
	void DelegateOnSuccessDeleteTitle__DelegateSignature(FAdminDeleteTitleResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminDeleteTitleResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[299]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteTask__DelegateSignature
	void DelegateOnSuccessDeleteTask__DelegateSignature(FAdminEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[300]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteStore__DelegateSignature
	void DelegateOnSuccessDeleteStore__DelegateSignature(FAdminDeleteStoreResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminDeleteStoreResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[301]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteSegment__DelegateSignature
	void DelegateOnSuccessDeleteSegment__DelegateSignature(FAdminDeleteSegmentsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminDeleteSegmentsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[302]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeletePlayerSharedSecret__DelegateSignature
	void DelegateOnSuccessDeletePlayerSharedSecret__DelegateSignature(FAdminDeletePlayerSharedSecretResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminDeletePlayerSharedSecretResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[303]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeletePlayer__DelegateSignature
	void DelegateOnSuccessDeletePlayer__DelegateSignature(FAdminDeletePlayerResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminDeletePlayerResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[304]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteOpenIdConnection__DelegateSignature
	void DelegateOnSuccessDeleteOpenIdConnection__DelegateSignature(FAdminEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[305]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteMembershipSubscription__DelegateSignature
	void DelegateOnSuccessDeleteMembershipSubscription__DelegateSignature(FAdminDeleteMembershipSubscriptionResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminDeleteMembershipSubscriptionResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[306]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteMasterPlayerAccount__DelegateSignature
	void DelegateOnSuccessDeleteMasterPlayerAccount__DelegateSignature(FAdminDeleteMasterPlayerAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminDeleteMasterPlayerAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[307]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteContent__DelegateSignature
	void DelegateOnSuccessDeleteContent__DelegateSignature(FAdminBlankResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminBlankResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[308]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessCreateSegment__DelegateSignature
	void DelegateOnSuccessCreateSegment__DelegateSignature(FAdminCreateSegmentResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminCreateSegmentResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[309]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessCreatePlayerStatisticDefinition__DelegateSignature
	void DelegateOnSuccessCreatePlayerStatisticDefinition__DelegateSignature(FAdminCreatePlayerStatisticDefinitionResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminCreatePlayerStatisticDefinitionResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[310]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessCreatePlayerSharedSecret__DelegateSignature
	void DelegateOnSuccessCreatePlayerSharedSecret__DelegateSignature(FAdminCreatePlayerSharedSecretResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminCreatePlayerSharedSecretResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[311]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessCreateOpenIdConnection__DelegateSignature
	void DelegateOnSuccessCreateOpenIdConnection__DelegateSignature(FAdminEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[312]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessCreateInsightsScheduledScalingTask__DelegateSignature
	void DelegateOnSuccessCreateInsightsScheduledScalingTask__DelegateSignature(FAdminCreateTaskResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminCreateTaskResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[313]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessCreateCloudScriptTask__DelegateSignature
	void DelegateOnSuccessCreateCloudScriptTask__DelegateSignature(FAdminCreateTaskResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminCreateTaskResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[314]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessCreateActionsOnPlayersInSegmentTask__DelegateSignature
	void DelegateOnSuccessCreateActionsOnPlayersInSegmentTask__DelegateSignature(FAdminCreateTaskResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminCreateTaskResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[315]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessCheckLimitedEditionItemAvailability__DelegateSignature
	void DelegateOnSuccessCheckLimitedEditionItemAvailability__DelegateSignature(FAdminCheckLimitedEditionItemAvailabilityResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminCheckLimitedEditionItemAvailabilityResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[316]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessBanUsers__DelegateSignature
	void DelegateOnSuccessBanUsers__DelegateSignature(FAdminBanUsersResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminBanUsersResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[317]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessAddVirtualCurrencyTypes__DelegateSignature
	void DelegateOnSuccessAddVirtualCurrencyTypes__DelegateSignature(FAdminBlankResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminBlankResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[318]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature
	void DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature(FAdminModifyUserVirtualCurrencyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminModifyUserVirtualCurrencyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[319]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessAddPlayerTag__DelegateSignature
	void DelegateOnSuccessAddPlayerTag__DelegateSignature(FAdminAddPlayerTagResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminAddPlayerTagResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[320]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessAddNews__DelegateSignature
	void DelegateOnSuccessAddNews__DelegateSignature(FAdminAddNewsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminAddNewsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[321]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessAddLocalizedNews__DelegateSignature
	void DelegateOnSuccessAddLocalizedNews__DelegateSignature(FAdminAddLocalizedNewsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminAddLocalizedNewsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[322]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnSuccessAbortTaskInstance__DelegateSignature
	void DelegateOnSuccessAbortTaskInstance__DelegateSignature(FAdminEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAdminEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[323]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[324]);
		func(Error, customData);
	}
	// Function /Script/PlayFab.PlayFabAdminAPI.CreateSegment
	// UPlayFabAdminAPI* CreateSegment(FAdminCreateSegmentRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183d350] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.CreatePlayerStatisticDefinition
	// UPlayFabAdminAPI* CreatePlayerStatisticDefinition(FAdminCreatePlayerStatisticDefinitionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183d160] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.CreatePlayerSharedSecret
	// UPlayFabAdminAPI* CreatePlayerSharedSecret(FAdminCreatePlayerSharedSecretRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183cf80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.CreateOpenIdConnection
	// UPlayFabAdminAPI* CreateOpenIdConnection(FAdminCreateOpenIdConnectionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183cc80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.CreateInsightsScheduledScalingTask
	// UPlayFabAdminAPI* CreateInsightsScheduledScalingTask(FAdminCreateInsightsScheduledScalingTaskRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183c9d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.CreateCloudScriptTask
	// UPlayFabAdminAPI* CreateCloudScriptTask(FAdminCreateCloudScriptTaskRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183c720] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.CreateActionsOnPlayersInSegmentTask
	// UPlayFabAdminAPI* CreateActionsOnPlayersInSegmentTask(FAdminCreateActionsOnPlayerSegmentTaskRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183c470] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.CheckLimitedEditionItemAvailability
	// UPlayFabAdminAPI* CheckLimitedEditionItemAvailability(FAdminCheckLimitedEditionItemAvailabilityRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183c240] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.BanUsers
	// UPlayFabAdminAPI* BanUsers(FAdminBanUsersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183c050] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.AddVirtualCurrencyTypes
	// UPlayFabAdminAPI* AddVirtualCurrencyTypes(FAdminAddVirtualCurrencyTypesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183be70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.AddUserVirtualCurrency
	// UPlayFabAdminAPI* AddUserVirtualCurrency(FAdminAddUserVirtualCurrencyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183bc30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.AddPlayerTag
	// UPlayFabAdminAPI* AddPlayerTag(FAdminAddPlayerTagRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183b9f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.AddNews
	// UPlayFabAdminAPI* AddNews(FAdminAddNewsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183b770] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.AddLocalizedNews
	// UPlayFabAdminAPI* AddLocalizedNews(FAdminAddLocalizedNewsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183b490] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAdminAPI.AbortTaskInstance
	// UPlayFabAdminAPI* AbortTaskInstance(FAdminAbortTaskInstanceRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x183b2a0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/PlayFab.PlayFabAdminModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabAdminModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeUpdateUserTitleDisplayNameResultResponse
	FAdminUpdateUserTitleDisplayNameResult decodeUpdateUserTitleDisplayNameResultResponse(UPlayFabJsonObject* response) // [0x185dc40] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminUpdateUserTitleDisplayNameResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeUpdateUserDataResultResponse
	FAdminUpdateUserDataResult decodeUpdateUserDataResultResponse(UPlayFabJsonObject* response) // [0x185dbb0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminUpdateUserDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeUpdateStoreItemsResultResponse
	FAdminUpdateStoreItemsResult decodeUpdateStoreItemsResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminUpdateStoreItemsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeUpdateSegmentResponseResponse
	FAdminUpdateSegmentResponse decodeUpdateSegmentResponseResponse(UPlayFabJsonObject* response) // [0x185b220] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminUpdateSegmentResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeUpdateRandomResultTablesResultResponse
	FAdminUpdateRandomResultTablesResult decodeUpdateRandomResultTablesResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminUpdateRandomResultTablesResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeUpdatePolicyResponseResponse
	FAdminUpdatePolicyResponse decodeUpdatePolicyResponseResponse(UPlayFabJsonObject* response) // [0x185da90] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminUpdatePolicyResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeUpdatePlayerStatisticDefinitionResultResponse
	FAdminUpdatePlayerStatisticDefinitionResult decodeUpdatePlayerStatisticDefinitionResultResponse(UPlayFabJsonObject* response) // [0x185b190] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminUpdatePlayerStatisticDefinitionResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeUpdatePlayerSharedSecretResultResponse
	FAdminUpdatePlayerSharedSecretResult decodeUpdatePlayerSharedSecretResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminUpdatePlayerSharedSecretResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeUpdateCloudScriptResultResponse
	FAdminUpdateCloudScriptResult decodeUpdateCloudScriptResultResponse(UPlayFabJsonObject* response) // [0x185da00] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminUpdateCloudScriptResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeUpdateCatalogItemsResultResponse
	FAdminUpdateCatalogItemsResult decodeUpdateCatalogItemsResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminUpdateCatalogItemsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeUpdateBansResultResponse
	FAdminUpdateBansResult decodeUpdateBansResultResponse(UPlayFabJsonObject* response) // [0x185af40] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminUpdateBansResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeSetupPushNotificationResultResponse
	FAdminSetupPushNotificationResult decodeSetupPushNotificationResultResponse(UPlayFabJsonObject* response) // [0x185d920] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminSetupPushNotificationResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeSetTitleDataResultResponse
	FAdminSetTitleDataResult decodeSetTitleDataResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminSetTitleDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeSetTitleDataAndOverridesResultResponse
	FAdminSetTitleDataAndOverridesResult decodeSetTitleDataAndOverridesResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminSetTitleDataAndOverridesResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeSetPublisherDataResultResponse
	FAdminSetPublisherDataResult decodeSetPublisherDataResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminSetPublisherDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeSetPublishedRevisionResultResponse
	FAdminSetPublishedRevisionResult decodeSetPublishedRevisionResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminSetPublishedRevisionResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeSetPlayerSecretResultResponse
	FAdminSetPlayerSecretResult decodeSetPlayerSecretResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminSetPlayerSecretResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeSetMembershipOverrideResultResponse
	FAdminSetMembershipOverrideResult decodeSetMembershipOverrideResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminSetMembershipOverrideResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeSendAccountRecoveryEmailResultResponse
	FAdminSendAccountRecoveryEmailResult decodeSendAccountRecoveryEmailResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminSendAccountRecoveryEmailResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeRunTaskResultResponse
	FAdminRunTaskResult decodeRunTaskResultResponse(UPlayFabJsonObject* response) // [0x185d840] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminRunTaskResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeRevokeInventoryResultResponse
	FAdminRevokeInventoryResult decodeRevokeInventoryResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminRevokeInventoryResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeRevokeInventoryItemsResultResponse
	FAdminRevokeInventoryItemsResult decodeRevokeInventoryItemsResultResponse(UPlayFabJsonObject* response) // [0x185d760] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminRevokeInventoryItemsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeRevokeBansResultResponse
	FAdminRevokeBansResult decodeRevokeBansResultResponse(UPlayFabJsonObject* response) // [0x185af40] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminRevokeBansResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeRevokeAllBansForUserResultResponse
	FAdminRevokeAllBansForUserResult decodeRevokeAllBansForUserResultResponse(UPlayFabJsonObject* response) // [0x185af40] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminRevokeAllBansForUserResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeResolvePurchaseDisputeResponseResponse
	FAdminResolvePurchaseDisputeResponse decodeResolvePurchaseDisputeResponseResponse(UPlayFabJsonObject* response) // [0x185d680] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminResolvePurchaseDisputeResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeResetUserStatisticsResultResponse
	FAdminResetUserStatisticsResult decodeResetUserStatisticsResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminResetUserStatisticsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeResetPasswordResultResponse
	FAdminResetPasswordResult decodeResetPasswordResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminResetPasswordResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeResetCharacterStatisticsResultResponse
	FAdminResetCharacterStatisticsResult decodeResetCharacterStatisticsResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminResetCharacterStatisticsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeRemovePlayerTagResultResponse
	FAdminRemovePlayerTagResult decodeRemovePlayerTagResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminRemovePlayerTagResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeRefundPurchaseResponseResponse
	FAdminRefundPurchaseResponse decodeRefundPurchaseResponseResponse(UPlayFabJsonObject* response) // [0x185d680] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminRefundPurchaseResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeModifyUserVirtualCurrencyResultResponse
	FAdminModifyUserVirtualCurrencyResult decodeModifyUserVirtualCurrencyResultResponse(UPlayFabJsonObject* response) // [0x185d550] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminModifyUserVirtualCurrencyResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeModifyServerBuildResultResponse
	FAdminModifyServerBuildResult decodeModifyServerBuildResultResponse(UPlayFabJsonObject* response) // [0x185d430] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminModifyServerBuildResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeLookupUserAccountInfoResultResponse
	FAdminLookupUserAccountInfoResult decodeLookupUserAccountInfoResultResponse(UPlayFabJsonObject* response) // [0x185d3a0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminLookupUserAccountInfoResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeListVirtualCurrencyTypesResultResponse
	FAdminListVirtualCurrencyTypesResult decodeListVirtualCurrencyTypesResultResponse(UPlayFabJsonObject* response) // [0x185d2c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminListVirtualCurrencyTypesResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeListOpenIdConnectionResponseResponse
	FAdminListOpenIdConnectionResponse decodeListOpenIdConnectionResponseResponse(UPlayFabJsonObject* response) // [0x185d1e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminListOpenIdConnectionResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeIncrementPlayerStatisticVersionResultResponse
	FAdminIncrementPlayerStatisticVersionResult decodeIncrementPlayerStatisticVersionResultResponse(UPlayFabJsonObject* response) // [0x185d150] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminIncrementPlayerStatisticVersionResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeIncrementLimitedEditionItemAvailabilityResultResponse
	FAdminIncrementLimitedEditionItemAvailabilityResult decodeIncrementLimitedEditionItemAvailabilityResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminIncrementLimitedEditionItemAvailabilityResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGrantItemsToUsersResultResponse
	FAdminGrantItemsToUsersResult decodeGrantItemsToUsersResultResponse(UPlayFabJsonObject* response) // [0x185d070] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGrantItemsToUsersResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetUserInventoryResultResponse
	FAdminGetUserInventoryResult decodeGetUserInventoryResultResponse(UPlayFabJsonObject* response) // [0x185cf30] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetUserInventoryResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetUserDataResultResponse
	FAdminGetUserDataResult decodeGetUserDataResultResponse(UPlayFabJsonObject* response) // [0x185ce50] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetUserDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[39]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetUserBansResultResponse
	FAdminGetUserBansResult decodeGetUserBansResultResponse(UPlayFabJsonObject* response) // [0x185af40] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetUserBansResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[40]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetTitleDataResultResponse
	FAdminGetTitleDataResult decodeGetTitleDataResultResponse(UPlayFabJsonObject* response) // [0x185c8d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetTitleDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[41]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetTasksResultResponse
	FAdminGetTasksResult decodeGetTasksResultResponse(UPlayFabJsonObject* response) // [0x185cd70] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetTasksResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetTaskInstancesResultResponse
	FAdminGetTaskInstancesResult decodeGetTaskInstancesResultResponse(UPlayFabJsonObject* response) // [0x185cc90] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetTaskInstancesResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetStoreItemsResultResponse
	FAdminGetStoreItemsResult decodeGetStoreItemsResultResponse(UPlayFabJsonObject* response) // [0x185cb10] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetStoreItemsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetSegmentsResponseResponse
	FAdminGetSegmentsResponse decodeGetSegmentsResponseResponse(UPlayFabJsonObject* response) // [0x185c9f0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetSegmentsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetRandomResultTablesResultResponse
	FAdminGetRandomResultTablesResult decodeGetRandomResultTablesResultResponse(UPlayFabJsonObject* response) // [0x185c960] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetRandomResultTablesResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetPublisherDataResultResponse
	FAdminGetPublisherDataResult decodeGetPublisherDataResultResponse(UPlayFabJsonObject* response) // [0x185c8d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetPublisherDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetPolicyResponseResponse
	FAdminGetPolicyResponse decodeGetPolicyResponseResponse(UPlayFabJsonObject* response) // [0x185c7a0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetPolicyResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerTagsResultResponse
	FAdminGetPlayerTagsResult decodeGetPlayerTagsResultResponse(UPlayFabJsonObject* response) // [0x185c550] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetPlayerTagsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerStatisticVersionsResultResponse
	FAdminGetPlayerStatisticVersionsResult decodeGetPlayerStatisticVersionsResultResponse(UPlayFabJsonObject* response) // [0x185c470] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetPlayerStatisticVersionsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerStatisticDefinitionsResultResponse
	FAdminGetPlayerStatisticDefinitionsResult decodeGetPlayerStatisticDefinitionsResultResponse(UPlayFabJsonObject* response) // [0x185c390] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetPlayerStatisticDefinitionsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetPlayersInSegmentResultResponse
	FAdminGetPlayersInSegmentResult decodeGetPlayersInSegmentResultResponse(UPlayFabJsonObject* response) // [0x185c670] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetPlayersInSegmentResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerSharedSecretsResultResponse
	FAdminGetPlayerSharedSecretsResult decodeGetPlayerSharedSecretsResultResponse(UPlayFabJsonObject* response) // [0x185c2b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetPlayerSharedSecretsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerSegmentsResultResponse
	FAdminGetPlayerSegmentsResult decodeGetPlayerSegmentsResultResponse(UPlayFabJsonObject* response) // [0x185b7a0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetPlayerSegmentsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerProfileResultResponse
	FAdminGetPlayerProfileResult decodeGetPlayerProfileResultResponse(UPlayFabJsonObject* response) // [0x185c220] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetPlayerProfileResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[55]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerIdFromAuthTokenResultResponse
	FAdminGetPlayerIdFromAuthTokenResult decodeGetPlayerIdFromAuthTokenResultResponse(UPlayFabJsonObject* response) // [0x185c140] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetPlayerIdFromAuthTokenResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[56]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetPlayedTitleListResultResponse
	FAdminGetPlayedTitleListResult decodeGetPlayedTitleListResultResponse(UPlayFabJsonObject* response) // [0x185c060] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetPlayedTitleListResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[57]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetMatchmakerGameModesResultResponse
	FAdminGetMatchmakerGameModesResult decodeGetMatchmakerGameModesResultResponse(UPlayFabJsonObject* response) // [0x185bf80] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetMatchmakerGameModesResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[58]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetMatchmakerGameInfoResultResponse
	FAdminGetMatchmakerGameInfoResult decodeGetMatchmakerGameInfoResultResponse(UPlayFabJsonObject* response) // [0x185be30] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetMatchmakerGameInfoResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[59]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetDataReportResultResponse
	FAdminGetDataReportResult decodeGetDataReportResultResponse(UPlayFabJsonObject* response) // [0x185bd50] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetDataReportResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[60]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetContentUploadUrlResultResponse
	FAdminGetContentUploadUrlResult decodeGetContentUploadUrlResultResponse(UPlayFabJsonObject* response) // [0x185bc70] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetContentUploadUrlResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[61]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetContentListResultResponse
	FAdminGetContentListResult decodeGetContentListResultResponse(UPlayFabJsonObject* response) // [0x185bb80] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetContentListResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[62]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetCloudScriptVersionsResultResponse
	FAdminGetCloudScriptVersionsResult decodeGetCloudScriptVersionsResultResponse(UPlayFabJsonObject* response) // [0x185baa0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetCloudScriptVersionsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[63]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetCloudScriptTaskInstanceResultResponse
	FAdminGetCloudScriptTaskInstanceResult decodeGetCloudScriptTaskInstanceResultResponse(UPlayFabJsonObject* response) // [0x185b700] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetCloudScriptTaskInstanceResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[64]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetCloudScriptRevisionResultResponse
	FAdminGetCloudScriptRevisionResult decodeGetCloudScriptRevisionResultResponse(UPlayFabJsonObject* response) // [0x185b960] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetCloudScriptRevisionResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[65]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetCatalogItemsResultResponse
	FAdminGetCatalogItemsResult decodeGetCatalogItemsResultResponse(UPlayFabJsonObject* response) // [0x185b880] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetCatalogItemsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[66]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetAllSegmentsResultResponse
	FAdminGetAllSegmentsResult decodeGetAllSegmentsResultResponse(UPlayFabJsonObject* response) // [0x185b7a0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetAllSegmentsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[67]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse
	FAdminGetActionsOnPlayersInSegmentTaskInstanceResult decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse(UPlayFabJsonObject* response) // [0x185b700] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminGetActionsOnPlayersInSegmentTaskInstanceResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[68]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeExportMasterPlayerDataResultResponse
	FAdminExportMasterPlayerDataResult decodeExportMasterPlayerDataResultResponse(UPlayFabJsonObject* response) // [0x185b620] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminExportMasterPlayerDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[69]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeEmptyResponseResponse
	FAdminEmptyResponse decodeEmptyResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminEmptyResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[70]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeDeleteTitleResultResponse
	FAdminDeleteTitleResult decodeDeleteTitleResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminDeleteTitleResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[71]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeDeleteTitleDataOverrideResultResponse
	FAdminDeleteTitleDataOverrideResult decodeDeleteTitleDataOverrideResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminDeleteTitleDataOverrideResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[72]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeDeleteStoreResultResponse
	FAdminDeleteStoreResult decodeDeleteStoreResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminDeleteStoreResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[73]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeDeleteSegmentsResponseResponse
	FAdminDeleteSegmentsResponse decodeDeleteSegmentsResponseResponse(UPlayFabJsonObject* response) // [0x185b540] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminDeleteSegmentsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[74]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeDeletePlayerSharedSecretResultResponse
	FAdminDeletePlayerSharedSecretResult decodeDeletePlayerSharedSecretResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminDeletePlayerSharedSecretResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[75]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeDeletePlayerResultResponse
	FAdminDeletePlayerResult decodeDeletePlayerResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminDeletePlayerResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[76]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeDeleteMembershipSubscriptionResultResponse
	FAdminDeleteMembershipSubscriptionResult decodeDeleteMembershipSubscriptionResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminDeleteMembershipSubscriptionResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[77]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeDeleteMasterPlayerAccountResultResponse
	FAdminDeleteMasterPlayerAccountResult decodeDeleteMasterPlayerAccountResultResponse(UPlayFabJsonObject* response) // [0x185b420] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminDeleteMasterPlayerAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[78]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeCreateTaskResultResponse
	FAdminCreateTaskResult decodeCreateTaskResultResponse(UPlayFabJsonObject* response) // [0x185b340] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminCreateTaskResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[79]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeCreateSegmentResponseResponse
	FAdminCreateSegmentResponse decodeCreateSegmentResponseResponse(UPlayFabJsonObject* response) // [0x185b220] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminCreateSegmentResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[80]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeCreatePlayerStatisticDefinitionResultResponse
	FAdminCreatePlayerStatisticDefinitionResult decodeCreatePlayerStatisticDefinitionResultResponse(UPlayFabJsonObject* response) // [0x185b190] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminCreatePlayerStatisticDefinitionResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[81]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeCreatePlayerSharedSecretResultResponse
	FAdminCreatePlayerSharedSecretResult decodeCreatePlayerSharedSecretResultResponse(UPlayFabJsonObject* response) // [0x185b0b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminCreatePlayerSharedSecretResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[82]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeCheckLimitedEditionItemAvailabilityResultResponse
	FAdminCheckLimitedEditionItemAvailabilityResult decodeCheckLimitedEditionItemAvailabilityResultResponse(UPlayFabJsonObject* response) // [0x185b020] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminCheckLimitedEditionItemAvailabilityResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[83]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeBlankResultResponse
	FAdminBlankResult decodeBlankResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminBlankResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[84]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeBanUsersResultResponse
	FAdminBanUsersResult decodeBanUsersResultResponse(UPlayFabJsonObject* response) // [0x185af40] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminBanUsersResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[85]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeAddPlayerTagResultResponse
	FAdminAddPlayerTagResult decodeAddPlayerTagResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminAddPlayerTagResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[86]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeAddNewsResultResponse
	FAdminAddNewsResult decodeAddNewsResultResponse(UPlayFabJsonObject* response) // [0x185ae60] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminAddNewsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[87]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAdminModelDecoder.decodeAddLocalizedNewsResultResponse
	FAdminAddLocalizedNewsResult decodeAddLocalizedNewsResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAdminAddLocalizedNewsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[88]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabAuthenticationAPI
/// Size: 0x0110 (272 bytes) (0x000030 - 0x000110) align 8 MaxSize: 0x0110
class UPlayFabAuthenticationAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,813) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x68];                                      // 0x0040   (0x0068)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x00A8   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x00B0   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x00C0   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabAuthenticationAPI.ValidateEntityToken
	// UPlayFabAuthenticationAPI* ValidateEntityToken(FAuthenticationValidateEntityTokenRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x189a4e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAuthenticationAPI.HelperValidateEntityToken
	void HelperValidateEntityToken(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188d820] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAuthenticationAPI.HelperGetEntityToken
	void HelperGetEntityToken(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187c250] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabAuthenticationAPI.GetEntityToken
	// UPlayFabAuthenticationAPI* GetEntityToken(FAuthenticationGetEntityTokenRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1872ad0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabAuthenticationAPI.DelegateOnSuccessValidateEntityToken__DelegateSignature
	void DelegateOnSuccessValidateEntityToken__DelegateSignature(FAuthenticationValidateEntityTokenResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAuthenticationValidateEntityTokenResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAuthenticationAPI.DelegateOnSuccessGetEntityToken__DelegateSignature
	void DelegateOnSuccessGetEntityToken__DelegateSignature(FAuthenticationGetEntityTokenResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FAuthenticationGetEntityTokenResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabAuthenticationAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(Error, customData);
	}
};

/// Class /Script/PlayFab.PlayFabAuthenticationModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabAuthenticationModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabAuthenticationModelDecoder.decodeValidateEntityTokenResponseResponse
	FAuthenticationValidateEntityTokenResponse decodeValidateEntityTokenResponseResponse(UPlayFabJsonObject* response) // [0x189b760] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAuthenticationValidateEntityTokenResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabAuthenticationModelDecoder.decodeGetEntityTokenResponseResponse
	FAuthenticationGetEntityTokenResponse decodeGetEntityTokenResponseResponse(UPlayFabJsonObject* response) // [0x189b630] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FAuthenticationGetEntityTokenResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabClientAPI
/// Size: 0x0B00 (2816 bytes) (0x000030 - 0x000B00) align 8 MaxSize: 0x0B00
class UPlayFabClientAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,814) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0xA58];                                     // 0x0040   (0x0A58)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x0A98   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x0AA0   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x0AA8   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x0AB0   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabClientAPI.WriteTitleEvent
	// UPlayFabClientAPI* WriteTitleEvent(FClientWriteTitleEventRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x189b3f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.WritePlayerEvent
	// UPlayFabClientAPI* WritePlayerEvent(FClientWriteClientPlayerEventRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x189b1b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.WriteCharacterEvent
	// UPlayFabClientAPI* WriteCharacterEvent(FClientWriteClientCharacterEventRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x189af10] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.ValidateWindowsStoreReceipt
	// UPlayFabClientAPI* ValidateWindowsStoreReceipt(FClientValidateWindowsReceiptRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x189ac70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.ValidateIOSReceipt
	// UPlayFabClientAPI* ValidateIOSReceipt(FClientValidateIOSReceiptRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x189a9d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.ValidateGooglePlayPurchase
	// UPlayFabClientAPI* ValidateGooglePlayPurchase(FClientValidateGooglePlayPurchaseRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x189a6d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.ValidateAmazonIAPReceipt
	// UPlayFabClientAPI* ValidateAmazonIAPReceipt(FClientValidateAmazonReceiptRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x189a1e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UpdateUserTitleDisplayName
	// UPlayFabClientAPI* UpdateUserTitleDisplayName(FClientUpdateUserTitleDisplayNameRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1899ff0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UpdateUserPublisherData
	// UPlayFabClientAPI* UpdateUserPublisherData(FClientUpdateUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1899df0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UpdateUserData
	// UPlayFabClientAPI* UpdateUserData(FClientUpdateUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1899bf0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UpdateSharedGroupData
	// UPlayFabClientAPI* UpdateSharedGroupData(FClientUpdateSharedGroupDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18999a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UpdatePlayerStatistics
	// UPlayFabClientAPI* UpdatePlayerStatistics(FClientUpdatePlayerStatisticsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18997b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UpdateCharacterStatistics
	// UPlayFabClientAPI* UpdateCharacterStatistics(FClientUpdateCharacterStatisticsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18995c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UpdateCharacterData
	// UPlayFabClientAPI* UpdateCharacterData(FClientUpdateCharacterDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1899370] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UpdateAvatarUrl
	// UPlayFabClientAPI* UpdateAvatarUrl(FClientUpdateAvatarUrlRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1899190] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlockContainerItem
	// UPlayFabClientAPI* UnlockContainerItem(FClientUnlockContainerItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1898f10] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlockContainerInstance
	// UPlayFabClientAPI* UnlockContainerInstance(FClientUnlockContainerInstanceRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1898c30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkXboxAccount
	// UPlayFabClientAPI* UnlinkXboxAccount(FClientUnlinkXboxAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1898aa0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkTwitch
	// UPlayFabClientAPI* UnlinkTwitch(FClientUnlinkTwitchAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18988b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkSteamAccount
	// UPlayFabClientAPI* UnlinkSteamAccount(FClientUnlinkSteamAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1898720] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkPSNAccount
	// UPlayFabClientAPI* UnlinkPSNAccount(FClientUnlinkPSNAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1898590] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkOpenIdConnect
	// UPlayFabClientAPI* UnlinkOpenIdConnect(FClientUnlinkOpenIdConnectRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18983a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkNintendoSwitchDeviceId
	// UPlayFabClientAPI* UnlinkNintendoSwitchDeviceId(FClientUnlinkNintendoSwitchDeviceIdRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18981b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkNintendoServiceAccount
	// UPlayFabClientAPI* UnlinkNintendoServiceAccount(FClientUnlinkNintendoServiceAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1898020] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkKongregate
	// UPlayFabClientAPI* UnlinkKongregate(FClientUnlinkKongregateAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1897e90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkIOSDeviceID
	// UPlayFabClientAPI* UnlinkIOSDeviceID(FClientUnlinkIOSDeviceIDRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1897ca0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkGoogleAccount
	// UPlayFabClientAPI* UnlinkGoogleAccount(FClientUnlinkGoogleAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1897b10] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkGameCenterAccount
	// UPlayFabClientAPI* UnlinkGameCenterAccount(FClientUnlinkGameCenterAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1897980] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkFacebookInstantGamesId
	// UPlayFabClientAPI* UnlinkFacebookInstantGamesId(FClientUnlinkFacebookInstantGamesIdRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1897790] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkFacebookAccount
	// UPlayFabClientAPI* UnlinkFacebookAccount(FClientUnlinkFacebookAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1897600] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkCustomID
	// UPlayFabClientAPI* UnlinkCustomID(FClientUnlinkCustomIDRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1897410] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkApple
	// UPlayFabClientAPI* UnlinkApple(FClientUnlinkAppleRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1897280] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.UnlinkAndroidDeviceID
	// UPlayFabClientAPI* UnlinkAndroidDeviceID(FClientUnlinkAndroidDeviceIDRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1897090] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.SubtractUserVirtualCurrency
	// UPlayFabClientAPI* SubtractUserVirtualCurrency(FClientSubtractUserVirtualCurrencyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1896ea0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.StartPurchase
	// UPlayFabClientAPI* StartPurchase(FClientStartPurchaseRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1896c10] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.SetPlayerSecret
	// UPlayFabClientAPI* SetPlayerSecret(FClientSetPlayerSecretRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18969e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.SetFriendTags
	// UPlayFabClientAPI* SetFriendTags(FClientSetFriendTagsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18967b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.SendAccountRecoveryEmail
	// UPlayFabClientAPI* SendAccountRecoveryEmail(FClientSendAccountRecoveryEmailRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1896570] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.RewardAdActivity
	// UPlayFabClientAPI* RewardAdActivity(FClientRewardAdActivityRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1896330] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.RestoreIOSPurchases
	// UPlayFabClientAPI* RestoreIOSPurchases(FClientRestoreIOSPurchasesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1896100] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.ReportPlayer
	// UPlayFabClientAPI* ReportPlayer(FClientReportPlayerClientRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1895ed0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.ReportDeviceInfo
	// UPlayFabClientAPI* ReportDeviceInfo(FClientDeviceInfoRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1895d40] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.ReportAdActivity
	// UPlayFabClientAPI* ReportAdActivity(FClientReportAdActivityRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1895b00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.RemoveSharedGroupMembers
	// UPlayFabClientAPI* RemoveSharedGroupMembers(FClientRemoveSharedGroupMembersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18958d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.RemoveGenericID
	// UPlayFabClientAPI* RemoveGenericID(FClientRemoveGenericIDRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1895740] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.RemoveFriend
	// UPlayFabClientAPI* RemoveFriend(FClientRemoveFriendRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1895560] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.RemoveContactEmail
	// UPlayFabClientAPI* RemoveContactEmail(FClientRemoveContactEmailRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18953d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.RegisterPlayFabUser
	// UPlayFabClientAPI* RegisterPlayFabUser(FClientRegisterPlayFabUserRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1895020] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.RegisterForIOSPushNotification
	// UPlayFabClientAPI* RegisterForIOSPushNotification(FClientRegisterForIOSPushNotificationRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1894df0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.RefreshPSNAuthToken
	// UPlayFabClientAPI* RefreshPSNAuthToken(FClientRefreshPSNAuthTokenRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1894bc0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.RedeemCoupon
	// UPlayFabClientAPI* RedeemCoupon(FClientRedeemCouponRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1894940] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.PurchaseItem
	// UPlayFabClientAPI* PurchaseItem(FClientPurchaseItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18945f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.PayForPurchase
	// UPlayFabClientAPI* PayForPurchase(FClientPayForPurchaseRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1894310] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.OpenTrade
	// UPlayFabClientAPI* OpenTrade(FClientOpenTradeRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1894090] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.Matchmake
	// UPlayFabClientAPI* Matchmake(FClientMatchmakeRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1893d30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithXbox
	// UPlayFabClientAPI* LoginWithXbox(FClientLoginWithXboxRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1893a80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithTwitch
	// UPlayFabClientAPI* LoginWithTwitch(FClientLoginWithTwitchRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18937e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithSteam
	// UPlayFabClientAPI* LoginWithSteam(FClientLoginWithSteamRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1893530] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithPSN
	// UPlayFabClientAPI* LoginWithPSN(FClientLoginWithPSNRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1892fe0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithPlayFab
	// UPlayFabClientAPI* LoginWithPlayFab(FClientLoginWithPlayFabRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18932f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithOpenIdConnect
	// UPlayFabClientAPI* LoginWithOpenIdConnect(FClientLoginWithOpenIdConnectRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1892ce0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithNintendoSwitchDeviceId
	// UPlayFabClientAPI* LoginWithNintendoSwitchDeviceId(FClientLoginWithNintendoSwitchDeviceIdRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1892a30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithNintendoServiceAccount
	// UPlayFabClientAPI* LoginWithNintendoServiceAccount(FClientLoginWithNintendoServiceAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1892780] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithKongregate
	// UPlayFabClientAPI* LoginWithKongregate(FClientLoginWithKongregateRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1892480] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithIOSDeviceID
	// UPlayFabClientAPI* LoginWithIOSDeviceID(FClientLoginWithIOSDeviceIDRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1892120] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithGoogleAccount
	// UPlayFabClientAPI* LoginWithGoogleAccount(FClientLoginWithGoogleAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1891e70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithGameCenter
	// UPlayFabClientAPI* LoginWithGameCenter(FClientLoginWithGameCenterRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1891a70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithFacebookInstantGamesId
	// UPlayFabClientAPI* LoginWithFacebookInstantGamesId(FClientLoginWithFacebookInstantGamesIdRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18917c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithFacebook
	// UPlayFabClientAPI* LoginWithFacebook(FClientLoginWithFacebookRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1891520] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithEmailAddress
	// UPlayFabClientAPI* LoginWithEmailAddress(FClientLoginWithEmailAddressRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18912e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithCustomID
	// UPlayFabClientAPI* LoginWithCustomID(FClientLoginWithCustomIDRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1891030] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithApple
	// UPlayFabClientAPI* LoginWithApple(FClientLoginWithAppleRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1890d80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LoginWithAndroidDeviceID
	// UPlayFabClientAPI* LoginWithAndroidDeviceID(FClientLoginWithAndroidDeviceIDRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1890a30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkXboxAccount
	// UPlayFabClientAPI* LinkXboxAccount(FClientLinkXboxAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1890840] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkTwitch
	// UPlayFabClientAPI* LinkTwitch(FClientLinkTwitchAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1890650] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkSteamAccount
	// UPlayFabClientAPI* LinkSteamAccount(FClientLinkSteamAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1890460] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkPSNAccount
	// UPlayFabClientAPI* LinkPSNAccount(FClientLinkPSNAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1890210] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkOpenIdConnect
	// UPlayFabClientAPI* LinkOpenIdConnect(FClientLinkOpenIdConnectRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x188ffd0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkNintendoSwitchDeviceId
	// UPlayFabClientAPI* LinkNintendoSwitchDeviceId(FClientLinkNintendoSwitchDeviceIdRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x188fde0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkNintendoServiceAccount
	// UPlayFabClientAPI* LinkNintendoServiceAccount(FClientLinkNintendoServiceAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x188fbf0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkKongregate
	// UPlayFabClientAPI* LinkKongregate(FClientLinkKongregateAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x188f9b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkIOSDeviceID
	// UPlayFabClientAPI* LinkIOSDeviceID(FClientLinkIOSDeviceIDRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x188f710] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkGoogleAccount
	// UPlayFabClientAPI* LinkGoogleAccount(FClientLinkGoogleAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x188f520] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkGameCenterAccount
	// UPlayFabClientAPI* LinkGameCenterAccount(FClientLinkGameCenterAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x188f1d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkFacebookInstantGamesId
	// UPlayFabClientAPI* LinkFacebookInstantGamesId(FClientLinkFacebookInstantGamesIdRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x188efe0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkFacebookAccount
	// UPlayFabClientAPI* LinkFacebookAccount(FClientLinkFacebookAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x188edf0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkCustomID
	// UPlayFabClientAPI* LinkCustomID(FClientLinkCustomIDRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x188ec00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkApple
	// UPlayFabClientAPI* LinkApple(FClientLinkAppleRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x188ea10] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.LinkAndroidDeviceID
	// UPlayFabClientAPI* LinkAndroidDeviceID(FClientLinkAndroidDeviceIDRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x188e770] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.HelperWriteTitleEvent
	void HelperWriteTitleEvent(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188e540] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[89]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperWritePlayerEvent
	void HelperWritePlayerEvent(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188e310] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[90]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperWriteCharacterEvent
	void HelperWriteCharacterEvent(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188e0e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[91]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperValidateWindowsStoreReceipt
	void HelperValidateWindowsStoreReceipt(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188deb0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[92]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperValidateIOSReceipt
	void HelperValidateIOSReceipt(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188dc80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[93]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperValidateGooglePlayPurchase
	void HelperValidateGooglePlayPurchase(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188da50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[94]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperValidateAmazonIAPReceipt
	void HelperValidateAmazonIAPReceipt(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188d5f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[95]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUpdateUserTitleDisplayName
	void HelperUpdateUserTitleDisplayName(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188d3c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[96]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUpdateUserPublisherData
	void HelperUpdateUserPublisherData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188d190] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[97]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUpdateUserData
	void HelperUpdateUserData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188cf60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[98]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUpdateSharedGroupData
	void HelperUpdateSharedGroupData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188cd30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[99]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUpdatePlayerStatistics
	void HelperUpdatePlayerStatistics(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188cb00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[100]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUpdateCharacterStatistics
	void HelperUpdateCharacterStatistics(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188c8d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[101]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUpdateCharacterData
	void HelperUpdateCharacterData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188c6a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[102]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUpdateAvatarUrl
	void HelperUpdateAvatarUrl(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188c470] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[103]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlockContainerItem
	void HelperUnlockContainerItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188c240] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[104]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlockContainerInstance
	void HelperUnlockContainerInstance(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188c010] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[105]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkXboxAccount
	void HelperUnlinkXboxAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188bde0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[106]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkTwitch
	void HelperUnlinkTwitch(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188bbb0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[107]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkSteamAccount
	void HelperUnlinkSteamAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188b980] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[108]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkPSNAccount
	void HelperUnlinkPSNAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188b750] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[109]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkOpenIdConnect
	void HelperUnlinkOpenIdConnect(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188b520] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[110]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkNintendoSwitchDeviceId
	void HelperUnlinkNintendoSwitchDeviceId(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188b2f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[111]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkNintendoServiceAccount
	void HelperUnlinkNintendoServiceAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188b0c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[112]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkKongregate
	void HelperUnlinkKongregate(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188ae90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[113]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkIOSDeviceID
	void HelperUnlinkIOSDeviceID(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188ac60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[114]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkGoogleAccount
	void HelperUnlinkGoogleAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188aa30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[115]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkGameCenterAccount
	void HelperUnlinkGameCenterAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188a800] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[116]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkFacebookInstantGamesId
	void HelperUnlinkFacebookInstantGamesId(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188a5d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[117]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkFacebookAccount
	void HelperUnlinkFacebookAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188a3a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[118]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkCustomID
	void HelperUnlinkCustomID(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188a170] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[119]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkApple
	void HelperUnlinkApple(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1889f40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[120]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperUnlinkAndroidDeviceID
	void HelperUnlinkAndroidDeviceID(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1889d10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[121]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperSubtractUserVirtualCurrency
	void HelperSubtractUserVirtualCurrency(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1889ae0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[122]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperStartPurchase
	void HelperStartPurchase(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18898b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[123]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperSetPlayerSecret
	void HelperSetPlayerSecret(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1889680] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[124]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperSetFriendTags
	void HelperSetFriendTags(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1889450] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[125]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperSendAccountRecoveryEmail
	void HelperSendAccountRecoveryEmail(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1889220] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[126]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperRewardAdActivity
	void HelperRewardAdActivity(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1888ff0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[127]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperRestoreIOSPurchases
	void HelperRestoreIOSPurchases(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1888dc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[128]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperReportPlayer
	void HelperReportPlayer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1888b90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[129]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperReportDeviceInfo
	void HelperReportDeviceInfo(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1888960] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[130]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperReportAdActivity
	void HelperReportAdActivity(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1888730] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[131]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperRemoveSharedGroupMembers
	void HelperRemoveSharedGroupMembers(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1888500] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[132]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperRemoveGenericID
	void HelperRemoveGenericID(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18882d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[133]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperRemoveFriend
	void HelperRemoveFriend(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18880a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[134]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperRemoveContactEmail
	void HelperRemoveContactEmail(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1887e70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[135]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperRegisterPlayFabUser
	void HelperRegisterPlayFabUser(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1887c40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[136]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperRegisterForIOSPushNotification
	void HelperRegisterForIOSPushNotification(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1887a10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[137]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperRefreshPSNAuthToken
	void HelperRefreshPSNAuthToken(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18877e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[138]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperRedeemCoupon
	void HelperRedeemCoupon(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18875b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[139]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperPurchaseItem
	void HelperPurchaseItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1887380] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[140]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperPayForPurchase
	void HelperPayForPurchase(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1887150] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[141]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperOpenTrade
	void HelperOpenTrade(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1886f20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[142]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperMatchmake
	void HelperMatchmake(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1886cf0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[143]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithXbox
	void HelperLoginWithXbox(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1886ac0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[144]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithTwitch
	void HelperLoginWithTwitch(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1886890] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[145]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithSteam
	void HelperLoginWithSteam(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1886660] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[146]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithPSN
	void HelperLoginWithPSN(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1886200] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[147]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithPlayFab
	void HelperLoginWithPlayFab(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1886430] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[148]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithOpenIdConnect
	void HelperLoginWithOpenIdConnect(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1885fd0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[149]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithNintendoSwitchDeviceId
	void HelperLoginWithNintendoSwitchDeviceId(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1885da0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[150]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithNintendoServiceAccount
	void HelperLoginWithNintendoServiceAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1885b70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[151]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithKongregate
	void HelperLoginWithKongregate(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1885940] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[152]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithIOSDeviceID
	void HelperLoginWithIOSDeviceID(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1885710] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[153]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithGoogleAccount
	void HelperLoginWithGoogleAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18854e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[154]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithGameCenter
	void HelperLoginWithGameCenter(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18852b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[155]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithFacebookInstantGamesId
	void HelperLoginWithFacebookInstantGamesId(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1885080] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[156]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithFacebook
	void HelperLoginWithFacebook(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1884e50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[157]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithEmailAddress
	void HelperLoginWithEmailAddress(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1884c20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[158]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithCustomID
	void HelperLoginWithCustomID(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18849f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[159]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithApple
	void HelperLoginWithApple(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18847c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[160]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLoginWithAndroidDeviceID
	void HelperLoginWithAndroidDeviceID(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1884590] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[161]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkXboxAccount
	void HelperLinkXboxAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1884360] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[162]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkTwitch
	void HelperLinkTwitch(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1884130] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[163]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkSteamAccount
	void HelperLinkSteamAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1883f00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[164]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkPSNAccount
	void HelperLinkPSNAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1883cd0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[165]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkOpenIdConnect
	void HelperLinkOpenIdConnect(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1883aa0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[166]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkNintendoSwitchDeviceId
	void HelperLinkNintendoSwitchDeviceId(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1883870] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[167]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkNintendoServiceAccount
	void HelperLinkNintendoServiceAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1883640] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[168]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkKongregate
	void HelperLinkKongregate(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1883410] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[169]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkIOSDeviceID
	void HelperLinkIOSDeviceID(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18831e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[170]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkGoogleAccount
	void HelperLinkGoogleAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1882fb0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[171]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkGameCenterAccount
	void HelperLinkGameCenterAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1882d80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[172]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkFacebookInstantGamesId
	void HelperLinkFacebookInstantGamesId(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1882b50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[173]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkFacebookAccount
	void HelperLinkFacebookAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1882920] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[174]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkCustomID
	void HelperLinkCustomID(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18826f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[175]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkApple
	void HelperLinkApple(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18824c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[176]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperLinkAndroidDeviceID
	void HelperLinkAndroidDeviceID(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1882290] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[177]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGrantCharacterToUser
	void HelperGrantCharacterToUser(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1882060] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[178]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetUserReadOnlyData
	void HelperGetUserReadOnlyData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1881e30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[179]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetUserPublisherReadOnlyData
	void HelperGetUserPublisherReadOnlyData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1881c00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[180]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetUserPublisherData
	void HelperGetUserPublisherData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18819d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[181]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetUserInventory
	void HelperGetUserInventory(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18817a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[182]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetUserData
	void HelperGetUserData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1881570] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[183]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetTradeStatus
	void HelperGetTradeStatus(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1881340] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[184]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetTitlePublicKey
	void HelperGetTitlePublicKey(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1881110] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[185]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetTitleNews
	void HelperGetTitleNews(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1880ee0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[186]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetTitleData
	void HelperGetTitleData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1880cb0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[187]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetTime
	void HelperGetTime(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1880a80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[188]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetStoreItems
	void HelperGetStoreItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1880850] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[189]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetSharedGroupData
	void HelperGetSharedGroupData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1880620] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[190]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPurchase
	void HelperGetPurchase(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18803f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[191]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPublisherData
	void HelperGetPublisherData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18801c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[192]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromXboxLiveIDs
	void HelperGetPlayFabIDsFromXboxLiveIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187f040] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[193]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromTwitchIDs
	void HelperGetPlayFabIDsFromTwitchIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187ee10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[194]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromSteamIDs
	void HelperGetPlayFabIDsFromSteamIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187ebe0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[195]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromPSNAccountIDs
	void HelperGetPlayFabIDsFromPSNAccountIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187e9b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[196]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromNintendoSwitchDeviceIds
	void HelperGetPlayFabIDsFromNintendoSwitchDeviceIds(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187e780] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[197]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromKongregateIDs
	void HelperGetPlayFabIDsFromKongregateIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187e550] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[198]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGoogleIDs
	void HelperGetPlayFabIDsFromGoogleIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187e320] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[199]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGenericIDs
	void HelperGetPlayFabIDsFromGenericIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187e0f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[200]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGameCenterIDs
	void HelperGetPlayFabIDsFromGameCenterIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187dec0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[201]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromFacebookInstantGamesIds
	void HelperGetPlayFabIDsFromFacebookInstantGamesIds(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187dc90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[202]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromFacebookIDs
	void HelperGetPlayFabIDsFromFacebookIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187da60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[203]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayerTrades
	void HelperGetPlayerTrades(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187ff90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[204]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayerTags
	void HelperGetPlayerTags(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187fd60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[205]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayerStatisticVersions
	void HelperGetPlayerStatisticVersions(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187f900] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[206]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayerStatistics
	void HelperGetPlayerStatistics(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187fb30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[207]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayerSegments
	void HelperGetPlayerSegments(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187f6d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[208]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayerProfile
	void HelperGetPlayerProfile(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187f4a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[209]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPlayerCombinedInfo
	void HelperGetPlayerCombinedInfo(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187f270] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[210]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPhotonAuthenticationToken
	void HelperGetPhotonAuthenticationToken(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187d830] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[211]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetPaymentToken
	void HelperGetPaymentToken(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187d600] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[212]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetLeaderboardForUserCharacters
	void HelperGetLeaderboardForUserCharacters(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187d3d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[213]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetLeaderboardAroundPlayer
	void HelperGetLeaderboardAroundPlayer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187d1a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[214]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetLeaderboardAroundCharacter
	void HelperGetLeaderboardAroundCharacter(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187cf70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[215]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetLeaderboard
	void HelperGetLeaderboard(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187cd40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[216]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetGameServerRegions
	void HelperGetGameServerRegions(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187cb10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[217]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetFriendsList
	void HelperGetFriendsList(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187c8e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[218]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetFriendLeaderboardAroundPlayer
	void HelperGetFriendLeaderboardAroundPlayer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187c6b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[219]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetFriendLeaderboard
	void HelperGetFriendLeaderboard(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187c480] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[220]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetCurrentGames
	void HelperGetCurrentGames(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187c020] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[221]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetContentDownloadUrl
	void HelperGetContentDownloadUrl(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187bdf0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[222]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetCharacterStatistics
	void HelperGetCharacterStatistics(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187bbc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[223]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetCharacterReadOnlyData
	void HelperGetCharacterReadOnlyData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187b990] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[224]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetCharacterLeaderboard
	void HelperGetCharacterLeaderboard(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187b760] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[225]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetCharacterInventory
	void HelperGetCharacterInventory(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187b530] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[226]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetCharacterData
	void HelperGetCharacterData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187b300] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[227]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetCatalogItems
	void HelperGetCatalogItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187b0d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[228]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetAllUsersCharacters
	void HelperGetAllUsersCharacters(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187aea0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[229]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetAdPlacements
	void HelperGetAdPlacements(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187ac70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[230]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperGetAccountInfo
	void HelperGetAccountInfo(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187aa40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[231]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperExecuteCloudScript
	void HelperExecuteCloudScript(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187a810] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[232]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperCreateSharedGroup
	void HelperCreateSharedGroup(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187a5e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[233]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperConsumeXboxEntitlements
	void HelperConsumeXboxEntitlements(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187a3b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[234]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperConsumePSNEntitlements
	void HelperConsumePSNEntitlements(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x187a180] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[235]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperConsumePS5Entitlements
	void HelperConsumePS5Entitlements(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1879f50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[236]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperConsumeMicrosoftStoreEntitlements
	void HelperConsumeMicrosoftStoreEntitlements(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1879d20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[237]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperConsumeItem
	void HelperConsumeItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1879af0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[238]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperConfirmPurchase
	void HelperConfirmPurchase(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18798c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[239]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperCancelTrade
	void HelperCancelTrade(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1879690] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[240]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperAttributeInstall
	void HelperAttributeInstall(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1879460] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[241]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperAndroidDevicePushNotificationRegistration
	void HelperAndroidDevicePushNotificationRegistration(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1879230] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[242]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperAddUserVirtualCurrency
	void HelperAddUserVirtualCurrency(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1878dd0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[243]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperAddUsernamePassword
	void HelperAddUsernamePassword(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1879000] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[244]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperAddSharedGroupMembers
	void HelperAddSharedGroupMembers(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1878ba0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[245]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperAddOrUpdateContactEmail
	void HelperAddOrUpdateContactEmail(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1878970] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[246]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperAddGenericID
	void HelperAddGenericID(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1878740] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[247]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperAddFriend
	void HelperAddFriend(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1878510] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[248]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.HelperAcceptTrade
	void HelperAcceptTrade(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18782e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[249]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.GrantCharacterToUser
	// UPlayFabClientAPI* GrantCharacterToUser(FClientGrantCharacterToUserRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1878060] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetUserReadOnlyData
	// UPlayFabClientAPI* GetUserReadOnlyData(FClientGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1877e30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetUserPublisherReadOnlyData
	// UPlayFabClientAPI* GetUserPublisherReadOnlyData(FClientGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1877c00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetUserPublisherData
	// UPlayFabClientAPI* GetUserPublisherData(FClientGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18779d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetUserInventory
	// UPlayFabClientAPI* GetUserInventory(FClientGetUserInventoryRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1877840] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetUserData
	// UPlayFabClientAPI* GetUserData(FClientGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1877610] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetTradeStatus
	// UPlayFabClientAPI* GetTradeStatus(FClientGetTradeStatusRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18773e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetTitlePublicKey
	// UPlayFabClientAPI* GetTitlePublicKey(FClientGetTitlePublicKeyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1877200] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetTitleNews
	// UPlayFabClientAPI* GetTitleNews(FClientGetTitleNewsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1877070] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetTitleData
	// UPlayFabClientAPI* GetTitleData(FClientGetTitleDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1876e40] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetTime
	// UPlayFabClientAPI* GetTime(FClientGetTimeRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1876cd0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetStoreItems
	// UPlayFabClientAPI* GetStoreItems(FClientGetStoreItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1876aa0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetSharedGroupData
	// UPlayFabClientAPI* GetSharedGroupData(FClientGetSharedGroupDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1876870] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPurchase
	// UPlayFabClientAPI* GetPurchase(FClientGetPurchaseRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1876690] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPublisherData
	// UPlayFabClientAPI* GetPublisherData(FClientGetPublisherDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18764b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayFabIDsFromXboxLiveIDs
	// UPlayFabClientAPI* GetPlayFabIDsFromXboxLiveIDs(FClientGetPlayFabIDsFromXboxLiveIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1875530] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayFabIDsFromTwitchIDs
	// UPlayFabClientAPI* GetPlayFabIDsFromTwitchIDs(FClientGetPlayFabIDsFromTwitchIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1875350] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayFabIDsFromSteamIDs
	// UPlayFabClientAPI* GetPlayFabIDsFromSteamIDs(FClientGetPlayFabIDsFromSteamIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1875170] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayFabIDsFromPSNAccountIDs
	// UPlayFabClientAPI* GetPlayFabIDsFromPSNAccountIDs(FClientGetPlayFabIDsFromPSNAccountIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1874f90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayFabIDsFromNintendoSwitchDeviceIds
	// UPlayFabClientAPI* GetPlayFabIDsFromNintendoSwitchDeviceIds(FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1874db0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayFabIDsFromKongregateIDs
	// UPlayFabClientAPI* GetPlayFabIDsFromKongregateIDs(FClientGetPlayFabIDsFromKongregateIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1874bd0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGoogleIDs
	// UPlayFabClientAPI* GetPlayFabIDsFromGoogleIDs(FClientGetPlayFabIDsFromGoogleIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18749f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGenericIDs
	// UPlayFabClientAPI* GetPlayFabIDsFromGenericIDs(FClientGetPlayFabIDsFromGenericIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1874810] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGameCenterIDs
	// UPlayFabClientAPI* GetPlayFabIDsFromGameCenterIDs(FClientGetPlayFabIDsFromGameCenterIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1874630] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayFabIDsFromFacebookInstantGamesIds
	// UPlayFabClientAPI* GetPlayFabIDsFromFacebookInstantGamesIds(FClientGetPlayFabIDsFromFacebookInstantGamesIdsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1874450] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayFabIDsFromFacebookIDs
	// UPlayFabClientAPI* GetPlayFabIDsFromFacebookIDs(FClientGetPlayFabIDsFromFacebookIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1874270] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayerTrades
	// UPlayFabClientAPI* GetPlayerTrades(FClientGetPlayerTradesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1876320] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayerTags
	// UPlayFabClientAPI* GetPlayerTags(FClientGetPlayerTagsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18760e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayerStatisticVersions
	// UPlayFabClientAPI* GetPlayerStatisticVersions(FClientGetPlayerStatisticVersionsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1875cb0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayerStatistics
	// UPlayFabClientAPI* GetPlayerStatistics(FClientGetPlayerStatisticsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1875ea0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayerSegments
	// UPlayFabClientAPI* GetPlayerSegments(FClientGetPlayerSegmentsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1875b40] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayerProfile
	// UPlayFabClientAPI* GetPlayerProfile(FClientGetPlayerProfileRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1875950] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPlayerCombinedInfo
	// UPlayFabClientAPI* GetPlayerCombinedInfo(FClientGetPlayerCombinedInfoRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1875760] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPhotonAuthenticationToken
	// UPlayFabClientAPI* GetPhotonAuthenticationToken(FClientGetPhotonAuthenticationTokenRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1874090] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetPaymentToken
	// UPlayFabClientAPI* GetPaymentToken(FClientGetPaymentTokenRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1873eb0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetLeaderboardForUserCharacters
	// UPlayFabClientAPI* GetLeaderboardForUserCharacters(FClientGetLeaderboardForUsersCharactersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1873cd0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetLeaderboardAroundPlayer
	// UPlayFabClientAPI* GetLeaderboardAroundPlayer(FClientGetLeaderboardAroundPlayerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1873a60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetLeaderboardAroundCharacter
	// UPlayFabClientAPI* GetLeaderboardAroundCharacter(FClientGetLeaderboardAroundCharacterRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18737e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetLeaderboard
	// UPlayFabClientAPI* GetLeaderboard(FClientGetLeaderboardRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18735c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetGameServerRegions
	// UPlayFabClientAPI* GetGameServerRegions(FClientGameServerRegionsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18733e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetFriendsList
	// UPlayFabClientAPI* GetFriendsList(FClientGetFriendsListRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18731e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetFriendLeaderboardAroundPlayer
	// UPlayFabClientAPI* GetFriendLeaderboardAroundPlayer(FClientGetFriendLeaderboardAroundPlayerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1872f00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetFriendLeaderboard
	// UPlayFabClientAPI* GetFriendLeaderboard(FClientGetFriendLeaderboardRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1872c70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetCurrentGames
	// UPlayFabClientAPI* GetCurrentGames(FClientCurrentGamesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1872830] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetContentDownloadUrl
	// UPlayFabClientAPI* GetContentDownloadUrl(FClientGetContentDownloadUrlRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1872600] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetCharacterStatistics
	// UPlayFabClientAPI* GetCharacterStatistics(FClientGetCharacterStatisticsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1872420] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetCharacterReadOnlyData
	// UPlayFabClientAPI* GetCharacterReadOnlyData(FClientGetCharacterDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18721a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetCharacterLeaderboard
	// UPlayFabClientAPI* GetCharacterLeaderboard(FClientGetCharacterLeaderboardRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1871f60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetCharacterInventory
	// UPlayFabClientAPI* GetCharacterInventory(FClientGetCharacterInventoryRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1871d20] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetCharacterData
	// UPlayFabClientAPI* GetCharacterData(FClientGetCharacterDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1871aa0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetCatalogItems
	// UPlayFabClientAPI* GetCatalogItems(FClientGetCatalogItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18718c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetAllUsersCharacters
	// UPlayFabClientAPI* GetAllUsersCharacters(FClientListUsersCharactersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18716e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetAdPlacements
	// UPlayFabClientAPI* GetAdPlacements(FClientGetAdPlacementsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18714f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.GetAccountInfo
	// UPlayFabClientAPI* GetAccountInfo(FClientGetAccountInfoRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1871220] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.ExecuteCloudScript
	// UPlayFabClientAPI* ExecuteCloudScript(FClientExecuteCloudScriptRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1871010] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessWriteTitleEvent__DelegateSignature
	void DelegateOnSuccessWriteTitleEvent__DelegateSignature(FClientWriteEventResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientWriteEventResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[305]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessWritePlayerEvent__DelegateSignature
	void DelegateOnSuccessWritePlayerEvent__DelegateSignature(FClientWriteEventResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientWriteEventResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[306]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessWriteCharacterEvent__DelegateSignature
	void DelegateOnSuccessWriteCharacterEvent__DelegateSignature(FClientWriteEventResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientWriteEventResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[307]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessValidateWindowsStoreReceipt__DelegateSignature
	void DelegateOnSuccessValidateWindowsStoreReceipt__DelegateSignature(FClientValidateWindowsReceiptResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientValidateWindowsReceiptResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[308]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessValidateIOSReceipt__DelegateSignature
	void DelegateOnSuccessValidateIOSReceipt__DelegateSignature(FClientValidateIOSReceiptResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientValidateIOSReceiptResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[309]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessValidateGooglePlayPurchase__DelegateSignature
	void DelegateOnSuccessValidateGooglePlayPurchase__DelegateSignature(FClientValidateGooglePlayPurchaseResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientValidateGooglePlayPurchaseResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[310]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessValidateAmazonIAPReceipt__DelegateSignature
	void DelegateOnSuccessValidateAmazonIAPReceipt__DelegateSignature(FClientValidateAmazonReceiptResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientValidateAmazonReceiptResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[311]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature
	void DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature(FClientUpdateUserTitleDisplayNameResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUpdateUserTitleDisplayNameResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[312]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdateUserPublisherData__DelegateSignature
	void DelegateOnSuccessUpdateUserPublisherData__DelegateSignature(FClientUpdateUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUpdateUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[313]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdateUserData__DelegateSignature
	void DelegateOnSuccessUpdateUserData__DelegateSignature(FClientUpdateUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUpdateUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[314]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdateSharedGroupData__DelegateSignature
	void DelegateOnSuccessUpdateSharedGroupData__DelegateSignature(FClientUpdateSharedGroupDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUpdateSharedGroupDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[315]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature
	void DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature(FClientUpdatePlayerStatisticsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUpdatePlayerStatisticsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[316]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature
	void DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature(FClientUpdateCharacterStatisticsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUpdateCharacterStatisticsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[317]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdateCharacterData__DelegateSignature
	void DelegateOnSuccessUpdateCharacterData__DelegateSignature(FClientUpdateCharacterDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUpdateCharacterDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[318]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdateAvatarUrl__DelegateSignature
	void DelegateOnSuccessUpdateAvatarUrl__DelegateSignature(FClientEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[319]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlockContainerItem__DelegateSignature
	void DelegateOnSuccessUnlockContainerItem__DelegateSignature(FClientUnlockContainerItemResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlockContainerItemResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[320]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlockContainerInstance__DelegateSignature
	void DelegateOnSuccessUnlockContainerInstance__DelegateSignature(FClientUnlockContainerItemResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlockContainerItemResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[321]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkXboxAccount__DelegateSignature
	void DelegateOnSuccessUnlinkXboxAccount__DelegateSignature(FClientUnlinkXboxAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlinkXboxAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[322]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkTwitch__DelegateSignature
	void DelegateOnSuccessUnlinkTwitch__DelegateSignature(FClientUnlinkTwitchAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlinkTwitchAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[323]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkSteamAccount__DelegateSignature
	void DelegateOnSuccessUnlinkSteamAccount__DelegateSignature(FClientUnlinkSteamAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlinkSteamAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[324]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkPSNAccount__DelegateSignature
	void DelegateOnSuccessUnlinkPSNAccount__DelegateSignature(FClientUnlinkPSNAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlinkPSNAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[325]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkOpenIdConnect__DelegateSignature
	void DelegateOnSuccessUnlinkOpenIdConnect__DelegateSignature(FClientEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[326]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkNintendoSwitchDeviceId__DelegateSignature
	void DelegateOnSuccessUnlinkNintendoSwitchDeviceId__DelegateSignature(FClientUnlinkNintendoSwitchDeviceIdResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlinkNintendoSwitchDeviceIdResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[327]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkNintendoServiceAccount__DelegateSignature
	void DelegateOnSuccessUnlinkNintendoServiceAccount__DelegateSignature(FClientEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[328]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkKongregate__DelegateSignature
	void DelegateOnSuccessUnlinkKongregate__DelegateSignature(FClientUnlinkKongregateAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlinkKongregateAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[329]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkIOSDeviceID__DelegateSignature
	void DelegateOnSuccessUnlinkIOSDeviceID__DelegateSignature(FClientUnlinkIOSDeviceIDResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlinkIOSDeviceIDResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[330]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkGoogleAccount__DelegateSignature
	void DelegateOnSuccessUnlinkGoogleAccount__DelegateSignature(FClientUnlinkGoogleAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlinkGoogleAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[331]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkGameCenterAccount__DelegateSignature
	void DelegateOnSuccessUnlinkGameCenterAccount__DelegateSignature(FClientUnlinkGameCenterAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlinkGameCenterAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[332]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkFacebookInstantGamesId__DelegateSignature
	void DelegateOnSuccessUnlinkFacebookInstantGamesId__DelegateSignature(FClientUnlinkFacebookInstantGamesIdResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlinkFacebookInstantGamesIdResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[333]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkFacebookAccount__DelegateSignature
	void DelegateOnSuccessUnlinkFacebookAccount__DelegateSignature(FClientUnlinkFacebookAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlinkFacebookAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[334]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkCustomID__DelegateSignature
	void DelegateOnSuccessUnlinkCustomID__DelegateSignature(FClientUnlinkCustomIDResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlinkCustomIDResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[335]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkApple__DelegateSignature
	void DelegateOnSuccessUnlinkApple__DelegateSignature(FClientEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[336]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkAndroidDeviceID__DelegateSignature
	void DelegateOnSuccessUnlinkAndroidDeviceID__DelegateSignature(FClientUnlinkAndroidDeviceIDResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientUnlinkAndroidDeviceIDResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[337]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature
	void DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature(FClientModifyUserVirtualCurrencyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientModifyUserVirtualCurrencyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[338]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessStartPurchase__DelegateSignature
	void DelegateOnSuccessStartPurchase__DelegateSignature(FClientStartPurchaseResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientStartPurchaseResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[339]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessSetPlayerSecret__DelegateSignature
	void DelegateOnSuccessSetPlayerSecret__DelegateSignature(FClientSetPlayerSecretResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientSetPlayerSecretResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[340]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessSetFriendTags__DelegateSignature
	void DelegateOnSuccessSetFriendTags__DelegateSignature(FClientSetFriendTagsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientSetFriendTagsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[341]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature
	void DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature(FClientSendAccountRecoveryEmailResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientSendAccountRecoveryEmailResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[342]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessRewardAdActivity__DelegateSignature
	void DelegateOnSuccessRewardAdActivity__DelegateSignature(FClientRewardAdActivityResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientRewardAdActivityResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[343]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessRestoreIOSPurchases__DelegateSignature
	void DelegateOnSuccessRestoreIOSPurchases__DelegateSignature(FClientRestoreIOSPurchasesResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientRestoreIOSPurchasesResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[344]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessReportPlayer__DelegateSignature
	void DelegateOnSuccessReportPlayer__DelegateSignature(FClientReportPlayerClientResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientReportPlayerClientResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[345]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessReportDeviceInfo__DelegateSignature
	void DelegateOnSuccessReportDeviceInfo__DelegateSignature(FClientEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[346]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessReportAdActivity__DelegateSignature
	void DelegateOnSuccessReportAdActivity__DelegateSignature(FClientReportAdActivityResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientReportAdActivityResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[347]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature
	void DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature(FClientRemoveSharedGroupMembersResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientRemoveSharedGroupMembersResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[348]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessRemoveGenericID__DelegateSignature
	void DelegateOnSuccessRemoveGenericID__DelegateSignature(FClientRemoveGenericIDResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientRemoveGenericIDResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[349]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessRemoveFriend__DelegateSignature
	void DelegateOnSuccessRemoveFriend__DelegateSignature(FClientRemoveFriendResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientRemoveFriendResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[350]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessRemoveContactEmail__DelegateSignature
	void DelegateOnSuccessRemoveContactEmail__DelegateSignature(FClientRemoveContactEmailResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientRemoveContactEmailResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[351]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessRegisterPlayFabUser__DelegateSignature
	void DelegateOnSuccessRegisterPlayFabUser__DelegateSignature(FClientRegisterPlayFabUserResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientRegisterPlayFabUserResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[352]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessRegisterForIOSPushNotification__DelegateSignature
	void DelegateOnSuccessRegisterForIOSPushNotification__DelegateSignature(FClientRegisterForIOSPushNotificationResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientRegisterForIOSPushNotificationResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[353]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessRefreshPSNAuthToken__DelegateSignature
	void DelegateOnSuccessRefreshPSNAuthToken__DelegateSignature(FClientEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[354]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessRedeemCoupon__DelegateSignature
	void DelegateOnSuccessRedeemCoupon__DelegateSignature(FClientRedeemCouponResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientRedeemCouponResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[355]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessPurchaseItem__DelegateSignature
	void DelegateOnSuccessPurchaseItem__DelegateSignature(FClientPurchaseItemResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientPurchaseItemResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[356]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessPayForPurchase__DelegateSignature
	void DelegateOnSuccessPayForPurchase__DelegateSignature(FClientPayForPurchaseResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientPayForPurchaseResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[357]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessOpenTrade__DelegateSignature
	void DelegateOnSuccessOpenTrade__DelegateSignature(FClientOpenTradeResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientOpenTradeResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[358]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessMatchmake__DelegateSignature
	void DelegateOnSuccessMatchmake__DelegateSignature(FClientMatchmakeResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientMatchmakeResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[359]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithXbox__DelegateSignature
	void DelegateOnSuccessLoginWithXbox__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[360]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithTwitch__DelegateSignature
	void DelegateOnSuccessLoginWithTwitch__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[361]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithSteam__DelegateSignature
	void DelegateOnSuccessLoginWithSteam__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[362]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithPSN__DelegateSignature
	void DelegateOnSuccessLoginWithPSN__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[363]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithPlayFab__DelegateSignature
	void DelegateOnSuccessLoginWithPlayFab__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[364]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithOpenIdConnect__DelegateSignature
	void DelegateOnSuccessLoginWithOpenIdConnect__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[365]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithNintendoSwitchDeviceId__DelegateSignature
	void DelegateOnSuccessLoginWithNintendoSwitchDeviceId__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[366]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithNintendoServiceAccount__DelegateSignature
	void DelegateOnSuccessLoginWithNintendoServiceAccount__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[367]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithKongregate__DelegateSignature
	void DelegateOnSuccessLoginWithKongregate__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[368]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithIOSDeviceID__DelegateSignature
	void DelegateOnSuccessLoginWithIOSDeviceID__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[369]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithGoogleAccount__DelegateSignature
	void DelegateOnSuccessLoginWithGoogleAccount__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[370]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithGameCenter__DelegateSignature
	void DelegateOnSuccessLoginWithGameCenter__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[371]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithFacebookInstantGamesId__DelegateSignature
	void DelegateOnSuccessLoginWithFacebookInstantGamesId__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[372]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithFacebook__DelegateSignature
	void DelegateOnSuccessLoginWithFacebook__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[373]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithEmailAddress__DelegateSignature
	void DelegateOnSuccessLoginWithEmailAddress__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[374]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithCustomID__DelegateSignature
	void DelegateOnSuccessLoginWithCustomID__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[375]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithApple__DelegateSignature
	void DelegateOnSuccessLoginWithApple__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[376]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithAndroidDeviceID__DelegateSignature
	void DelegateOnSuccessLoginWithAndroidDeviceID__DelegateSignature(FClientLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[377]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkXboxAccount__DelegateSignature
	void DelegateOnSuccessLinkXboxAccount__DelegateSignature(FClientLinkXboxAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLinkXboxAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[378]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkTwitch__DelegateSignature
	void DelegateOnSuccessLinkTwitch__DelegateSignature(FClientLinkTwitchAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLinkTwitchAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[379]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkSteamAccount__DelegateSignature
	void DelegateOnSuccessLinkSteamAccount__DelegateSignature(FClientLinkSteamAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLinkSteamAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[380]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkPSNAccount__DelegateSignature
	void DelegateOnSuccessLinkPSNAccount__DelegateSignature(FClientLinkPSNAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLinkPSNAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[381]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkOpenIdConnect__DelegateSignature
	void DelegateOnSuccessLinkOpenIdConnect__DelegateSignature(FClientEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[382]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkNintendoSwitchDeviceId__DelegateSignature
	void DelegateOnSuccessLinkNintendoSwitchDeviceId__DelegateSignature(FClientLinkNintendoSwitchDeviceIdResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLinkNintendoSwitchDeviceIdResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[383]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkNintendoServiceAccount__DelegateSignature
	void DelegateOnSuccessLinkNintendoServiceAccount__DelegateSignature(FClientEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[384]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkKongregate__DelegateSignature
	void DelegateOnSuccessLinkKongregate__DelegateSignature(FClientLinkKongregateAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLinkKongregateAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[385]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkIOSDeviceID__DelegateSignature
	void DelegateOnSuccessLinkIOSDeviceID__DelegateSignature(FClientLinkIOSDeviceIDResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLinkIOSDeviceIDResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[386]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkGoogleAccount__DelegateSignature
	void DelegateOnSuccessLinkGoogleAccount__DelegateSignature(FClientLinkGoogleAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLinkGoogleAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[387]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkGameCenterAccount__DelegateSignature
	void DelegateOnSuccessLinkGameCenterAccount__DelegateSignature(FClientLinkGameCenterAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLinkGameCenterAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[388]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkFacebookInstantGamesId__DelegateSignature
	void DelegateOnSuccessLinkFacebookInstantGamesId__DelegateSignature(FClientLinkFacebookInstantGamesIdResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLinkFacebookInstantGamesIdResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[389]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkFacebookAccount__DelegateSignature
	void DelegateOnSuccessLinkFacebookAccount__DelegateSignature(FClientLinkFacebookAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLinkFacebookAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[390]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkCustomID__DelegateSignature
	void DelegateOnSuccessLinkCustomID__DelegateSignature(FClientLinkCustomIDResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLinkCustomIDResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[391]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkApple__DelegateSignature
	void DelegateOnSuccessLinkApple__DelegateSignature(FClientEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[392]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkAndroidDeviceID__DelegateSignature
	void DelegateOnSuccessLinkAndroidDeviceID__DelegateSignature(FClientLinkAndroidDeviceIDResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientLinkAndroidDeviceIDResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[393]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGrantCharacterToUser__DelegateSignature
	void DelegateOnSuccessGrantCharacterToUser__DelegateSignature(FClientGrantCharacterToUserResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGrantCharacterToUserResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[394]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetUserReadOnlyData__DelegateSignature
	void DelegateOnSuccessGetUserReadOnlyData__DelegateSignature(FClientGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[395]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature
	void DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature(FClientGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[396]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetUserPublisherData__DelegateSignature
	void DelegateOnSuccessGetUserPublisherData__DelegateSignature(FClientGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[397]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetUserInventory__DelegateSignature
	void DelegateOnSuccessGetUserInventory__DelegateSignature(FClientGetUserInventoryResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetUserInventoryResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[398]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetUserData__DelegateSignature
	void DelegateOnSuccessGetUserData__DelegateSignature(FClientGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[399]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetTradeStatus__DelegateSignature
	void DelegateOnSuccessGetTradeStatus__DelegateSignature(FClientGetTradeStatusResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetTradeStatusResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[400]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetTitlePublicKey__DelegateSignature
	void DelegateOnSuccessGetTitlePublicKey__DelegateSignature(FClientGetTitlePublicKeyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetTitlePublicKeyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[401]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetTitleNews__DelegateSignature
	void DelegateOnSuccessGetTitleNews__DelegateSignature(FClientGetTitleNewsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetTitleNewsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[402]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetTitleData__DelegateSignature
	void DelegateOnSuccessGetTitleData__DelegateSignature(FClientGetTitleDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetTitleDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[403]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetTime__DelegateSignature
	void DelegateOnSuccessGetTime__DelegateSignature(FClientGetTimeResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetTimeResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[404]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetStoreItems__DelegateSignature
	void DelegateOnSuccessGetStoreItems__DelegateSignature(FClientGetStoreItemsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetStoreItemsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[405]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetSharedGroupData__DelegateSignature
	void DelegateOnSuccessGetSharedGroupData__DelegateSignature(FClientGetSharedGroupDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetSharedGroupDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[406]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPurchase__DelegateSignature
	void DelegateOnSuccessGetPurchase__DelegateSignature(FClientGetPurchaseResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPurchaseResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[407]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPublisherData__DelegateSignature
	void DelegateOnSuccessGetPublisherData__DelegateSignature(FClientGetPublisherDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPublisherDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[408]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature(FClientGetPlayFabIDsFromXboxLiveIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayFabIDsFromXboxLiveIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[409]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature(FClientGetPlayFabIDsFromTwitchIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayFabIDsFromTwitchIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[410]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature(FClientGetPlayFabIDsFromSteamIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayFabIDsFromSteamIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[411]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature(FClientGetPlayFabIDsFromPSNAccountIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayFabIDsFromPSNAccountIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[412]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature(FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[413]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromKongregateIDs__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromKongregateIDs__DelegateSignature(FClientGetPlayFabIDsFromKongregateIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayFabIDsFromKongregateIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[414]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromGoogleIDs__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromGoogleIDs__DelegateSignature(FClientGetPlayFabIDsFromGoogleIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayFabIDsFromGoogleIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[415]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature(FClientGetPlayFabIDsFromGenericIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayFabIDsFromGenericIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[416]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromGameCenterIDs__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromGameCenterIDs__DelegateSignature(FClientGetPlayFabIDsFromGameCenterIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayFabIDsFromGameCenterIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[417]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature(FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[418]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature(FClientGetPlayFabIDsFromFacebookIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayFabIDsFromFacebookIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[419]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayerTrades__DelegateSignature
	void DelegateOnSuccessGetPlayerTrades__DelegateSignature(FClientGetPlayerTradesResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayerTradesResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[420]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayerTags__DelegateSignature
	void DelegateOnSuccessGetPlayerTags__DelegateSignature(FClientGetPlayerTagsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayerTagsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[421]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature
	void DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature(FClientGetPlayerStatisticVersionsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayerStatisticVersionsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[422]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayerStatistics__DelegateSignature
	void DelegateOnSuccessGetPlayerStatistics__DelegateSignature(FClientGetPlayerStatisticsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayerStatisticsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[423]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayerSegments__DelegateSignature
	void DelegateOnSuccessGetPlayerSegments__DelegateSignature(FClientGetPlayerSegmentsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayerSegmentsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[424]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayerProfile__DelegateSignature
	void DelegateOnSuccessGetPlayerProfile__DelegateSignature(FClientGetPlayerProfileResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayerProfileResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[425]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature
	void DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature(FClientGetPlayerCombinedInfoResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPlayerCombinedInfoResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[426]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPhotonAuthenticationToken__DelegateSignature
	void DelegateOnSuccessGetPhotonAuthenticationToken__DelegateSignature(FClientGetPhotonAuthenticationTokenResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPhotonAuthenticationTokenResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[427]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPaymentToken__DelegateSignature
	void DelegateOnSuccessGetPaymentToken__DelegateSignature(FClientGetPaymentTokenResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetPaymentTokenResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[428]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature
	void DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature(FClientGetLeaderboardForUsersCharactersResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetLeaderboardForUsersCharactersResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[429]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetLeaderboardAroundPlayer__DelegateSignature
	void DelegateOnSuccessGetLeaderboardAroundPlayer__DelegateSignature(FClientGetLeaderboardAroundPlayerResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetLeaderboardAroundPlayerResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[430]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature
	void DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature(FClientGetLeaderboardAroundCharacterResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetLeaderboardAroundCharacterResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[431]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetLeaderboard__DelegateSignature
	void DelegateOnSuccessGetLeaderboard__DelegateSignature(FClientGetLeaderboardResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetLeaderboardResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[432]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetGameServerRegions__DelegateSignature
	void DelegateOnSuccessGetGameServerRegions__DelegateSignature(FClientGameServerRegionsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGameServerRegionsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[433]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetFriendsList__DelegateSignature
	void DelegateOnSuccessGetFriendsList__DelegateSignature(FClientGetFriendsListResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetFriendsListResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[434]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetFriendLeaderboardAroundPlayer__DelegateSignature
	void DelegateOnSuccessGetFriendLeaderboardAroundPlayer__DelegateSignature(FClientGetFriendLeaderboardAroundPlayerResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetFriendLeaderboardAroundPlayerResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[435]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetFriendLeaderboard__DelegateSignature
	void DelegateOnSuccessGetFriendLeaderboard__DelegateSignature(FClientGetLeaderboardResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetLeaderboardResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[436]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetCurrentGames__DelegateSignature
	void DelegateOnSuccessGetCurrentGames__DelegateSignature(FClientCurrentGamesResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientCurrentGamesResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[437]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetContentDownloadUrl__DelegateSignature
	void DelegateOnSuccessGetContentDownloadUrl__DelegateSignature(FClientGetContentDownloadUrlResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetContentDownloadUrlResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[438]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetCharacterStatistics__DelegateSignature
	void DelegateOnSuccessGetCharacterStatistics__DelegateSignature(FClientGetCharacterStatisticsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetCharacterStatisticsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[439]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature
	void DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature(FClientGetCharacterDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetCharacterDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[440]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature
	void DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature(FClientGetCharacterLeaderboardResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetCharacterLeaderboardResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[441]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetCharacterInventory__DelegateSignature
	void DelegateOnSuccessGetCharacterInventory__DelegateSignature(FClientGetCharacterInventoryResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetCharacterInventoryResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[442]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetCharacterData__DelegateSignature
	void DelegateOnSuccessGetCharacterData__DelegateSignature(FClientGetCharacterDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetCharacterDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[443]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetCatalogItems__DelegateSignature
	void DelegateOnSuccessGetCatalogItems__DelegateSignature(FClientGetCatalogItemsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetCatalogItemsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[444]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetAllUsersCharacters__DelegateSignature
	void DelegateOnSuccessGetAllUsersCharacters__DelegateSignature(FClientListUsersCharactersResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientListUsersCharactersResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[445]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetAdPlacements__DelegateSignature
	void DelegateOnSuccessGetAdPlacements__DelegateSignature(FClientGetAdPlacementsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetAdPlacementsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[446]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessGetAccountInfo__DelegateSignature
	void DelegateOnSuccessGetAccountInfo__DelegateSignature(FClientGetAccountInfoResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientGetAccountInfoResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[447]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessExecuteCloudScript__DelegateSignature
	void DelegateOnSuccessExecuteCloudScript__DelegateSignature(FClientExecuteCloudScriptResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientExecuteCloudScriptResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[448]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessCreateSharedGroup__DelegateSignature
	void DelegateOnSuccessCreateSharedGroup__DelegateSignature(FClientCreateSharedGroupResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientCreateSharedGroupResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[449]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessConsumeXboxEntitlements__DelegateSignature
	void DelegateOnSuccessConsumeXboxEntitlements__DelegateSignature(FClientConsumeXboxEntitlementsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientConsumeXboxEntitlementsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[450]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessConsumePSNEntitlements__DelegateSignature
	void DelegateOnSuccessConsumePSNEntitlements__DelegateSignature(FClientConsumePSNEntitlementsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientConsumePSNEntitlementsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[451]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessConsumePS5Entitlements__DelegateSignature
	void DelegateOnSuccessConsumePS5Entitlements__DelegateSignature(FClientConsumePS5EntitlementsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientConsumePS5EntitlementsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[452]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessConsumeMicrosoftStoreEntitlements__DelegateSignature
	void DelegateOnSuccessConsumeMicrosoftStoreEntitlements__DelegateSignature(FClientConsumeMicrosoftStoreEntitlementsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientConsumeMicrosoftStoreEntitlementsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[453]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessConsumeItem__DelegateSignature
	void DelegateOnSuccessConsumeItem__DelegateSignature(FClientConsumeItemResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientConsumeItemResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[454]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessConfirmPurchase__DelegateSignature
	void DelegateOnSuccessConfirmPurchase__DelegateSignature(FClientConfirmPurchaseResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientConfirmPurchaseResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[455]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessCancelTrade__DelegateSignature
	void DelegateOnSuccessCancelTrade__DelegateSignature(FClientCancelTradeResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientCancelTradeResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[456]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessAttributeInstall__DelegateSignature
	void DelegateOnSuccessAttributeInstall__DelegateSignature(FClientAttributeInstallResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientAttributeInstallResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[457]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessAndroidDevicePushNotificationRegistration__DelegateSignature
	void DelegateOnSuccessAndroidDevicePushNotificationRegistration__DelegateSignature(FClientAndroidDevicePushNotificationRegistrationResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientAndroidDevicePushNotificationRegistrationResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[458]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature
	void DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature(FClientModifyUserVirtualCurrencyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientModifyUserVirtualCurrencyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[459]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessAddUsernamePassword__DelegateSignature
	void DelegateOnSuccessAddUsernamePassword__DelegateSignature(FClientAddUsernamePasswordResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientAddUsernamePasswordResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[460]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessAddSharedGroupMembers__DelegateSignature
	void DelegateOnSuccessAddSharedGroupMembers__DelegateSignature(FClientAddSharedGroupMembersResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientAddSharedGroupMembersResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[461]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessAddOrUpdateContactEmail__DelegateSignature
	void DelegateOnSuccessAddOrUpdateContactEmail__DelegateSignature(FClientAddOrUpdateContactEmailResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientAddOrUpdateContactEmailResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[462]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessAddGenericID__DelegateSignature
	void DelegateOnSuccessAddGenericID__DelegateSignature(FClientAddGenericIDResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientAddGenericIDResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[463]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessAddFriend__DelegateSignature
	void DelegateOnSuccessAddFriend__DelegateSignature(FClientAddFriendResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientAddFriendResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[464]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnSuccessAcceptTrade__DelegateSignature
	void DelegateOnSuccessAcceptTrade__DelegateSignature(FClientAcceptTradeResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FClientAcceptTradeResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[465]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[466]);
		func(Error, customData);
	}
	// Function /Script/PlayFab.PlayFabClientAPI.CreateSharedGroup
	// UPlayFabClientAPI* CreateSharedGroup(FClientCreateSharedGroupRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1870e30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.ConsumeXboxEntitlements
	// UPlayFabClientAPI* ConsumeXboxEntitlements(FClientConsumeXboxEntitlementsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1870c00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.ConsumePSNEntitlements
	// UPlayFabClientAPI* ConsumePSNEntitlements(FClientConsumePSNEntitlementsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1870a10] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.ConsumePS5Entitlements
	// UPlayFabClientAPI* ConsumePS5Entitlements(FClientConsumePS5EntitlementsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1870820] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.ConsumeMicrosoftStoreEntitlements
	// UPlayFabClientAPI* ConsumeMicrosoftStoreEntitlements(FClientConsumeMicrosoftStoreEntitlementsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1870630] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.ConsumeItem
	// UPlayFabClientAPI* ConsumeItem(FClientConsumeItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18703f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.ConfirmPurchase
	// UPlayFabClientAPI* ConfirmPurchase(FClientConfirmPurchaseRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1870200] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.CancelTrade
	// UPlayFabClientAPI* CancelTrade(FClientCancelTradeRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1870020] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.AttributeInstall
	// UPlayFabClientAPI* AttributeInstall(FClientAttributeInstallRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x186fdf0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.AndroidDevicePushNotificationRegistration
	// UPlayFabClientAPI* AndroidDevicePushNotificationRegistration(FClientAndroidDevicePushNotificationRegistrationRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x186fbc0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.AddUserVirtualCurrency
	// UPlayFabClientAPI* AddUserVirtualCurrency(FClientAddUserVirtualCurrencyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x186f750] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.AddUsernamePassword
	// UPlayFabClientAPI* AddUsernamePassword(FClientAddUsernamePasswordRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x186f940] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.AddSharedGroupMembers
	// UPlayFabClientAPI* AddSharedGroupMembers(FClientAddSharedGroupMembersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x186f520] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.AddOrUpdateContactEmail
	// UPlayFabClientAPI* AddOrUpdateContactEmail(FClientAddOrUpdateContactEmailRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x186f330] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.AddGenericID
	// UPlayFabClientAPI* AddGenericID(FClientAddGenericIDRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x186f1a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.AddFriend
	// UPlayFabClientAPI* AddFriend(FClientAddFriendRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x186eed0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabClientAPI.AcceptTrade
	// UPlayFabClientAPI* AcceptTrade(FClientAcceptTradeRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x186ec50] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/PlayFab.PlayFabClientModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabClientModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeWriteEventResponseResponse
	FClientWriteEventResponse decodeWriteEventResponseResponse(UPlayFabJsonObject* response) // [0x18a0b00] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientWriteEventResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeValidateWindowsReceiptResultResponse
	FClientValidateWindowsReceiptResult decodeValidateWindowsReceiptResultResponse(UPlayFabJsonObject* response) // [0x18a03e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientValidateWindowsReceiptResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeValidateIOSReceiptResultResponse
	FClientValidateIOSReceiptResult decodeValidateIOSReceiptResultResponse(UPlayFabJsonObject* response) // [0x18a03e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientValidateIOSReceiptResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeValidateGooglePlayPurchaseResultResponse
	FClientValidateGooglePlayPurchaseResult decodeValidateGooglePlayPurchaseResultResponse(UPlayFabJsonObject* response) // [0x18a03e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientValidateGooglePlayPurchaseResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeValidateAmazonReceiptResultResponse
	FClientValidateAmazonReceiptResult decodeValidateAmazonReceiptResultResponse(UPlayFabJsonObject* response) // [0x18a03e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientValidateAmazonReceiptResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUpdateUserTitleDisplayNameResultResponse
	FClientUpdateUserTitleDisplayNameResult decodeUpdateUserTitleDisplayNameResultResponse(UPlayFabJsonObject* response) // [0x18a0a20] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUpdateUserTitleDisplayNameResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUpdateUserDataResultResponse
	FClientUpdateUserDataResult decodeUpdateUserDataResultResponse(UPlayFabJsonObject* response) // [0x18a0990] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUpdateUserDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUpdateSharedGroupDataResultResponse
	FClientUpdateSharedGroupDataResult decodeUpdateSharedGroupDataResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUpdateSharedGroupDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUpdatePlayerStatisticsResultResponse
	FClientUpdatePlayerStatisticsResult decodeUpdatePlayerStatisticsResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUpdatePlayerStatisticsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUpdateCharacterStatisticsResultResponse
	FClientUpdateCharacterStatisticsResult decodeUpdateCharacterStatisticsResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUpdateCharacterStatisticsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUpdateCharacterDataResultResponse
	FClientUpdateCharacterDataResult decodeUpdateCharacterDataResultResponse(UPlayFabJsonObject* response) // [0x18a0990] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUpdateCharacterDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUnlockContainerItemResultResponse
	FClientUnlockContainerItemResult decodeUnlockContainerItemResultResponse(UPlayFabJsonObject* response) // [0x18a0810] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUnlockContainerItemResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUnlinkXboxAccountResultResponse
	FClientUnlinkXboxAccountResult decodeUnlinkXboxAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUnlinkXboxAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUnlinkTwitchAccountResultResponse
	FClientUnlinkTwitchAccountResult decodeUnlinkTwitchAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUnlinkTwitchAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUnlinkSteamAccountResultResponse
	FClientUnlinkSteamAccountResult decodeUnlinkSteamAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUnlinkSteamAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUnlinkPSNAccountResultResponse
	FClientUnlinkPSNAccountResult decodeUnlinkPSNAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUnlinkPSNAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUnlinkNintendoSwitchDeviceIdResultResponse
	FClientUnlinkNintendoSwitchDeviceIdResult decodeUnlinkNintendoSwitchDeviceIdResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUnlinkNintendoSwitchDeviceIdResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUnlinkKongregateAccountResultResponse
	FClientUnlinkKongregateAccountResult decodeUnlinkKongregateAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUnlinkKongregateAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUnlinkIOSDeviceIDResultResponse
	FClientUnlinkIOSDeviceIDResult decodeUnlinkIOSDeviceIDResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUnlinkIOSDeviceIDResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUnlinkGoogleAccountResultResponse
	FClientUnlinkGoogleAccountResult decodeUnlinkGoogleAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUnlinkGoogleAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUnlinkGameCenterAccountResultResponse
	FClientUnlinkGameCenterAccountResult decodeUnlinkGameCenterAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUnlinkGameCenterAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUnlinkFacebookInstantGamesIdResultResponse
	FClientUnlinkFacebookInstantGamesIdResult decodeUnlinkFacebookInstantGamesIdResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUnlinkFacebookInstantGamesIdResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUnlinkFacebookAccountResultResponse
	FClientUnlinkFacebookAccountResult decodeUnlinkFacebookAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUnlinkFacebookAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUnlinkCustomIDResultResponse
	FClientUnlinkCustomIDResult decodeUnlinkCustomIDResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUnlinkCustomIDResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeUnlinkAndroidDeviceIDResultResponse
	FClientUnlinkAndroidDeviceIDResult decodeUnlinkAndroidDeviceIDResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientUnlinkAndroidDeviceIDResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeStartPurchaseResultResponse
	FClientStartPurchaseResult decodeStartPurchaseResultResponse(UPlayFabJsonObject* response) // [0x18a0690] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientStartPurchaseResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeSetPlayerSecretResultResponse
	FClientSetPlayerSecretResult decodeSetPlayerSecretResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientSetPlayerSecretResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeSetFriendTagsResultResponse
	FClientSetFriendTagsResult decodeSetFriendTagsResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientSetFriendTagsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeSendAccountRecoveryEmailResultResponse
	FClientSendAccountRecoveryEmailResult decodeSendAccountRecoveryEmailResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientSendAccountRecoveryEmailResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeRewardAdActivityResultResponse
	FClientRewardAdActivityResult decodeRewardAdActivityResultResponse(UPlayFabJsonObject* response) // [0x18a04c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientRewardAdActivityResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeRestoreIOSPurchasesResultResponse
	FClientRestoreIOSPurchasesResult decodeRestoreIOSPurchasesResultResponse(UPlayFabJsonObject* response) // [0x18a03e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientRestoreIOSPurchasesResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeReportPlayerClientResultResponse
	FClientReportPlayerClientResult decodeReportPlayerClientResultResponse(UPlayFabJsonObject* response) // [0x18a0350] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientReportPlayerClientResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeReportAdActivityResultResponse
	FClientReportAdActivityResult decodeReportAdActivityResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientReportAdActivityResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeRemoveSharedGroupMembersResultResponse
	FClientRemoveSharedGroupMembersResult decodeRemoveSharedGroupMembersResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientRemoveSharedGroupMembersResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeRemoveGenericIDResultResponse
	FClientRemoveGenericIDResult decodeRemoveGenericIDResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientRemoveGenericIDResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeRemoveFriendResultResponse
	FClientRemoveFriendResult decodeRemoveFriendResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientRemoveFriendResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeRemoveContactEmailResultResponse
	FClientRemoveContactEmailResult decodeRemoveContactEmailResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientRemoveContactEmailResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeRegisterPlayFabUserResultResponse
	FClientRegisterPlayFabUserResult decodeRegisterPlayFabUserResultResponse(UPlayFabJsonObject* response) // [0x18a01d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientRegisterPlayFabUserResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeRegisterForIOSPushNotificationResultResponse
	FClientRegisterForIOSPushNotificationResult decodeRegisterForIOSPushNotificationResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientRegisterForIOSPushNotificationResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeRedeemCouponResultResponse
	FClientRedeemCouponResult decodeRedeemCouponResultResponse(UPlayFabJsonObject* response) // [0x18a00f0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientRedeemCouponResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[39]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodePurchaseItemResultResponse
	FClientPurchaseItemResult decodePurchaseItemResultResponse(UPlayFabJsonObject* response) // [0x189d8e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientPurchaseItemResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[40]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodePayForPurchaseResultResponse
	FClientPayForPurchaseResult decodePayForPurchaseResultResponse(UPlayFabJsonObject* response) // [0x189fff0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientPayForPurchaseResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[41]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeOpenTradeResponseResponse
	FClientOpenTradeResponse decodeOpenTradeResponseResponse(UPlayFabJsonObject* response) // [0x189d480] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientOpenTradeResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeModifyUserVirtualCurrencyResultResponse
	FClientModifyUserVirtualCurrencyResult decodeModifyUserVirtualCurrencyResultResponse(UPlayFabJsonObject* response) // [0x189fec0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientModifyUserVirtualCurrencyResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeMatchmakeResultResponse
	FClientMatchmakeResult decodeMatchmakeResultResponse(UPlayFabJsonObject* response) // [0x189fdb0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientMatchmakeResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeLoginResultResponse
	FClientLoginResult decodeLoginResultResponse(UPlayFabJsonObject* response) // [0x189fc10] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientLoginResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeListUsersCharactersResultResponse
	FClientListUsersCharactersResult decodeListUsersCharactersResultResponse(UPlayFabJsonObject* response) // [0x189fb30] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientListUsersCharactersResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeLinkXboxAccountResultResponse
	FClientLinkXboxAccountResult decodeLinkXboxAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientLinkXboxAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeLinkTwitchAccountResultResponse
	FClientLinkTwitchAccountResult decodeLinkTwitchAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientLinkTwitchAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeLinkSteamAccountResultResponse
	FClientLinkSteamAccountResult decodeLinkSteamAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientLinkSteamAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeLinkPSNAccountResultResponse
	FClientLinkPSNAccountResult decodeLinkPSNAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientLinkPSNAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeLinkNintendoSwitchDeviceIdResultResponse
	FClientLinkNintendoSwitchDeviceIdResult decodeLinkNintendoSwitchDeviceIdResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientLinkNintendoSwitchDeviceIdResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeLinkKongregateAccountResultResponse
	FClientLinkKongregateAccountResult decodeLinkKongregateAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientLinkKongregateAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeLinkIOSDeviceIDResultResponse
	FClientLinkIOSDeviceIDResult decodeLinkIOSDeviceIDResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientLinkIOSDeviceIDResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeLinkGoogleAccountResultResponse
	FClientLinkGoogleAccountResult decodeLinkGoogleAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientLinkGoogleAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeLinkGameCenterAccountResultResponse
	FClientLinkGameCenterAccountResult decodeLinkGameCenterAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientLinkGameCenterAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[55]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeLinkFacebookInstantGamesIdResultResponse
	FClientLinkFacebookInstantGamesIdResult decodeLinkFacebookInstantGamesIdResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientLinkFacebookInstantGamesIdResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[56]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeLinkFacebookAccountResultResponse
	FClientLinkFacebookAccountResult decodeLinkFacebookAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientLinkFacebookAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[57]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeLinkCustomIDResultResponse
	FClientLinkCustomIDResult decodeLinkCustomIDResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientLinkCustomIDResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[58]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeLinkAndroidDeviceIDResultResponse
	FClientLinkAndroidDeviceIDResult decodeLinkAndroidDeviceIDResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientLinkAndroidDeviceIDResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[59]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGrantCharacterToUserResultResponse
	FClientGrantCharacterToUserResult decodeGrantCharacterToUserResultResponse(UPlayFabJsonObject* response) // [0x189fa00] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGrantCharacterToUserResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[60]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetUserInventoryResultResponse
	FClientGetUserInventoryResult decodeGetUserInventoryResultResponse(UPlayFabJsonObject* response) // [0x189f910] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetUserInventoryResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[61]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetUserDataResultResponse
	FClientGetUserDataResult decodeGetUserDataResultResponse(UPlayFabJsonObject* response) // [0x189f870] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetUserDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[62]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetTradeStatusResponseResponse
	FClientGetTradeStatusResponse decodeGetTradeStatusResponseResponse(UPlayFabJsonObject* response) // [0x189d480] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetTradeStatusResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[63]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetTitlePublicKeyResultResponse
	FClientGetTitlePublicKeyResult decodeGetTitlePublicKeyResultResponse(UPlayFabJsonObject* response) // [0x189f790] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetTitlePublicKeyResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[64]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetTitleNewsResultResponse
	FClientGetTitleNewsResult decodeGetTitleNewsResultResponse(UPlayFabJsonObject* response) // [0x189f6b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetTitleNewsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[65]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetTitleDataResultResponse
	FClientGetTitleDataResult decodeGetTitleDataResultResponse(UPlayFabJsonObject* response) // [0x189f0e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetTitleDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[66]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetTimeResultResponse
	FClientGetTimeResult decodeGetTimeResultResponse(UPlayFabJsonObject* response) // [0x189f5d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetTimeResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[67]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetStoreItemsResultResponse
	FClientGetStoreItemsResult decodeGetStoreItemsResultResponse(UPlayFabJsonObject* response) // [0x189f450] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetStoreItemsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[68]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetSharedGroupDataResultResponse
	FClientGetSharedGroupDataResult decodeGetSharedGroupDataResultResponse(UPlayFabJsonObject* response) // [0x189f370] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetSharedGroupDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[69]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPurchaseResultResponse
	FClientGetPurchaseResult decodeGetPurchaseResultResponse(UPlayFabJsonObject* response) // [0x189f170] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPurchaseResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[70]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPublisherDataResultResponse
	FClientGetPublisherDataResult decodeGetPublisherDataResultResponse(UPlayFabJsonObject* response) // [0x189f0e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPublisherDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[71]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromXboxLiveIDsResultResponse
	FClientGetPlayFabIDsFromXboxLiveIDsResult decodeGetPlayFabIDsFromXboxLiveIDsResultResponse(UPlayFabJsonObject* response) // [0x189e9b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayFabIDsFromXboxLiveIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[72]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromTwitchIDsResultResponse
	FClientGetPlayFabIDsFromTwitchIDsResult decodeGetPlayFabIDsFromTwitchIDsResultResponse(UPlayFabJsonObject* response) // [0x189e9b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayFabIDsFromTwitchIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[73]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromSteamIDsResultResponse
	FClientGetPlayFabIDsFromSteamIDsResult decodeGetPlayFabIDsFromSteamIDsResultResponse(UPlayFabJsonObject* response) // [0x189e9b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayFabIDsFromSteamIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[74]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromPSNAccountIDsResultResponse
	FClientGetPlayFabIDsFromPSNAccountIDsResult decodeGetPlayFabIDsFromPSNAccountIDsResultResponse(UPlayFabJsonObject* response) // [0x189e9b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayFabIDsFromPSNAccountIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[75]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse
	FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse(UPlayFabJsonObject* response) // [0x189e9b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[76]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromKongregateIDsResultResponse
	FClientGetPlayFabIDsFromKongregateIDsResult decodeGetPlayFabIDsFromKongregateIDsResultResponse(UPlayFabJsonObject* response) // [0x189e9b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayFabIDsFromKongregateIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[77]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGoogleIDsResultResponse
	FClientGetPlayFabIDsFromGoogleIDsResult decodeGetPlayFabIDsFromGoogleIDsResultResponse(UPlayFabJsonObject* response) // [0x189e9b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayFabIDsFromGoogleIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[78]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGenericIDsResultResponse
	FClientGetPlayFabIDsFromGenericIDsResult decodeGetPlayFabIDsFromGenericIDsResultResponse(UPlayFabJsonObject* response) // [0x189e9b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayFabIDsFromGenericIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[79]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGameCenterIDsResultResponse
	FClientGetPlayFabIDsFromGameCenterIDsResult decodeGetPlayFabIDsFromGameCenterIDsResultResponse(UPlayFabJsonObject* response) // [0x189e9b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayFabIDsFromGameCenterIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[80]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse
	FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse(UPlayFabJsonObject* response) // [0x189e9b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[81]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromFacebookIDsResultResponse
	FClientGetPlayFabIDsFromFacebookIDsResult decodeGetPlayFabIDsFromFacebookIDsResultResponse(UPlayFabJsonObject* response) // [0x189e9b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayFabIDsFromFacebookIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[82]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayerTradesResponseResponse
	FClientGetPlayerTradesResponse decodeGetPlayerTradesResponseResponse(UPlayFabJsonObject* response) // [0x189efc0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayerTradesResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[83]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayerTagsResultResponse
	FClientGetPlayerTagsResult decodeGetPlayerTagsResultResponse(UPlayFabJsonObject* response) // [0x189eea0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayerTagsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[84]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayerStatisticVersionsResultResponse
	FClientGetPlayerStatisticVersionsResult decodeGetPlayerStatisticVersionsResultResponse(UPlayFabJsonObject* response) // [0x189ece0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayerStatisticVersionsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[85]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayerStatisticsResultResponse
	FClientGetPlayerStatisticsResult decodeGetPlayerStatisticsResultResponse(UPlayFabJsonObject* response) // [0x189edc0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayerStatisticsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[86]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayerSegmentsResultResponse
	FClientGetPlayerSegmentsResult decodeGetPlayerSegmentsResultResponse(UPlayFabJsonObject* response) // [0x189ec00] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayerSegmentsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[87]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayerProfileResultResponse
	FClientGetPlayerProfileResult decodeGetPlayerProfileResultResponse(UPlayFabJsonObject* response) // [0x189eb70] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayerProfileResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[88]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPlayerCombinedInfoResultResponse
	FClientGetPlayerCombinedInfoResult decodeGetPlayerCombinedInfoResultResponse(UPlayFabJsonObject* response) // [0x189ea90] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPlayerCombinedInfoResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[89]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPhotonAuthenticationTokenResultResponse
	FClientGetPhotonAuthenticationTokenResult decodeGetPhotonAuthenticationTokenResultResponse(UPlayFabJsonObject* response) // [0x189e8d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPhotonAuthenticationTokenResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[90]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetPaymentTokenResultResponse
	FClientGetPaymentTokenResult decodeGetPaymentTokenResultResponse(UPlayFabJsonObject* response) // [0x189e7b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetPaymentTokenResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[91]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardResultResponse
	FClientGetLeaderboardResult decodeGetLeaderboardResultResponse(UPlayFabJsonObject* response) // [0x189e5a0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetLeaderboardResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[92]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardForUsersCharactersResultResponse
	FClientGetLeaderboardForUsersCharactersResult decodeGetLeaderboardForUsersCharactersResultResponse(UPlayFabJsonObject* response) // [0x189e350] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetLeaderboardForUsersCharactersResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[93]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardAroundPlayerResultResponse
	FClientGetLeaderboardAroundPlayerResult decodeGetLeaderboardAroundPlayerResultResponse(UPlayFabJsonObject* response) // [0x189e5a0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetLeaderboardAroundPlayerResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[94]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardAroundCharacterResultResponse
	FClientGetLeaderboardAroundCharacterResult decodeGetLeaderboardAroundCharacterResultResponse(UPlayFabJsonObject* response) // [0x189e350] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetLeaderboardAroundCharacterResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[95]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetFriendsListResultResponse
	FClientGetFriendsListResult decodeGetFriendsListResultResponse(UPlayFabJsonObject* response) // [0x189e6d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetFriendsListResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[96]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetFriendLeaderboardAroundPlayerResultResponse
	FClientGetFriendLeaderboardAroundPlayerResult decodeGetFriendLeaderboardAroundPlayerResultResponse(UPlayFabJsonObject* response) // [0x189e5a0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetFriendLeaderboardAroundPlayerResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[97]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetContentDownloadUrlResultResponse
	FClientGetContentDownloadUrlResult decodeGetContentDownloadUrlResultResponse(UPlayFabJsonObject* response) // [0x189e4c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetContentDownloadUrlResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[98]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetCharacterStatisticsResultResponse
	FClientGetCharacterStatisticsResult decodeGetCharacterStatisticsResultResponse(UPlayFabJsonObject* response) // [0x189e430] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetCharacterStatisticsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[99]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetCharacterLeaderboardResultResponse
	FClientGetCharacterLeaderboardResult decodeGetCharacterLeaderboardResultResponse(UPlayFabJsonObject* response) // [0x189e350] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetCharacterLeaderboardResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[100]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetCharacterInventoryResultResponse
	FClientGetCharacterInventoryResult decodeGetCharacterInventoryResultResponse(UPlayFabJsonObject* response) // [0x189e210] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetCharacterInventoryResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[101]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetCharacterDataResultResponse
	FClientGetCharacterDataResult decodeGetCharacterDataResultResponse(UPlayFabJsonObject* response) // [0x189e120] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetCharacterDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[102]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetCatalogItemsResultResponse
	FClientGetCatalogItemsResult decodeGetCatalogItemsResultResponse(UPlayFabJsonObject* response) // [0x189e040] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetCatalogItemsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[103]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetAdPlacementsResultResponse
	FClientGetAdPlacementsResult decodeGetAdPlacementsResultResponse(UPlayFabJsonObject* response) // [0x189df60] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetAdPlacementsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[104]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGetAccountInfoResultResponse
	FClientGetAccountInfoResult decodeGetAccountInfoResultResponse(UPlayFabJsonObject* response) // [0x189ded0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGetAccountInfoResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[105]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeGameServerRegionsResultResponse
	FClientGameServerRegionsResult decodeGameServerRegionsResultResponse(UPlayFabJsonObject* response) // [0x189ddf0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientGameServerRegionsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[106]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeExecuteCloudScriptResultResponse
	FClientExecuteCloudScriptResult decodeExecuteCloudScriptResultResponse(UPlayFabJsonObject* response) // [0x189dc70] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientExecuteCloudScriptResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[107]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeEmptyResultResponse
	FClientEmptyResult decodeEmptyResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientEmptyResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[108]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeEmptyResponseResponse
	FClientEmptyResponse decodeEmptyResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientEmptyResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[109]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeCurrentGamesResultResponse
	FClientCurrentGamesResult decodeCurrentGamesResultResponse(UPlayFabJsonObject* response) // [0x189db80] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientCurrentGamesResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[110]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeCreateSharedGroupResultResponse
	FClientCreateSharedGroupResult decodeCreateSharedGroupResultResponse(UPlayFabJsonObject* response) // [0x189daa0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientCreateSharedGroupResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[111]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeConsumeXboxEntitlementsResultResponse
	FClientConsumeXboxEntitlementsResult decodeConsumeXboxEntitlementsResultResponse(UPlayFabJsonObject* response) // [0x189d8e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientConsumeXboxEntitlementsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[112]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeConsumePSNEntitlementsResultResponse
	FClientConsumePSNEntitlementsResult decodeConsumePSNEntitlementsResultResponse(UPlayFabJsonObject* response) // [0x189d9c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientConsumePSNEntitlementsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[113]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeConsumePS5EntitlementsResultResponse
	FClientConsumePS5EntitlementsResult decodeConsumePS5EntitlementsResultResponse(UPlayFabJsonObject* response) // [0x189d8e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientConsumePS5EntitlementsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[114]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeConsumeMicrosoftStoreEntitlementsResponseResponse
	FClientConsumeMicrosoftStoreEntitlementsResponse decodeConsumeMicrosoftStoreEntitlementsResponseResponse(UPlayFabJsonObject* response) // [0x189d8e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientConsumeMicrosoftStoreEntitlementsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[115]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeConsumeItemResultResponse
	FClientConsumeItemResult decodeConsumeItemResultResponse(UPlayFabJsonObject* response) // [0x189d7f0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientConsumeItemResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[116]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeConfirmPurchaseResultResponse
	FClientConfirmPurchaseResult decodeConfirmPurchaseResultResponse(UPlayFabJsonObject* response) // [0x189d680] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientConfirmPurchaseResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[117]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeCancelTradeResponseResponse
	FClientCancelTradeResponse decodeCancelTradeResponseResponse(UPlayFabJsonObject* response) // [0x189d480] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientCancelTradeResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[118]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeAttributeInstallResultResponse
	FClientAttributeInstallResult decodeAttributeInstallResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientAttributeInstallResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[119]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeAndroidDevicePushNotificationRegistrationResultResponse
	FClientAndroidDevicePushNotificationRegistrationResult decodeAndroidDevicePushNotificationRegistrationResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientAndroidDevicePushNotificationRegistrationResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[120]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeAddUsernamePasswordResultResponse
	FClientAddUsernamePasswordResult decodeAddUsernamePasswordResultResponse(UPlayFabJsonObject* response) // [0x189d5a0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientAddUsernamePasswordResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[121]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeAddSharedGroupMembersResultResponse
	FClientAddSharedGroupMembersResult decodeAddSharedGroupMembersResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientAddSharedGroupMembersResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[122]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeAddOrUpdateContactEmailResultResponse
	FClientAddOrUpdateContactEmailResult decodeAddOrUpdateContactEmailResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientAddOrUpdateContactEmailResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[123]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeAddGenericIDResultResponse
	FClientAddGenericIDResult decodeAddGenericIDResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientAddGenericIDResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[124]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeAddFriendResultResponse
	FClientAddFriendResult decodeAddFriendResultResponse(UPlayFabJsonObject* response) // [0x189d510] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientAddFriendResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[125]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabClientModelDecoder.decodeAcceptTradeResponseResponse
	FClientAcceptTradeResponse decodeAcceptTradeResponseResponse(UPlayFabJsonObject* response) // [0x189d480] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FClientAcceptTradeResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[126]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabCloudScriptAPI
/// Size: 0x01D0 (464 bytes) (0x000030 - 0x0001D0) align 8 MaxSize: 0x01D0
class UPlayFabCloudScriptAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,815) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x128];                                     // 0x0040   (0x0128)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x0168   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x0170   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x0178   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x0180   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.UnregisterFunction
	// UPlayFabCloudScriptAPI* UnregisterFunction(FCloudScriptUnregisterFunctionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b5b20] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.RegisterQueuedFunction
	// UPlayFabCloudScriptAPI* RegisterQueuedFunction(FCloudScriptRegisterQueuedFunctionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b58a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.RegisterHttpFunction
	// UPlayFabCloudScriptAPI* RegisterHttpFunction(FCloudScriptRegisterHttpFunctionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b5660] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForScheduledTask
	// UPlayFabCloudScriptAPI* PostFunctionResultForScheduledTask(FCloudScriptPostFunctionResultForScheduledTaskRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b54b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForPlayerTriggeredAction
	// UPlayFabCloudScriptAPI* PostFunctionResultForPlayerTriggeredAction(FCloudScriptPostFunctionResultForPlayerTriggeredActionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b5300] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForFunctionExecution
	// UPlayFabCloudScriptAPI* PostFunctionResultForFunctionExecution(FCloudScriptPostFunctionResultForFunctionExecutionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b5160] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForEntityTriggeredAction
	// UPlayFabCloudScriptAPI* PostFunctionResultForEntityTriggeredAction(FCloudScriptPostFunctionResultForEntityTriggeredActionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b4fc0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.ListQueuedFunctions
	// UPlayFabCloudScriptAPI* ListQueuedFunctions(FCloudScriptListFunctionsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b4e30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.ListHttpFunctions
	// UPlayFabCloudScriptAPI* ListHttpFunctions(FCloudScriptListFunctionsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b4ca0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.ListFunctions
	// UPlayFabCloudScriptAPI* ListFunctions(FCloudScriptListFunctionsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b4b10] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.HelperUnregisterFunction
	void HelperUnregisterFunction(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18b48e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.HelperRegisterQueuedFunction
	void HelperRegisterQueuedFunction(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18b46b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.HelperRegisterHttpFunction
	void HelperRegisterHttpFunction(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18b4480] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForScheduledTask
	void HelperPostFunctionResultForScheduledTask(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18b4250] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForPlayerTriggeredAction
	void HelperPostFunctionResultForPlayerTriggeredAction(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18b4020] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForFunctionExecution
	void HelperPostFunctionResultForFunctionExecution(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18b3df0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForEntityTriggeredAction
	void HelperPostFunctionResultForEntityTriggeredAction(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18b3bc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.HelperListQueuedFunctions
	void HelperListQueuedFunctions(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18b3990] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.HelperListHttpFunctions
	void HelperListHttpFunctions(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18b3760] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.HelperListFunctions
	void HelperListFunctions(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18b3530] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.HelperGetFunction
	void HelperGetFunction(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18b3300] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.HelperExecuteFunction
	void HelperExecuteFunction(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18b30d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.HelperExecuteEntityCloudScript
	void HelperExecuteEntityCloudScript(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18b2ea0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.GetFunction
	// UPlayFabCloudScriptAPI* GetFunction(FCloudScriptGetFunctionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b2cb0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.ExecuteFunction
	// UPlayFabCloudScriptAPI* ExecuteFunction(FCloudScriptExecuteFunctionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b2aa0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.ExecuteEntityCloudScript
	// UPlayFabCloudScriptAPI* ExecuteEntityCloudScript(FCloudScriptExecuteEntityCloudScriptRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b2880] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessUnregisterFunction__DelegateSignature
	void DelegateOnSuccessUnregisterFunction__DelegateSignature(FCloudScriptEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FCloudScriptEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessRegisterQueuedFunction__DelegateSignature
	void DelegateOnSuccessRegisterQueuedFunction__DelegateSignature(FCloudScriptEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FCloudScriptEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessRegisterHttpFunction__DelegateSignature
	void DelegateOnSuccessRegisterHttpFunction__DelegateSignature(FCloudScriptEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FCloudScriptEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessPostFunctionResultForScheduledTask__DelegateSignature
	void DelegateOnSuccessPostFunctionResultForScheduledTask__DelegateSignature(FCloudScriptEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FCloudScriptEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessPostFunctionResultForPlayerTriggeredAction__DelegateSignature
	void DelegateOnSuccessPostFunctionResultForPlayerTriggeredAction__DelegateSignature(FCloudScriptEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FCloudScriptEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessPostFunctionResultForFunctionExecution__DelegateSignature
	void DelegateOnSuccessPostFunctionResultForFunctionExecution__DelegateSignature(FCloudScriptEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FCloudScriptEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessPostFunctionResultForEntityTriggeredAction__DelegateSignature
	void DelegateOnSuccessPostFunctionResultForEntityTriggeredAction__DelegateSignature(FCloudScriptEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FCloudScriptEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessListQueuedFunctions__DelegateSignature
	void DelegateOnSuccessListQueuedFunctions__DelegateSignature(FCloudScriptListQueuedFunctionsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FCloudScriptListQueuedFunctionsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessListHttpFunctions__DelegateSignature
	void DelegateOnSuccessListHttpFunctions__DelegateSignature(FCloudScriptListHttpFunctionsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FCloudScriptListHttpFunctionsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessListFunctions__DelegateSignature
	void DelegateOnSuccessListFunctions__DelegateSignature(FCloudScriptListFunctionsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FCloudScriptListFunctionsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessGetFunction__DelegateSignature
	void DelegateOnSuccessGetFunction__DelegateSignature(FCloudScriptGetFunctionResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FCloudScriptGetFunctionResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessExecuteFunction__DelegateSignature
	void DelegateOnSuccessExecuteFunction__DelegateSignature(FCloudScriptExecuteFunctionResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FCloudScriptExecuteFunctionResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessExecuteEntityCloudScript__DelegateSignature
	void DelegateOnSuccessExecuteEntityCloudScript__DelegateSignature(FCloudScriptExecuteCloudScriptResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FCloudScriptExecuteCloudScriptResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[39]);
		func(Error, customData);
	}
};

/// Class /Script/PlayFab.PlayFabCloudScriptModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabCloudScriptModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabCloudScriptModelDecoder.decodeListQueuedFunctionsResultResponse
	FCloudScriptListQueuedFunctionsResult decodeListQueuedFunctionsResultResponse(UPlayFabJsonObject* response) // [0x18b5fd0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FCloudScriptListQueuedFunctionsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptModelDecoder.decodeListHttpFunctionsResultResponse
	FCloudScriptListHttpFunctionsResult decodeListHttpFunctionsResultResponse(UPlayFabJsonObject* response) // [0x18b5fd0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FCloudScriptListHttpFunctionsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptModelDecoder.decodeListFunctionsResultResponse
	FCloudScriptListFunctionsResult decodeListFunctionsResultResponse(UPlayFabJsonObject* response) // [0x18b5fd0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FCloudScriptListFunctionsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptModelDecoder.decodeGetFunctionResultResponse
	FCloudScriptGetFunctionResult decodeGetFunctionResultResponse(UPlayFabJsonObject* response) // [0x18b5e20] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FCloudScriptGetFunctionResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptModelDecoder.decodeExecuteFunctionResultResponse
	FCloudScriptExecuteFunctionResult decodeExecuteFunctionResultResponse(UPlayFabJsonObject* response) // [0x18b5d10] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FCloudScriptExecuteFunctionResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptModelDecoder.decodeExecuteCloudScriptResultResponse
	FCloudScriptExecuteCloudScriptResult decodeExecuteCloudScriptResultResponse(UPlayFabJsonObject* response) // [0x189dc70] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FCloudScriptExecuteCloudScriptResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabCloudScriptModelDecoder.decodeEmptyResultResponse
	FCloudScriptEmptyResult decodeEmptyResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FCloudScriptEmptyResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabDataAPI
/// Size: 0x0160 (352 bytes) (0x000030 - 0x000160) align 8 MaxSize: 0x0160
class UPlayFabDataAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,816) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0xB8];                                      // 0x0040   (0x00B8)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x00F8   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x0100   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x0108   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x0110   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabDataAPI.SetObjects
	// UPlayFabDataAPI* SetObjects(FDataSetObjectsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18bf800] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabDataAPI.InitiateFileUploads
	// UPlayFabDataAPI* InitiateFileUploads(FDataInitiateFileUploadsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18be6e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabDataAPI.HelperSetObjects
	void HelperSetObjects(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bde20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.HelperInitiateFileUploads
	void HelperInitiateFileUploads(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bd330] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.HelperGetObjects
	void HelperGetObjects(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bd100] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.HelperGetFiles
	void HelperGetFiles(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bc1b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.HelperFinalizeFileUploads
	void HelperFinalizeFileUploads(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bb490] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.HelperDeleteFiles
	void HelperDeleteFiles(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bb260] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.HelperAbortFileUploads
	void HelperAbortFileUploads(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18babd0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.GetObjects
	// UPlayFabDataAPI* GetObjects(FDataGetObjectsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18baa30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabDataAPI.GetFiles
	// UPlayFabDataAPI* GetFiles(FDataGetFilesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b9bd0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabDataAPI.FinalizeFileUploads
	// UPlayFabDataAPI* FinalizeFileUploads(FDataFinalizeFileUploadsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b9000] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabDataAPI.DeleteFiles
	// UPlayFabDataAPI* DeleteFiles(FDataDeleteFilesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b8c00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabDataAPI.DelegateOnSuccessSetObjects__DelegateSignature
	void DelegateOnSuccessSetObjects__DelegateSignature(FDataSetObjectsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FDataSetObjectsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.DelegateOnSuccessInitiateFileUploads__DelegateSignature
	void DelegateOnSuccessInitiateFileUploads__DelegateSignature(FDataInitiateFileUploadsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FDataInitiateFileUploadsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.DelegateOnSuccessGetObjects__DelegateSignature
	void DelegateOnSuccessGetObjects__DelegateSignature(FDataGetObjectsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FDataGetObjectsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.DelegateOnSuccessGetFiles__DelegateSignature
	void DelegateOnSuccessGetFiles__DelegateSignature(FDataGetFilesResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FDataGetFilesResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.DelegateOnSuccessFinalizeFileUploads__DelegateSignature
	void DelegateOnSuccessFinalizeFileUploads__DelegateSignature(FDataFinalizeFileUploadsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FDataFinalizeFileUploadsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.DelegateOnSuccessDeleteFiles__DelegateSignature
	void DelegateOnSuccessDeleteFiles__DelegateSignature(FDataDeleteFilesResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FDataDeleteFilesResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.DelegateOnSuccessAbortFileUploads__DelegateSignature
	void DelegateOnSuccessAbortFileUploads__DelegateSignature(FDataAbortFileUploadsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FDataAbortFileUploadsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(Error, customData);
	}
	// Function /Script/PlayFab.PlayFabDataAPI.AbortFileUploads
	// UPlayFabDataAPI* AbortFileUploads(FDataAbortFileUploadsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b84d0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/PlayFab.PlayFabDataModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabDataModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabDataModelDecoder.decodeSetObjectsResponseResponse
	FDataSetObjectsResponse decodeSetObjectsResponseResponse(UPlayFabJsonObject* response) // [0x18c0450] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FDataSetObjectsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabDataModelDecoder.decodeInitiateFileUploadsResponseResponse
	FDataInitiateFileUploadsResponse decodeInitiateFileUploadsResponseResponse(UPlayFabJsonObject* response) // [0x18c0370] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FDataInitiateFileUploadsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabDataModelDecoder.decodeGetObjectsResponseResponse
	FDataGetObjectsResponse decodeGetObjectsResponseResponse(UPlayFabJsonObject* response) // [0x18c02d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FDataGetObjectsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabDataModelDecoder.decodeGetFilesResponseResponse
	FDataGetFilesResponse decodeGetFilesResponseResponse(UPlayFabJsonObject* response) // [0x18c0230] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FDataGetFilesResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabDataModelDecoder.decodeFinalizeFileUploadsResponseResponse
	FDataFinalizeFileUploadsResponse decodeFinalizeFileUploadsResponseResponse(UPlayFabJsonObject* response) // [0x18c0230] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FDataFinalizeFileUploadsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabDataModelDecoder.decodeDeleteFilesResponseResponse
	FDataDeleteFilesResponse decodeDeleteFilesResponseResponse(UPlayFabJsonObject* response) // [0x18c0190] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FDataDeleteFilesResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabDataModelDecoder.decodeAbortFileUploadsResponseResponse
	FDataAbortFileUploadsResponse decodeAbortFileUploadsResponseResponse(UPlayFabJsonObject* response) // [0x18c0190] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FDataAbortFileUploadsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabEconomyAPI
/// Size: 0x0280 (640 bytes) (0x000030 - 0x000280) align 8 MaxSize: 0x0280
class UPlayFabEconomyAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,817) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x1D8];                                     // 0x0040   (0x01D8)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x0218   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x0220   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x0228   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x0230   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabEconomyAPI.UpdateDraftItem
	// UPlayFabEconomyAPI* UpdateDraftItem(FEconomyUpdateDraftItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18bfff0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.UpdateCatalogConfig
	// UPlayFabEconomyAPI* UpdateCatalogConfig(FEconomyUpdateCatalogConfigRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18bfe50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.TakedownItemReviews
	// UPlayFabEconomyAPI* TakedownItemReviews(FEconomyTakedownItemReviewsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18bfc60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.SubmitItemReviewVote
	// UPlayFabEconomyAPI* SubmitItemReviewVote(FEconomySubmitItemReviewVoteRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18bfa00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.SetItemModerationState
	// UPlayFabEconomyAPI* SetItemModerationState(FEconomySetItemModerationStateRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18bf5b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.SearchItems
	// UPlayFabEconomyAPI* SearchItems(FEconomySearchItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18bf260] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.ReviewItem
	// UPlayFabEconomyAPI* ReviewItem(FEconomyReviewItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18bf050] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.ReportItemReview
	// UPlayFabEconomyAPI* ReportItemReview(FEconomyReportItemReviewRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18bed90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.ReportItem
	// UPlayFabEconomyAPI* ReportItem(FEconomyReportItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18beb30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.PublishDraftItem
	// UPlayFabEconomyAPI* PublishDraftItem(FEconomyPublishDraftItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18be8e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperUpdateDraftItem
	void HelperUpdateDraftItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18be4b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperUpdateCatalogConfig
	void HelperUpdateCatalogConfig(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18be280] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperTakedownItemReviews
	void HelperTakedownItemReviews(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18be050] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperSubmitItemReviewVote
	void HelperSubmitItemReviewVote(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1846440] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperSetItemModerationState
	void HelperSetItemModerationState(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bdbf0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperSearchItems
	void HelperSearchItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bd9c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperReviewItem
	void HelperReviewItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1845090] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperReportItemReview
	void HelperReportItemReview(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bd790] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperReportItem
	void HelperReportItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bd560] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperPublishDraftItem
	void HelperPublishDraftItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184f270] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperGetItems
	void HelperGetItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bced0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperGetItemReviewSummary
	void HelperGetItemReviewSummary(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bca70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperGetItemReviews
	void HelperGetItemReviews(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bcca0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperGetItemPublishStatus
	void HelperGetItemPublishStatus(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bc840] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperGetItemModerationState
	void HelperGetItemModerationState(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bc610] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperGetItem
	void HelperGetItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bc3e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperGetEntityItemReview
	void HelperGetEntityItemReview(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bbf80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperGetEntityDraftItems
	void HelperGetEntityDraftItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bbd50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperGetDraftItems
	void HelperGetDraftItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bbb20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperGetDraftItem
	void HelperGetDraftItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bb8f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperGetCatalogConfig
	void HelperGetCatalogConfig(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bb6c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperDeleteItem
	void HelperDeleteItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1846210] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperDeleteEntityItemReviews
	void HelperDeleteEntityItemReviews(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1845db0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperCreateUploadUrls
	void HelperCreateUploadUrls(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bb030] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.HelperCreateDraftItem
	void HelperCreateDraftItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bae00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.GetItems
	// UPlayFabEconomyAPI* GetItems(FEconomyGetItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18ba7f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.GetItemReviewSummary
	// UPlayFabEconomyAPI* GetItemReviewSummary(FEconomyGetItemReviewSummaryRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18ba360] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.GetItemReviews
	// UPlayFabEconomyAPI* GetItemReviews(FEconomyGetItemReviewsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18ba550] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.GetItemPublishStatus
	// UPlayFabEconomyAPI* GetItemPublishStatus(FEconomyGetItemPublishStatusRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18ba160] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.GetItemModerationState
	// UPlayFabEconomyAPI* GetItemModerationState(FEconomyGetItemModerationStateRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b9f70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.GetItem
	// UPlayFabEconomyAPI* GetItem(FEconomyGetItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b9d70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.GetEntityItemReview
	// UPlayFabEconomyAPI* GetEntityItemReview(FEconomyGetEntityItemReviewRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b99d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.GetEntityDraftItems
	// UPlayFabEconomyAPI* GetEntityDraftItems(FEconomyGetEntityDraftItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b97d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.GetDraftItems
	// UPlayFabEconomyAPI* GetDraftItems(FEconomyGetDraftItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b9590] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.GetDraftItem
	// UPlayFabEconomyAPI* GetDraftItem(FEconomyGetDraftItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b9390] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.GetCatalogConfig
	// UPlayFabEconomyAPI* GetCatalogConfig(FEconomyGetCatalogConfigRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b9200] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.DeleteItem
	// UPlayFabEconomyAPI* DeleteItem(FEconomyDeleteItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b8e00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.DeleteEntityItemReviews
	// UPlayFabEconomyAPI* DeleteEntityItemReviews(FEconomyDeleteEntityItemReviewsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b8a60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessUpdateDraftItem__DelegateSignature
	void DelegateOnSuccessUpdateDraftItem__DelegateSignature(FEconomyUpdateDraftItemResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyUpdateDraftItemResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessUpdateCatalogConfig__DelegateSignature
	void DelegateOnSuccessUpdateCatalogConfig__DelegateSignature(FEconomyUpdateCatalogConfigResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyUpdateCatalogConfigResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessTakedownItemReviews__DelegateSignature
	void DelegateOnSuccessTakedownItemReviews__DelegateSignature(FEconomyTakedownItemReviewsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyTakedownItemReviewsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessSubmitItemReviewVote__DelegateSignature
	void DelegateOnSuccessSubmitItemReviewVote__DelegateSignature(FEconomySubmitItemReviewVoteResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomySubmitItemReviewVoteResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessSetItemModerationState__DelegateSignature
	void DelegateOnSuccessSetItemModerationState__DelegateSignature(FEconomySetItemModerationStateResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomySetItemModerationStateResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessSearchItems__DelegateSignature
	void DelegateOnSuccessSearchItems__DelegateSignature(FEconomySearchItemsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomySearchItemsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessReviewItem__DelegateSignature
	void DelegateOnSuccessReviewItem__DelegateSignature(FEconomyReviewItemResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyReviewItemResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessReportItemReview__DelegateSignature
	void DelegateOnSuccessReportItemReview__DelegateSignature(FEconomyReportItemReviewResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyReportItemReviewResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[55]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessReportItem__DelegateSignature
	void DelegateOnSuccessReportItem__DelegateSignature(FEconomyReportItemResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyReportItemResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[56]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessPublishDraftItem__DelegateSignature
	void DelegateOnSuccessPublishDraftItem__DelegateSignature(FEconomyPublishDraftItemResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyPublishDraftItemResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[57]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetItems__DelegateSignature
	void DelegateOnSuccessGetItems__DelegateSignature(FEconomyGetItemsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyGetItemsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[58]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetItemReviewSummary__DelegateSignature
	void DelegateOnSuccessGetItemReviewSummary__DelegateSignature(FEconomyGetItemReviewSummaryResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyGetItemReviewSummaryResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[59]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetItemReviews__DelegateSignature
	void DelegateOnSuccessGetItemReviews__DelegateSignature(FEconomyGetItemReviewsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyGetItemReviewsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[60]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetItemPublishStatus__DelegateSignature
	void DelegateOnSuccessGetItemPublishStatus__DelegateSignature(FEconomyGetItemPublishStatusResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyGetItemPublishStatusResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[61]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetItemModerationState__DelegateSignature
	void DelegateOnSuccessGetItemModerationState__DelegateSignature(FEconomyGetItemModerationStateResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyGetItemModerationStateResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[62]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetItem__DelegateSignature
	void DelegateOnSuccessGetItem__DelegateSignature(FEconomyGetItemResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyGetItemResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[63]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetEntityItemReview__DelegateSignature
	void DelegateOnSuccessGetEntityItemReview__DelegateSignature(FEconomyGetEntityItemReviewResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyGetEntityItemReviewResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[64]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetEntityDraftItems__DelegateSignature
	void DelegateOnSuccessGetEntityDraftItems__DelegateSignature(FEconomyGetEntityDraftItemsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyGetEntityDraftItemsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[65]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetDraftItems__DelegateSignature
	void DelegateOnSuccessGetDraftItems__DelegateSignature(FEconomyGetDraftItemsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyGetDraftItemsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[66]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetDraftItem__DelegateSignature
	void DelegateOnSuccessGetDraftItem__DelegateSignature(FEconomyGetDraftItemResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyGetDraftItemResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[67]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetCatalogConfig__DelegateSignature
	void DelegateOnSuccessGetCatalogConfig__DelegateSignature(FEconomyGetCatalogConfigResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyGetCatalogConfigResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[68]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessDeleteItem__DelegateSignature
	void DelegateOnSuccessDeleteItem__DelegateSignature(FEconomyDeleteItemResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyDeleteItemResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[69]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessDeleteEntityItemReviews__DelegateSignature
	void DelegateOnSuccessDeleteEntityItemReviews__DelegateSignature(FEconomyDeleteEntityItemReviewsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyDeleteEntityItemReviewsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[70]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessCreateUploadUrls__DelegateSignature
	void DelegateOnSuccessCreateUploadUrls__DelegateSignature(FEconomyCreateUploadUrlsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyCreateUploadUrlsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[71]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnSuccessCreateDraftItem__DelegateSignature
	void DelegateOnSuccessCreateDraftItem__DelegateSignature(FEconomyCreateDraftItemResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEconomyCreateDraftItemResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[72]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[73]);
		func(Error, customData);
	}
	// Function /Script/PlayFab.PlayFabEconomyAPI.CreateUploadUrls
	// UPlayFabEconomyAPI* CreateUploadUrls(FEconomyCreateUploadUrlsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b8870] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEconomyAPI.CreateDraftItem
	// UPlayFabEconomyAPI* CreateDraftItem(FEconomyCreateDraftItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18b86d0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/PlayFab.PlayFabEconomyModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabEconomyModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeUpdateDraftItemResponseResponse
	FEconomyUpdateDraftItemResponse decodeUpdateDraftItemResponseResponse(UPlayFabJsonObject* response) // [0x18c36c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyUpdateDraftItemResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeUpdateCatalogConfigResponseResponse
	FEconomyUpdateCatalogConfigResponse decodeUpdateCatalogConfigResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyUpdateCatalogConfigResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeTakedownItemReviewsResponseResponse
	FEconomyTakedownItemReviewsResponse decodeTakedownItemReviewsResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyTakedownItemReviewsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeSubmitItemReviewVoteResponseResponse
	FEconomySubmitItemReviewVoteResponse decodeSubmitItemReviewVoteResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomySubmitItemReviewVoteResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeSetItemModerationStateResponseResponse
	FEconomySetItemModerationStateResponse decodeSetItemModerationStateResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomySetItemModerationStateResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeSearchItemsResponseResponse
	FEconomySearchItemsResponse decodeSearchItemsResponseResponse(UPlayFabJsonObject* response) // [0x18c38c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomySearchItemsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeReviewItemResponseResponse
	FEconomyReviewItemResponse decodeReviewItemResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyReviewItemResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeReportItemReviewResponseResponse
	FEconomyReportItemReviewResponse decodeReportItemReviewResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyReportItemReviewResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeReportItemResponseResponse
	FEconomyReportItemResponse decodeReportItemResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyReportItemResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodePublishDraftItemResponseResponse
	FEconomyPublishDraftItemResponse decodePublishDraftItemResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyPublishDraftItemResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeGetItemsResponseResponse
	FEconomyGetItemsResponse decodeGetItemsResponseResponse(UPlayFabJsonObject* response) // [0x189d8e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyGetItemsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeGetItemReviewSummaryResponseResponse
	FEconomyGetItemReviewSummaryResponse decodeGetItemReviewSummaryResponseResponse(UPlayFabJsonObject* response) // [0x18c3be0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyGetItemReviewSummaryResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeGetItemReviewsResponseResponse
	FEconomyGetItemReviewsResponse decodeGetItemReviewsResponseResponse(UPlayFabJsonObject* response) // [0x18c3c80] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyGetItemReviewsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeGetItemResponseResponse
	FEconomyGetItemResponse decodeGetItemResponseResponse(UPlayFabJsonObject* response) // [0x18c36c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyGetItemResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeGetItemPublishStatusResponseResponse
	FEconomyGetItemPublishStatusResponse decodeGetItemPublishStatusResponseResponse(UPlayFabJsonObject* response) // [0x18c3b00] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyGetItemPublishStatusResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeGetItemModerationStateResponseResponse
	FEconomyGetItemModerationStateResponse decodeGetItemModerationStateResponseResponse(UPlayFabJsonObject* response) // [0x18c3a70] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyGetItemModerationStateResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeGetEntityItemReviewResponseResponse
	FEconomyGetEntityItemReviewResponse decodeGetEntityItemReviewResponseResponse(UPlayFabJsonObject* response) // [0x18c39e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyGetEntityItemReviewResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeGetEntityDraftItemsResponseResponse
	FEconomyGetEntityDraftItemsResponse decodeGetEntityDraftItemsResponseResponse(UPlayFabJsonObject* response) // [0x18c38c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyGetEntityDraftItemsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeGetDraftItemsResponseResponse
	FEconomyGetDraftItemsResponse decodeGetDraftItemsResponseResponse(UPlayFabJsonObject* response) // [0x18c38c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyGetDraftItemsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeGetDraftItemResponseResponse
	FEconomyGetDraftItemResponse decodeGetDraftItemResponseResponse(UPlayFabJsonObject* response) // [0x18c36c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyGetDraftItemResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeGetCatalogConfigResponseResponse
	FEconomyGetCatalogConfigResponse decodeGetCatalogConfigResponseResponse(UPlayFabJsonObject* response) // [0x18c3830] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyGetCatalogConfigResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeDeleteItemResponseResponse
	FEconomyDeleteItemResponse decodeDeleteItemResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyDeleteItemResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeDeleteEntityItemReviewsResponseResponse
	FEconomyDeleteEntityItemReviewsResponse decodeDeleteEntityItemReviewsResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyDeleteEntityItemReviewsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeCreateUploadUrlsResponseResponse
	FEconomyCreateUploadUrlsResponse decodeCreateUploadUrlsResponseResponse(UPlayFabJsonObject* response) // [0x18c3750] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyCreateUploadUrlsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabEconomyModelDecoder.decodeCreateDraftItemResponseResponse
	FEconomyCreateDraftItemResponse decodeCreateDraftItemResponseResponse(UPlayFabJsonObject* response) // [0x18c36c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEconomyCreateDraftItemResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabEventsAPI
/// Size: 0x0110 (272 bytes) (0x000030 - 0x000110) align 8 MaxSize: 0x0110
class UPlayFabEventsAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,818) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x68];                                      // 0x0040   (0x0068)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x00A8   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x00B0   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x00C0   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabEventsAPI.WriteTelemetryEvents
	// UPlayFabEventsAPI* WriteTelemetryEvents(FEventsWriteEventsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18c61e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEventsAPI.WriteEvents
	// UPlayFabEventsAPI* WriteEvents(FEventsWriteEventsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18c5ff0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabEventsAPI.HelperWriteTelemetryEvents
	void HelperWriteTelemetryEvents(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18c5dc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEventsAPI.HelperWriteEvents
	void HelperWriteEvents(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18c5b90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabEventsAPI.DelegateOnSuccessWriteTelemetryEvents__DelegateSignature
	void DelegateOnSuccessWriteTelemetryEvents__DelegateSignature(FEventsWriteEventsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEventsWriteEventsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEventsAPI.DelegateOnSuccessWriteEvents__DelegateSignature
	void DelegateOnSuccessWriteEvents__DelegateSignature(FEventsWriteEventsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FEventsWriteEventsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabEventsAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(Error, customData);
	}
};

/// Class /Script/PlayFab.PlayFabEventsModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabEventsModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabEventsModelDecoder.decodeWriteEventsResponseResponse
	FEventsWriteEventsResponse decodeWriteEventsResponseResponse(UPlayFabJsonObject* response) // [0x18cc2e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FEventsWriteEventsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabExperimentationAPI
/// Size: 0x01C0 (448 bytes) (0x000030 - 0x0001C0) align 8 MaxSize: 0x01C0
class UPlayFabExperimentationAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,819) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x118];                                     // 0x0040   (0x0118)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x0158   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x0160   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x0168   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x0170   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabExperimentationAPI.UpdateExperiment
	// UPlayFabExperimentationAPI* UpdateExperiment(FExperimentationUpdateExperimentRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18cb8a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabExperimentationAPI.UpdateExclusionGroup
	// UPlayFabExperimentationAPI* UpdateExclusionGroup(FExperimentationUpdateExclusionGroupRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18cb620] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabExperimentationAPI.StopExperiment
	// UPlayFabExperimentationAPI* StopExperiment(FExperimentationStopExperimentRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18cb430] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabExperimentationAPI.StartExperiment
	// UPlayFabExperimentationAPI* StartExperiment(FExperimentationStartExperimentRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18cb240] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabExperimentationAPI.HelperUpdateExperiment
	void HelperUpdateExperiment(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18cb010] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.HelperUpdateExclusionGroup
	void HelperUpdateExclusionGroup(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18cade0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.HelperStopExperiment
	void HelperStopExperiment(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18cabb0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.HelperStartExperiment
	void HelperStartExperiment(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ca980] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.HelperGetTreatmentAssignment
	void HelperGetTreatmentAssignment(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ca750] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.HelperGetLatestScorecard
	void HelperGetLatestScorecard(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ca520] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.HelperGetExperiments
	void HelperGetExperiments(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ca2f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.HelperGetExclusionGroupTraffic
	void HelperGetExclusionGroupTraffic(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18c9e90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.HelperGetExclusionGroups
	void HelperGetExclusionGroups(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ca0c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.HelperDeleteExperiment
	void HelperDeleteExperiment(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18c9c60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.HelperDeleteExclusionGroup
	void HelperDeleteExclusionGroup(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1845db0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.HelperCreateExperiment
	void HelperCreateExperiment(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18c9a30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.HelperCreateExclusionGroup
	void HelperCreateExclusionGroup(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18c9800] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.GetTreatmentAssignment
	// UPlayFabExperimentationAPI* GetTreatmentAssignment(FExperimentationGetTreatmentAssignmentRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18c9660] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabExperimentationAPI.GetLatestScorecard
	// UPlayFabExperimentationAPI* GetLatestScorecard(FExperimentationGetLatestScorecardRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18c9470] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabExperimentationAPI.GetExperiments
	// UPlayFabExperimentationAPI* GetExperiments(FExperimentationGetExperimentsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18c92e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabExperimentationAPI.GetExclusionGroupTraffic
	// UPlayFabExperimentationAPI* GetExclusionGroupTraffic(FExperimentationGetExclusionGroupTrafficRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18c8f60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabExperimentationAPI.GetExclusionGroups
	// UPlayFabExperimentationAPI* GetExclusionGroups(FExperimentationGetExclusionGroupsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18c9150] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DeleteExperiment
	// UPlayFabExperimentationAPI* DeleteExperiment(FExperimentationDeleteExperimentRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18c8d70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DeleteExclusionGroup
	// UPlayFabExperimentationAPI* DeleteExclusionGroup(FExperimentationDeleteExclusionGroupRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18c8b80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessUpdateExperiment__DelegateSignature
	void DelegateOnSuccessUpdateExperiment__DelegateSignature(FExperimentationEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FExperimentationEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessUpdateExclusionGroup__DelegateSignature
	void DelegateOnSuccessUpdateExclusionGroup__DelegateSignature(FExperimentationEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FExperimentationEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessStopExperiment__DelegateSignature
	void DelegateOnSuccessStopExperiment__DelegateSignature(FExperimentationEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FExperimentationEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessStartExperiment__DelegateSignature
	void DelegateOnSuccessStartExperiment__DelegateSignature(FExperimentationEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FExperimentationEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessGetTreatmentAssignment__DelegateSignature
	void DelegateOnSuccessGetTreatmentAssignment__DelegateSignature(FExperimentationGetTreatmentAssignmentResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FExperimentationGetTreatmentAssignmentResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessGetLatestScorecard__DelegateSignature
	void DelegateOnSuccessGetLatestScorecard__DelegateSignature(FExperimentationGetLatestScorecardResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FExperimentationGetLatestScorecardResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessGetExperiments__DelegateSignature
	void DelegateOnSuccessGetExperiments__DelegateSignature(FExperimentationGetExperimentsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FExperimentationGetExperimentsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessGetExclusionGroupTraffic__DelegateSignature
	void DelegateOnSuccessGetExclusionGroupTraffic__DelegateSignature(FExperimentationGetExclusionGroupTrafficResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FExperimentationGetExclusionGroupTrafficResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessGetExclusionGroups__DelegateSignature
	void DelegateOnSuccessGetExclusionGroups__DelegateSignature(FExperimentationGetExclusionGroupsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FExperimentationGetExclusionGroupsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessDeleteExperiment__DelegateSignature
	void DelegateOnSuccessDeleteExperiment__DelegateSignature(FExperimentationEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FExperimentationEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessDeleteExclusionGroup__DelegateSignature
	void DelegateOnSuccessDeleteExclusionGroup__DelegateSignature(FExperimentationEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FExperimentationEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessCreateExperiment__DelegateSignature
	void DelegateOnSuccessCreateExperiment__DelegateSignature(FExperimentationCreateExperimentResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FExperimentationCreateExperimentResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessCreateExclusionGroup__DelegateSignature
	void DelegateOnSuccessCreateExclusionGroup__DelegateSignature(FExperimentationCreateExclusionGroupResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FExperimentationCreateExclusionGroupResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		func(Error, customData);
	}
	// Function /Script/PlayFab.PlayFabExperimentationAPI.CreateExperiment
	// UPlayFabExperimentationAPI* CreateExperiment(FExperimentationCreateExperimentRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18c8720] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabExperimentationAPI.CreateExclusionGroup
	// UPlayFabExperimentationAPI* CreateExclusionGroup(FExperimentationCreateExclusionGroupRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18c84e0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/PlayFab.PlayFabExperimentationModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabExperimentationModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabExperimentationModelDecoder.decodeGetTreatmentAssignmentResultResponse
	FExperimentationGetTreatmentAssignmentResult decodeGetTreatmentAssignmentResultResponse(UPlayFabJsonObject* response) // [0x18cc250] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FExperimentationGetTreatmentAssignmentResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabExperimentationModelDecoder.decodeGetLatestScorecardResultResponse
	FExperimentationGetLatestScorecardResult decodeGetLatestScorecardResultResponse(UPlayFabJsonObject* response) // [0x18cc1c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FExperimentationGetLatestScorecardResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabExperimentationModelDecoder.decodeGetExperimentsResultResponse
	FExperimentationGetExperimentsResult decodeGetExperimentsResultResponse(UPlayFabJsonObject* response) // [0x18cc0e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FExperimentationGetExperimentsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabExperimentationModelDecoder.decodeGetExclusionGroupTrafficResultResponse
	FExperimentationGetExclusionGroupTrafficResult decodeGetExclusionGroupTrafficResultResponse(UPlayFabJsonObject* response) // [0x18cbf20] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FExperimentationGetExclusionGroupTrafficResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabExperimentationModelDecoder.decodeGetExclusionGroupsResultResponse
	FExperimentationGetExclusionGroupsResult decodeGetExclusionGroupsResultResponse(UPlayFabJsonObject* response) // [0x18cc000] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FExperimentationGetExclusionGroupsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabExperimentationModelDecoder.decodeEmptyResponseResponse
	FExperimentationEmptyResponse decodeEmptyResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FExperimentationEmptyResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabExperimentationModelDecoder.decodeCreateExperimentResultResponse
	FExperimentationCreateExperimentResult decodeCreateExperimentResultResponse(UPlayFabJsonObject* response) // [0x18cbe40] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FExperimentationCreateExperimentResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabExperimentationModelDecoder.decodeCreateExclusionGroupResultResponse
	FExperimentationCreateExclusionGroupResult decodeCreateExclusionGroupResultResponse(UPlayFabJsonObject* response) // [0x18cbd60] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FExperimentationCreateExclusionGroupResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabGroupsAPI
/// Size: 0x0280 (640 bytes) (0x000030 - 0x000280) align 8 MaxSize: 0x0280
class UPlayFabGroupsAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,820) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x1D8];                                     // 0x0040   (0x01D8)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x0218   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x0220   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x0228   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x0230   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabGroupsAPI.UpdateRole
	// UPlayFabGroupsAPI* UpdateRole(FGroupsUpdateGroupRoleRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d36c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.UpdateGroup
	// UPlayFabGroupsAPI* UpdateGroup(FGroupsUpdateGroupRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d3420] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.UnblockEntity
	// UPlayFabGroupsAPI* UnblockEntity(FGroupsUnblockEntityRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d3280] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.RemoveMembers
	// UPlayFabGroupsAPI* RemoveMembers(FGroupsRemoveMembersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d3040] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.RemoveGroupInvitation
	// UPlayFabGroupsAPI* RemoveGroupInvitation(FGroupsRemoveGroupInvitationRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d2ea0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.RemoveGroupApplication
	// UPlayFabGroupsAPI* RemoveGroupApplication(FGroupsRemoveGroupApplicationRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d2d00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.ListMembershipOpportunities
	// UPlayFabGroupsAPI* ListMembershipOpportunities(FGroupsListMembershipOpportunitiesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d2b60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.ListMembership
	// UPlayFabGroupsAPI* ListMembership(FGroupsListMembershipRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d29c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.ListGroupMembers
	// UPlayFabGroupsAPI* ListGroupMembers(FGroupsListGroupMembersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d2820] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.ListGroupInvitations
	// UPlayFabGroupsAPI* ListGroupInvitations(FGroupsListGroupInvitationsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d2680] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.ListGroupBlocks
	// UPlayFabGroupsAPI* ListGroupBlocks(FGroupsListGroupBlocksRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d24e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.ListGroupApplications
	// UPlayFabGroupsAPI* ListGroupApplications(FGroupsListGroupApplicationsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d2340] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.IsMember
	// UPlayFabGroupsAPI* IsMember(FGroupsIsMemberRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d2140] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.InviteToGroup
	// UPlayFabGroupsAPI* InviteToGroup(FGroupsInviteToGroupRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d1f30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperUpdateRole
	void HelperUpdateRole(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18d1d00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperUpdateGroup
	void HelperUpdateGroup(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18d1ad0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperUnblockEntity
	void HelperUnblockEntity(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18d18a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperRemoveMembers
	void HelperRemoveMembers(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18d1670] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperRemoveGroupInvitation
	void HelperRemoveGroupInvitation(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18d1440] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperRemoveGroupApplication
	void HelperRemoveGroupApplication(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18d1210] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperListMembershipOpportunities
	void HelperListMembershipOpportunities(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18d0fe0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperListMembership
	void HelperListMembership(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18d0db0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperListGroupMembers
	void HelperListGroupMembers(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18d0b80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperListGroupInvitations
	void HelperListGroupInvitations(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18d0950] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperListGroupBlocks
	void HelperListGroupBlocks(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18d0720] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperListGroupApplications
	void HelperListGroupApplications(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18d04f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperIsMember
	void HelperIsMember(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18d02c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperInviteToGroup
	void HelperInviteToGroup(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18d0090] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperGetGroup
	void HelperGetGroup(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18cfe60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperDeleteRole
	void HelperDeleteRole(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18cfc30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperDeleteGroup
	void HelperDeleteGroup(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18cfa00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperCreateRole
	void HelperCreateRole(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18cf7d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperCreateGroup
	void HelperCreateGroup(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18cf5a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperChangeMemberRole
	void HelperChangeMemberRole(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18cf370] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperBlockEntity
	void HelperBlockEntity(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18cf140] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperApplyToGroup
	void HelperApplyToGroup(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18cef10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperAddMembers
	void HelperAddMembers(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18cece0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperAcceptGroupInvitation
	void HelperAcceptGroupInvitation(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ceab0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.HelperAcceptGroupApplication
	void HelperAcceptGroupApplication(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ce880] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.GetGroup
	// UPlayFabGroupsAPI* GetGroup(FGroupsGetGroupRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18ce690] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.DeleteRole
	// UPlayFabGroupsAPI* DeleteRole(FGroupsDeleteRoleRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18ce4a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.DeleteGroup
	// UPlayFabGroupsAPI* DeleteGroup(FGroupsDeleteGroupRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18ce300] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessUpdateRole__DelegateSignature
	void DelegateOnSuccessUpdateRole__DelegateSignature(FGroupsUpdateGroupRoleResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsUpdateGroupRoleResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessUpdateGroup__DelegateSignature
	void DelegateOnSuccessUpdateGroup__DelegateSignature(FGroupsUpdateGroupResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsUpdateGroupResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessUnblockEntity__DelegateSignature
	void DelegateOnSuccessUnblockEntity__DelegateSignature(FGroupsEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessRemoveMembers__DelegateSignature
	void DelegateOnSuccessRemoveMembers__DelegateSignature(FGroupsEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessRemoveGroupInvitation__DelegateSignature
	void DelegateOnSuccessRemoveGroupInvitation__DelegateSignature(FGroupsEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessRemoveGroupApplication__DelegateSignature
	void DelegateOnSuccessRemoveGroupApplication__DelegateSignature(FGroupsEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessListMembershipOpportunities__DelegateSignature
	void DelegateOnSuccessListMembershipOpportunities__DelegateSignature(FGroupsListMembershipOpportunitiesResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsListMembershipOpportunitiesResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessListMembership__DelegateSignature
	void DelegateOnSuccessListMembership__DelegateSignature(FGroupsListMembershipResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsListMembershipResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessListGroupMembers__DelegateSignature
	void DelegateOnSuccessListGroupMembers__DelegateSignature(FGroupsListGroupMembersResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsListGroupMembersResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessListGroupInvitations__DelegateSignature
	void DelegateOnSuccessListGroupInvitations__DelegateSignature(FGroupsListGroupInvitationsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsListGroupInvitationsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessListGroupBlocks__DelegateSignature
	void DelegateOnSuccessListGroupBlocks__DelegateSignature(FGroupsListGroupBlocksResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsListGroupBlocksResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessListGroupApplications__DelegateSignature
	void DelegateOnSuccessListGroupApplications__DelegateSignature(FGroupsListGroupApplicationsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsListGroupApplicationsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessIsMember__DelegateSignature
	void DelegateOnSuccessIsMember__DelegateSignature(FGroupsIsMemberResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsIsMemberResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessInviteToGroup__DelegateSignature
	void DelegateOnSuccessInviteToGroup__DelegateSignature(FGroupsInviteToGroupResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsInviteToGroupResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[55]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessGetGroup__DelegateSignature
	void DelegateOnSuccessGetGroup__DelegateSignature(FGroupsGetGroupResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsGetGroupResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[56]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessDeleteRole__DelegateSignature
	void DelegateOnSuccessDeleteRole__DelegateSignature(FGroupsEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[57]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessDeleteGroup__DelegateSignature
	void DelegateOnSuccessDeleteGroup__DelegateSignature(FGroupsEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[58]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessCreateRole__DelegateSignature
	void DelegateOnSuccessCreateRole__DelegateSignature(FGroupsCreateGroupRoleResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsCreateGroupRoleResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[59]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessCreateGroup__DelegateSignature
	void DelegateOnSuccessCreateGroup__DelegateSignature(FGroupsCreateGroupResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsCreateGroupResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[60]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessChangeMemberRole__DelegateSignature
	void DelegateOnSuccessChangeMemberRole__DelegateSignature(FGroupsEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[61]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessBlockEntity__DelegateSignature
	void DelegateOnSuccessBlockEntity__DelegateSignature(FGroupsEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[62]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessApplyToGroup__DelegateSignature
	void DelegateOnSuccessApplyToGroup__DelegateSignature(FGroupsApplyToGroupResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsApplyToGroupResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[63]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessAddMembers__DelegateSignature
	void DelegateOnSuccessAddMembers__DelegateSignature(FGroupsEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[64]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessAcceptGroupInvitation__DelegateSignature
	void DelegateOnSuccessAcceptGroupInvitation__DelegateSignature(FGroupsEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[65]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnSuccessAcceptGroupApplication__DelegateSignature
	void DelegateOnSuccessAcceptGroupApplication__DelegateSignature(FGroupsEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FGroupsEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[66]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[67]);
		func(Error, customData);
	}
	// Function /Script/PlayFab.PlayFabGroupsAPI.CreateRole
	// UPlayFabGroupsAPI* CreateRole(FGroupsCreateGroupRoleRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18ce0c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.CreateGroup
	// UPlayFabGroupsAPI* CreateGroup(FGroupsCreateGroupRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18cded0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.ChangeMemberRole
	// UPlayFabGroupsAPI* ChangeMemberRole(FGroupsChangeMemberRoleRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18cdc30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.BlockEntity
	// UPlayFabGroupsAPI* BlockEntity(FGroupsBlockEntityRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18cda90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.ApplyToGroup
	// UPlayFabGroupsAPI* ApplyToGroup(FGroupsApplyToGroupRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18cd8e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.AddMembers
	// UPlayFabGroupsAPI* AddMembers(FGroupsAddMembersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18cd6a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.AcceptGroupInvitation
	// UPlayFabGroupsAPI* AcceptGroupInvitation(FGroupsAcceptGroupInvitationRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18cd500] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabGroupsAPI.AcceptGroupApplication
	// UPlayFabGroupsAPI* AcceptGroupApplication(FGroupsAcceptGroupApplicationRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18cd360] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/PlayFab.PlayFabGroupsModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabGroupsModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeUpdateGroupRoleResponseResponse
	FGroupsUpdateGroupRoleResponse decodeUpdateGroupRoleResponseResponse(UPlayFabJsonObject* response) // [0x18d6a60] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsUpdateGroupRoleResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeUpdateGroupResponseResponse
	FGroupsUpdateGroupResponse decodeUpdateGroupResponseResponse(UPlayFabJsonObject* response) // [0x18d6a60] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsUpdateGroupResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeListMembershipResponseResponse
	FGroupsListMembershipResponse decodeListMembershipResponseResponse(UPlayFabJsonObject* response) // [0x18d6980] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsListMembershipResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeListMembershipOpportunitiesResponseResponse
	FGroupsListMembershipOpportunitiesResponse decodeListMembershipOpportunitiesResponseResponse(UPlayFabJsonObject* response) // [0x18d6860] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsListMembershipOpportunitiesResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeListGroupMembersResponseResponse
	FGroupsListGroupMembersResponse decodeListGroupMembersResponseResponse(UPlayFabJsonObject* response) // [0x18d6780] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsListGroupMembersResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeListGroupInvitationsResponseResponse
	FGroupsListGroupInvitationsResponse decodeListGroupInvitationsResponseResponse(UPlayFabJsonObject* response) // [0x18d66a0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsListGroupInvitationsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeListGroupBlocksResponseResponse
	FGroupsListGroupBlocksResponse decodeListGroupBlocksResponseResponse(UPlayFabJsonObject* response) // [0x18d65c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsListGroupBlocksResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeListGroupApplicationsResponseResponse
	FGroupsListGroupApplicationsResponse decodeListGroupApplicationsResponseResponse(UPlayFabJsonObject* response) // [0x18d64e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsListGroupApplicationsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeIsMemberResponseResponse
	FGroupsIsMemberResponse decodeIsMemberResponseResponse(UPlayFabJsonObject* response) // [0x18d6450] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsIsMemberResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeInviteToGroupResponseResponse
	FGroupsInviteToGroupResponse decodeInviteToGroupResponseResponse(UPlayFabJsonObject* response) // [0x18d6300] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsInviteToGroupResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeGetGroupResponseResponse
	FGroupsGetGroupResponse decodeGetGroupResponseResponse(UPlayFabJsonObject* response) // [0x18d5ff0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsGetGroupResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeEmptyResponseResponse
	FGroupsEmptyResponse decodeEmptyResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsEmptyResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeCreateGroupRoleResponseResponse
	FGroupsCreateGroupRoleResponse decodeCreateGroupRoleResponseResponse(UPlayFabJsonObject* response) // [0x18d61d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsCreateGroupRoleResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeCreateGroupResponseResponse
	FGroupsCreateGroupResponse decodeCreateGroupResponseResponse(UPlayFabJsonObject* response) // [0x18d5ff0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsCreateGroupResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabGroupsModelDecoder.decodeApplyToGroupResponseResponse
	FGroupsApplyToGroupResponse decodeApplyToGroupResponseResponse(UPlayFabJsonObject* response) // [0x18d5f00] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FGroupsApplyToGroupResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabInsightsAPI
/// Size: 0x0150 (336 bytes) (0x000030 - 0x000150) align 8 MaxSize: 0x0150
class UPlayFabInsightsAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,821) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0xA8];                                      // 0x0040   (0x00A8)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x00E8   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x00F0   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x00F8   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x0100   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabInsightsAPI.SetStorageRetention
	// UPlayFabInsightsAPI* SetStorageRetention(FInsightsInsightsSetStorageRetentionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18dba80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabInsightsAPI.SetPerformance
	// UPlayFabInsightsAPI* SetPerformance(FInsightsInsightsSetPerformanceRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18db8e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabInsightsAPI.HelperSetStorageRetention
	void HelperSetStorageRetention(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18dacc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabInsightsAPI.HelperSetPerformance
	void HelperSetPerformance(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18daa90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabInsightsAPI.HelperGetPendingOperations
	void HelperGetPendingOperations(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18da860] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabInsightsAPI.HelperGetOperationStatus
	void HelperGetOperationStatus(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18da630] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabInsightsAPI.HelperGetLimits
	void HelperGetLimits(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18da400] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabInsightsAPI.HelperGetDetails
	void HelperGetDetails(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18da1d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabInsightsAPI.GetPendingOperations
	// UPlayFabInsightsAPI* GetPendingOperations(FInsightsInsightsGetPendingOperationsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d9ca0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabInsightsAPI.GetOperationStatus
	// UPlayFabInsightsAPI* GetOperationStatus(FInsightsInsightsGetOperationStatusRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d9ab0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabInsightsAPI.GetLimits
	// UPlayFabInsightsAPI* GetLimits(FInsightsInsightsEmptyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d95e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabInsightsAPI.GetDetails
	// UPlayFabInsightsAPI* GetDetails(FInsightsInsightsEmptyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18d9320] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabInsightsAPI.DelegateOnSuccessSetStorageRetention__DelegateSignature
	void DelegateOnSuccessSetStorageRetention__DelegateSignature(FInsightsInsightsOperationResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FInsightsInsightsOperationResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabInsightsAPI.DelegateOnSuccessSetPerformance__DelegateSignature
	void DelegateOnSuccessSetPerformance__DelegateSignature(FInsightsInsightsOperationResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FInsightsInsightsOperationResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabInsightsAPI.DelegateOnSuccessGetPendingOperations__DelegateSignature
	void DelegateOnSuccessGetPendingOperations__DelegateSignature(FInsightsInsightsGetPendingOperationsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FInsightsInsightsGetPendingOperationsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabInsightsAPI.DelegateOnSuccessGetOperationStatus__DelegateSignature
	void DelegateOnSuccessGetOperationStatus__DelegateSignature(FInsightsInsightsGetOperationStatusResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FInsightsInsightsGetOperationStatusResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabInsightsAPI.DelegateOnSuccessGetLimits__DelegateSignature
	void DelegateOnSuccessGetLimits__DelegateSignature(FInsightsInsightsGetLimitsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FInsightsInsightsGetLimitsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabInsightsAPI.DelegateOnSuccessGetDetails__DelegateSignature
	void DelegateOnSuccessGetDetails__DelegateSignature(FInsightsInsightsGetDetailsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FInsightsInsightsGetDetailsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabInsightsAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(Error, customData);
	}
};

/// Class /Script/PlayFab.PlayFabInsightsModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabInsightsModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabInsightsModelDecoder.decodeInsightsOperationResponseResponse
	FInsightsInsightsOperationResponse decodeInsightsOperationResponseResponse(UPlayFabJsonObject* response) // [0x18dc290] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FInsightsInsightsOperationResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetPendingOperationsResponseResponse
	FInsightsInsightsGetPendingOperationsResponse decodeInsightsGetPendingOperationsResponseResponse(UPlayFabJsonObject* response) // [0x18dc1b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FInsightsInsightsGetPendingOperationsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetOperationStatusResponseResponse
	FInsightsInsightsGetOperationStatusResponse decodeInsightsGetOperationStatusResponseResponse(UPlayFabJsonObject* response) // [0x18dc090] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FInsightsInsightsGetOperationStatusResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetLimitsResponseResponse
	FInsightsInsightsGetLimitsResponse decodeInsightsGetLimitsResponseResponse(UPlayFabJsonObject* response) // [0x18dbfa0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FInsightsInsightsGetLimitsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetDetailsResponseResponse
	FInsightsInsightsGetDetailsResponse decodeInsightsGetDetailsResponseResponse(UPlayFabJsonObject* response) // [0x18dbe50] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FInsightsInsightsGetDetailsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabJsonObject
/// Size: 0x0038 (56 bytes) (0x000028 - 0x000038) align 8 MaxSize: 0x0038
class UPlayFabJsonObject : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabJsonObject.SetStringField
	void SetStringField(FString FieldName, FString StringValue) // [0x18dbd50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString, FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(FieldName, StringValue);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.SetStringArrayField
	// void SetStringArrayField(FString FieldName, TArray<FString>& StringArray);                                               // [0x18dbc20] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabJsonObject.SetObjectField
	void SetObjectField(FString FieldName, UPlayFabJsonObject* JsonObject) // [0x18db800] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString, UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(FieldName, JsonObject);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.SetObjectArrayField
	// void SetObjectArrayField(FString FieldName, TArray<UPlayFabJsonObject*>& ObjectArray);                                   // [0x18db700] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabJsonObject.SetNumberField
	void SetNumberField(FString FieldName, float Number) // [0x18db610] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(FieldName, Number);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.SetNumberArrayField
	void SetNumberArrayField(FString FieldName, TArray<float>& NumberArray) // [0x18db510] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString, TArray<float>&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(FieldName, NumberArray);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.SetFieldNull
	void SetFieldNull(FString FieldName) // [0x18db470] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(FieldName);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.SetField
	void SetField(FString FieldName, UPlayFabJsonValue* JsonValue) // [0x18db390] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString, UPlayFabJsonValue*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(FieldName, JsonValue);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.SetBoolField
	void SetBoolField(FString FieldName, bool InValue) // [0x18db2b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(FieldName, InValue);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.SetBoolArrayField
	void SetBoolArrayField(FString FieldName, TArray<bool>& BoolArray) // [0x18db1b0] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString, TArray<bool>&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(FieldName, BoolArray);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.SetArrayField
	// void SetArrayField(FString FieldName, TArray<UPlayFabJsonValue*>& inArray);                                              // [0x18db0b0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabJsonObject.Reset
	void Reset() // [0x18db090] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func();
	}
	// Function /Script/PlayFab.PlayFabJsonObject.RemoveField
	void RemoveField(FString FieldName) // [0x18daff0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(FieldName);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.MergeJsonObject
	void MergeJsonObject(UPlayFabJsonObject* InJsonObject, bool Overwrite) // [0x18daf20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UPlayFabJsonObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(InJsonObject, Overwrite);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.HasField
	bool HasField(FString FieldName) // [0x18da120] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func(FieldName);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.GetStringField
	FString GetStringField(FString FieldName) // [0x18d9f80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FString (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func(FieldName);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.GetStringArrayField
	// TArray<FString> GetStringArrayField(FString FieldName);                                                                  // [0x18d9e90] Final|Native|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabJsonObject.GetObjectField
	UPlayFabJsonObject* GetObjectField(FString FieldName) // [0x18d9a00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UPlayFabJsonObject* (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func(FieldName);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.GetObjectArrayField
	// TArray<UPlayFabJsonObject*> GetObjectArrayField(FString FieldName);                                                      // [0x18d9910] Final|Native|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabJsonObject.GetNumberField
	float GetNumberField(FString FieldName) // [0x18d9860] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		return func(FieldName);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.GetNumberArrayField
	TArray<float> GetNumberArrayField(FString FieldName) // [0x18d9770] Final|Native|Public|BlueprintCallable 
	{
		typedef TArray<float> (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		return func(FieldName);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.GetFieldNames
	// TArray<FString> GetFieldNames();                                                                                         // [0x18d9560] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/PlayFab.PlayFabJsonObject.GetField
	UPlayFabJsonValue* GetField(FString FieldName) // [0x18d94b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UPlayFabJsonValue* (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		return func(FieldName);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.GetBoolField
	bool GetBoolField(FString FieldName) // [0x18d9270] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		return func(FieldName);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.GetBoolArrayField
	TArray<bool> GetBoolArrayField(FString FieldName) // [0x18d9180] Final|Native|Public|BlueprintCallable 
	{
		typedef TArray<bool> (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		return func(FieldName);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.GetArrayField
	// TArray<UPlayFabJsonValue*> GetArrayField(FString FieldName);                                                             // [0x18d9090] Final|Native|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabJsonObject.EncodeJson
	FString EncodeJson() // [0x18d9010] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FString (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		return func();
	}
	// Function /Script/PlayFab.PlayFabJsonObject.DecodeJson
	bool DecodeJson(FString JsonString) // [0x18d8f60] Final|Native|Public|BlueprintCallable 
	{
		typedef bool (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		return func(JsonString);
	}
	// Function /Script/PlayFab.PlayFabJsonObject.ConstructJsonObject
	UPlayFabJsonObject* ConstructJsonObject(UObject* WorldContextObject) // [0x18d8a90] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef class UPlayFabJsonObject* (*FuncPtr)(UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		return func(WorldContextObject);
	}
};

/// Class /Script/PlayFab.PlayFabJsonValue
/// Size: 0x0038 (56 bytes) (0x000028 - 0x000038) align 8 MaxSize: 0x0038
class UPlayFabJsonValue : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabJsonValue.IsNull
	bool IsNull() // [0x18daef0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func();
	}
	// Function /Script/PlayFab.PlayFabJsonValue.GetTypeString
	FString GetTypeString() // [0x18da0a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FString (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func();
	}
	// Function /Script/PlayFab.PlayFabJsonValue.GetType
	// TEnumAsByte<EPFJson> GetType();                                                                                          // [0x18da070] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/PlayFab.PlayFabJsonValue.ConstructJsonValueString
	UPlayFabJsonValue* ConstructJsonValueString(UObject* WorldContextObject, FString StringValue) // [0x18d8e80] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef class UPlayFabJsonValue* (*FuncPtr)(UObject*, FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(WorldContextObject, StringValue);
	}
	// Function /Script/PlayFab.PlayFabJsonValue.ConstructJsonValueObject
	UPlayFabJsonValue* ConstructJsonValueObject(UObject* WorldContextObject, UPlayFabJsonObject* JsonObject) // [0x18d8db0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef class UPlayFabJsonValue* (*FuncPtr)(UObject*, UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(WorldContextObject, JsonObject);
	}
	// Function /Script/PlayFab.PlayFabJsonValue.ConstructJsonValueNumber
	UPlayFabJsonValue* ConstructJsonValueNumber(UObject* WorldContextObject, float Number) // [0x18d8ce0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef class UPlayFabJsonValue* (*FuncPtr)(UObject*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(WorldContextObject, Number);
	}
	// Function /Script/PlayFab.PlayFabJsonValue.ConstructJsonValueBool
	UPlayFabJsonValue* ConstructJsonValueBool(UObject* WorldContextObject, bool InValue) // [0x18d8c10] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef class UPlayFabJsonValue* (*FuncPtr)(UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(WorldContextObject, InValue);
	}
	// Function /Script/PlayFab.PlayFabJsonValue.ConstructJsonValueArray
	// UPlayFabJsonValue* ConstructJsonValueArray(UObject* WorldContextObject, TArray<UPlayFabJsonValue*>& inArray);            // [0x18d8b20] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/PlayFab.PlayFabJsonValue.AsString
	FString AsString() // [0x18d8a10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FString (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func();
	}
	// Function /Script/PlayFab.PlayFabJsonValue.AsObject
	UPlayFabJsonObject* AsObject() // [0x18d89e0] Final|Native|Public|BlueprintCallable 
	{
		typedef class UPlayFabJsonObject* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func();
	}
	// Function /Script/PlayFab.PlayFabJsonValue.AsNumber
	float AsNumber() // [0x18d89b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func();
	}
	// Function /Script/PlayFab.PlayFabJsonValue.AsBool
	bool AsBool() // [0x18d8980] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func();
	}
	// Function /Script/PlayFab.PlayFabJsonValue.AsArray
	// TArray<UPlayFabJsonValue*> AsArray();                                                                                    // [0x18d8900] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/PlayFab.PlayFabLocalizationAPI
/// Size: 0x0100 (256 bytes) (0x000030 - 0x000100) align 8 MaxSize: 0x0100
class UPlayFabLocalizationAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,822) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x58];                                      // 0x0040   (0x0058)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x0098   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x00A0   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x00A8   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x00B0   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabLocalizationAPI.HelperGetLanguageList
	void HelperGetLanguageList(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ea3e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabLocalizationAPI.GetLanguageList
	// UPlayFabLocalizationAPI* GetLanguageList(FLocalizationGetLanguageListRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e4c70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabLocalizationAPI.DelegateOnSuccessGetLanguageList__DelegateSignature
	void DelegateOnSuccessGetLanguageList__DelegateSignature(FLocalizationGetLanguageListResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FLocalizationGetLanguageListResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabLocalizationAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(Error, customData);
	}
};

/// Class /Script/PlayFab.PlayFabLocalizationModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabLocalizationModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabLocalizationModelDecoder.decodeGetLanguageListResponseResponse
	FLocalizationGetLanguageListResponse decodeGetLanguageListResponseResponse(UPlayFabJsonObject* response) // [0x18f53f0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FLocalizationGetLanguageListResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabMatchmakerAPI
/// Size: 0x0130 (304 bytes) (0x000030 - 0x000130) align 8 MaxSize: 0x0130
class UPlayFabMatchmakerAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,823) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x88];                                      // 0x0040   (0x0088)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x00C8   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x00D0   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x00D8   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x00E0   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabMatchmakerAPI.UserInfo
	// UPlayFabMatchmakerAPI* UserInfo(FMatchmakerUserInfoRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f5120] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMatchmakerAPI.PlayerLeft
	// UPlayFabMatchmakerAPI* PlayerLeft(FMatchmakerPlayerLeftRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f3140] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMatchmakerAPI.PlayerJoined
	// UPlayFabMatchmakerAPI* PlayerJoined(FMatchmakerPlayerJoinedRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f2f00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMatchmakerAPI.HelperUserInfo
	void HelperUserInfo(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18f0650] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMatchmakerAPI.HelperPlayerLeft
	void HelperPlayerLeft(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1845db0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMatchmakerAPI.HelperPlayerJoined
	void HelperPlayerJoined(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e8e00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMatchmakerAPI.HelperAuthUser
	void HelperAuthUser(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e66a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMatchmakerAPI.DelegateOnSuccessUserInfo__DelegateSignature
	void DelegateOnSuccessUserInfo__DelegateSignature(FMatchmakerUserInfoResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMatchmakerUserInfoResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMatchmakerAPI.DelegateOnSuccessPlayerLeft__DelegateSignature
	void DelegateOnSuccessPlayerLeft__DelegateSignature(FMatchmakerPlayerLeftResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMatchmakerPlayerLeftResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMatchmakerAPI.DelegateOnSuccessPlayerJoined__DelegateSignature
	void DelegateOnSuccessPlayerJoined__DelegateSignature(FMatchmakerPlayerJoinedResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMatchmakerPlayerJoinedResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMatchmakerAPI.DelegateOnSuccessAuthUser__DelegateSignature
	void DelegateOnSuccessAuthUser__DelegateSignature(FMatchmakerAuthUserResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMatchmakerAuthUserResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMatchmakerAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(Error, customData);
	}
	// Function /Script/PlayFab.PlayFabMatchmakerAPI.AuthUser
	// UPlayFabMatchmakerAPI* AuthUser(FMatchmakerAuthUserRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e0220] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/PlayFab.PlayFabMatchmakerModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabMatchmakerModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabMatchmakerModelDecoder.decodeUserInfoResponseResponse
	FMatchmakerUserInfoResponse decodeUserInfoResponseResponse(UPlayFabJsonObject* response) // [0x18f54d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMatchmakerUserInfoResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMatchmakerModelDecoder.decodePlayerLeftResponseResponse
	FMatchmakerPlayerLeftResponse decodePlayerLeftResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMatchmakerPlayerLeftResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMatchmakerModelDecoder.decodePlayerJoinedResponseResponse
	FMatchmakerPlayerJoinedResponse decodePlayerJoinedResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMatchmakerPlayerJoinedResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMatchmakerModelDecoder.decodeAuthUserResponseResponse
	FMatchmakerAuthUserResponse decodeAuthUserResponseResponse(UPlayFabJsonObject* response) // [0x18f5310] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMatchmakerAuthUserResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabMultiplayerAPI
/// Size: 0x0590 (1424 bytes) (0x000030 - 0x000590) align 8 MaxSize: 0x0590
class UPlayFabMultiplayerAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,824) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x4E8];                                     // 0x0040   (0x04E8)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x0528   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x0530   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x0538   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x0540   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.UploadCertificate
	// UPlayFabMultiplayerAPI* UploadCertificate(FMultiplayerUploadCertificateRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f4f80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.UpdateLobby
	// UPlayFabMultiplayerAPI* UpdateLobby(FMultiplayerUpdateLobbyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f4c30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.UpdateBuildRegions
	// UPlayFabMultiplayerAPI* UpdateBuildRegions(FMultiplayerUpdateBuildRegionsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f49f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.UpdateBuildRegion
	// UPlayFabMultiplayerAPI* UpdateBuildRegion(FMultiplayerUpdateBuildRegionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f4800] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.UpdateBuildName
	// UPlayFabMultiplayerAPI* UpdateBuildName(FMultiplayerUpdateBuildNameRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f45c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.UpdateBuildAlias
	// UPlayFabMultiplayerAPI* UpdateBuildAlias(FMultiplayerUpdateBuildAliasRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f4330] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.UntagContainerImage
	// UPlayFabMultiplayerAPI* UntagContainerImage(FMultiplayerUntagContainerImageRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f40f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.UnsubscribeFromLobbyResource
	// UPlayFabMultiplayerAPI* UnsubscribeFromLobbyResource(FMultiplayerUnsubscribeFromLobbyResourceRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f3ea0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.SubscribeToLobbyResource
	// UPlayFabMultiplayerAPI* SubscribeToLobbyResource(FMultiplayerSubscribeToLobbyResourceRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f3c50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ShutdownMultiplayerServer
	// UPlayFabMultiplayerAPI* ShutdownMultiplayerServer(FMultiplayerShutdownMultiplayerServerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f3a60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.RolloverContainerRegistryCredentials
	// UPlayFabMultiplayerAPI* RolloverContainerRegistryCredentials(FMultiplayerRolloverContainerRegistryCredentialsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f38d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.RequestMultiplayerServer
	// UPlayFabMultiplayerAPI* RequestMultiplayerServer(FMultiplayerRequestMultiplayerServerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f3580] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.RemoveMember
	// UPlayFabMultiplayerAPI* RemoveMember(FMultiplayerRemoveMemberFromLobbyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f3380] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ListVirtualMachineSummaries
	// UPlayFabMultiplayerAPI* ListVirtualMachineSummaries(FMultiplayerListVirtualMachineSummariesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f2c60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ListTitleMultiplayerServersQuotaChanges
	// UPlayFabMultiplayerAPI* ListTitleMultiplayerServersQuotaChanges(FMultiplayerListTitleMultiplayerServersQuotaChangesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f2ad0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ListServerBackfillTicketsForPlayer
	// UPlayFabMultiplayerAPI* ListServerBackfillTicketsForPlayer(FMultiplayerListServerBackfillTicketsForPlayerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f28e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ListQosServersForTitle
	// UPlayFabMultiplayerAPI* ListQosServersForTitle(FMultiplayerListQosServersForTitleRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f2740] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ListPartyQosServers
	// UPlayFabMultiplayerAPI* ListPartyQosServers(FMultiplayerListPartyQosServersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f25b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ListMultiplayerServers
	// UPlayFabMultiplayerAPI* ListMultiplayerServers(FMultiplayerListMultiplayerServersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f2310] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ListMatchmakingTicketsForPlayer
	// UPlayFabMultiplayerAPI* ListMatchmakingTicketsForPlayer(FMultiplayerListMatchmakingTicketsForPlayerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f2120] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ListContainerImageTags
	// UPlayFabMultiplayerAPI* ListContainerImageTags(FMultiplayerListContainerImageTagsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f1d40] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ListContainerImages
	// UPlayFabMultiplayerAPI* ListContainerImages(FMultiplayerListContainerImagesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f1f30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ListCertificateSummaries
	// UPlayFabMultiplayerAPI* ListCertificateSummaries(FMultiplayerListCertificateSummariesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f1b50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ListBuildSummariesV2
	// UPlayFabMultiplayerAPI* ListBuildSummariesV2(FMultiplayerListBuildSummariesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f1960] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ListBuildAliases
	// UPlayFabMultiplayerAPI* ListBuildAliases(FMultiplayerListBuildAliasesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f1770] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ListAssetSummaries
	// UPlayFabMultiplayerAPI* ListAssetSummaries(FMultiplayerListAssetSummariesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f1580] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.ListArchivedMultiplayerServers
	// UPlayFabMultiplayerAPI* ListArchivedMultiplayerServers(FMultiplayerListMultiplayerServersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f12e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.LeaveLobby
	// UPlayFabMultiplayerAPI* LeaveLobby(FMultiplayerLeaveLobbyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f10f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.JoinMatchmakingTicket
	// UPlayFabMultiplayerAPI* JoinMatchmakingTicket(FMultiplayerJoinMatchmakingTicketRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f0eb0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.JoinLobby
	// UPlayFabMultiplayerAPI* JoinLobby(FMultiplayerJoinLobbyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f0cb0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.JoinArrangedLobby
	// UPlayFabMultiplayerAPI* JoinArrangedLobby(FMultiplayerJoinArrangedLobbyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f0a80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.InviteToLobby
	// UPlayFabMultiplayerAPI* InviteToLobby(FMultiplayerInviteToLobbyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18f0880] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperUploadCertificate
	void HelperUploadCertificate(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18f0420] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperUpdateLobby
	void HelperUpdateLobby(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18f01f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildRegions
	void HelperUpdateBuildRegions(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18effc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildRegion
	void HelperUpdateBuildRegion(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18efd90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildName
	void HelperUpdateBuildName(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18efb60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildAlias
	void HelperUpdateBuildAlias(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ef930] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperUntagContainerImage
	void HelperUntagContainerImage(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ef700] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperUnsubscribeFromLobbyResource
	void HelperUnsubscribeFromLobbyResource(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ef4d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[39]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperSubscribeToLobbyResource
	void HelperSubscribeToLobbyResource(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ef2a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[40]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperShutdownMultiplayerServer
	void HelperShutdownMultiplayerServer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ef070] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[41]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperRolloverContainerRegistryCredentials
	void HelperRolloverContainerRegistryCredentials(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18eee40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperRequestMultiplayerServer
	void HelperRequestMultiplayerServer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18eec10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperRemoveMember
	void HelperRemoveMember(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ee9e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperListVirtualMachineSummaries
	void HelperListVirtualMachineSummaries(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ee7b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperListTitleMultiplayerServersQuotaChanges
	void HelperListTitleMultiplayerServersQuotaChanges(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ee580] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperListServerBackfillTicketsForPlayer
	void HelperListServerBackfillTicketsForPlayer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ee350] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperListQosServersForTitle
	void HelperListQosServersForTitle(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ee120] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperListPartyQosServers
	void HelperListPartyQosServers(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18edef0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperListMultiplayerServers
	void HelperListMultiplayerServers(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18edcc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperListMatchmakingTicketsForPlayer
	void HelperListMatchmakingTicketsForPlayer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18eda90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperListContainerImageTags
	void HelperListContainerImageTags(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ed630] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperListContainerImages
	void HelperListContainerImages(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ed860] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperListCertificateSummaries
	void HelperListCertificateSummaries(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ed400] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperListBuildSummariesV2
	void HelperListBuildSummariesV2(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ed1d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[55]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperListBuildAliases
	void HelperListBuildAliases(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ecfa0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[56]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperListAssetSummaries
	void HelperListAssetSummaries(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ecd70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[57]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperListArchivedMultiplayerServers
	void HelperListArchivedMultiplayerServers(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ecb40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[58]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperLeaveLobby
	void HelperLeaveLobby(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ec910] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[59]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperJoinMatchmakingTicket
	void HelperJoinMatchmakingTicket(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ec6e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[60]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperJoinLobby
	void HelperJoinLobby(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ec4b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[61]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperJoinArrangedLobby
	void HelperJoinArrangedLobby(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ec280] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[62]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperInviteToLobby
	void HelperInviteToLobby(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ec050] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[63]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetTitleMultiplayerServersQuotas
	void HelperGetTitleMultiplayerServersQuotas(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ebe20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[64]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetTitleMultiplayerServersQuotaChange
	void HelperGetTitleMultiplayerServersQuotaChange(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ebbf0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[65]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetTitleEnabledForMultiplayerServersStatus
	void HelperGetTitleEnabledForMultiplayerServersStatus(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18eb9c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[66]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetServerBackfillTicket
	void HelperGetServerBackfillTicket(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18eb790] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[67]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetRemoteLoginEndpoint
	void HelperGetRemoteLoginEndpoint(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18eb560] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[68]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetQueueStatistics
	void HelperGetQueueStatistics(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18eb330] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[69]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetMultiplayerSessionLogsBySessionId
	void HelperGetMultiplayerSessionLogsBySessionId(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18eb100] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[70]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetMultiplayerServerLogs
	void HelperGetMultiplayerServerLogs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18eaed0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[71]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetMultiplayerServerDetails
	void HelperGetMultiplayerServerDetails(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18eaca0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[72]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetMatchmakingTicket
	void HelperGetMatchmakingTicket(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18eaa70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[73]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetMatch
	void HelperGetMatch(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ea840] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[74]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetLobby
	void HelperGetLobby(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ea610] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[75]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetContainerRegistryCredentials
	void HelperGetContainerRegistryCredentials(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18ea1b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[76]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetBuildAlias
	void HelperGetBuildAlias(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e9f80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[77]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetBuild
	void HelperGetBuild(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e9d50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[78]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetAssetUploadUrl
	void HelperGetAssetUploadUrl(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e9b20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[79]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperGetAssetDownloadUrl
	void HelperGetAssetDownloadUrl(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e98f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[80]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperFindLobbies
	void HelperFindLobbies(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e96c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[81]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperFindFriendLobbies
	void HelperFindFriendLobbies(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e9490] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[82]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperEnableMultiplayerServersForTitle
	void HelperEnableMultiplayerServersForTitle(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e9260] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[83]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperDeleteRemoteUser
	void HelperDeleteRemoteUser(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e9030] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[84]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperDeleteLobby
	void HelperDeleteLobby(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e8e00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[85]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperDeleteContainerImageRepository
	void HelperDeleteContainerImageRepository(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e8bd0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[86]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperDeleteCertificate
	void HelperDeleteCertificate(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e89a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[87]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperDeleteBuildRegion
	void HelperDeleteBuildRegion(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e8770] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[88]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperDeleteBuildAlias
	void HelperDeleteBuildAlias(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e8540] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[89]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperDeleteBuild
	void HelperDeleteBuild(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e8310] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[90]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperDeleteAsset
	void HelperDeleteAsset(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e80e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[91]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperCreateTitleMultiplayerServersQuotaChange
	void HelperCreateTitleMultiplayerServersQuotaChange(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e7eb0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[92]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperCreateServerMatchmakingTicket
	void HelperCreateServerMatchmakingTicket(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e7c80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[93]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperCreateServerBackfillTicket
	void HelperCreateServerBackfillTicket(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e7a50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[94]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperCreateRemoteUser
	void HelperCreateRemoteUser(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e7820] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[95]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperCreateMatchmakingTicket
	void HelperCreateMatchmakingTicket(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e75f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[96]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperCreateLobby
	void HelperCreateLobby(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e73c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[97]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildWithProcessBasedServer
	void HelperCreateBuildWithProcessBasedServer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e7190] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[98]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildWithManagedContainer
	void HelperCreateBuildWithManagedContainer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e6f60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[99]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildWithCustomContainer
	void HelperCreateBuildWithCustomContainer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e6d30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[100]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildAlias
	void HelperCreateBuildAlias(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e6b00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[101]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperCancelServerBackfillTicket
	void HelperCancelServerBackfillTicket(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18bd560] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[102]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperCancelMatchmakingTicket
	void HelperCancelMatchmakingTicket(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184f270] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[103]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperCancelAllServerBackfillTicketsForPlayer
	void HelperCancelAllServerBackfillTicketsForPlayer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x184ee10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[104]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.HelperCancelAllMatchmakingTicketsForPlayer
	void HelperCancelAllMatchmakingTicketsForPlayer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18e68d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[105]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetTitleMultiplayerServersQuotas
	// UPlayFabMultiplayerAPI* GetTitleMultiplayerServersQuotas(FMultiplayerGetTitleMultiplayerServersQuotasRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e6510] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetTitleMultiplayerServersQuotaChange
	// UPlayFabMultiplayerAPI* GetTitleMultiplayerServersQuotaChange(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e6320] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetTitleEnabledForMultiplayerServersStatus
	// UPlayFabMultiplayerAPI* GetTitleEnabledForMultiplayerServersStatus(FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e6190] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetServerBackfillTicket
	// UPlayFabMultiplayerAPI* GetServerBackfillTicket(FMultiplayerGetServerBackfillTicketRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e5f50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetRemoteLoginEndpoint
	// UPlayFabMultiplayerAPI* GetRemoteLoginEndpoint(FMultiplayerGetRemoteLoginEndpointRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e5cd0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetQueueStatistics
	// UPlayFabMultiplayerAPI* GetQueueStatistics(FMultiplayerGetQueueStatisticsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e5ae0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetMultiplayerSessionLogsBySessionId
	// UPlayFabMultiplayerAPI* GetMultiplayerSessionLogsBySessionId(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e58f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetMultiplayerServerLogs
	// UPlayFabMultiplayerAPI* GetMultiplayerServerLogs(FMultiplayerGetMultiplayerServerLogsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e5700] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetMultiplayerServerDetails
	// UPlayFabMultiplayerAPI* GetMultiplayerServerDetails(FMultiplayerGetMultiplayerServerDetailsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e5480] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetMatchmakingTicket
	// UPlayFabMultiplayerAPI* GetMatchmakingTicket(FMultiplayerGetMatchmakingTicketRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e5240] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetMatch
	// UPlayFabMultiplayerAPI* GetMatch(FMultiplayerGetMatchRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e4ff0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetLobby
	// UPlayFabMultiplayerAPI* GetLobby(FMultiplayerGetLobbyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e4e00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetContainerRegistryCredentials
	// UPlayFabMultiplayerAPI* GetContainerRegistryCredentials(FMultiplayerGetContainerRegistryCredentialsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e4ae0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetBuildAlias
	// UPlayFabMultiplayerAPI* GetBuildAlias(FMultiplayerGetBuildAliasRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e48f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetBuild
	// UPlayFabMultiplayerAPI* GetBuild(FMultiplayerGetBuildRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e4700] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetAssetUploadUrl
	// UPlayFabMultiplayerAPI* GetAssetUploadUrl(FMultiplayerGetAssetUploadUrlRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e4510] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.GetAssetDownloadUrl
	// UPlayFabMultiplayerAPI* GetAssetDownloadUrl(FMultiplayerGetAssetDownloadUrlRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e4320] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.FindLobbies
	// UPlayFabMultiplayerAPI* FindLobbies(FMultiplayerFindLobbiesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e40e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.FindFriendLobbies
	// UPlayFabMultiplayerAPI* FindFriendLobbies(FMultiplayerFindFriendLobbiesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e3e30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.EnableMultiplayerServersForTitle
	// UPlayFabMultiplayerAPI* EnableMultiplayerServersForTitle(FMultiplayerEnableMultiplayerServersForTitleRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e3ca0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DeleteRemoteUser
	// UPlayFabMultiplayerAPI* DeleteRemoteUser(FMultiplayerDeleteRemoteUserRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e39c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DeleteLobby
	// UPlayFabMultiplayerAPI* DeleteLobby(FMultiplayerDeleteLobbyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e37d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DeleteContainerImageRepository
	// UPlayFabMultiplayerAPI* DeleteContainerImageRepository(FMultiplayerDeleteContainerImageRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e35e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DeleteCertificate
	// UPlayFabMultiplayerAPI* DeleteCertificate(FMultiplayerDeleteCertificateRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e33f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DeleteBuildRegion
	// UPlayFabMultiplayerAPI* DeleteBuildRegion(FMultiplayerDeleteBuildRegionRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e31c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DeleteBuildAlias
	// UPlayFabMultiplayerAPI* DeleteBuildAlias(FMultiplayerDeleteBuildAliasRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e2fd0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DeleteBuild
	// UPlayFabMultiplayerAPI* DeleteBuild(FMultiplayerDeleteBuildRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e2de0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DeleteAsset
	// UPlayFabMultiplayerAPI* DeleteAsset(FMultiplayerDeleteAssetRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e2bf0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUploadCertificate__DelegateSignature
	void DelegateOnSuccessUploadCertificate__DelegateSignature(FMultiplayerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[134]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUpdateLobby__DelegateSignature
	void DelegateOnSuccessUpdateLobby__DelegateSignature(FMultiplayerLobbyEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerLobbyEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[135]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUpdateBuildRegions__DelegateSignature
	void DelegateOnSuccessUpdateBuildRegions__DelegateSignature(FMultiplayerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[136]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUpdateBuildRegion__DelegateSignature
	void DelegateOnSuccessUpdateBuildRegion__DelegateSignature(FMultiplayerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[137]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUpdateBuildName__DelegateSignature
	void DelegateOnSuccessUpdateBuildName__DelegateSignature(FMultiplayerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[138]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUpdateBuildAlias__DelegateSignature
	void DelegateOnSuccessUpdateBuildAlias__DelegateSignature(FMultiplayerBuildAliasDetailsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerBuildAliasDetailsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[139]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUntagContainerImage__DelegateSignature
	void DelegateOnSuccessUntagContainerImage__DelegateSignature(FMultiplayerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[140]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUnsubscribeFromLobbyResource__DelegateSignature
	void DelegateOnSuccessUnsubscribeFromLobbyResource__DelegateSignature(FMultiplayerLobbyEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerLobbyEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[141]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessSubscribeToLobbyResource__DelegateSignature
	void DelegateOnSuccessSubscribeToLobbyResource__DelegateSignature(FMultiplayerSubscribeToLobbyResourceResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerSubscribeToLobbyResourceResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[142]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessShutdownMultiplayerServer__DelegateSignature
	void DelegateOnSuccessShutdownMultiplayerServer__DelegateSignature(FMultiplayerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[143]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessRolloverContainerRegistryCredentials__DelegateSignature
	void DelegateOnSuccessRolloverContainerRegistryCredentials__DelegateSignature(FMultiplayerRolloverContainerRegistryCredentialsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerRolloverContainerRegistryCredentialsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[144]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessRequestMultiplayerServer__DelegateSignature
	void DelegateOnSuccessRequestMultiplayerServer__DelegateSignature(FMultiplayerRequestMultiplayerServerResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerRequestMultiplayerServerResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[145]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessRemoveMember__DelegateSignature
	void DelegateOnSuccessRemoveMember__DelegateSignature(FMultiplayerLobbyEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerLobbyEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[146]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListVirtualMachineSummaries__DelegateSignature
	void DelegateOnSuccessListVirtualMachineSummaries__DelegateSignature(FMultiplayerListVirtualMachineSummariesResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerListVirtualMachineSummariesResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[147]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListTitleMultiplayerServersQuotaChanges__DelegateSignature
	void DelegateOnSuccessListTitleMultiplayerServersQuotaChanges__DelegateSignature(FMultiplayerListTitleMultiplayerServersQuotaChangesResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerListTitleMultiplayerServersQuotaChangesResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[148]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListServerBackfillTicketsForPlayer__DelegateSignature
	void DelegateOnSuccessListServerBackfillTicketsForPlayer__DelegateSignature(FMultiplayerListServerBackfillTicketsForPlayerResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerListServerBackfillTicketsForPlayerResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[149]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListQosServersForTitle__DelegateSignature
	void DelegateOnSuccessListQosServersForTitle__DelegateSignature(FMultiplayerListQosServersForTitleResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerListQosServersForTitleResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[150]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListPartyQosServers__DelegateSignature
	void DelegateOnSuccessListPartyQosServers__DelegateSignature(FMultiplayerListPartyQosServersResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerListPartyQosServersResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[151]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListMultiplayerServers__DelegateSignature
	void DelegateOnSuccessListMultiplayerServers__DelegateSignature(FMultiplayerListMultiplayerServersResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerListMultiplayerServersResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[152]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListMatchmakingTicketsForPlayer__DelegateSignature
	void DelegateOnSuccessListMatchmakingTicketsForPlayer__DelegateSignature(FMultiplayerListMatchmakingTicketsForPlayerResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerListMatchmakingTicketsForPlayerResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[153]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListContainerImageTags__DelegateSignature
	void DelegateOnSuccessListContainerImageTags__DelegateSignature(FMultiplayerListContainerImageTagsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerListContainerImageTagsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[154]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListContainerImages__DelegateSignature
	void DelegateOnSuccessListContainerImages__DelegateSignature(FMultiplayerListContainerImagesResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerListContainerImagesResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[155]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListCertificateSummaries__DelegateSignature
	void DelegateOnSuccessListCertificateSummaries__DelegateSignature(FMultiplayerListCertificateSummariesResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerListCertificateSummariesResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[156]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListBuildSummariesV2__DelegateSignature
	void DelegateOnSuccessListBuildSummariesV2__DelegateSignature(FMultiplayerListBuildSummariesResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerListBuildSummariesResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[157]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListBuildAliases__DelegateSignature
	void DelegateOnSuccessListBuildAliases__DelegateSignature(FMultiplayerListBuildAliasesResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerListBuildAliasesResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[158]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListAssetSummaries__DelegateSignature
	void DelegateOnSuccessListAssetSummaries__DelegateSignature(FMultiplayerListAssetSummariesResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerListAssetSummariesResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[159]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListArchivedMultiplayerServers__DelegateSignature
	void DelegateOnSuccessListArchivedMultiplayerServers__DelegateSignature(FMultiplayerListMultiplayerServersResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerListMultiplayerServersResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[160]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessLeaveLobby__DelegateSignature
	void DelegateOnSuccessLeaveLobby__DelegateSignature(FMultiplayerLobbyEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerLobbyEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[161]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessJoinMatchmakingTicket__DelegateSignature
	void DelegateOnSuccessJoinMatchmakingTicket__DelegateSignature(FMultiplayerJoinMatchmakingTicketResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerJoinMatchmakingTicketResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[162]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessJoinLobby__DelegateSignature
	void DelegateOnSuccessJoinLobby__DelegateSignature(FMultiplayerJoinLobbyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerJoinLobbyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[163]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessJoinArrangedLobby__DelegateSignature
	void DelegateOnSuccessJoinArrangedLobby__DelegateSignature(FMultiplayerJoinLobbyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerJoinLobbyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[164]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessInviteToLobby__DelegateSignature
	void DelegateOnSuccessInviteToLobby__DelegateSignature(FMultiplayerLobbyEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerLobbyEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[165]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetTitleMultiplayerServersQuotas__DelegateSignature
	void DelegateOnSuccessGetTitleMultiplayerServersQuotas__DelegateSignature(FMultiplayerGetTitleMultiplayerServersQuotasResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetTitleMultiplayerServersQuotasResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[166]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetTitleMultiplayerServersQuotaChange__DelegateSignature
	void DelegateOnSuccessGetTitleMultiplayerServersQuotaChange__DelegateSignature(FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[167]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetTitleEnabledForMultiplayerServersStatus__DelegateSignature
	void DelegateOnSuccessGetTitleEnabledForMultiplayerServersStatus__DelegateSignature(FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[168]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetServerBackfillTicket__DelegateSignature
	void DelegateOnSuccessGetServerBackfillTicket__DelegateSignature(FMultiplayerGetServerBackfillTicketResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetServerBackfillTicketResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[169]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetRemoteLoginEndpoint__DelegateSignature
	void DelegateOnSuccessGetRemoteLoginEndpoint__DelegateSignature(FMultiplayerGetRemoteLoginEndpointResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetRemoteLoginEndpointResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[170]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetQueueStatistics__DelegateSignature
	void DelegateOnSuccessGetQueueStatistics__DelegateSignature(FMultiplayerGetQueueStatisticsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetQueueStatisticsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[171]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetMultiplayerSessionLogsBySessionId__DelegateSignature
	void DelegateOnSuccessGetMultiplayerSessionLogsBySessionId__DelegateSignature(FMultiplayerGetMultiplayerServerLogsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetMultiplayerServerLogsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[172]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetMultiplayerServerLogs__DelegateSignature
	void DelegateOnSuccessGetMultiplayerServerLogs__DelegateSignature(FMultiplayerGetMultiplayerServerLogsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetMultiplayerServerLogsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[173]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetMultiplayerServerDetails__DelegateSignature
	void DelegateOnSuccessGetMultiplayerServerDetails__DelegateSignature(FMultiplayerGetMultiplayerServerDetailsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetMultiplayerServerDetailsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[174]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetMatchmakingTicket__DelegateSignature
	void DelegateOnSuccessGetMatchmakingTicket__DelegateSignature(FMultiplayerGetMatchmakingTicketResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetMatchmakingTicketResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[175]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetMatch__DelegateSignature
	void DelegateOnSuccessGetMatch__DelegateSignature(FMultiplayerGetMatchResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetMatchResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[176]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetLobby__DelegateSignature
	void DelegateOnSuccessGetLobby__DelegateSignature(FMultiplayerGetLobbyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetLobbyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[177]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetContainerRegistryCredentials__DelegateSignature
	void DelegateOnSuccessGetContainerRegistryCredentials__DelegateSignature(FMultiplayerGetContainerRegistryCredentialsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetContainerRegistryCredentialsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[178]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetBuildAlias__DelegateSignature
	void DelegateOnSuccessGetBuildAlias__DelegateSignature(FMultiplayerBuildAliasDetailsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerBuildAliasDetailsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[179]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetBuild__DelegateSignature
	void DelegateOnSuccessGetBuild__DelegateSignature(FMultiplayerGetBuildResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetBuildResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[180]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetAssetUploadUrl__DelegateSignature
	void DelegateOnSuccessGetAssetUploadUrl__DelegateSignature(FMultiplayerGetAssetUploadUrlResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetAssetUploadUrlResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[181]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetAssetDownloadUrl__DelegateSignature
	void DelegateOnSuccessGetAssetDownloadUrl__DelegateSignature(FMultiplayerGetAssetDownloadUrlResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerGetAssetDownloadUrlResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[182]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessFindLobbies__DelegateSignature
	void DelegateOnSuccessFindLobbies__DelegateSignature(FMultiplayerFindLobbiesResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerFindLobbiesResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[183]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessFindFriendLobbies__DelegateSignature
	void DelegateOnSuccessFindFriendLobbies__DelegateSignature(FMultiplayerFindFriendLobbiesResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerFindFriendLobbiesResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[184]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessEnableMultiplayerServersForTitle__DelegateSignature
	void DelegateOnSuccessEnableMultiplayerServersForTitle__DelegateSignature(FMultiplayerEnableMultiplayerServersForTitleResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerEnableMultiplayerServersForTitleResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[185]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteRemoteUser__DelegateSignature
	void DelegateOnSuccessDeleteRemoteUser__DelegateSignature(FMultiplayerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[186]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteLobby__DelegateSignature
	void DelegateOnSuccessDeleteLobby__DelegateSignature(FMultiplayerLobbyEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerLobbyEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[187]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteContainerImageRepository__DelegateSignature
	void DelegateOnSuccessDeleteContainerImageRepository__DelegateSignature(FMultiplayerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[188]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteCertificate__DelegateSignature
	void DelegateOnSuccessDeleteCertificate__DelegateSignature(FMultiplayerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[189]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteBuildRegion__DelegateSignature
	void DelegateOnSuccessDeleteBuildRegion__DelegateSignature(FMultiplayerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[190]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteBuildAlias__DelegateSignature
	void DelegateOnSuccessDeleteBuildAlias__DelegateSignature(FMultiplayerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[191]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteBuild__DelegateSignature
	void DelegateOnSuccessDeleteBuild__DelegateSignature(FMultiplayerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[192]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteAsset__DelegateSignature
	void DelegateOnSuccessDeleteAsset__DelegateSignature(FMultiplayerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[193]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateTitleMultiplayerServersQuotaChange__DelegateSignature
	void DelegateOnSuccessCreateTitleMultiplayerServersQuotaChange__DelegateSignature(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[194]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateServerMatchmakingTicket__DelegateSignature
	void DelegateOnSuccessCreateServerMatchmakingTicket__DelegateSignature(FMultiplayerCreateMatchmakingTicketResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerCreateMatchmakingTicketResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[195]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateServerBackfillTicket__DelegateSignature
	void DelegateOnSuccessCreateServerBackfillTicket__DelegateSignature(FMultiplayerCreateServerBackfillTicketResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerCreateServerBackfillTicketResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[196]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateRemoteUser__DelegateSignature
	void DelegateOnSuccessCreateRemoteUser__DelegateSignature(FMultiplayerCreateRemoteUserResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerCreateRemoteUserResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[197]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateMatchmakingTicket__DelegateSignature
	void DelegateOnSuccessCreateMatchmakingTicket__DelegateSignature(FMultiplayerCreateMatchmakingTicketResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerCreateMatchmakingTicketResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[198]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateLobby__DelegateSignature
	void DelegateOnSuccessCreateLobby__DelegateSignature(FMultiplayerCreateLobbyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerCreateLobbyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[199]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateBuildWithProcessBasedServer__DelegateSignature
	void DelegateOnSuccessCreateBuildWithProcessBasedServer__DelegateSignature(FMultiplayerCreateBuildWithProcessBasedServerResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerCreateBuildWithProcessBasedServerResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[200]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateBuildWithManagedContainer__DelegateSignature
	void DelegateOnSuccessCreateBuildWithManagedContainer__DelegateSignature(FMultiplayerCreateBuildWithManagedContainerResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerCreateBuildWithManagedContainerResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[201]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateBuildWithCustomContainer__DelegateSignature
	void DelegateOnSuccessCreateBuildWithCustomContainer__DelegateSignature(FMultiplayerCreateBuildWithCustomContainerResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerCreateBuildWithCustomContainerResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[202]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateBuildAlias__DelegateSignature
	void DelegateOnSuccessCreateBuildAlias__DelegateSignature(FMultiplayerBuildAliasDetailsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerBuildAliasDetailsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[203]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCancelServerBackfillTicket__DelegateSignature
	void DelegateOnSuccessCancelServerBackfillTicket__DelegateSignature(FMultiplayerCancelServerBackfillTicketResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerCancelServerBackfillTicketResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[204]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCancelMatchmakingTicket__DelegateSignature
	void DelegateOnSuccessCancelMatchmakingTicket__DelegateSignature(FMultiplayerCancelMatchmakingTicketResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerCancelMatchmakingTicketResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[205]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCancelAllServerBackfillTicketsForPlayer__DelegateSignature
	void DelegateOnSuccessCancelAllServerBackfillTicketsForPlayer__DelegateSignature(FMultiplayerCancelAllServerBackfillTicketsForPlayerResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerCancelAllServerBackfillTicketsForPlayerResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[206]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCancelAllMatchmakingTicketsForPlayer__DelegateSignature
	void DelegateOnSuccessCancelAllMatchmakingTicketsForPlayer__DelegateSignature(FMultiplayerCancelAllMatchmakingTicketsForPlayerResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FMultiplayerCancelAllMatchmakingTicketsForPlayerResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[207]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[208]);
		func(Error, customData);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.CreateTitleMultiplayerServersQuotaChange
	// UPlayFabMultiplayerAPI* CreateTitleMultiplayerServersQuotaChange(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e28b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.CreateServerMatchmakingTicket
	// UPlayFabMultiplayerAPI* CreateServerMatchmakingTicket(FMultiplayerCreateServerMatchmakingTicketRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e2670] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.CreateServerBackfillTicket
	// UPlayFabMultiplayerAPI* CreateServerBackfillTicket(FMultiplayerCreateServerBackfillTicketRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e2420] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.CreateRemoteUser
	// UPlayFabMultiplayerAPI* CreateRemoteUser(FMultiplayerCreateRemoteUserRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e20e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.CreateMatchmakingTicket
	// UPlayFabMultiplayerAPI* CreateMatchmakingTicket(FMultiplayerCreateMatchmakingTicketRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e1e90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.CreateLobby
	// UPlayFabMultiplayerAPI* CreateLobby(FMultiplayerCreateLobbyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e1c40] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.CreateBuildWithProcessBasedServer
	// UPlayFabMultiplayerAPI* CreateBuildWithProcessBasedServer(FMultiplayerCreateBuildWithProcessBasedServerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e1750] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.CreateBuildWithManagedContainer
	// UPlayFabMultiplayerAPI* CreateBuildWithManagedContainer(FMultiplayerCreateBuildWithManagedContainerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e12c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.CreateBuildWithCustomContainer
	// UPlayFabMultiplayerAPI* CreateBuildWithCustomContainer(FMultiplayerCreateBuildWithCustomContainerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e0ea0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.CreateBuildAlias
	// UPlayFabMultiplayerAPI* CreateBuildAlias(FMultiplayerCreateBuildAliasRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e0c60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.CancelServerBackfillTicket
	// UPlayFabMultiplayerAPI* CancelServerBackfillTicket(FMultiplayerCancelServerBackfillTicketRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e0a20] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.CancelMatchmakingTicket
	// UPlayFabMultiplayerAPI* CancelMatchmakingTicket(FMultiplayerCancelMatchmakingTicketRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e07e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.CancelAllServerBackfillTicketsForPlayer
	// UPlayFabMultiplayerAPI* CancelAllServerBackfillTicketsForPlayer(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e05f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabMultiplayerAPI.CancelAllMatchmakingTicketsForPlayer
	// UPlayFabMultiplayerAPI* CancelAllMatchmakingTicketsForPlayer(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x18e0400] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/PlayFab.PlayFabMultiplayerModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabMultiplayerModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeSubscribeToLobbyResourceResultResponse
	FMultiplayerSubscribeToLobbyResourceResult decodeSubscribeToLobbyResourceResultResponse(UPlayFabJsonObject* response) // [0x1901810] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerSubscribeToLobbyResourceResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeRolloverContainerRegistryCredentialsResponseResponse
	FMultiplayerRolloverContainerRegistryCredentialsResponse decodeRolloverContainerRegistryCredentialsResponseResponse(UPlayFabJsonObject* response) // [0x19000c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerRolloverContainerRegistryCredentialsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeRequestMultiplayerServerResponseResponse
	FMultiplayerRequestMultiplayerServerResponse decodeRequestMultiplayerServerResponseResponse(UPlayFabJsonObject* response) // [0x19005b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerRequestMultiplayerServerResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeLobbyEmptyResultResponse
	FMultiplayerLobbyEmptyResult decodeLobbyEmptyResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerLobbyEmptyResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeListVirtualMachineSummariesResponseResponse
	FMultiplayerListVirtualMachineSummariesResponse decodeListVirtualMachineSummariesResponseResponse(UPlayFabJsonObject* response) // [0x19016e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerListVirtualMachineSummariesResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeListTitleMultiplayerServersQuotaChangesResponseResponse
	FMultiplayerListTitleMultiplayerServersQuotaChangesResponse decodeListTitleMultiplayerServersQuotaChangesResponseResponse(UPlayFabJsonObject* response) // [0x1901600] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerListTitleMultiplayerServersQuotaChangesResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeListServerBackfillTicketsForPlayerResultResponse
	FMultiplayerListServerBackfillTicketsForPlayerResult decodeListServerBackfillTicketsForPlayerResultResponse(UPlayFabJsonObject* response) // [0x19012c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerListServerBackfillTicketsForPlayerResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeListQosServersForTitleResponseResponse
	FMultiplayerListQosServersForTitleResponse decodeListQosServersForTitleResponseResponse(UPlayFabJsonObject* response) // [0x19014d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerListQosServersForTitleResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeListPartyQosServersResponseResponse
	FMultiplayerListPartyQosServersResponse decodeListPartyQosServersResponseResponse(UPlayFabJsonObject* response) // [0x19014d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerListPartyQosServersResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeListMultiplayerServersResponseResponse
	FMultiplayerListMultiplayerServersResponse decodeListMultiplayerServersResponseResponse(UPlayFabJsonObject* response) // [0x19013a0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerListMultiplayerServersResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeListMatchmakingTicketsForPlayerResultResponse
	FMultiplayerListMatchmakingTicketsForPlayerResult decodeListMatchmakingTicketsForPlayerResultResponse(UPlayFabJsonObject* response) // [0x19012c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerListMatchmakingTicketsForPlayerResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeListContainerImageTagsResponseResponse
	FMultiplayerListContainerImageTagsResponse decodeListContainerImageTagsResponseResponse(UPlayFabJsonObject* response) // [0x19010b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerListContainerImageTagsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeListContainerImagesResponseResponse
	FMultiplayerListContainerImagesResponse decodeListContainerImagesResponseResponse(UPlayFabJsonObject* response) // [0x1901190] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerListContainerImagesResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeListCertificateSummariesResponseResponse
	FMultiplayerListCertificateSummariesResponse decodeListCertificateSummariesResponseResponse(UPlayFabJsonObject* response) // [0x1900f80] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerListCertificateSummariesResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeListBuildSummariesResponseResponse
	FMultiplayerListBuildSummariesResponse decodeListBuildSummariesResponseResponse(UPlayFabJsonObject* response) // [0x1900e50] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerListBuildSummariesResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeListBuildAliasesResponseResponse
	FMultiplayerListBuildAliasesResponse decodeListBuildAliasesResponseResponse(UPlayFabJsonObject* response) // [0x1900d20] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerListBuildAliasesResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeListAssetSummariesResponseResponse
	FMultiplayerListAssetSummariesResponse decodeListAssetSummariesResponseResponse(UPlayFabJsonObject* response) // [0x1900bf0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerListAssetSummariesResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeJoinMatchmakingTicketResultResponse
	FMultiplayerJoinMatchmakingTicketResult decodeJoinMatchmakingTicketResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerJoinMatchmakingTicketResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeJoinLobbyResultResponse
	FMultiplayerJoinLobbyResult decodeJoinLobbyResultResponse(UPlayFabJsonObject* response) // [0x1900b10] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerJoinLobbyResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetTitleMultiplayerServersQuotasResponseResponse
	FMultiplayerGetTitleMultiplayerServersQuotasResponse decodeGetTitleMultiplayerServersQuotasResponseResponse(UPlayFabJsonObject* response) // [0x1900a80] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetTitleMultiplayerServersQuotasResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetTitleMultiplayerServersQuotaChangeResponseResponse
	FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse decodeGetTitleMultiplayerServersQuotaChangeResponseResponse(UPlayFabJsonObject* response) // [0x19009f0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse
	FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse(UPlayFabJsonObject* response) // [0x18ffc50] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetServerBackfillTicketResultResponse
	FMultiplayerGetServerBackfillTicketResult decodeGetServerBackfillTicketResultResponse(UPlayFabJsonObject* response) // [0x19008d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetServerBackfillTicketResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetRemoteLoginEndpointResponseResponse
	FMultiplayerGetRemoteLoginEndpointResponse decodeGetRemoteLoginEndpointResponseResponse(UPlayFabJsonObject* response) // [0x19007e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetRemoteLoginEndpointResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetQueueStatisticsResultResponse
	FMultiplayerGetQueueStatisticsResult decodeGetQueueStatisticsResultResponse(UPlayFabJsonObject* response) // [0x1900740] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetQueueStatisticsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMultiplayerServerLogsResponseResponse
	FMultiplayerGetMultiplayerServerLogsResponse decodeGetMultiplayerServerLogsResponseResponse(UPlayFabJsonObject* response) // [0x1900660] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetMultiplayerServerLogsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMultiplayerServerDetailsResponseResponse
	FMultiplayerGetMultiplayerServerDetailsResponse decodeGetMultiplayerServerDetailsResponseResponse(UPlayFabJsonObject* response) // [0x19005b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetMultiplayerServerDetailsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMatchResultResponse
	FMultiplayerGetMatchResult decodeGetMatchResultResponse(UPlayFabJsonObject* response) // [0x19002c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetMatchResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMatchmakingTicketResultResponse
	FMultiplayerGetMatchmakingTicketResult decodeGetMatchmakingTicketResultResponse(UPlayFabJsonObject* response) // [0x1900480] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetMatchmakingTicketResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetLobbyResultResponse
	FMultiplayerGetLobbyResult decodeGetLobbyResultResponse(UPlayFabJsonObject* response) // [0x1900230] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetLobbyResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetContainerRegistryCredentialsResponseResponse
	FMultiplayerGetContainerRegistryCredentialsResponse decodeGetContainerRegistryCredentialsResponseResponse(UPlayFabJsonObject* response) // [0x19000c0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetContainerRegistryCredentialsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetBuildResponseResponse
	FMultiplayerGetBuildResponse decodeGetBuildResponseResponse(UPlayFabJsonObject* response) // [0x1900010] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetBuildResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetAssetUploadUrlResponseResponse
	FMultiplayerGetAssetUploadUrlResponse decodeGetAssetUploadUrlResponseResponse(UPlayFabJsonObject* response) // [0x18ffef0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetAssetUploadUrlResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeGetAssetDownloadUrlResponseResponse
	FMultiplayerGetAssetDownloadUrlResponse decodeGetAssetDownloadUrlResponseResponse(UPlayFabJsonObject* response) // [0x18ffdd0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerGetAssetDownloadUrlResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeFindLobbiesResultResponse
	FMultiplayerFindLobbiesResult decodeFindLobbiesResultResponse(UPlayFabJsonObject* response) // [0x18ffce0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerFindLobbiesResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeFindFriendLobbiesResultResponse
	FMultiplayerFindFriendLobbiesResult decodeFindFriendLobbiesResultResponse(UPlayFabJsonObject* response) // [0x18ffce0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerFindFriendLobbiesResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeEnableMultiplayerServersForTitleResponseResponse
	FMultiplayerEnableMultiplayerServersForTitleResponse decodeEnableMultiplayerServersForTitleResponseResponse(UPlayFabJsonObject* response) // [0x18ffc50] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerEnableMultiplayerServersForTitleResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeEmptyResponseResponse
	FMultiplayerEmptyResponse decodeEmptyResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerEmptyResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse
	FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse(UPlayFabJsonObject* response) // [0x18ffb60] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateServerBackfillTicketResultResponse
	FMultiplayerCreateServerBackfillTicketResult decodeCreateServerBackfillTicketResultResponse(UPlayFabJsonObject* response) // [0x18ff910] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerCreateServerBackfillTicketResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[39]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateRemoteUserResponseResponse
	FMultiplayerCreateRemoteUserResponse decodeCreateRemoteUserResponseResponse(UPlayFabJsonObject* response) // [0x18ff9f0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerCreateRemoteUserResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[40]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateMatchmakingTicketResultResponse
	FMultiplayerCreateMatchmakingTicketResult decodeCreateMatchmakingTicketResultResponse(UPlayFabJsonObject* response) // [0x18ff910] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerCreateMatchmakingTicketResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[41]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateLobbyResultResponse
	FMultiplayerCreateLobbyResult decodeCreateLobbyResultResponse(UPlayFabJsonObject* response) // [0x18ff7f0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerCreateLobbyResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateBuildWithProcessBasedServerResponseResponse
	FMultiplayerCreateBuildWithProcessBasedServerResponse decodeCreateBuildWithProcessBasedServerResponseResponse(UPlayFabJsonObject* response) // [0x18ff740] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerCreateBuildWithProcessBasedServerResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateBuildWithManagedContainerResponseResponse
	FMultiplayerCreateBuildWithManagedContainerResponse decodeCreateBuildWithManagedContainerResponseResponse(UPlayFabJsonObject* response) // [0x18ff690] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerCreateBuildWithManagedContainerResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateBuildWithCustomContainerResponseResponse
	FMultiplayerCreateBuildWithCustomContainerResponse decodeCreateBuildWithCustomContainerResponseResponse(UPlayFabJsonObject* response) // [0x18ff5e0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerCreateBuildWithCustomContainerResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelServerBackfillTicketResultResponse
	FMultiplayerCancelServerBackfillTicketResult decodeCancelServerBackfillTicketResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerCancelServerBackfillTicketResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelMatchmakingTicketResultResponse
	FMultiplayerCancelMatchmakingTicketResult decodeCancelMatchmakingTicketResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerCancelMatchmakingTicketResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelAllServerBackfillTicketsForPlayerResultResponse
	FMultiplayerCancelAllServerBackfillTicketsForPlayerResult decodeCancelAllServerBackfillTicketsForPlayerResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerCancelAllServerBackfillTicketsForPlayerResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelAllMatchmakingTicketsForPlayerResultResponse
	FMultiplayerCancelAllMatchmakingTicketsForPlayerResult decodeCancelAllMatchmakingTicketsForPlayerResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerCancelAllMatchmakingTicketsForPlayerResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabMultiplayerModelDecoder.decodeBuildAliasDetailsResponseResponse
	FMultiplayerBuildAliasDetailsResponse decodeBuildAliasDetailsResponseResponse(UPlayFabJsonObject* response) // [0x18ff470] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FMultiplayerBuildAliasDetailsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabProfilesAPI
/// Size: 0x0160 (352 bytes) (0x000030 - 0x000160) align 8 MaxSize: 0x0160
class UPlayFabProfilesAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,825) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0xB8];                                      // 0x0040   (0x00B8)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x00F8   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x0100   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x0108   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x0110   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabProfilesAPI.SetProfilePolicy
	// UPlayFabProfilesAPI* SetProfilePolicy(FProfilesSetEntityProfilePolicyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1928770] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabProfilesAPI.SetProfileLanguage
	// UPlayFabProfilesAPI* SetProfileLanguage(FProfilesSetProfileLanguageRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1928570] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabProfilesAPI.SetGlobalPolicy
	// UPlayFabProfilesAPI* SetGlobalPolicy(FProfilesSetGlobalPolicyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1928150] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabProfilesAPI.HelperSetProfilePolicy
	void HelperSetProfilePolicy(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191f650] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabProfilesAPI.HelperSetProfileLanguage
	void HelperSetProfileLanguage(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191f420] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabProfilesAPI.HelperSetGlobalPolicy
	void HelperSetGlobalPolicy(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1846d00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabProfilesAPI.HelperGetTitlePlayersFromMasterPlayerAccountIds
	void HelperGetTitlePlayersFromMasterPlayerAccountIds(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1919a70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabProfilesAPI.HelperGetProfiles
	void HelperGetProfiles(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1918490] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabProfilesAPI.HelperGetProfile
	void HelperGetProfile(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1918260] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabProfilesAPI.HelperGetGlobalPolicy
	void HelperGetGlobalPolicy(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19158d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabProfilesAPI.GetTitlePlayersFromMasterPlayerAccountIds
	// UPlayFabProfilesAPI* GetTitlePlayersFromMasterPlayerAccountIds(FProfilesGetTitlePlayersFromMasterPlayerAccountIdsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190f9d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabProfilesAPI.GetProfiles
	// UPlayFabProfilesAPI* GetProfiles(FProfilesGetEntityProfilesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190e5e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabProfilesAPI.GetProfile
	// UPlayFabProfilesAPI* GetProfile(FProfilesGetEntityProfileRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190e440] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabProfilesAPI.GetGlobalPolicy
	// UPlayFabProfilesAPI* GetGlobalPolicy(FProfilesGetGlobalPolicyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190bcb0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabProfilesAPI.DelegateOnSuccessSetProfilePolicy__DelegateSignature
	void DelegateOnSuccessSetProfilePolicy__DelegateSignature(FProfilesSetEntityProfilePolicyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FProfilesSetEntityProfilePolicyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabProfilesAPI.DelegateOnSuccessSetProfileLanguage__DelegateSignature
	void DelegateOnSuccessSetProfileLanguage__DelegateSignature(FProfilesSetProfileLanguageResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FProfilesSetProfileLanguageResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabProfilesAPI.DelegateOnSuccessSetGlobalPolicy__DelegateSignature
	void DelegateOnSuccessSetGlobalPolicy__DelegateSignature(FProfilesSetGlobalPolicyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FProfilesSetGlobalPolicyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabProfilesAPI.DelegateOnSuccessGetTitlePlayersFromMasterPlayerAccountIds__DelegateSignature
	void DelegateOnSuccessGetTitlePlayersFromMasterPlayerAccountIds__DelegateSignature(FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabProfilesAPI.DelegateOnSuccessGetProfiles__DelegateSignature
	void DelegateOnSuccessGetProfiles__DelegateSignature(FProfilesGetEntityProfilesResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FProfilesGetEntityProfilesResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabProfilesAPI.DelegateOnSuccessGetProfile__DelegateSignature
	void DelegateOnSuccessGetProfile__DelegateSignature(FProfilesGetEntityProfileResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FProfilesGetEntityProfileResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabProfilesAPI.DelegateOnSuccessGetGlobalPolicy__DelegateSignature
	void DelegateOnSuccessGetGlobalPolicy__DelegateSignature(FProfilesGetGlobalPolicyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FProfilesGetGlobalPolicyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabProfilesAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func(Error, customData);
	}
};

/// Class /Script/PlayFab.PlayFabProfilesModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabProfilesModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabProfilesModelDecoder.decodeSetProfileLanguageResponseResponse
	FProfilesSetProfileLanguageResponse decodeSetProfileLanguageResponseResponse(UPlayFabJsonObject* response) // [0x192cfd0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FProfilesSetProfileLanguageResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabProfilesModelDecoder.decodeSetGlobalPolicyResponseResponse
	FProfilesSetGlobalPolicyResponse decodeSetGlobalPolicyResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FProfilesSetGlobalPolicyResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabProfilesModelDecoder.decodeSetEntityProfilePolicyResponseResponse
	FProfilesSetEntityProfilePolicyResponse decodeSetEntityProfilePolicyResponseResponse(UPlayFabJsonObject* response) // [0x192ce00] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FProfilesSetEntityProfilePolicyResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabProfilesModelDecoder.decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse
	FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse(UPlayFabJsonObject* response) // [0x192cee0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabProfilesModelDecoder.decodeGetGlobalPolicyResponseResponse
	FProfilesGetGlobalPolicyResponse decodeGetGlobalPolicyResponseResponse(UPlayFabJsonObject* response) // [0x192ce00] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FProfilesGetGlobalPolicyResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabProfilesModelDecoder.decodeGetEntityProfilesResponseResponse
	FProfilesGetEntityProfilesResponse decodeGetEntityProfilesResponseResponse(UPlayFabJsonObject* response) // [0x192cd20] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FProfilesGetEntityProfilesResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabProfilesModelDecoder.decodeGetEntityProfileResponseResponse
	FProfilesGetEntityProfileResponse decodeGetEntityProfileResponseResponse(UPlayFabJsonObject* response) // [0x192cc90] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FProfilesGetEntityProfileResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabServerAPI
/// Size: 0x0940 (2368 bytes) (0x000030 - 0x000940) align 8 MaxSize: 0x0940
class UPlayFabServerAPI : public UOnlineBlueprintCallProxyBase
{ 
public:
	SDK_UNDEFINED(16,826) /* FMulticastInlineDelegate */ __um(OnPlayFabResponse);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x898];                                     // 0x0040   (0x0898)  MISSED
	class UPlayFabAuthenticationContext*               CallAuthenticationContext;                                  // 0x08D8   (0x0008)  
	class UPlayFabJsonObject*                          RequestJsonObj;                                             // 0x08E0   (0x0008)  
	class UPlayFabJsonObject*                          ResponseJsonObj;                                            // 0x08E8   (0x0008)  
	unsigned char                                      UnknownData01_7[0x50];                                      // 0x08F0   (0x0050)  MISSED


	/// Functions
	// Function /Script/PlayFab.PlayFabServerAPI.WriteTitleEvent
	// UPlayFabServerAPI* WriteTitleEvent(FServerWriteTitleEventRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192ca50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.WritePlayerEvent
	// UPlayFabServerAPI* WritePlayerEvent(FServerWriteServerPlayerEventRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192c7b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.WriteCharacterEvent
	// UPlayFabServerAPI* WriteCharacterEvent(FServerWriteServerCharacterEventRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192c4b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdateUserReadOnlyData
	// UPlayFabServerAPI* UpdateUserReadOnlyData(FServerUpdateUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192c260] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdateUserPublisherReadOnlyData
	// UPlayFabServerAPI* UpdateUserPublisherReadOnlyData(FServerUpdateUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192c010] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdateUserPublisherInternalData
	// UPlayFabServerAPI* UpdateUserPublisherInternalData(FServerUpdateUserInternalDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192bdd0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdateUserPublisherData
	// UPlayFabServerAPI* UpdateUserPublisherData(FServerUpdateUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192bb80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdateUserInventoryItemCustomData
	// UPlayFabServerAPI* UpdateUserInventoryItemCustomData(FServerUpdateUserInventoryItemDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192b880] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdateUserInternalData
	// UPlayFabServerAPI* UpdateUserInternalData(FServerUpdateUserInternalDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192b640] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdateUserData
	// UPlayFabServerAPI* UpdateUserData(FServerUpdateUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192b3f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdateSharedGroupData
	// UPlayFabServerAPI* UpdateSharedGroupData(FServerUpdateSharedGroupDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192b1a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdatePlayerStatistics
	// UPlayFabServerAPI* UpdatePlayerStatistics(FServerUpdatePlayerStatisticsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192af60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdateCharacterStatistics
	// UPlayFabServerAPI* UpdateCharacterStatistics(FServerUpdateCharacterStatisticsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192ad20] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdateCharacterReadOnlyData
	// UPlayFabServerAPI* UpdateCharacterReadOnlyData(FServerUpdateCharacterDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192aa80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdateCharacterInternalData
	// UPlayFabServerAPI* UpdateCharacterInternalData(FServerUpdateCharacterDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192a7e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdateCharacterData
	// UPlayFabServerAPI* UpdateCharacterData(FServerUpdateCharacterDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192a540] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdateBans
	// UPlayFabServerAPI* UpdateBans(FServerUpdateBansRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192a360] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UpdateAvatarUrl
	// UPlayFabServerAPI* UpdateAvatarUrl(FServerUpdateAvatarUrlRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x192a130] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UnlockContainerItem
	// UPlayFabServerAPI* UnlockContainerItem(FServerUnlockContainerItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1929e50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UnlockContainerInstance
	// UPlayFabServerAPI* UnlockContainerInstance(FServerUnlockContainerInstanceRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1929b10] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UnlinkXboxAccount
	// UPlayFabServerAPI* UnlinkXboxAccount(FServerUnlinkXboxAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1929920] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UnlinkServerCustomId
	// UPlayFabServerAPI* UnlinkServerCustomId(FServerUnlinkServerCustomIdRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x19296e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.UnlinkPSNAccount
	// UPlayFabServerAPI* UnlinkPSNAccount(FServerUnlinkPSNAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x19294f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SubtractUserVirtualCurrency
	// UPlayFabServerAPI* SubtractUserVirtualCurrency(FServerSubtractUserVirtualCurrencyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x19292b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SubtractCharacterVirtualCurrency
	// UPlayFabServerAPI* SubtractCharacterVirtualCurrency(FServerSubtractCharacterVirtualCurrencyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1929010] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SetTitleInternalData
	// UPlayFabServerAPI* SetTitleInternalData(FServerSetTitleDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1928dd0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SetTitleData
	// UPlayFabServerAPI* SetTitleData(FServerSetTitleDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1928b90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SetPublisherData
	// UPlayFabServerAPI* SetPublisherData(FServerSetPublisherDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1928960] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SetPlayerSecret
	// UPlayFabServerAPI* SetPlayerSecret(FServerSetPlayerSecretRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1928340] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SetGameServerInstanceTags
	// UPlayFabServerAPI* SetGameServerInstanceTags(FServerSetGameServerInstanceTagsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1927f60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SetGameServerInstanceState
	// UPlayFabServerAPI* SetGameServerInstanceState(FServerSetGameServerInstanceStateRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1927d80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SetGameServerInstanceData
	// UPlayFabServerAPI* SetGameServerInstanceData(FServerSetGameServerInstanceDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1927b50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SetFriendTags
	// UPlayFabServerAPI* SetFriendTags(FServerSetFriendTagsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x19278d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SendPushNotificationFromTemplate
	// UPlayFabServerAPI* SendPushNotificationFromTemplate(FServerSendPushNotificationFromTemplateRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1927690] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SendPushNotification
	// UPlayFabServerAPI* SendPushNotification(FServerSendPushNotificationRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1927340] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SendEmailFromTemplate
	// UPlayFabServerAPI* SendEmailFromTemplate(FServerSendEmailFromTemplateRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1927100] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SendCustomAccountRecoveryEmail
	// UPlayFabServerAPI* SendCustomAccountRecoveryEmail(FServerSendCustomAccountRecoveryEmailRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1926e80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.SavePushNotificationTemplate
	// UPlayFabServerAPI* SavePushNotificationTemplate(FServerSavePushNotificationTemplateRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1926ba0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.RevokeInventoryItems
	// UPlayFabServerAPI* RevokeInventoryItems(FServerRevokeInventoryItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x19269c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.RevokeInventoryItem
	// UPlayFabServerAPI* RevokeInventoryItem(FServerRevokeInventoryItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1926740] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.RevokeBans
	// UPlayFabServerAPI* RevokeBans(FServerRevokeBansRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1926560] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.RevokeAllBansForUser
	// UPlayFabServerAPI* RevokeAllBansForUser(FServerRevokeAllBansForUserRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1926380] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.ReportPlayer
	// UPlayFabServerAPI* ReportPlayer(FServerReportPlayerServerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1926100] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.RemoveSharedGroupMembers
	// UPlayFabServerAPI* RemoveSharedGroupMembers(FServerRemoveSharedGroupMembersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1925ed0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.RemovePlayerTag
	// UPlayFabServerAPI* RemovePlayerTag(FServerRemovePlayerTagRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1925c90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.RemoveGenericID
	// UPlayFabServerAPI* RemoveGenericID(FServerRemoveGenericIDRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1925aa0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.RemoveFriend
	// UPlayFabServerAPI* RemoveFriend(FServerRemoveFriendRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1925870] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.RegisterGame
	// UPlayFabServerAPI* RegisterGame(FServerRegisterGameRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1925470] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.RefreshGameServerInstanceHeartbeat
	// UPlayFabServerAPI* RefreshGameServerInstanceHeartbeat(FServerRefreshGameServerInstanceHeartbeatRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1925290] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.RedeemMatchmakerTicket
	// UPlayFabServerAPI* RedeemMatchmakerTicket(FServerRedeemMatchmakerTicketRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1925050] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.RedeemCoupon
	// UPlayFabServerAPI* RedeemCoupon(FServerRedeemCouponRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1924d70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.NotifyMatchmakerPlayerLeft
	// UPlayFabServerAPI* NotifyMatchmakerPlayerLeft(FServerNotifyMatchmakerPlayerLeftRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1924b30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.MoveItemToUserFromCharacter
	// UPlayFabServerAPI* MoveItemToUserFromCharacter(FServerMoveItemToUserFromCharacterRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x19248b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.MoveItemToCharacterFromUser
	// UPlayFabServerAPI* MoveItemToCharacterFromUser(FServerMoveItemToCharacterFromUserRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1924630] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.MoveItemToCharacterFromCharacter
	// UPlayFabServerAPI* MoveItemToCharacterFromCharacter(FServerMoveItemToCharacterFromCharacterRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1924360] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.ModifyItemUses
	// UPlayFabServerAPI* ModifyItemUses(FServerModifyItemUsesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1924120] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.LoginWithXboxId
	// UPlayFabServerAPI* LoginWithXboxId(FServerLoginWithXboxIdRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1923ed0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.LoginWithXbox
	// UPlayFabServerAPI* LoginWithXbox(FServerLoginWithXboxRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1923cd0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.LoginWithSteamId
	// UPlayFabServerAPI* LoginWithSteamId(FServerLoginWithSteamIdRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1923ad0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.LoginWithServerCustomId
	// UPlayFabServerAPI* LoginWithServerCustomId(FServerLoginWithServerCustomIdRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1923880] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.LinkXboxAccount
	// UPlayFabServerAPI* LinkXboxAccount(FServerLinkXboxAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1923640] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.LinkServerCustomId
	// UPlayFabServerAPI* LinkServerCustomId(FServerLinkServerCustomIdRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1923400] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.LinkPSNAccount
	// UPlayFabServerAPI* LinkPSNAccount(FServerLinkPSNAccountRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1923160] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.HelperWriteTitleEvent
	void HelperWriteTitleEvent(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1922f30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[63]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperWritePlayerEvent
	void HelperWritePlayerEvent(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1922d00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[64]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperWriteCharacterEvent
	void HelperWriteCharacterEvent(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1922ad0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[65]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdateUserReadOnlyData
	void HelperUpdateUserReadOnlyData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19228a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[66]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdateUserPublisherReadOnlyData
	void HelperUpdateUserPublisherReadOnlyData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1922670] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[67]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdateUserPublisherInternalData
	void HelperUpdateUserPublisherInternalData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1922440] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[68]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdateUserPublisherData
	void HelperUpdateUserPublisherData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1922210] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[69]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdateUserInventoryItemCustomData
	void HelperUpdateUserInventoryItemCustomData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1921fe0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[70]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdateUserInternalData
	void HelperUpdateUserInternalData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1921db0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[71]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdateUserData
	void HelperUpdateUserData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1921b80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[72]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdateSharedGroupData
	void HelperUpdateSharedGroupData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1921950] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[73]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdatePlayerStatistics
	void HelperUpdatePlayerStatistics(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1921720] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[74]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdateCharacterStatistics
	void HelperUpdateCharacterStatistics(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19214f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[75]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdateCharacterReadOnlyData
	void HelperUpdateCharacterReadOnlyData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19212c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[76]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdateCharacterInternalData
	void HelperUpdateCharacterInternalData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1921090] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[77]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdateCharacterData
	void HelperUpdateCharacterData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1920e60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[78]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdateBans
	void HelperUpdateBans(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1920c30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[79]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUpdateAvatarUrl
	void HelperUpdateAvatarUrl(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1883cd0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[80]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUnlockContainerItem
	void HelperUnlockContainerItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1920a00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[81]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUnlockContainerInstance
	void HelperUnlockContainerInstance(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19207d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[82]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUnlinkXboxAccount
	void HelperUnlinkXboxAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19205a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[83]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUnlinkServerCustomId
	void HelperUnlinkServerCustomId(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1883870] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[84]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperUnlinkPSNAccount
	void HelperUnlinkPSNAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1920370] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[85]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSubtractUserVirtualCurrency
	void HelperSubtractUserVirtualCurrency(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1920140] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[86]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSubtractCharacterVirtualCurrency
	void HelperSubtractCharacterVirtualCurrency(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191ff10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[87]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSetTitleInternalData
	void HelperSetTitleInternalData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191fce0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[88]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSetTitleData
	void HelperSetTitleData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191fab0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[89]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSetPublisherData
	void HelperSetPublisherData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191f880] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[90]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSetPlayerSecret
	void HelperSetPlayerSecret(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x188a170] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[91]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSetGameServerInstanceTags
	void HelperSetGameServerInstanceTags(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191f1f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[92]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSetGameServerInstanceState
	void HelperSetGameServerInstanceState(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191efc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[93]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSetGameServerInstanceData
	void HelperSetGameServerInstanceData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191ed90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[94]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSetFriendTags
	void HelperSetFriendTags(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191eb60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[95]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSendPushNotificationFromTemplate
	void HelperSendPushNotificationFromTemplate(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191e930] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[96]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSendPushNotification
	void HelperSendPushNotification(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18831e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[97]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSendEmailFromTemplate
	void HelperSendEmailFromTemplate(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1882fb0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[98]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSendCustomAccountRecoveryEmail
	void HelperSendCustomAccountRecoveryEmail(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1882d80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[99]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperSavePushNotificationTemplate
	void HelperSavePushNotificationTemplate(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191e700] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[100]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperRevokeInventoryItems
	void HelperRevokeInventoryItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191e4d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[101]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperRevokeInventoryItem
	void HelperRevokeInventoryItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1879230] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[102]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperRevokeBans
	void HelperRevokeBans(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191e2a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[103]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperRevokeAllBansForUser
	void HelperRevokeAllBansForUser(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191e070] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[104]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperReportPlayer
	void HelperReportPlayer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191de40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[105]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperRemoveSharedGroupMembers
	void HelperRemoveSharedGroupMembers(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191dc10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[106]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperRemovePlayerTag
	void HelperRemovePlayerTag(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191d9e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[107]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperRemoveGenericID
	void HelperRemoveGenericID(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191d7b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[108]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperRemoveFriend
	void HelperRemoveFriend(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191d580] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[109]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperRegisterGame
	void HelperRegisterGame(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191d350] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[110]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperRefreshGameServerInstanceHeartbeat
	void HelperRefreshGameServerInstanceHeartbeat(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191d120] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[111]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperRedeemMatchmakerTicket
	void HelperRedeemMatchmakerTicket(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191cef0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[112]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperRedeemCoupon
	void HelperRedeemCoupon(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191ccc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[113]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperNotifyMatchmakerPlayerLeft
	void HelperNotifyMatchmakerPlayerLeft(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191ca90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[114]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperMoveItemToUserFromCharacter
	void HelperMoveItemToUserFromCharacter(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191c860] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[115]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperMoveItemToCharacterFromUser
	void HelperMoveItemToCharacterFromUser(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1889450] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[116]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperMoveItemToCharacterFromCharacter
	void HelperMoveItemToCharacterFromCharacter(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x18880a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[117]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperModifyItemUses
	void HelperModifyItemUses(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191c630] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[118]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperLoginWithXboxId
	void HelperLoginWithXboxId(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191c400] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[119]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperLoginWithXbox
	void HelperLoginWithXbox(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191c1d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[120]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperLoginWithSteamId
	void HelperLoginWithSteamId(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191bfa0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[121]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperLoginWithServerCustomId
	void HelperLoginWithServerCustomId(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191bd70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[122]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperLinkXboxAccount
	void HelperLinkXboxAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1882290] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[123]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperLinkServerCustomId
	void HelperLinkServerCustomId(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191bb40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[124]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperLinkPSNAccount
	void HelperLinkPSNAccount(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191b910] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[125]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGrantItemsToUsers
	void HelperGrantItemsToUsers(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191b6e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[126]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGrantItemsToUser
	void HelperGrantItemsToUser(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191b4b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[127]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGrantItemsToCharacter
	void HelperGrantItemsToCharacter(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191b280] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[128]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGrantCharacterToUser
	void HelperGrantCharacterToUser(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191b050] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[129]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetUserReadOnlyData
	void HelperGetUserReadOnlyData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191ae20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[130]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetUserPublisherReadOnlyData
	void HelperGetUserPublisherReadOnlyData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191abf0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[131]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetUserPublisherInternalData
	void HelperGetUserPublisherInternalData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191a9c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[132]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetUserPublisherData
	void HelperGetUserPublisherData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191a790] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[133]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetUserInventory
	void HelperGetUserInventory(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191a560] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[134]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetUserInternalData
	void HelperGetUserInternalData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191a330] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[135]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetUserData
	void HelperGetUserData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x191a100] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[136]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetUserBans
	void HelperGetUserBans(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1919ed0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[137]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetUserAccountInfo
	void HelperGetUserAccountInfo(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1919ca0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[138]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetTitleNews
	void HelperGetTitleNews(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1919840] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[139]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetTitleInternalData
	void HelperGetTitleInternalData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1919610] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[140]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetTitleData
	void HelperGetTitleData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19193e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[141]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetTime
	void HelperGetTime(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19191b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[142]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetStoreItems
	void HelperGetStoreItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1918f80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[143]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetSharedGroupData
	void HelperGetSharedGroupData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1918d50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[144]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetServerCustomIDsFromPlayFabIDs
	void HelperGetServerCustomIDsFromPlayFabIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1918b20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[145]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetRandomResultTables
	void HelperGetRandomResultTables(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19188f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[146]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPublisherData
	void HelperGetPublisherData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19186c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[147]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromXboxLiveIDs
	void HelperGetPlayFabIDsFromXboxLiveIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19170e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[148]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromSteamIDs
	void HelperGetPlayFabIDsFromSteamIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1916eb0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[149]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromPSNAccountIDs
	void HelperGetPlayFabIDsFromPSNAccountIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1916c80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[150]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromNintendoSwitchDeviceIds
	void HelperGetPlayFabIDsFromNintendoSwitchDeviceIds(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1916a50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[151]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromGenericIDs
	void HelperGetPlayFabIDsFromGenericIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1916820] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[152]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromFacebookInstantGamesIds
	void HelperGetPlayFabIDsFromFacebookInstantGamesIds(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19165f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[153]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromFacebookIDs
	void HelperGetPlayFabIDsFromFacebookIDs(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19163c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[154]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPlayerTags
	void HelperGetPlayerTags(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1917e00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[155]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPlayerStatisticVersions
	void HelperGetPlayerStatisticVersions(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19179a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[156]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPlayerStatistics
	void HelperGetPlayerStatistics(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1917bd0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[157]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPlayersInSegment
	void HelperGetPlayersInSegment(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1918030] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[158]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPlayerSegments
	void HelperGetPlayerSegments(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1917770] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[159]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPlayerProfile
	void HelperGetPlayerProfile(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1917540] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[160]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetPlayerCombinedInfo
	void HelperGetPlayerCombinedInfo(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1917310] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[161]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetLeaderboardForUserCharacters
	void HelperGetLeaderboardForUserCharacters(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1916190] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[162]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetLeaderboardAroundUser
	void HelperGetLeaderboardAroundUser(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1915f60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[163]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetLeaderboardAroundCharacter
	void HelperGetLeaderboardAroundCharacter(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1915d30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[164]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetLeaderboard
	void HelperGetLeaderboard(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1915b00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[165]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetFriendsList
	void HelperGetFriendsList(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19156a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[166]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetFriendLeaderboard
	void HelperGetFriendLeaderboard(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1915470] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[167]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetContentDownloadUrl
	void HelperGetContentDownloadUrl(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1915240] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[168]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetCharacterStatistics
	void HelperGetCharacterStatistics(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1915010] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[169]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetCharacterReadOnlyData
	void HelperGetCharacterReadOnlyData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1914de0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[170]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetCharacterLeaderboard
	void HelperGetCharacterLeaderboard(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1914bb0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[171]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetCharacterInventory
	void HelperGetCharacterInventory(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1914980] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[172]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetCharacterInternalData
	void HelperGetCharacterInternalData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1914750] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[173]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetCharacterData
	void HelperGetCharacterData(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1914520] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[174]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetCatalogItems
	void HelperGetCatalogItems(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19142f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[175]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetAllUsersCharacters
	void HelperGetAllUsersCharacters(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19140c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[176]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperGetAllSegments
	void HelperGetAllSegments(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1913e90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[177]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperExecuteCloudScript
	void HelperExecuteCloudScript(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1913c60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[178]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperEvaluateRandomResultTable
	void HelperEvaluateRandomResultTable(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1913a30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[179]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperDeregisterGame
	void HelperDeregisterGame(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1913800] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[180]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperDeleteSharedGroup
	void HelperDeleteSharedGroup(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19135d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[181]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperDeletePushNotificationTemplate
	void HelperDeletePushNotificationTemplate(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19133a0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[182]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperDeletePlayer
	void HelperDeletePlayer(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1913170] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[183]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperDeleteCharacterFromUser
	void HelperDeleteCharacterFromUser(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1912f40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[184]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperCreateSharedGroup
	void HelperCreateSharedGroup(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1912d10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[185]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperConsumeItem
	void HelperConsumeItem(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1912ae0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[186]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperBanUsers
	void HelperBanUsers(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x19128b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[187]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperAwardSteamAchievement
	void HelperAwardSteamAchievement(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1912680] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[188]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperAuthenticateSessionTicket
	void HelperAuthenticateSessionTicket(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1912450] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[189]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperAddUserVirtualCurrency
	void HelperAddUserVirtualCurrency(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1912220] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[190]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperAddSharedGroupMembers
	void HelperAddSharedGroupMembers(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1911ff0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[191]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperAddPlayerTag
	void HelperAddPlayerTag(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1911dc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[192]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperAddGenericID
	void HelperAddGenericID(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1878740] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[193]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperAddFriend
	void HelperAddFriend(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1911b90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[194]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.HelperAddCharacterVirtualCurrency
	void HelperAddCharacterVirtualCurrency(FPlayFabBaseModel response, UObject* customData, bool successful) // [0x1911960] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FPlayFabBaseModel, UObject*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[195]);
		func(response, customData, successful);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.GrantItemsToUsers
	// UPlayFabServerAPI* GrantItemsToUsers(FServerGrantItemsToUsersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1911730] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GrantItemsToUser
	// UPlayFabServerAPI* GrantItemsToUser(FServerGrantItemsToUserRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1911450] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GrantItemsToCharacter
	// UPlayFabServerAPI* GrantItemsToCharacter(FServerGrantItemsToCharacterRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1911110] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GrantCharacterToUser
	// UPlayFabServerAPI* GrantCharacterToUser(FServerGrantCharacterToUserRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1910e90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetUserReadOnlyData
	// UPlayFabServerAPI* GetUserReadOnlyData(FServerGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1910c60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetUserPublisherReadOnlyData
	// UPlayFabServerAPI* GetUserPublisherReadOnlyData(FServerGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1910a30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetUserPublisherInternalData
	// UPlayFabServerAPI* GetUserPublisherInternalData(FServerGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1910800] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetUserPublisherData
	// UPlayFabServerAPI* GetUserPublisherData(FServerGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x19105d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetUserInventory
	// UPlayFabServerAPI* GetUserInventory(FServerGetUserInventoryRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x19103e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetUserInternalData
	// UPlayFabServerAPI* GetUserInternalData(FServerGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x19101b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetUserData
	// UPlayFabServerAPI* GetUserData(FServerGetUserDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190ff80] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetUserBans
	// UPlayFabServerAPI* GetUserBans(FServerGetUserBansRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190fda0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetUserAccountInfo
	// UPlayFabServerAPI* GetUserAccountInfo(FServerGetUserAccountInfoRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190fbc0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetTitleNews
	// UPlayFabServerAPI* GetTitleNews(FServerGetTitleNewsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190f840] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetTitleInternalData
	// UPlayFabServerAPI* GetTitleInternalData(FServerGetTitleDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190f610] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetTitleData
	// UPlayFabServerAPI* GetTitleData(FServerGetTitleDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190f3e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetTime
	// UPlayFabServerAPI* GetTime(FServerGetTimeRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190f270] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetStoreItems
	// UPlayFabServerAPI* GetStoreItems(FServerGetStoreItemsServerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190eff0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetSharedGroupData
	// UPlayFabServerAPI* GetSharedGroupData(FServerGetSharedGroupDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190edc0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetServerCustomIDsFromPlayFabIDs
	// UPlayFabServerAPI* GetServerCustomIDsFromPlayFabIDs(FServerGetServerCustomIDsFromPlayFabIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190ebe0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetRandomResultTables
	// UPlayFabServerAPI* GetRandomResultTables(FServerGetRandomResultTablesRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190e9b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPublisherData
	// UPlayFabServerAPI* GetPublisherData(FServerGetPublisherDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190e7d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPlayFabIDsFromXboxLiveIDs
	// UPlayFabServerAPI* GetPlayFabIDsFromXboxLiveIDs(FServerGetPlayFabIDsFromXboxLiveIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190d330] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPlayFabIDsFromSteamIDs
	// UPlayFabServerAPI* GetPlayFabIDsFromSteamIDs(FServerGetPlayFabIDsFromSteamIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190d150] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPlayFabIDsFromPSNAccountIDs
	// UPlayFabServerAPI* GetPlayFabIDsFromPSNAccountIDs(FServerGetPlayFabIDsFromPSNAccountIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190cf70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPlayFabIDsFromNintendoSwitchDeviceIds
	// UPlayFabServerAPI* GetPlayFabIDsFromNintendoSwitchDeviceIds(FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190cd90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPlayFabIDsFromGenericIDs
	// UPlayFabServerAPI* GetPlayFabIDsFromGenericIDs(FServerGetPlayFabIDsFromGenericIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190cbb0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPlayFabIDsFromFacebookInstantGamesIds
	// UPlayFabServerAPI* GetPlayFabIDsFromFacebookInstantGamesIds(FServerGetPlayFabIDsFromFacebookInstantGamesIdsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190c9d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPlayFabIDsFromFacebookIDs
	// UPlayFabServerAPI* GetPlayFabIDsFromFacebookIDs(FServerGetPlayFabIDsFromFacebookIDsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190c7f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPlayerTags
	// UPlayFabServerAPI* GetPlayerTags(FServerGetPlayerTagsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190dfb0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPlayerStatisticVersions
	// UPlayFabServerAPI* GetPlayerStatisticVersions(FServerGetPlayerStatisticVersionsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190db30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPlayerStatistics
	// UPlayFabServerAPI* GetPlayerStatistics(FServerGetPlayerStatisticsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190dd20] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPlayersInSegment
	// UPlayFabServerAPI* GetPlayersInSegment(FServerGetPlayersInSegmentRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190e1f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPlayerSegments
	// UPlayFabServerAPI* GetPlayerSegments(FServerGetPlayersSegmentsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190d940] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPlayerProfile
	// UPlayFabServerAPI* GetPlayerProfile(FServerGetPlayerProfileRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190d750] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetPlayerCombinedInfo
	// UPlayFabServerAPI* GetPlayerCombinedInfo(FServerGetPlayerCombinedInfoRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190d560] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetLeaderboardForUserCharacters
	// UPlayFabServerAPI* GetLeaderboardForUserCharacters(FServerGetLeaderboardForUsersCharactersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190c5c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetLeaderboardAroundUser
	// UPlayFabServerAPI* GetLeaderboardAroundUser(FServerGetLeaderboardAroundUserRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190c350] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetLeaderboardAroundCharacter
	// UPlayFabServerAPI* GetLeaderboardAroundCharacter(FServerGetLeaderboardAroundCharacterRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190c070] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetLeaderboard
	// UPlayFabServerAPI* GetLeaderboard(FServerGetLeaderboardRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190be50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetFriendsList
	// UPlayFabServerAPI* GetFriendsList(FServerGetFriendsListRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190ba50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetFriendLeaderboard
	// UPlayFabServerAPI* GetFriendLeaderboard(FServerGetFriendLeaderboardRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190b760] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetContentDownloadUrl
	// UPlayFabServerAPI* GetContentDownloadUrl(FServerGetContentDownloadUrlRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190b530] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetCharacterStatistics
	// UPlayFabServerAPI* GetCharacterStatistics(FServerGetCharacterStatisticsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190b300] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetCharacterReadOnlyData
	// UPlayFabServerAPI* GetCharacterReadOnlyData(FServerGetCharacterDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190b080] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetCharacterLeaderboard
	// UPlayFabServerAPI* GetCharacterLeaderboard(FServerGetCharacterLeaderboardRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190ae40] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetCharacterInventory
	// UPlayFabServerAPI* GetCharacterInventory(FServerGetCharacterInventoryRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190abc0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetCharacterInternalData
	// UPlayFabServerAPI* GetCharacterInternalData(FServerGetCharacterDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190a940] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetCharacterData
	// UPlayFabServerAPI* GetCharacterData(FServerGetCharacterDataRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190a6c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetCatalogItems
	// UPlayFabServerAPI* GetCatalogItems(FServerGetCatalogItemsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190a4e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetAllUsersCharacters
	// UPlayFabServerAPI* GetAllUsersCharacters(FServerListUsersCharactersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190a300] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.GetAllSegments
	// UPlayFabServerAPI* GetAllSegments(FServerGetAllSegmentsRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x190a190] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.ExecuteCloudScript
	// UPlayFabServerAPI* ExecuteCloudScript(FServerExecuteCloudScriptServerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1909f20] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.EvaluateRandomResultTable
	// UPlayFabServerAPI* EvaluateRandomResultTable(FServerEvaluateRandomResultTableRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1909cf0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.DeregisterGame
	// UPlayFabServerAPI* DeregisterGame(FServerDeregisterGameRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1909b00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.DeleteSharedGroup
	// UPlayFabServerAPI* DeleteSharedGroup(FServerDeleteSharedGroupRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1909920] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.DeletePushNotificationTemplate
	// UPlayFabServerAPI* DeletePushNotificationTemplate(FServerDeletePushNotificationTemplateRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1909740] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.DeletePlayer
	// UPlayFabServerAPI* DeletePlayer(FServerDeletePlayerRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1909560] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.DeleteCharacterFromUser
	// UPlayFabServerAPI* DeleteCharacterFromUser(FServerDeleteCharacterFromUserRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1909320] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessWriteTitleEvent__DelegateSignature
	void DelegateOnSuccessWriteTitleEvent__DelegateSignature(FServerWriteEventResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerWriteEventResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[255]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessWritePlayerEvent__DelegateSignature
	void DelegateOnSuccessWritePlayerEvent__DelegateSignature(FServerWriteEventResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerWriteEventResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[256]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessWriteCharacterEvent__DelegateSignature
	void DelegateOnSuccessWriteCharacterEvent__DelegateSignature(FServerWriteEventResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerWriteEventResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[257]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature
	void DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature(FServerUpdateUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUpdateUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[258]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature
	void DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature(FServerUpdateUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUpdateUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[259]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature
	void DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature(FServerUpdateUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUpdateUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[260]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateUserPublisherData__DelegateSignature
	void DelegateOnSuccessUpdateUserPublisherData__DelegateSignature(FServerUpdateUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUpdateUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[261]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateUserInventoryItemCustomData__DelegateSignature
	void DelegateOnSuccessUpdateUserInventoryItemCustomData__DelegateSignature(FServerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[262]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateUserInternalData__DelegateSignature
	void DelegateOnSuccessUpdateUserInternalData__DelegateSignature(FServerUpdateUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUpdateUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[263]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateUserData__DelegateSignature
	void DelegateOnSuccessUpdateUserData__DelegateSignature(FServerUpdateUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUpdateUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[264]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateSharedGroupData__DelegateSignature
	void DelegateOnSuccessUpdateSharedGroupData__DelegateSignature(FServerUpdateSharedGroupDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUpdateSharedGroupDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[265]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature
	void DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature(FServerUpdatePlayerStatisticsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUpdatePlayerStatisticsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[266]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature
	void DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature(FServerUpdateCharacterStatisticsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUpdateCharacterStatisticsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[267]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateCharacterReadOnlyData__DelegateSignature
	void DelegateOnSuccessUpdateCharacterReadOnlyData__DelegateSignature(FServerUpdateCharacterDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUpdateCharacterDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[268]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateCharacterInternalData__DelegateSignature
	void DelegateOnSuccessUpdateCharacterInternalData__DelegateSignature(FServerUpdateCharacterDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUpdateCharacterDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[269]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateCharacterData__DelegateSignature
	void DelegateOnSuccessUpdateCharacterData__DelegateSignature(FServerUpdateCharacterDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUpdateCharacterDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[270]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateBans__DelegateSignature
	void DelegateOnSuccessUpdateBans__DelegateSignature(FServerUpdateBansResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUpdateBansResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[271]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateAvatarUrl__DelegateSignature
	void DelegateOnSuccessUpdateAvatarUrl__DelegateSignature(FServerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[272]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUnlockContainerItem__DelegateSignature
	void DelegateOnSuccessUnlockContainerItem__DelegateSignature(FServerUnlockContainerItemResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUnlockContainerItemResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[273]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUnlockContainerInstance__DelegateSignature
	void DelegateOnSuccessUnlockContainerInstance__DelegateSignature(FServerUnlockContainerItemResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUnlockContainerItemResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[274]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUnlinkXboxAccount__DelegateSignature
	void DelegateOnSuccessUnlinkXboxAccount__DelegateSignature(FServerUnlinkXboxAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUnlinkXboxAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[275]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUnlinkServerCustomId__DelegateSignature
	void DelegateOnSuccessUnlinkServerCustomId__DelegateSignature(FServerUnlinkServerCustomIdResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUnlinkServerCustomIdResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[276]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessUnlinkPSNAccount__DelegateSignature
	void DelegateOnSuccessUnlinkPSNAccount__DelegateSignature(FServerUnlinkPSNAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerUnlinkPSNAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[277]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature
	void DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature(FServerModifyUserVirtualCurrencyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerModifyUserVirtualCurrencyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[278]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSubtractCharacterVirtualCurrency__DelegateSignature
	void DelegateOnSuccessSubtractCharacterVirtualCurrency__DelegateSignature(FServerModifyCharacterVirtualCurrencyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerModifyCharacterVirtualCurrencyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[279]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSetTitleInternalData__DelegateSignature
	void DelegateOnSuccessSetTitleInternalData__DelegateSignature(FServerSetTitleDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerSetTitleDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[280]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSetTitleData__DelegateSignature
	void DelegateOnSuccessSetTitleData__DelegateSignature(FServerSetTitleDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerSetTitleDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[281]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSetPublisherData__DelegateSignature
	void DelegateOnSuccessSetPublisherData__DelegateSignature(FServerSetPublisherDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerSetPublisherDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[282]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSetPlayerSecret__DelegateSignature
	void DelegateOnSuccessSetPlayerSecret__DelegateSignature(FServerSetPlayerSecretResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerSetPlayerSecretResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[283]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSetGameServerInstanceTags__DelegateSignature
	void DelegateOnSuccessSetGameServerInstanceTags__DelegateSignature(FServerSetGameServerInstanceTagsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerSetGameServerInstanceTagsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[284]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSetGameServerInstanceState__DelegateSignature
	void DelegateOnSuccessSetGameServerInstanceState__DelegateSignature(FServerSetGameServerInstanceStateResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerSetGameServerInstanceStateResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[285]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSetGameServerInstanceData__DelegateSignature
	void DelegateOnSuccessSetGameServerInstanceData__DelegateSignature(FServerSetGameServerInstanceDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerSetGameServerInstanceDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[286]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSetFriendTags__DelegateSignature
	void DelegateOnSuccessSetFriendTags__DelegateSignature(FServerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[287]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSendPushNotificationFromTemplate__DelegateSignature
	void DelegateOnSuccessSendPushNotificationFromTemplate__DelegateSignature(FServerSendPushNotificationResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerSendPushNotificationResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[288]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSendPushNotification__DelegateSignature
	void DelegateOnSuccessSendPushNotification__DelegateSignature(FServerSendPushNotificationResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerSendPushNotificationResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[289]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSendEmailFromTemplate__DelegateSignature
	void DelegateOnSuccessSendEmailFromTemplate__DelegateSignature(FServerSendEmailFromTemplateResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerSendEmailFromTemplateResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[290]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSendCustomAccountRecoveryEmail__DelegateSignature
	void DelegateOnSuccessSendCustomAccountRecoveryEmail__DelegateSignature(FServerSendCustomAccountRecoveryEmailResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerSendCustomAccountRecoveryEmailResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[291]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessSavePushNotificationTemplate__DelegateSignature
	void DelegateOnSuccessSavePushNotificationTemplate__DelegateSignature(FServerSavePushNotificationTemplateResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerSavePushNotificationTemplateResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[292]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessRevokeInventoryItems__DelegateSignature
	void DelegateOnSuccessRevokeInventoryItems__DelegateSignature(FServerRevokeInventoryItemsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerRevokeInventoryItemsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[293]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessRevokeInventoryItem__DelegateSignature
	void DelegateOnSuccessRevokeInventoryItem__DelegateSignature(FServerRevokeInventoryResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerRevokeInventoryResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[294]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessRevokeBans__DelegateSignature
	void DelegateOnSuccessRevokeBans__DelegateSignature(FServerRevokeBansResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerRevokeBansResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[295]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessRevokeAllBansForUser__DelegateSignature
	void DelegateOnSuccessRevokeAllBansForUser__DelegateSignature(FServerRevokeAllBansForUserResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerRevokeAllBansForUserResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[296]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessReportPlayer__DelegateSignature
	void DelegateOnSuccessReportPlayer__DelegateSignature(FServerReportPlayerServerResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerReportPlayerServerResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[297]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature
	void DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature(FServerRemoveSharedGroupMembersResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerRemoveSharedGroupMembersResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[298]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessRemovePlayerTag__DelegateSignature
	void DelegateOnSuccessRemovePlayerTag__DelegateSignature(FServerRemovePlayerTagResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerRemovePlayerTagResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[299]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessRemoveGenericID__DelegateSignature
	void DelegateOnSuccessRemoveGenericID__DelegateSignature(FServerEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[300]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessRemoveFriend__DelegateSignature
	void DelegateOnSuccessRemoveFriend__DelegateSignature(FServerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[301]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessRegisterGame__DelegateSignature
	void DelegateOnSuccessRegisterGame__DelegateSignature(FServerRegisterGameResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerRegisterGameResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[302]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessRefreshGameServerInstanceHeartbeat__DelegateSignature
	void DelegateOnSuccessRefreshGameServerInstanceHeartbeat__DelegateSignature(FServerRefreshGameServerInstanceHeartbeatResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerRefreshGameServerInstanceHeartbeatResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[303]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessRedeemMatchmakerTicket__DelegateSignature
	void DelegateOnSuccessRedeemMatchmakerTicket__DelegateSignature(FServerRedeemMatchmakerTicketResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerRedeemMatchmakerTicketResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[304]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessRedeemCoupon__DelegateSignature
	void DelegateOnSuccessRedeemCoupon__DelegateSignature(FServerRedeemCouponResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerRedeemCouponResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[305]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessNotifyMatchmakerPlayerLeft__DelegateSignature
	void DelegateOnSuccessNotifyMatchmakerPlayerLeft__DelegateSignature(FServerNotifyMatchmakerPlayerLeftResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerNotifyMatchmakerPlayerLeftResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[306]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessMoveItemToUserFromCharacter__DelegateSignature
	void DelegateOnSuccessMoveItemToUserFromCharacter__DelegateSignature(FServerMoveItemToUserFromCharacterResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerMoveItemToUserFromCharacterResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[307]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessMoveItemToCharacterFromUser__DelegateSignature
	void DelegateOnSuccessMoveItemToCharacterFromUser__DelegateSignature(FServerMoveItemToCharacterFromUserResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerMoveItemToCharacterFromUserResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[308]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessMoveItemToCharacterFromCharacter__DelegateSignature
	void DelegateOnSuccessMoveItemToCharacterFromCharacter__DelegateSignature(FServerMoveItemToCharacterFromCharacterResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerMoveItemToCharacterFromCharacterResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[309]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessModifyItemUses__DelegateSignature
	void DelegateOnSuccessModifyItemUses__DelegateSignature(FServerModifyItemUsesResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerModifyItemUsesResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[310]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessLoginWithXboxId__DelegateSignature
	void DelegateOnSuccessLoginWithXboxId__DelegateSignature(FServerServerLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerServerLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[311]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessLoginWithXbox__DelegateSignature
	void DelegateOnSuccessLoginWithXbox__DelegateSignature(FServerServerLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerServerLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[312]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessLoginWithSteamId__DelegateSignature
	void DelegateOnSuccessLoginWithSteamId__DelegateSignature(FServerServerLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerServerLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[313]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessLoginWithServerCustomId__DelegateSignature
	void DelegateOnSuccessLoginWithServerCustomId__DelegateSignature(FServerServerLoginResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerServerLoginResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[314]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessLinkXboxAccount__DelegateSignature
	void DelegateOnSuccessLinkXboxAccount__DelegateSignature(FServerLinkXboxAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerLinkXboxAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[315]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessLinkServerCustomId__DelegateSignature
	void DelegateOnSuccessLinkServerCustomId__DelegateSignature(FServerLinkServerCustomIdResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerLinkServerCustomIdResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[316]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessLinkPSNAccount__DelegateSignature
	void DelegateOnSuccessLinkPSNAccount__DelegateSignature(FServerLinkPSNAccountResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerLinkPSNAccountResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[317]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGrantItemsToUsers__DelegateSignature
	void DelegateOnSuccessGrantItemsToUsers__DelegateSignature(FServerGrantItemsToUsersResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGrantItemsToUsersResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[318]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGrantItemsToUser__DelegateSignature
	void DelegateOnSuccessGrantItemsToUser__DelegateSignature(FServerGrantItemsToUserResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGrantItemsToUserResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[319]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGrantItemsToCharacter__DelegateSignature
	void DelegateOnSuccessGrantItemsToCharacter__DelegateSignature(FServerGrantItemsToCharacterResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGrantItemsToCharacterResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[320]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGrantCharacterToUser__DelegateSignature
	void DelegateOnSuccessGrantCharacterToUser__DelegateSignature(FServerGrantCharacterToUserResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGrantCharacterToUserResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[321]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserReadOnlyData__DelegateSignature
	void DelegateOnSuccessGetUserReadOnlyData__DelegateSignature(FServerGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[322]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature
	void DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature(FServerGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[323]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature
	void DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature(FServerGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[324]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserPublisherData__DelegateSignature
	void DelegateOnSuccessGetUserPublisherData__DelegateSignature(FServerGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[325]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserInventory__DelegateSignature
	void DelegateOnSuccessGetUserInventory__DelegateSignature(FServerGetUserInventoryResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetUserInventoryResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[326]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserInternalData__DelegateSignature
	void DelegateOnSuccessGetUserInternalData__DelegateSignature(FServerGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[327]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserData__DelegateSignature
	void DelegateOnSuccessGetUserData__DelegateSignature(FServerGetUserDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetUserDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[328]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserBans__DelegateSignature
	void DelegateOnSuccessGetUserBans__DelegateSignature(FServerGetUserBansResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetUserBansResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[329]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserAccountInfo__DelegateSignature
	void DelegateOnSuccessGetUserAccountInfo__DelegateSignature(FServerGetUserAccountInfoResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetUserAccountInfoResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[330]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetTitleNews__DelegateSignature
	void DelegateOnSuccessGetTitleNews__DelegateSignature(FServerGetTitleNewsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetTitleNewsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[331]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetTitleInternalData__DelegateSignature
	void DelegateOnSuccessGetTitleInternalData__DelegateSignature(FServerGetTitleDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetTitleDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[332]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetTitleData__DelegateSignature
	void DelegateOnSuccessGetTitleData__DelegateSignature(FServerGetTitleDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetTitleDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[333]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetTime__DelegateSignature
	void DelegateOnSuccessGetTime__DelegateSignature(FServerGetTimeResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetTimeResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[334]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetStoreItems__DelegateSignature
	void DelegateOnSuccessGetStoreItems__DelegateSignature(FServerGetStoreItemsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetStoreItemsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[335]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetSharedGroupData__DelegateSignature
	void DelegateOnSuccessGetSharedGroupData__DelegateSignature(FServerGetSharedGroupDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetSharedGroupDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[336]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetServerCustomIDsFromPlayFabIDs__DelegateSignature
	void DelegateOnSuccessGetServerCustomIDsFromPlayFabIDs__DelegateSignature(FServerGetServerCustomIDsFromPlayFabIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetServerCustomIDsFromPlayFabIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[337]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetRandomResultTables__DelegateSignature
	void DelegateOnSuccessGetRandomResultTables__DelegateSignature(FServerGetRandomResultTablesResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetRandomResultTablesResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[338]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPublisherData__DelegateSignature
	void DelegateOnSuccessGetPublisherData__DelegateSignature(FServerGetPublisherDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPublisherDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[339]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature(FServerGetPlayFabIDsFromXboxLiveIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPlayFabIDsFromXboxLiveIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[340]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature(FServerGetPlayFabIDsFromSteamIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPlayFabIDsFromSteamIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[341]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature(FServerGetPlayFabIDsFromPSNAccountIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPlayFabIDsFromPSNAccountIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[342]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature(FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[343]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature(FServerGetPlayFabIDsFromGenericIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPlayFabIDsFromGenericIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[344]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature(FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[345]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature
	void DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature(FServerGetPlayFabIDsFromFacebookIDsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPlayFabIDsFromFacebookIDsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[346]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayerTags__DelegateSignature
	void DelegateOnSuccessGetPlayerTags__DelegateSignature(FServerGetPlayerTagsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPlayerTagsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[347]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature
	void DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature(FServerGetPlayerStatisticVersionsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPlayerStatisticVersionsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[348]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayerStatistics__DelegateSignature
	void DelegateOnSuccessGetPlayerStatistics__DelegateSignature(FServerGetPlayerStatisticsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPlayerStatisticsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[349]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayersInSegment__DelegateSignature
	void DelegateOnSuccessGetPlayersInSegment__DelegateSignature(FServerGetPlayersInSegmentResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPlayersInSegmentResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[350]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayerSegments__DelegateSignature
	void DelegateOnSuccessGetPlayerSegments__DelegateSignature(FServerGetPlayerSegmentsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPlayerSegmentsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[351]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayerProfile__DelegateSignature
	void DelegateOnSuccessGetPlayerProfile__DelegateSignature(FServerGetPlayerProfileResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPlayerProfileResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[352]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature
	void DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature(FServerGetPlayerCombinedInfoResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetPlayerCombinedInfoResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[353]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature
	void DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature(FServerGetLeaderboardForUsersCharactersResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetLeaderboardForUsersCharactersResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[354]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetLeaderboardAroundUser__DelegateSignature
	void DelegateOnSuccessGetLeaderboardAroundUser__DelegateSignature(FServerGetLeaderboardAroundUserResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetLeaderboardAroundUserResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[355]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature
	void DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature(FServerGetLeaderboardAroundCharacterResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetLeaderboardAroundCharacterResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[356]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetLeaderboard__DelegateSignature
	void DelegateOnSuccessGetLeaderboard__DelegateSignature(FServerGetLeaderboardResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetLeaderboardResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[357]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetFriendsList__DelegateSignature
	void DelegateOnSuccessGetFriendsList__DelegateSignature(FServerGetFriendsListResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetFriendsListResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[358]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetFriendLeaderboard__DelegateSignature
	void DelegateOnSuccessGetFriendLeaderboard__DelegateSignature(FServerGetLeaderboardResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetLeaderboardResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[359]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetContentDownloadUrl__DelegateSignature
	void DelegateOnSuccessGetContentDownloadUrl__DelegateSignature(FServerGetContentDownloadUrlResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetContentDownloadUrlResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[360]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetCharacterStatistics__DelegateSignature
	void DelegateOnSuccessGetCharacterStatistics__DelegateSignature(FServerGetCharacterStatisticsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetCharacterStatisticsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[361]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature
	void DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature(FServerGetCharacterDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetCharacterDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[362]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature
	void DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature(FServerGetCharacterLeaderboardResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetCharacterLeaderboardResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[363]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetCharacterInventory__DelegateSignature
	void DelegateOnSuccessGetCharacterInventory__DelegateSignature(FServerGetCharacterInventoryResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetCharacterInventoryResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[364]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetCharacterInternalData__DelegateSignature
	void DelegateOnSuccessGetCharacterInternalData__DelegateSignature(FServerGetCharacterDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetCharacterDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[365]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetCharacterData__DelegateSignature
	void DelegateOnSuccessGetCharacterData__DelegateSignature(FServerGetCharacterDataResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetCharacterDataResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[366]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetCatalogItems__DelegateSignature
	void DelegateOnSuccessGetCatalogItems__DelegateSignature(FServerGetCatalogItemsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetCatalogItemsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[367]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetAllUsersCharacters__DelegateSignature
	void DelegateOnSuccessGetAllUsersCharacters__DelegateSignature(FServerListUsersCharactersResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerListUsersCharactersResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[368]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessGetAllSegments__DelegateSignature
	void DelegateOnSuccessGetAllSegments__DelegateSignature(FServerGetAllSegmentsResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerGetAllSegmentsResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[369]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessExecuteCloudScript__DelegateSignature
	void DelegateOnSuccessExecuteCloudScript__DelegateSignature(FServerExecuteCloudScriptResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerExecuteCloudScriptResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[370]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessEvaluateRandomResultTable__DelegateSignature
	void DelegateOnSuccessEvaluateRandomResultTable__DelegateSignature(FServerEvaluateRandomResultTableResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerEvaluateRandomResultTableResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[371]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessDeregisterGame__DelegateSignature
	void DelegateOnSuccessDeregisterGame__DelegateSignature(FServerDeregisterGameResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerDeregisterGameResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[372]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessDeleteSharedGroup__DelegateSignature
	void DelegateOnSuccessDeleteSharedGroup__DelegateSignature(FServerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[373]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessDeletePushNotificationTemplate__DelegateSignature
	void DelegateOnSuccessDeletePushNotificationTemplate__DelegateSignature(FServerDeletePushNotificationTemplateResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerDeletePushNotificationTemplateResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[374]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessDeletePlayer__DelegateSignature
	void DelegateOnSuccessDeletePlayer__DelegateSignature(FServerDeletePlayerResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerDeletePlayerResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[375]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessDeleteCharacterFromUser__DelegateSignature
	void DelegateOnSuccessDeleteCharacterFromUser__DelegateSignature(FServerDeleteCharacterFromUserResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerDeleteCharacterFromUserResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[376]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessCreateSharedGroup__DelegateSignature
	void DelegateOnSuccessCreateSharedGroup__DelegateSignature(FServerCreateSharedGroupResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerCreateSharedGroupResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[377]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessConsumeItem__DelegateSignature
	void DelegateOnSuccessConsumeItem__DelegateSignature(FServerConsumeItemResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerConsumeItemResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[378]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessBanUsers__DelegateSignature
	void DelegateOnSuccessBanUsers__DelegateSignature(FServerBanUsersResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerBanUsersResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[379]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessAwardSteamAchievement__DelegateSignature
	void DelegateOnSuccessAwardSteamAchievement__DelegateSignature(FServerAwardSteamAchievementResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerAwardSteamAchievementResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[380]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessAuthenticateSessionTicket__DelegateSignature
	void DelegateOnSuccessAuthenticateSessionTicket__DelegateSignature(FServerAuthenticateSessionTicketResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerAuthenticateSessionTicketResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[381]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature
	void DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature(FServerModifyUserVirtualCurrencyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerModifyUserVirtualCurrencyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[382]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessAddSharedGroupMembers__DelegateSignature
	void DelegateOnSuccessAddSharedGroupMembers__DelegateSignature(FServerAddSharedGroupMembersResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerAddSharedGroupMembersResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[383]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessAddPlayerTag__DelegateSignature
	void DelegateOnSuccessAddPlayerTag__DelegateSignature(FServerAddPlayerTagResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerAddPlayerTagResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[384]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessAddGenericID__DelegateSignature
	void DelegateOnSuccessAddGenericID__DelegateSignature(FServerEmptyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerEmptyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[385]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessAddFriend__DelegateSignature
	void DelegateOnSuccessAddFriend__DelegateSignature(FServerEmptyResponse Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerEmptyResponse, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[386]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnSuccessAddCharacterVirtualCurrency__DelegateSignature
	void DelegateOnSuccessAddCharacterVirtualCurrency__DelegateSignature(FServerModifyCharacterVirtualCurrencyResult Result, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FServerModifyCharacterVirtualCurrencyResult, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[387]);
		func(Result, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.DelegateOnFailurePlayFabError__DelegateSignature
	void DelegateOnFailurePlayFabError__DelegateSignature(FPlayFabError Error, UObject* customData) // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)(FPlayFabError, UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[388]);
		func(Error, customData);
	}
	// Function /Script/PlayFab.PlayFabServerAPI.CreateSharedGroup
	// UPlayFabServerAPI* CreateSharedGroup(FServerCreateSharedGroupRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1909140] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.ConsumeItem
	// UPlayFabServerAPI* ConsumeItem(FServerConsumeItemRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1908ea0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.BanUsers
	// UPlayFabServerAPI* BanUsers(FServerBanUsersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1908cb0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.AwardSteamAchievement
	// UPlayFabServerAPI* AwardSteamAchievement(FServerAwardSteamAchievementRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1908ad0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.AuthenticateSessionTicket
	// UPlayFabServerAPI* AuthenticateSessionTicket(FServerAuthenticateSessionTicketRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x19088f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.AddUserVirtualCurrency
	// UPlayFabServerAPI* AddUserVirtualCurrency(FServerAddUserVirtualCurrencyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x19086b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.AddSharedGroupMembers
	// UPlayFabServerAPI* AddSharedGroupMembers(FServerAddSharedGroupMembersRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1908480] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.AddPlayerTag
	// UPlayFabServerAPI* AddPlayerTag(FServerAddPlayerTagRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1908240] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.AddGenericID
	// UPlayFabServerAPI* AddGenericID(FServerAddGenericIDRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1908050] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.AddFriend
	// UPlayFabServerAPI* AddFriend(FServerAddFriendRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1907d10] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/PlayFab.PlayFabServerAPI.AddCharacterVirtualCurrency
	// UPlayFabServerAPI* AddCharacterVirtualCurrency(FServerAddCharacterVirtualCurrencyRequest Request, FDelegateProperty onSuccess, FDelegateProperty onFailure, UObject* customData); // [0x1907a70] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/PlayFab.PlayFabServerModelDecoder
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabServerModelDecoder : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeWriteEventResponseResponse
	FServerWriteEventResponse decodeWriteEventResponseResponse(UPlayFabJsonObject* response) // [0x19301a0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerWriteEventResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeUpdateUserDataResultResponse
	FServerUpdateUserDataResult decodeUpdateUserDataResultResponse(UPlayFabJsonObject* response) // [0x185dbb0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerUpdateUserDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeUpdateSharedGroupDataResultResponse
	FServerUpdateSharedGroupDataResult decodeUpdateSharedGroupDataResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerUpdateSharedGroupDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeUpdatePlayerStatisticsResultResponse
	FServerUpdatePlayerStatisticsResult decodeUpdatePlayerStatisticsResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerUpdatePlayerStatisticsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeUpdateCharacterStatisticsResultResponse
	FServerUpdateCharacterStatisticsResult decodeUpdateCharacterStatisticsResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerUpdateCharacterStatisticsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeUpdateCharacterDataResultResponse
	FServerUpdateCharacterDataResult decodeUpdateCharacterDataResultResponse(UPlayFabJsonObject* response) // [0x185dbb0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerUpdateCharacterDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeUpdateBansResultResponse
	FServerUpdateBansResult decodeUpdateBansResultResponse(UPlayFabJsonObject* response) // [0x185af40] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerUpdateBansResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeUnlockContainerItemResultResponse
	FServerUnlockContainerItemResult decodeUnlockContainerItemResultResponse(UPlayFabJsonObject* response) // [0x1930020] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerUnlockContainerItemResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeUnlinkXboxAccountResultResponse
	FServerUnlinkXboxAccountResult decodeUnlinkXboxAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerUnlinkXboxAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeUnlinkServerCustomIdResultResponse
	FServerUnlinkServerCustomIdResult decodeUnlinkServerCustomIdResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerUnlinkServerCustomIdResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeUnlinkPSNAccountResultResponse
	FServerUnlinkPSNAccountResult decodeUnlinkPSNAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerUnlinkPSNAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeSetTitleDataResultResponse
	FServerSetTitleDataResult decodeSetTitleDataResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerSetTitleDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeSetPublisherDataResultResponse
	FServerSetPublisherDataResult decodeSetPublisherDataResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerSetPublisherDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeSetPlayerSecretResultResponse
	FServerSetPlayerSecretResult decodeSetPlayerSecretResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerSetPlayerSecretResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeSetGameServerInstanceTagsResultResponse
	FServerSetGameServerInstanceTagsResult decodeSetGameServerInstanceTagsResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerSetGameServerInstanceTagsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeSetGameServerInstanceStateResultResponse
	FServerSetGameServerInstanceStateResult decodeSetGameServerInstanceStateResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerSetGameServerInstanceStateResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeSetGameServerInstanceDataResultResponse
	FServerSetGameServerInstanceDataResult decodeSetGameServerInstanceDataResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerSetGameServerInstanceDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeServerLoginResultResponse
	FServerServerLoginResult decodeServerLoginResultResponse(UPlayFabJsonObject* response) // [0x192fe80] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerServerLoginResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeSendPushNotificationResultResponse
	FServerSendPushNotificationResult decodeSendPushNotificationResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerSendPushNotificationResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeSendEmailFromTemplateResultResponse
	FServerSendEmailFromTemplateResult decodeSendEmailFromTemplateResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerSendEmailFromTemplateResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeSendCustomAccountRecoveryEmailResultResponse
	FServerSendCustomAccountRecoveryEmailResult decodeSendCustomAccountRecoveryEmailResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerSendCustomAccountRecoveryEmailResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeSavePushNotificationTemplateResultResponse
	FServerSavePushNotificationTemplateResult decodeSavePushNotificationTemplateResultResponse(UPlayFabJsonObject* response) // [0x192fda0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerSavePushNotificationTemplateResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeRevokeInventoryResultResponse
	FServerRevokeInventoryResult decodeRevokeInventoryResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerRevokeInventoryResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeRevokeInventoryItemsResultResponse
	FServerRevokeInventoryItemsResult decodeRevokeInventoryItemsResultResponse(UPlayFabJsonObject* response) // [0x185d760] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerRevokeInventoryItemsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeRevokeBansResultResponse
	FServerRevokeBansResult decodeRevokeBansResultResponse(UPlayFabJsonObject* response) // [0x185af40] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerRevokeBansResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeRevokeAllBansForUserResultResponse
	FServerRevokeAllBansForUserResult decodeRevokeAllBansForUserResultResponse(UPlayFabJsonObject* response) // [0x185af40] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerRevokeAllBansForUserResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeReportPlayerServerResultResponse
	FServerReportPlayerServerResult decodeReportPlayerServerResultResponse(UPlayFabJsonObject* response) // [0x192fd10] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerReportPlayerServerResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeRemoveSharedGroupMembersResultResponse
	FServerRemoveSharedGroupMembersResult decodeRemoveSharedGroupMembersResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerRemoveSharedGroupMembersResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeRemovePlayerTagResultResponse
	FServerRemovePlayerTagResult decodeRemovePlayerTagResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerRemovePlayerTagResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeRegisterGameResponseResponse
	FServerRegisterGameResponse decodeRegisterGameResponseResponse(UPlayFabJsonObject* response) // [0x1900b10] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerRegisterGameResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeRefreshGameServerInstanceHeartbeatResultResponse
	FServerRefreshGameServerInstanceHeartbeatResult decodeRefreshGameServerInstanceHeartbeatResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerRefreshGameServerInstanceHeartbeatResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeRedeemMatchmakerTicketResultResponse
	FServerRedeemMatchmakerTicketResult decodeRedeemMatchmakerTicketResultResponse(UPlayFabJsonObject* response) // [0x192fc20] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerRedeemMatchmakerTicketResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeRedeemCouponResultResponse
	FServerRedeemCouponResult decodeRedeemCouponResultResponse(UPlayFabJsonObject* response) // [0x192fb40] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerRedeemCouponResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeNotifyMatchmakerPlayerLeftResultResponse
	FServerNotifyMatchmakerPlayerLeftResult decodeNotifyMatchmakerPlayerLeftResultResponse(UPlayFabJsonObject* response) // [0x192fab0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerNotifyMatchmakerPlayerLeftResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeMoveItemToUserFromCharacterResultResponse
	FServerMoveItemToUserFromCharacterResult decodeMoveItemToUserFromCharacterResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerMoveItemToUserFromCharacterResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeMoveItemToCharacterFromUserResultResponse
	FServerMoveItemToCharacterFromUserResult decodeMoveItemToCharacterFromUserResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerMoveItemToCharacterFromUserResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeMoveItemToCharacterFromCharacterResultResponse
	FServerMoveItemToCharacterFromCharacterResult decodeMoveItemToCharacterFromCharacterResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerMoveItemToCharacterFromCharacterResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeModifyUserVirtualCurrencyResultResponse
	FServerModifyUserVirtualCurrencyResult decodeModifyUserVirtualCurrencyResultResponse(UPlayFabJsonObject* response) // [0x185d550] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerModifyUserVirtualCurrencyResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeModifyItemUsesResultResponse
	FServerModifyItemUsesResult decodeModifyItemUsesResultResponse(UPlayFabJsonObject* response) // [0x192e600] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerModifyItemUsesResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeModifyCharacterVirtualCurrencyResultResponse
	FServerModifyCharacterVirtualCurrencyResult decodeModifyCharacterVirtualCurrencyResultResponse(UPlayFabJsonObject* response) // [0x192f9d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerModifyCharacterVirtualCurrencyResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[39]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeListUsersCharactersResultResponse
	FServerListUsersCharactersResult decodeListUsersCharactersResultResponse(UPlayFabJsonObject* response) // [0x192f8f0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerListUsersCharactersResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[40]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeLinkXboxAccountResultResponse
	FServerLinkXboxAccountResult decodeLinkXboxAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerLinkXboxAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[41]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeLinkServerCustomIdResultResponse
	FServerLinkServerCustomIdResult decodeLinkServerCustomIdResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerLinkServerCustomIdResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeLinkPSNAccountResultResponse
	FServerLinkPSNAccountResult decodeLinkPSNAccountResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerLinkPSNAccountResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGrantItemsToUsersResultResponse
	FServerGrantItemsToUsersResult decodeGrantItemsToUsersResultResponse(UPlayFabJsonObject* response) // [0x185d070] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGrantItemsToUsersResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGrantItemsToUserResultResponse
	FServerGrantItemsToUserResult decodeGrantItemsToUserResultResponse(UPlayFabJsonObject* response) // [0x185d070] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGrantItemsToUserResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGrantItemsToCharacterResultResponse
	FServerGrantItemsToCharacterResult decodeGrantItemsToCharacterResultResponse(UPlayFabJsonObject* response) // [0x185d070] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGrantItemsToCharacterResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGrantCharacterToUserResultResponse
	FServerGrantCharacterToUserResult decodeGrantCharacterToUserResultResponse(UPlayFabJsonObject* response) // [0x192f810] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGrantCharacterToUserResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetUserInventoryResultResponse
	FServerGetUserInventoryResult decodeGetUserInventoryResultResponse(UPlayFabJsonObject* response) // [0x185cf30] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetUserInventoryResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetUserDataResultResponse
	FServerGetUserDataResult decodeGetUserDataResultResponse(UPlayFabJsonObject* response) // [0x185ce50] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetUserDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetUserBansResultResponse
	FServerGetUserBansResult decodeGetUserBansResultResponse(UPlayFabJsonObject* response) // [0x185af40] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetUserBansResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetUserAccountInfoResultResponse
	FServerGetUserAccountInfoResult decodeGetUserAccountInfoResultResponse(UPlayFabJsonObject* response) // [0x185d3a0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetUserAccountInfoResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetTitleNewsResultResponse
	FServerGetTitleNewsResult decodeGetTitleNewsResultResponse(UPlayFabJsonObject* response) // [0x192f730] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetTitleNewsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetTitleDataResultResponse
	FServerGetTitleDataResult decodeGetTitleDataResultResponse(UPlayFabJsonObject* response) // [0x185c8d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetTitleDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetTimeResultResponse
	FServerGetTimeResult decodeGetTimeResultResponse(UPlayFabJsonObject* response) // [0x192f650] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetTimeResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetStoreItemsResultResponse
	FServerGetStoreItemsResult decodeGetStoreItemsResultResponse(UPlayFabJsonObject* response) // [0x192f4d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetStoreItemsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[55]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetSharedGroupDataResultResponse
	FServerGetSharedGroupDataResult decodeGetSharedGroupDataResultResponse(UPlayFabJsonObject* response) // [0x192f3f0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetSharedGroupDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[56]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetServerCustomIDsFromPlayFabIDsResultResponse
	FServerGetServerCustomIDsFromPlayFabIDsResult decodeGetServerCustomIDsFromPlayFabIDsResultResponse(UPlayFabJsonObject* response) // [0x192f110] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetServerCustomIDsFromPlayFabIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[57]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetRandomResultTablesResultResponse
	FServerGetRandomResultTablesResult decodeGetRandomResultTablesResultResponse(UPlayFabJsonObject* response) // [0x185c960] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetRandomResultTablesResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[58]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPublisherDataResultResponse
	FServerGetPublisherDataResult decodeGetPublisherDataResultResponse(UPlayFabJsonObject* response) // [0x185c8d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPublisherDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[59]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromXboxLiveIDsResultResponse
	FServerGetPlayFabIDsFromXboxLiveIDsResult decodeGetPlayFabIDsFromXboxLiveIDsResultResponse(UPlayFabJsonObject* response) // [0x192f110] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPlayFabIDsFromXboxLiveIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[60]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromSteamIDsResultResponse
	FServerGetPlayFabIDsFromSteamIDsResult decodeGetPlayFabIDsFromSteamIDsResultResponse(UPlayFabJsonObject* response) // [0x192f110] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPlayFabIDsFromSteamIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[61]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromPSNAccountIDsResultResponse
	FServerGetPlayFabIDsFromPSNAccountIDsResult decodeGetPlayFabIDsFromPSNAccountIDsResultResponse(UPlayFabJsonObject* response) // [0x192f110] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPlayFabIDsFromPSNAccountIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[62]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse
	FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse(UPlayFabJsonObject* response) // [0x192f110] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[63]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromGenericIDsResultResponse
	FServerGetPlayFabIDsFromGenericIDsResult decodeGetPlayFabIDsFromGenericIDsResultResponse(UPlayFabJsonObject* response) // [0x192f110] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPlayFabIDsFromGenericIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[64]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse
	FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse(UPlayFabJsonObject* response) // [0x192f110] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[65]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromFacebookIDsResultResponse
	FServerGetPlayFabIDsFromFacebookIDsResult decodeGetPlayFabIDsFromFacebookIDsResultResponse(UPlayFabJsonObject* response) // [0x192f110] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPlayFabIDsFromFacebookIDsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[66]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPlayerTagsResultResponse
	FServerGetPlayerTagsResult decodeGetPlayerTagsResultResponse(UPlayFabJsonObject* response) // [0x185c550] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPlayerTagsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[67]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPlayerStatisticVersionsResultResponse
	FServerGetPlayerStatisticVersionsResult decodeGetPlayerStatisticVersionsResultResponse(UPlayFabJsonObject* response) // [0x185c470] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPlayerStatisticVersionsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[68]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPlayerStatisticsResultResponse
	FServerGetPlayerStatisticsResult decodeGetPlayerStatisticsResultResponse(UPlayFabJsonObject* response) // [0x192f2d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPlayerStatisticsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[69]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPlayersInSegmentResultResponse
	FServerGetPlayersInSegmentResult decodeGetPlayersInSegmentResultResponse(UPlayFabJsonObject* response) // [0x185c670] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPlayersInSegmentResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[70]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPlayerSegmentsResultResponse
	FServerGetPlayerSegmentsResult decodeGetPlayerSegmentsResultResponse(UPlayFabJsonObject* response) // [0x185b7a0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPlayerSegmentsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[71]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPlayerProfileResultResponse
	FServerGetPlayerProfileResult decodeGetPlayerProfileResultResponse(UPlayFabJsonObject* response) // [0x185c220] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPlayerProfileResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[72]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetPlayerCombinedInfoResultResponse
	FServerGetPlayerCombinedInfoResult decodeGetPlayerCombinedInfoResultResponse(UPlayFabJsonObject* response) // [0x192f1f0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetPlayerCombinedInfoResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[73]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardResultResponse
	FServerGetLeaderboardResult decodeGetLeaderboardResultResponse(UPlayFabJsonObject* response) // [0x192efe0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetLeaderboardResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[74]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardForUsersCharactersResultResponse
	FServerGetLeaderboardForUsersCharactersResult decodeGetLeaderboardForUsersCharactersResultResponse(UPlayFabJsonObject* response) // [0x192ecf0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetLeaderboardForUsersCharactersResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[75]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardAroundUserResultResponse
	FServerGetLeaderboardAroundUserResult decodeGetLeaderboardAroundUserResultResponse(UPlayFabJsonObject* response) // [0x192efe0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetLeaderboardAroundUserResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[76]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardAroundCharacterResultResponse
	FServerGetLeaderboardAroundCharacterResult decodeGetLeaderboardAroundCharacterResultResponse(UPlayFabJsonObject* response) // [0x192ecf0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetLeaderboardAroundCharacterResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[77]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetFriendsListResultResponse
	FServerGetFriendsListResult decodeGetFriendsListResultResponse(UPlayFabJsonObject* response) // [0x192ef00] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetFriendsListResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[78]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetContentDownloadUrlResultResponse
	FServerGetContentDownloadUrlResult decodeGetContentDownloadUrlResultResponse(UPlayFabJsonObject* response) // [0x185bc70] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetContentDownloadUrlResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[79]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetCharacterStatisticsResultResponse
	FServerGetCharacterStatisticsResult decodeGetCharacterStatisticsResultResponse(UPlayFabJsonObject* response) // [0x192edd0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetCharacterStatisticsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[80]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetCharacterLeaderboardResultResponse
	FServerGetCharacterLeaderboardResult decodeGetCharacterLeaderboardResultResponse(UPlayFabJsonObject* response) // [0x192ecf0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetCharacterLeaderboardResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[81]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetCharacterInventoryResultResponse
	FServerGetCharacterInventoryResult decodeGetCharacterInventoryResultResponse(UPlayFabJsonObject* response) // [0x192eb70] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetCharacterInventoryResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[82]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetCharacterDataResultResponse
	FServerGetCharacterDataResult decodeGetCharacterDataResultResponse(UPlayFabJsonObject* response) // [0x192ea30] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetCharacterDataResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[83]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetCatalogItemsResultResponse
	FServerGetCatalogItemsResult decodeGetCatalogItemsResultResponse(UPlayFabJsonObject* response) // [0x185b880] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetCatalogItemsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[84]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeGetAllSegmentsResultResponse
	FServerGetAllSegmentsResult decodeGetAllSegmentsResultResponse(UPlayFabJsonObject* response) // [0x185b7a0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerGetAllSegmentsResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[85]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeExecuteCloudScriptResultResponse
	FServerExecuteCloudScriptResult decodeExecuteCloudScriptResultResponse(UPlayFabJsonObject* response) // [0x192e8b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerExecuteCloudScriptResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[86]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeEvaluateRandomResultTableResultResponse
	FServerEvaluateRandomResultTableResult decodeEvaluateRandomResultTableResultResponse(UPlayFabJsonObject* response) // [0x192e7d0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerEvaluateRandomResultTableResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[87]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeEmptyResultResponse
	FServerEmptyResult decodeEmptyResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerEmptyResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[88]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeEmptyResponseResponse
	FServerEmptyResponse decodeEmptyResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerEmptyResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[89]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeDeregisterGameResponseResponse
	FServerDeregisterGameResponse decodeDeregisterGameResponseResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerDeregisterGameResponse (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[90]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeDeletePushNotificationTemplateResultResponse
	FServerDeletePushNotificationTemplateResult decodeDeletePushNotificationTemplateResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerDeletePushNotificationTemplateResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[91]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeDeletePlayerResultResponse
	FServerDeletePlayerResult decodeDeletePlayerResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerDeletePlayerResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[92]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeDeleteCharacterFromUserResultResponse
	FServerDeleteCharacterFromUserResult decodeDeleteCharacterFromUserResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerDeleteCharacterFromUserResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[93]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeCreateSharedGroupResultResponse
	FServerCreateSharedGroupResult decodeCreateSharedGroupResultResponse(UPlayFabJsonObject* response) // [0x192e6f0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerCreateSharedGroupResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[94]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeConsumeItemResultResponse
	FServerConsumeItemResult decodeConsumeItemResultResponse(UPlayFabJsonObject* response) // [0x192e600] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerConsumeItemResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[95]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeBanUsersResultResponse
	FServerBanUsersResult decodeBanUsersResultResponse(UPlayFabJsonObject* response) // [0x185af40] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerBanUsersResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[96]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeAwardSteamAchievementResultResponse
	FServerAwardSteamAchievementResult decodeAwardSteamAchievementResultResponse(UPlayFabJsonObject* response) // [0x192e520] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerAwardSteamAchievementResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[97]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeAuthenticateSessionTicketResultResponse
	FServerAuthenticateSessionTicketResult decodeAuthenticateSessionTicketResultResponse(UPlayFabJsonObject* response) // [0x192e480] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerAuthenticateSessionTicketResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[98]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeAddSharedGroupMembersResultResponse
	FServerAddSharedGroupMembersResult decodeAddSharedGroupMembersResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerAddSharedGroupMembersResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[99]);
		return func(response);
	}
	// Function /Script/PlayFab.PlayFabServerModelDecoder.decodeAddPlayerTagResultResponse
	FServerAddPlayerTagResult decodeAddPlayerTagResultResponse(UPlayFabJsonObject* response) // [0x185add0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FServerAddPlayerTagResult (*FuncPtr)(UPlayFabJsonObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[100]);
		return func(response);
	}
};

/// Class /Script/PlayFab.PlayFabUtilities
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UPlayFabUtilities : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/PlayFab.PlayFabUtilities.setPlayFabSettings
	void setPlayFabSettings(FString GameTitleId, FString PlayFabSecretApiKey, FString ProductionUrl, FString PhotonRealtimeAppId, FString PhotonTurnbasedAppId, FString PhotonChatAppId) // [0x193ac40] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString, FString, FString, FString, FString, FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(GameTitleId, PlayFabSecretApiKey, ProductionUrl, PhotonRealtimeAppId, PhotonTurnbasedAppId, PhotonChatAppId);
	}
	// Function /Script/PlayFab.PlayFabUtilities.getPhotonAppId
	FString getPhotonAppId(bool Realtime, bool Chat, bool Turnbased) // [0x193aae0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FString (*FuncPtr)(bool, bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(Realtime, Chat, Turnbased);
	}
	// Function /Script/PlayFab.PlayFabUtilities.getErrorText
	FString getErrorText(int32_t code) // [0x193aa10] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef FString (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(code);
	}
};

#pragma pack(pop)


static_assert(sizeof(UPlayFabAdminAPI) == 0x0800); // 2048 bytes (0x000030 - 0x000800)
static_assert(sizeof(UPlayFabAdminModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabAuthenticationAPI) == 0x0110); // 272 bytes (0x000030 - 0x000110)
static_assert(sizeof(UPlayFabAuthenticationModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabClientAPI) == 0x0B00); // 2816 bytes (0x000030 - 0x000B00)
static_assert(sizeof(UPlayFabClientModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabCloudScriptAPI) == 0x01D0); // 464 bytes (0x000030 - 0x0001D0)
static_assert(sizeof(UPlayFabCloudScriptModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabDataAPI) == 0x0160); // 352 bytes (0x000030 - 0x000160)
static_assert(sizeof(UPlayFabDataModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabEconomyAPI) == 0x0280); // 640 bytes (0x000030 - 0x000280)
static_assert(sizeof(UPlayFabEconomyModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabEventsAPI) == 0x0110); // 272 bytes (0x000030 - 0x000110)
static_assert(sizeof(UPlayFabEventsModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabExperimentationAPI) == 0x01C0); // 448 bytes (0x000030 - 0x0001C0)
static_assert(sizeof(UPlayFabExperimentationModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabGroupsAPI) == 0x0280); // 640 bytes (0x000030 - 0x000280)
static_assert(sizeof(UPlayFabGroupsModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabInsightsAPI) == 0x0150); // 336 bytes (0x000030 - 0x000150)
static_assert(sizeof(UPlayFabInsightsModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabJsonObject) == 0x0038); // 56 bytes (0x000028 - 0x000038)
static_assert(sizeof(UPlayFabJsonValue) == 0x0038); // 56 bytes (0x000028 - 0x000038)
static_assert(sizeof(UPlayFabLocalizationAPI) == 0x0100); // 256 bytes (0x000030 - 0x000100)
static_assert(sizeof(UPlayFabLocalizationModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabMatchmakerAPI) == 0x0130); // 304 bytes (0x000030 - 0x000130)
static_assert(sizeof(UPlayFabMatchmakerModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabMultiplayerAPI) == 0x0590); // 1424 bytes (0x000030 - 0x000590)
static_assert(sizeof(UPlayFabMultiplayerModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabProfilesAPI) == 0x0160); // 352 bytes (0x000030 - 0x000160)
static_assert(sizeof(UPlayFabProfilesModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabServerAPI) == 0x0940); // 2368 bytes (0x000030 - 0x000940)
static_assert(sizeof(UPlayFabServerModelDecoder) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UPlayFabUtilities) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(FPlayFabError) == 0x0038); // 56 bytes (0x000000 - 0x000038)
static_assert(sizeof(FPlayFabBaseModel) == 0x0040); // 64 bytes (0x000000 - 0x000040)
static_assert(sizeof(FPlayFabResultCommon) == 0x0008); // 8 bytes (0x000000 - 0x000008)
static_assert(sizeof(FAdminEmptyResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FPlayFabRequestCommon) == 0x0008); // 8 bytes (0x000000 - 0x000008)
static_assert(sizeof(FAdminAbortTaskInstanceRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FAdminAddLocalizedNewsResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminAddLocalizedNewsRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FAdminAddNewsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminAddNewsRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FAdminAddPlayerTagResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminAddPlayerTagRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminModifyUserVirtualCurrencyResult) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminAddUserVirtualCurrencyRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FAdminBlankResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminAddVirtualCurrencyTypesRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminBanUsersResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminBanUsersRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FAdminCheckLimitedEditionItemAvailabilityResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminCheckLimitedEditionItemAvailabilityRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminCreateTaskResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminCreateActionsOnPlayerSegmentTaskRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FAdminCreateCloudScriptTaskRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FAdminCreateInsightsScheduledScalingTaskRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FAdminCreateOpenIdConnectionRequest) == 0x0058); // 88 bytes (0x000008 - 0x000058)
static_assert(sizeof(FAdminCreatePlayerSharedSecretResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminCreatePlayerSharedSecretRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminCreatePlayerStatisticDefinitionResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminCreatePlayerStatisticDefinitionRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminCreateSegmentResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminCreateSegmentRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminDeleteMasterPlayerAccountResult) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminDeleteMembershipSubscriptionResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminDeletePlayerResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminDeletePlayerSharedSecretResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminDeleteSegmentsResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminDeleteStoreResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminDeleteTitleResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminDeleteTitleDataOverrideResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminExportMasterPlayerDataResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetActionsOnPlayersInSegmentTaskInstanceResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetAllSegmentsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetCatalogItemsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetCloudScriptRevisionResult) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FAdminGetCloudScriptTaskInstanceResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetCloudScriptVersionsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetContentListResult) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FAdminGetContentUploadUrlResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetDataReportResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetMatchmakerGameInfoResult) == 0x00B8); // 184 bytes (0x000008 - 0x0000B8)
static_assert(sizeof(FAdminGetMatchmakerGameModesResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetPlayedTitleListResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetPlayerIdFromAuthTokenResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetPlayerProfileResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminGetPlayerSegmentsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetPlayerSharedSecretsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetPlayersInSegmentResult) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminGetPlayerStatisticDefinitionsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetPlayerStatisticVersionsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetPlayerTagsResult) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminGetPolicyResponse) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminGetPublisherDataResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminGetRandomResultTablesResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminGetSegmentsResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminGetStoreItemsResult) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FAdminGetTaskInstancesResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetTasksResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetTitleDataResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminLookupUserAccountInfoResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminGetUserBansResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetUserDataResult) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminGetUserInventoryResult) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FAdminGrantItemsToUsersResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminIncrementLimitedEditionItemAvailabilityResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminIncrementPlayerStatisticVersionResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminListOpenIdConnectionResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminListVirtualCurrencyTypesResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminModifyServerBuildResult) == 0x0088); // 136 bytes (0x000008 - 0x000088)
static_assert(sizeof(FAdminRefundPurchaseResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminRemovePlayerTagResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminResetCharacterStatisticsResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminResetPasswordResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminResetUserStatisticsResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminResolvePurchaseDisputeResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminRevokeAllBansForUserResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminRevokeBansResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminRevokeInventoryResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminRevokeInventoryItemsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminRunTaskResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminSendAccountRecoveryEmailResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminUpdateCatalogItemsResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminSetMembershipOverrideResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminSetPlayerSecretResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminSetPublishedRevisionResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminSetPublisherDataResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminUpdateStoreItemsResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminSetTitleDataResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminSetTitleDataAndOverridesResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminSetupPushNotificationResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminUpdateBansResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminUpdateCloudScriptResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminUpdatePlayerSharedSecretResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminUpdatePlayerStatisticDefinitionResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminUpdatePolicyResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminUpdateRandomResultTablesResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminUpdateSegmentResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminUpdateUserDataResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminUpdateUserTitleDisplayNameResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminDeleteContentRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminDeleteMasterPlayerAccountRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminDeleteMembershipSubscriptionRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FAdminDeleteOpenIdConnectionRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminDeletePlayerRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminDeletePlayerSharedSecretRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminDeleteSegmentRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminDeleteStoreRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminDeleteTaskRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminDeleteTitleRequest) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminDeleteTitleDataOverrideRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminExportMasterPlayerDataRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetTaskInstanceRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetAllSegmentsRequest) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminGetCatalogItemsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetCloudScriptRevisionRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminGetCloudScriptVersionsRequest) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminGetContentListRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetContentUploadUrlRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminGetDataReportRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminGetMatchmakerGameInfoRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetMatchmakerGameModesRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetPlayedTitleListRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetPlayerIdFromAuthTokenRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FAdminGetPlayerProfileRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminGetPlayersSegmentsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FAdminGetPlayerSharedSecretsRequest) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminGetPlayersInSegmentRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FAdminGetPlayerStatisticDefinitionsRequest) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminGetPlayerStatisticVersionsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FAdminGetPlayerTagsRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminGetPolicyRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetPublisherDataRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetRandomResultTablesRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetSegmentsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetStoreItemsRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminGetTaskInstancesRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FAdminGetTasksRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminGetTitleDataRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminLookupUserAccountInfoRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FAdminGetUserBansRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminGetUserDataRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminGetUserInventoryRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FAdminGrantItemsToUsersRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminIncrementLimitedEditionItemAvailabilityRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FAdminIncrementPlayerStatisticVersionRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FAdminListOpenIdConnectionRequest) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminListVirtualCurrencyTypesRequest) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FAdminModifyServerBuildRequest) == 0x0078); // 120 bytes (0x000008 - 0x000078)
static_assert(sizeof(FAdminRefundPurchaseRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FAdminRemovePlayerTagRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminRemoveVirtualCurrencyTypesRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminResetCharacterStatisticsRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminResetPasswordRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminResetUserStatisticsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FAdminResolvePurchaseDisputeRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FAdminRevokeAllBansForUserRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminRevokeBansRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminRevokeInventoryItemRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FAdminRevokeInventoryItemsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminRunTaskRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminSendAccountRecoveryEmailRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminUpdateCatalogItemsRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FAdminSetMembershipOverrideRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FAdminSetPlayerSecretRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminSetPublishedRevisionRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminSetPublisherDataRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminUpdateStoreItemsRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FAdminSetTitleDataRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminSetTitleDataAndOverridesRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminSetupPushNotificationRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FAdminSubtractUserVirtualCurrencyRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FAdminUpdateBansRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAdminUpdateCloudScriptRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FAdminUpdateOpenIdConnectionRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FAdminUpdatePlayerSharedSecretRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminUpdatePlayerStatisticDefinitionRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FAdminUpdatePolicyRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FAdminUpdateRandomResultTablesRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAdminUpdateSegmentRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FAdminUpdateTaskRequest) == 0x0060); // 96 bytes (0x000008 - 0x000060)
static_assert(sizeof(FAdminUpdateUserDataRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FAdminUpdateUserInternalDataRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FAdminUpdateUserTitleDisplayNameRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAuthenticationGetEntityTokenResponse) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAuthenticationValidateEntityTokenResponse) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FAuthenticationGetEntityTokenRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FAuthenticationValidateEntityTokenRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientAcceptTradeResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientAcceptTradeRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FClientAddFriendResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientAddFriendRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FClientAddGenericIDResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientAddGenericIDRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientAddOrUpdateContactEmailResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientAddOrUpdateContactEmailRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientAddSharedGroupMembersResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientAddSharedGroupMembersRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientAddUsernamePasswordResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientAddUsernamePasswordRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FClientModifyUserVirtualCurrencyResult) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientAddUserVirtualCurrencyRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientAndroidDevicePushNotificationRegistrationResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientAndroidDevicePushNotificationRegistrationRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientAttributeInstallResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientAttributeInstallRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientCancelTradeResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientCancelTradeRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientConfirmPurchaseResult) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FClientConfirmPurchaseRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientConsumeItemResult) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientConsumeItemRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FClientConsumeMicrosoftStoreEntitlementsResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientConsumeMicrosoftStoreEntitlementsRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientConsumePS5EntitlementsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientConsumePS5EntitlementsRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientConsumePSNEntitlementsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientConsumePSNEntitlementsRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientConsumeXboxEntitlementsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientConsumeXboxEntitlementsRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientCreateSharedGroupResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientCreateSharedGroupRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientExecuteCloudScriptResult) == 0x0060); // 96 bytes (0x000008 - 0x000060)
static_assert(sizeof(FClientGetAccountInfoResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientGetAdPlacementsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientListUsersCharactersResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetCatalogItemsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetCharacterDataResult) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientGetCharacterInventoryResult) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FClientGetCharacterLeaderboardResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetCharacterStatisticsResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientGetContentDownloadUrlResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientCurrentGamesResult) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientGetLeaderboardResult) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientGetFriendLeaderboardAroundPlayerResult) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientGetFriendsListResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGameServerRegionsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetLeaderboardAroundCharacterResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetLeaderboardAroundPlayerResult) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientGetLeaderboardForUsersCharactersResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPaymentTokenResult) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientGetPhotonAuthenticationTokenResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayerCombinedInfoResult) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientGetPlayerProfileResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientGetPlayerSegmentsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayerStatisticsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayerStatisticVersionsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayerTagsResult) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientGetPlayerTradesResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientGetPlayFabIDsFromFacebookIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromGameCenterIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromGenericIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromGoogleIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromKongregateIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromPSNAccountIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromSteamIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromTwitchIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromXboxLiveIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPublisherDataResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientGetPurchaseResult) == 0x0058); // 88 bytes (0x000008 - 0x000058)
static_assert(sizeof(FClientGetSharedGroupDataResult) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientGetStoreItemsResult) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FClientGetTimeResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetTitleDataResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientGetTitleNewsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetTitlePublicKeyResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetTradeStatusResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientGetUserDataResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetUserInventoryResult) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientGrantCharacterToUserResult) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientLinkAndroidDeviceIDResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientEmptyResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientLinkCustomIDResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientLinkFacebookAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientLinkFacebookInstantGamesIdResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientLinkGameCenterAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientLinkGoogleAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientLinkIOSDeviceIDResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientLinkKongregateAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientLinkNintendoSwitchDeviceIdResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientLinkPSNAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientLinkSteamAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientLinkTwitchAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientLinkXboxAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FPlayFabLoginResultCommon) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientLoginResult) == 0x0068); // 104 bytes (0x000010 - 0x000068)
static_assert(sizeof(FClientMatchmakeResult) == 0x0080); // 128 bytes (0x000008 - 0x000080)
static_assert(sizeof(FClientOpenTradeResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientPayForPurchaseResult) == 0x0078); // 120 bytes (0x000008 - 0x000078)
static_assert(sizeof(FClientPurchaseItemResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientRedeemCouponResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientEmptyResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientRegisterForIOSPushNotificationResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientRegisterPlayFabUserResult) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FClientRemoveContactEmailResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientRemoveFriendResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientRemoveGenericIDResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientRemoveSharedGroupMembersResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientReportAdActivityResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientReportPlayerClientResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientRestoreIOSPurchasesResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientRewardAdActivityResult) == 0x0058); // 88 bytes (0x000008 - 0x000058)
static_assert(sizeof(FClientSendAccountRecoveryEmailResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientSetFriendTagsResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientSetPlayerSecretResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientStartPurchaseResult) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FClientUnlinkAndroidDeviceIDResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUnlinkCustomIDResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUnlinkFacebookAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUnlinkFacebookInstantGamesIdResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUnlinkGameCenterAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUnlinkGoogleAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUnlinkIOSDeviceIDResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUnlinkKongregateAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUnlinkNintendoSwitchDeviceIdResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUnlinkPSNAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUnlinkSteamAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUnlinkTwitchAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUnlinkXboxAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUnlockContainerItemResult) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FClientUpdateCharacterDataResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientUpdateCharacterStatisticsResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUpdatePlayerStatisticsResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUpdateSharedGroupDataResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientUpdateUserDataResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientUpdateUserTitleDisplayNameResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientValidateAmazonReceiptResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientValidateGooglePlayPurchaseResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientValidateIOSReceiptResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientValidateWindowsReceiptResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientWriteEventResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientExecuteCloudScriptRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientGetAccountInfoRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FClientGetAdPlacementsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientListUsersCharactersRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetCatalogItemsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetCharacterDataRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FClientGetCharacterInventoryRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientGetCharacterLeaderboardRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientGetCharacterStatisticsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetContentDownloadUrlRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientCurrentGamesRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FClientGetFriendLeaderboardRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FClientGetFriendLeaderboardAroundPlayerRequest) == 0x0058); // 88 bytes (0x000008 - 0x000058)
static_assert(sizeof(FClientGetFriendsListRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientGameServerRegionsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetLeaderboardRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FClientGetLeaderboardAroundCharacterRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FClientGetLeaderboardAroundPlayerRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FClientGetLeaderboardForUsersCharactersRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPaymentTokenRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPhotonAuthenticationTokenRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayerCombinedInfoRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientGetPlayerProfileRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientGetPlayerSegmentsRequest) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientGetPlayerStatisticsRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientGetPlayerStatisticVersionsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientGetPlayerTagsRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientGetPlayerTradesRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientGetPlayFabIDsFromFacebookIDsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromFacebookInstantGamesIdsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromGameCenterIDsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromGenericIDsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromGoogleIDsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromKongregateIDsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromPSNAccountIDsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientGetPlayFabIDsFromSteamIDsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromTwitchIDsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPlayFabIDsFromXboxLiveIDsRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientGetPublisherDataRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetPurchaseRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetSharedGroupDataRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientGetStoreItemsRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientGetTimeRequest) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FClientGetTitleDataRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientGetTitleNewsRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientGetTitlePublicKeyRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientGetTradeStatusRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientGetUserDataRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientGetUserInventoryRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientGrantCharacterToUserRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FClientLinkAndroidDeviceIDRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FClientLinkAppleRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientLinkCustomIDRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientLinkFacebookAccountRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientLinkFacebookInstantGamesIdRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientLinkGameCenterAccountRequest) == 0x0068); // 104 bytes (0x000008 - 0x000068)
static_assert(sizeof(FClientLinkGoogleAccountRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientLinkIOSDeviceIDRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FClientLinkKongregateAccountRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FClientLinkNintendoServiceAccountRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientLinkNintendoSwitchDeviceIdRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientLinkOpenIdConnectRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FClientLinkPSNAccountRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FClientLinkSteamAccountRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientLinkTwitchAccountRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientLinkXboxAccountRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientLoginWithAndroidDeviceIDRequest) == 0x0070); // 112 bytes (0x000008 - 0x000070)
static_assert(sizeof(FClientLoginWithAppleRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FClientLoginWithCustomIDRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FClientLoginWithEmailAddressRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FClientLoginWithFacebookRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FClientLoginWithFacebookInstantGamesIdRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FClientLoginWithGameCenterRequest) == 0x0090); // 144 bytes (0x000008 - 0x000090)
static_assert(sizeof(FClientLoginWithGoogleAccountRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FClientLoginWithIOSDeviceIDRequest) == 0x0070); // 112 bytes (0x000008 - 0x000070)
static_assert(sizeof(FClientLoginWithKongregateRequest) == 0x0060); // 96 bytes (0x000008 - 0x000060)
static_assert(sizeof(FClientLoginWithNintendoServiceAccountRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FClientLoginWithNintendoSwitchDeviceIdRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FClientLoginWithOpenIdConnectRequest) == 0x0060); // 96 bytes (0x000008 - 0x000060)
static_assert(sizeof(FClientLoginWithPlayFabRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FClientLoginWithPSNRequest) == 0x0068); // 104 bytes (0x000008 - 0x000068)
static_assert(sizeof(FClientLoginWithSteamRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FClientLoginWithTwitchRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FClientLoginWithXboxRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FClientMatchmakeRequest) == 0x0070); // 112 bytes (0x000008 - 0x000070)
static_assert(sizeof(FClientOpenTradeRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FClientPayForPurchaseRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FClientPurchaseItemRequest) == 0x0068); // 104 bytes (0x000008 - 0x000068)
static_assert(sizeof(FClientRedeemCouponRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FClientRefreshPSNAuthTokenRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientRegisterForIOSPushNotificationRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientRegisterPlayFabUserRequest) == 0x0080); // 128 bytes (0x000008 - 0x000080)
static_assert(sizeof(FClientRemoveContactEmailRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientRemoveFriendRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientRemoveGenericIDRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientRemoveSharedGroupMembersRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientReportAdActivityRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FClientDeviceInfoRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientReportPlayerClientRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientRestoreIOSPurchasesRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientRewardAdActivityRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientSendAccountRecoveryEmailRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientSetFriendTagsRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientSetPlayerSecretRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientStartPurchaseRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FClientSubtractUserVirtualCurrencyRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientUnlinkAndroidDeviceIDRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientUnlinkAppleRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientUnlinkCustomIDRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientUnlinkFacebookAccountRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientUnlinkFacebookInstantGamesIdRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientUnlinkGameCenterAccountRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientUnlinkGoogleAccountRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientUnlinkIOSDeviceIDRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientUnlinkKongregateAccountRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientUnlinkNintendoServiceAccountRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientUnlinkNintendoSwitchDeviceIdRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientUnlinkOpenIdConnectRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientUnlinkPSNAccountRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientUnlinkSteamAccountRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientUnlinkTwitchAccountRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientUnlinkXboxAccountRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FClientUnlockContainerInstanceRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FClientUnlockContainerItemRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FClientUpdateAvatarUrlRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FClientUpdateCharacterDataRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FClientUpdateCharacterStatisticsRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FClientUpdatePlayerStatisticsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientUpdateSharedGroupDataRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FClientUpdateUserDataRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FClientUpdateUserTitleDisplayNameRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FClientValidateAmazonReceiptRequest) == 0x0058); // 88 bytes (0x000008 - 0x000058)
static_assert(sizeof(FClientValidateGooglePlayPurchaseRequest) == 0x0058); // 88 bytes (0x000008 - 0x000058)
static_assert(sizeof(FClientValidateIOSReceiptRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FClientValidateWindowsReceiptRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FClientWriteClientCharacterEventRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FClientWriteClientPlayerEventRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FClientWriteTitleEventRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FCloudScriptExecuteCloudScriptResult) == 0x0060); // 96 bytes (0x000008 - 0x000060)
static_assert(sizeof(FCloudScriptExecuteFunctionResult) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FCloudScriptGetFunctionResult) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FCloudScriptListFunctionsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FCloudScriptListHttpFunctionsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FCloudScriptListQueuedFunctionsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FCloudScriptEmptyResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FCloudScriptExecuteEntityCloudScriptRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FCloudScriptExecuteFunctionRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FCloudScriptGetFunctionRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FCloudScriptListFunctionsRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FCloudScriptPostFunctionResultForEntityTriggeredActionRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FCloudScriptPostFunctionResultForFunctionExecutionRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FCloudScriptPostFunctionResultForPlayerTriggeredActionRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FCloudScriptPostFunctionResultForScheduledTaskRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FCloudScriptRegisterHttpFunctionRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FCloudScriptRegisterQueuedFunctionRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FCloudScriptUnregisterFunctionRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FDataAbortFileUploadsResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FDataAbortFileUploadsRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FDataDeleteFilesResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FDataFinalizeFileUploadsResponse) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FDataGetFilesResponse) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FDataGetObjectsResponse) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FDataInitiateFileUploadsResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FDataSetObjectsResponse) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FDataDeleteFilesRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FDataFinalizeFileUploadsRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FDataGetFilesRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FDataGetObjectsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FDataInitiateFileUploadsRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FDataSetObjectsRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FEconomyCreateDraftItemResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FEconomyCreateDraftItemRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FEconomyCreateUploadUrlsResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FEconomyCreateUploadUrlsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FEconomyDeleteEntityItemReviewsResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FEconomyDeleteItemResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FEconomyGetCatalogConfigResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FEconomyGetDraftItemResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FEconomyGetDraftItemsResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FEconomyGetEntityDraftItemsResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FEconomyGetEntityItemReviewResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FEconomyGetItemResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FEconomyGetItemModerationStateResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FEconomyGetItemPublishStatusResponse) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FEconomyGetItemReviewsResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FEconomyGetItemReviewSummaryResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FEconomyGetItemsResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FEconomyPublishDraftItemResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FEconomyReportItemResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FEconomyReportItemReviewResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FEconomyReviewItemResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FEconomySearchItemsResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FEconomySetItemModerationStateResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FEconomySubmitItemReviewVoteResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FEconomyTakedownItemReviewsResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FEconomyUpdateCatalogConfigResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FEconomyUpdateDraftItemResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FEconomyDeleteEntityItemReviewsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FEconomyDeleteItemRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FEconomyGetCatalogConfigRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FEconomyGetDraftItemRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FEconomyGetDraftItemsRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FEconomyGetEntityDraftItemsRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FEconomyGetEntityItemReviewRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FEconomyGetItemRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FEconomyGetItemModerationStateRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FEconomyGetItemPublishStatusRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FEconomyGetItemReviewsRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FEconomyGetItemReviewSummaryRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FEconomyGetItemsRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FEconomyPublishDraftItemRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FEconomyReportItemRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FEconomyReportItemReviewRequest) == 0x0058); // 88 bytes (0x000008 - 0x000058)
static_assert(sizeof(FEconomyReviewItemRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FEconomySearchItemsRequest) == 0x0070); // 112 bytes (0x000008 - 0x000070)
static_assert(sizeof(FEconomySetItemModerationStateRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FEconomySubmitItemReviewVoteRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FEconomyTakedownItemReviewsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FEconomyUpdateCatalogConfigRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FEconomyUpdateDraftItemRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FEventsWriteEventsResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FEventsWriteEventsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FExperimentationCreateExclusionGroupResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FExperimentationCreateExclusionGroupRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FExperimentationCreateExperimentResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FExperimentationCreateExperimentRequest) == 0x0098); // 152 bytes (0x000008 - 0x000098)
static_assert(sizeof(FExperimentationEmptyResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FExperimentationGetExclusionGroupsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FExperimentationGetExclusionGroupTrafficResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FExperimentationGetExperimentsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FExperimentationGetLatestScorecardResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FExperimentationGetTreatmentAssignmentResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FExperimentationDeleteExclusionGroupRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FExperimentationDeleteExperimentRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FExperimentationGetExclusionGroupsRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FExperimentationGetExclusionGroupTrafficRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FExperimentationGetExperimentsRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FExperimentationGetLatestScorecardRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FExperimentationGetTreatmentAssignmentRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FExperimentationStartExperimentRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FExperimentationStopExperimentRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FExperimentationUpdateExclusionGroupRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FExperimentationUpdateExperimentRequest) == 0x00A8); // 168 bytes (0x000008 - 0x0000A8)
static_assert(sizeof(FGroupsEmptyResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FGroupsAcceptGroupApplicationRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FGroupsAcceptGroupInvitationRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FGroupsAddMembersRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FGroupsApplyToGroupResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FGroupsApplyToGroupRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FGroupsBlockEntityRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FGroupsChangeMemberRoleRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FGroupsCreateGroupResponse) == 0x0060); // 96 bytes (0x000008 - 0x000060)
static_assert(sizeof(FGroupsCreateGroupRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FGroupsCreateGroupRoleResponse) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FGroupsCreateGroupRoleRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FGroupsGetGroupResponse) == 0x0060); // 96 bytes (0x000008 - 0x000060)
static_assert(sizeof(FGroupsInviteToGroupResponse) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FGroupsIsMemberResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FGroupsListGroupApplicationsResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FGroupsListGroupBlocksResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FGroupsListGroupInvitationsResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FGroupsListGroupMembersResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FGroupsListMembershipResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FGroupsListMembershipOpportunitiesResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FGroupsUpdateGroupResponse) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FGroupsUpdateGroupRoleResponse) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FGroupsDeleteGroupRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FGroupsDeleteRoleRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FGroupsGetGroupRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FGroupsInviteToGroupRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FGroupsIsMemberRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FGroupsListGroupApplicationsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FGroupsListGroupBlocksRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FGroupsListGroupInvitationsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FGroupsListGroupMembersRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FGroupsListMembershipRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FGroupsListMembershipOpportunitiesRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FGroupsRemoveGroupApplicationRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FGroupsRemoveGroupInvitationRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FGroupsRemoveMembersRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FGroupsUnblockEntityRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FGroupsUpdateGroupRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FGroupsUpdateGroupRoleRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FInsightsInsightsGetDetailsResponse) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FInsightsInsightsGetLimitsResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FInsightsInsightsGetOperationStatusResponse) == 0x0080); // 128 bytes (0x000008 - 0x000080)
static_assert(sizeof(FInsightsInsightsGetPendingOperationsResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FInsightsInsightsOperationResponse) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FInsightsInsightsEmptyRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FInsightsInsightsGetOperationStatusRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FInsightsInsightsGetPendingOperationsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FInsightsInsightsSetPerformanceRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FInsightsInsightsSetStorageRetentionRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FLocalizationGetLanguageListResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FLocalizationGetLanguageListRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FMatchmakerAuthUserResponse) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMatchmakerAuthUserRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FMatchmakerPlayerJoinedResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FMatchmakerPlayerLeftResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FMatchmakerUserInfoResponse) == 0x0070); // 112 bytes (0x000008 - 0x000070)
static_assert(sizeof(FMatchmakerPlayerJoinedRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMatchmakerPlayerLeftRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMatchmakerUserInfoRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerCancelAllMatchmakingTicketsForPlayerResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerCancelAllServerBackfillTicketsForPlayerResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerCancelMatchmakingTicketResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FMultiplayerCancelMatchmakingTicketRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerCancelServerBackfillTicketResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FMultiplayerCancelServerBackfillTicketRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerBuildAliasDetailsResponse) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FMultiplayerCreateBuildAliasRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerCreateBuildWithCustomContainerResponse) == 0x00E8); // 232 bytes (0x000008 - 0x0000E8)
static_assert(sizeof(FMultiplayerCreateBuildWithCustomContainerRequest) == 0x00B0); // 176 bytes (0x000008 - 0x0000B0)
static_assert(sizeof(FMultiplayerCreateBuildWithManagedContainerResponse) == 0x00F0); // 240 bytes (0x000008 - 0x0000F0)
static_assert(sizeof(FMultiplayerCreateBuildWithManagedContainerRequest) == 0x00C0); // 192 bytes (0x000008 - 0x0000C0)
static_assert(sizeof(FMultiplayerCreateBuildWithProcessBasedServerResponse) == 0x00F8); // 248 bytes (0x000008 - 0x0000F8)
static_assert(sizeof(FMultiplayerCreateBuildWithProcessBasedServerRequest) == 0x00C8); // 200 bytes (0x000008 - 0x0000C8)
static_assert(sizeof(FMultiplayerCreateLobbyResult) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerCreateLobbyRequest) == 0x0058); // 88 bytes (0x000008 - 0x000058)
static_assert(sizeof(FMultiplayerCreateMatchmakingTicketResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FMultiplayerCreateMatchmakingTicketRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FMultiplayerCreateRemoteUserResponse) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FMultiplayerCreateRemoteUserRequest) == 0x0060); // 96 bytes (0x000008 - 0x000060)
static_assert(sizeof(FMultiplayerCreateServerBackfillTicketResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FMultiplayerCreateServerBackfillTicketRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FMultiplayerCreateServerMatchmakingTicketRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest) == 0x0060); // 96 bytes (0x000008 - 0x000060)
static_assert(sizeof(FMultiplayerEmptyResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FMultiplayerLobbyEmptyResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FMultiplayerEnableMultiplayerServersForTitleResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FMultiplayerFindFriendLobbiesResult) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerFindLobbiesResult) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerGetAssetDownloadUrlResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerGetAssetUploadUrlResponse) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerGetBuildResponse) == 0x0100); // 256 bytes (0x000008 - 0x000100)
static_assert(sizeof(FMultiplayerGetContainerRegistryCredentialsResponse) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FMultiplayerGetLobbyResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FMultiplayerGetMatchResult) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FMultiplayerGetMatchmakingTicketResult) == 0x00A0); // 160 bytes (0x000008 - 0x0000A0)
static_assert(sizeof(FMultiplayerGetMultiplayerServerDetailsResponse) == 0x00B8); // 184 bytes (0x000008 - 0x0000B8)
static_assert(sizeof(FMultiplayerGetMultiplayerServerLogsResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FMultiplayerGetQueueStatisticsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FMultiplayerGetRemoteLoginEndpointResponse) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerGetServerBackfillTicketResult) == 0x0088); // 136 bytes (0x000008 - 0x000088)
static_assert(sizeof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FMultiplayerGetTitleMultiplayerServersQuotasResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FMultiplayerJoinLobbyResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FMultiplayerJoinMatchmakingTicketResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FMultiplayerListMultiplayerServersResponse) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerListAssetSummariesResponse) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerListBuildAliasesResponse) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerListBuildSummariesResponse) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerListCertificateSummariesResponse) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerListContainerImagesResponse) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerListContainerImageTagsResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FMultiplayerListMatchmakingTicketsForPlayerResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FMultiplayerListPartyQosServersResponse) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerListQosServersForTitleResponse) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerListServerBackfillTicketsForPlayerResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FMultiplayerListTitleMultiplayerServersQuotaChangesResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FMultiplayerListVirtualMachineSummariesResponse) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerRequestMultiplayerServerResponse) == 0x00B8); // 184 bytes (0x000008 - 0x0000B8)
static_assert(sizeof(FMultiplayerRolloverContainerRegistryCredentialsResponse) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FMultiplayerSubscribeToLobbyResourceResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FMultiplayerDeleteAssetRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerDeleteBuildRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerDeleteBuildAliasRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerDeleteBuildRegionRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerDeleteCertificateRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerDeleteContainerImageRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerDeleteLobbyRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerDeleteRemoteUserRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FMultiplayerEnableMultiplayerServersForTitleRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FMultiplayerFindFriendLobbiesRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FMultiplayerFindLobbiesRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FMultiplayerGetAssetDownloadUrlRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerGetAssetUploadUrlRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerGetBuildRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerGetBuildAliasRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerGetContainerRegistryCredentialsRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FMultiplayerGetLobbyRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerGetMatchRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FMultiplayerGetMatchmakingTicketRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FMultiplayerGetMultiplayerServerDetailsRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FMultiplayerGetMultiplayerServerLogsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerGetQueueStatisticsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerGetRemoteLoginEndpointRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FMultiplayerGetServerBackfillTicketRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerGetTitleMultiplayerServersQuotasRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FMultiplayerInviteToLobbyRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerJoinArrangedLobbyRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FMultiplayerJoinLobbyRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerJoinMatchmakingTicketRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FMultiplayerLeaveLobbyRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerListMultiplayerServersRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FMultiplayerListAssetSummariesRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerListBuildAliasesRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerListBuildSummariesRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerListCertificateSummariesRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerListContainerImagesRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerListContainerImageTagsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerListMatchmakingTicketsForPlayerRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerListPartyQosServersRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FMultiplayerListQosServersForTitleRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FMultiplayerListServerBackfillTicketsForPlayerRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerListTitleMultiplayerServersQuotaChangesRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FMultiplayerListVirtualMachineSummariesRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FMultiplayerRemoveMemberFromLobbyRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerRequestMultiplayerServerRequest) == 0x0068); // 104 bytes (0x000008 - 0x000068)
static_assert(sizeof(FMultiplayerRolloverContainerRegistryCredentialsRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FMultiplayerShutdownMultiplayerServerRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FMultiplayerSubscribeToLobbyResourceRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FMultiplayerUnsubscribeFromLobbyResourceRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FMultiplayerUntagContainerImageRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerUpdateBuildAliasRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FMultiplayerUpdateBuildNameRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerUpdateBuildRegionRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FMultiplayerUpdateBuildRegionsRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FMultiplayerUpdateLobbyRequest) == 0x0090); // 144 bytes (0x000008 - 0x000090)
static_assert(sizeof(FMultiplayerUploadCertificateRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FProfilesGetGlobalPolicyResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FProfilesGetEntityProfileResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FProfilesGetEntityProfilesResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FProfilesSetGlobalPolicyResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FProfilesSetProfileLanguageResponse) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FProfilesSetEntityProfilePolicyResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FProfilesGetGlobalPolicyRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FProfilesGetEntityProfileRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FProfilesGetEntityProfilesRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FProfilesGetTitlePlayersFromMasterPlayerAccountIdsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FProfilesSetGlobalPolicyRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FProfilesSetProfileLanguageRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FProfilesSetEntityProfilePolicyRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerModifyCharacterVirtualCurrencyResult) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerAddCharacterVirtualCurrencyRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FServerEmptyResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerAddFriendRequest) == 0x0058); // 88 bytes (0x000008 - 0x000058)
static_assert(sizeof(FServerEmptyResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerAddGenericIDRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerAddPlayerTagResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerAddPlayerTagRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerAddSharedGroupMembersResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerAddSharedGroupMembersRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerModifyUserVirtualCurrencyResult) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerAddUserVirtualCurrencyRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerAuthenticateSessionTicketResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerAuthenticateSessionTicketRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerAwardSteamAchievementResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerAwardSteamAchievementRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerBanUsersResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerBanUsersRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerConsumeItemResult) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerConsumeItemRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FServerCreateSharedGroupResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerCreateSharedGroupRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerDeleteCharacterFromUserResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerDeletePlayerResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerDeletePushNotificationTemplateResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerDeregisterGameResponse) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerEvaluateRandomResultTableResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerExecuteCloudScriptResult) == 0x0060); // 96 bytes (0x000008 - 0x000060)
static_assert(sizeof(FServerGetAllSegmentsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerListUsersCharactersResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetCatalogItemsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetCharacterDataResult) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerGetCharacterInventoryResult) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FServerGetCharacterLeaderboardResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetCharacterStatisticsResult) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerGetContentDownloadUrlResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetLeaderboardResult) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerGetFriendsListResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetLeaderboardAroundCharacterResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetLeaderboardAroundUserResult) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerGetLeaderboardForUsersCharactersResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPlayerCombinedInfoResult) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerGetPlayerProfileResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FServerGetPlayerSegmentsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPlayersInSegmentResult) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerGetPlayerStatisticsResult) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerGetPlayerStatisticVersionsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPlayerTagsResult) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerGetPlayFabIDsFromFacebookIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPlayFabIDsFromGenericIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPlayFabIDsFromPSNAccountIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPlayFabIDsFromSteamIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPlayFabIDsFromXboxLiveIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPublisherDataResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FServerGetRandomResultTablesResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FServerGetServerCustomIDsFromPlayFabIDsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetSharedGroupDataResult) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerGetStoreItemsResult) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FServerGetTimeResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetTitleDataResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FServerGetTitleNewsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetUserAccountInfoResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FServerGetUserBansResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetUserDataResult) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerGetUserInventoryResult) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerGrantCharacterToUserResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGrantItemsToCharacterResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGrantItemsToUserResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGrantItemsToUsersResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerLinkPSNAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerLinkServerCustomIdResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerLinkXboxAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerServerLoginResult) == 0x0068); // 104 bytes (0x000010 - 0x000068)
static_assert(sizeof(FServerModifyItemUsesResult) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerMoveItemToCharacterFromCharacterResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerMoveItemToCharacterFromUserResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerMoveItemToUserFromCharacterResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerNotifyMatchmakerPlayerLeftResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FServerRedeemCouponResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerRedeemMatchmakerTicketResult) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerRefreshGameServerInstanceHeartbeatResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerRegisterGameResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerRemovePlayerTagResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerRemoveSharedGroupMembersResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerReportPlayerServerResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FServerRevokeAllBansForUserResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerRevokeBansResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerRevokeInventoryResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerRevokeInventoryItemsResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerSavePushNotificationTemplateResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerSendCustomAccountRecoveryEmailResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerSendEmailFromTemplateResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerSendPushNotificationResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerSetGameServerInstanceDataResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerSetGameServerInstanceStateResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerSetGameServerInstanceTagsResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerSetPlayerSecretResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerSetPublisherDataResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerSetTitleDataResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerUnlinkPSNAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerUnlinkServerCustomIdResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerUnlinkXboxAccountResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerUnlockContainerItemResult) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FServerUpdateBansResult) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerUpdateCharacterDataResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FServerUpdateCharacterStatisticsResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerUpdatePlayerStatisticsResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerUpdateSharedGroupDataResult) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerUpdateUserDataResult) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FServerWriteEventResponse) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerDeleteCharacterFromUserRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerDeletePlayerRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerDeletePushNotificationTemplateRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerDeleteSharedGroupRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerDeregisterGameRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerEvaluateRandomResultTableRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerExecuteCloudScriptServerRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FServerGetAllSegmentsRequest) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerListUsersCharactersRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetCatalogItemsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetCharacterDataRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FServerGetCharacterInventoryRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FServerGetCharacterLeaderboardRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerGetCharacterStatisticsRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerGetContentDownloadUrlRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerGetFriendLeaderboardRequest) == 0x0060); // 96 bytes (0x000008 - 0x000060)
static_assert(sizeof(FServerGetFriendsListRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FServerGetLeaderboardRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FServerGetLeaderboardAroundCharacterRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FServerGetLeaderboardAroundUserRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FServerGetLeaderboardForUsersCharactersRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerGetPlayerCombinedInfoRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerGetPlayerProfileRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerGetPlayersSegmentsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerGetPlayersInSegmentRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerGetPlayerStatisticsRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FServerGetPlayerStatisticVersionsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerGetPlayerTagsRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerGetPlayFabIDsFromFacebookIDsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPlayFabIDsFromFacebookInstantGamesIdsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPlayFabIDsFromGenericIDsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPlayFabIDsFromPSNAccountIDsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerGetPlayFabIDsFromSteamIDsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetPlayFabIDsFromXboxLiveIDsRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerGetPublisherDataRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetRandomResultTablesRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerGetServerCustomIDsFromPlayFabIDsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetSharedGroupDataRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerGetStoreItemsServerRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FServerGetTimeRequest) == 0x0008); // 8 bytes (0x000008 - 0x000008)
static_assert(sizeof(FServerGetTitleDataRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerGetTitleNewsRequest) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FServerGetUserAccountInfoRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetUserBansRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerGetUserDataRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerGetUserInventoryRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerGrantCharacterToUserRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FServerGrantItemsToCharacterRequest) == 0x0060); // 96 bytes (0x000008 - 0x000060)
static_assert(sizeof(FServerGrantItemsToUserRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FServerGrantItemsToUsersRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerLinkPSNAccountRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FServerLinkServerCustomIdRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerLinkXboxAccountRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerLoginWithServerCustomIdRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FServerLoginWithSteamIdRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerLoginWithXboxRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerLoginWithXboxIdRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FServerModifyItemUsesRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerMoveItemToCharacterFromCharacterRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FServerMoveItemToCharacterFromUserRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerMoveItemToUserFromCharacterRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerNotifyMatchmakerPlayerLeftRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerRedeemCouponRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FServerRedeemMatchmakerTicketRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerRefreshGameServerInstanceHeartbeatRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerRegisterGameRequest) == 0x0090); // 144 bytes (0x000008 - 0x000090)
static_assert(sizeof(FServerRemoveFriendRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerRemoveGenericIDRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerRemovePlayerTagRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerRemoveSharedGroupMembersRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerReportPlayerServerRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FServerRevokeAllBansForUserRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerRevokeBansRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerRevokeInventoryItemRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerRevokeInventoryItemsRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerSavePushNotificationTemplateRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FServerSendCustomAccountRecoveryEmailRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FServerSendEmailFromTemplateRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerSendPushNotificationRequest) == 0x0068); // 104 bytes (0x000008 - 0x000068)
static_assert(sizeof(FServerSendPushNotificationFromTemplateRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerSetFriendTagsRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerSetGameServerInstanceDataRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerSetGameServerInstanceStateRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerSetGameServerInstanceTagsRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerSetPlayerSecretRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerSetPublisherDataRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerSetTitleDataRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerSubtractCharacterVirtualCurrencyRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FServerSubtractUserVirtualCurrencyRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerUnlinkPSNAccountRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerUnlinkServerCustomIdRequest) == 0x0030); // 48 bytes (0x000008 - 0x000030)
static_assert(sizeof(FServerUnlinkXboxAccountRequest) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FServerUnlockContainerInstanceRequest) == 0x0060); // 96 bytes (0x000008 - 0x000060)
static_assert(sizeof(FServerUnlockContainerItemRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FServerUpdateAvatarUrlRequest) == 0x0028); // 40 bytes (0x000008 - 0x000028)
static_assert(sizeof(FServerUpdateBansRequest) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FServerUpdateCharacterDataRequest) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FServerUpdateCharacterStatisticsRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerUpdatePlayerStatisticsRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerUpdateSharedGroupDataRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FServerUpdateUserDataRequest) == 0x0040); // 64 bytes (0x000008 - 0x000040)
static_assert(sizeof(FServerUpdateUserInternalDataRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FServerUpdateUserInventoryItemDataRequest) == 0x0058); // 88 bytes (0x000008 - 0x000058)
static_assert(sizeof(FServerWriteServerCharacterEventRequest) == 0x0058); // 88 bytes (0x000008 - 0x000058)
static_assert(sizeof(FServerWriteServerPlayerEventRequest) == 0x0048); // 72 bytes (0x000008 - 0x000048)
static_assert(sizeof(FServerWriteTitleEventRequest) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(offsetof(UPlayFabAdminAPI, CallAuthenticationContext) == 0x0798);
static_assert(offsetof(UPlayFabAdminAPI, RequestJsonObj) == 0x07A0);
static_assert(offsetof(UPlayFabAdminAPI, ResponseJsonObj) == 0x07A8);
static_assert(offsetof(UPlayFabAuthenticationAPI, CallAuthenticationContext) == 0x00A8);
static_assert(offsetof(UPlayFabAuthenticationAPI, RequestJsonObj) == 0x00B0);
static_assert(offsetof(UPlayFabAuthenticationAPI, ResponseJsonObj) == 0x00B8);
static_assert(offsetof(UPlayFabClientAPI, CallAuthenticationContext) == 0x0A98);
static_assert(offsetof(UPlayFabClientAPI, RequestJsonObj) == 0x0AA0);
static_assert(offsetof(UPlayFabClientAPI, ResponseJsonObj) == 0x0AA8);
static_assert(offsetof(UPlayFabCloudScriptAPI, CallAuthenticationContext) == 0x0168);
static_assert(offsetof(UPlayFabCloudScriptAPI, RequestJsonObj) == 0x0170);
static_assert(offsetof(UPlayFabCloudScriptAPI, ResponseJsonObj) == 0x0178);
static_assert(offsetof(UPlayFabDataAPI, CallAuthenticationContext) == 0x00F8);
static_assert(offsetof(UPlayFabDataAPI, RequestJsonObj) == 0x0100);
static_assert(offsetof(UPlayFabDataAPI, ResponseJsonObj) == 0x0108);
static_assert(offsetof(UPlayFabEconomyAPI, CallAuthenticationContext) == 0x0218);
static_assert(offsetof(UPlayFabEconomyAPI, RequestJsonObj) == 0x0220);
static_assert(offsetof(UPlayFabEconomyAPI, ResponseJsonObj) == 0x0228);
static_assert(offsetof(UPlayFabEventsAPI, CallAuthenticationContext) == 0x00A8);
static_assert(offsetof(UPlayFabEventsAPI, RequestJsonObj) == 0x00B0);
static_assert(offsetof(UPlayFabEventsAPI, ResponseJsonObj) == 0x00B8);
static_assert(offsetof(UPlayFabExperimentationAPI, CallAuthenticationContext) == 0x0158);
static_assert(offsetof(UPlayFabExperimentationAPI, RequestJsonObj) == 0x0160);
static_assert(offsetof(UPlayFabExperimentationAPI, ResponseJsonObj) == 0x0168);
static_assert(offsetof(UPlayFabGroupsAPI, CallAuthenticationContext) == 0x0218);
static_assert(offsetof(UPlayFabGroupsAPI, RequestJsonObj) == 0x0220);
static_assert(offsetof(UPlayFabGroupsAPI, ResponseJsonObj) == 0x0228);
static_assert(offsetof(UPlayFabInsightsAPI, CallAuthenticationContext) == 0x00E8);
static_assert(offsetof(UPlayFabInsightsAPI, RequestJsonObj) == 0x00F0);
static_assert(offsetof(UPlayFabInsightsAPI, ResponseJsonObj) == 0x00F8);
static_assert(offsetof(UPlayFabLocalizationAPI, CallAuthenticationContext) == 0x0098);
static_assert(offsetof(UPlayFabLocalizationAPI, RequestJsonObj) == 0x00A0);
static_assert(offsetof(UPlayFabLocalizationAPI, ResponseJsonObj) == 0x00A8);
static_assert(offsetof(UPlayFabMatchmakerAPI, CallAuthenticationContext) == 0x00C8);
static_assert(offsetof(UPlayFabMatchmakerAPI, RequestJsonObj) == 0x00D0);
static_assert(offsetof(UPlayFabMatchmakerAPI, ResponseJsonObj) == 0x00D8);
static_assert(offsetof(UPlayFabMultiplayerAPI, CallAuthenticationContext) == 0x0528);
static_assert(offsetof(UPlayFabMultiplayerAPI, RequestJsonObj) == 0x0530);
static_assert(offsetof(UPlayFabMultiplayerAPI, ResponseJsonObj) == 0x0538);
static_assert(offsetof(UPlayFabProfilesAPI, CallAuthenticationContext) == 0x00F8);
static_assert(offsetof(UPlayFabProfilesAPI, RequestJsonObj) == 0x0100);
static_assert(offsetof(UPlayFabProfilesAPI, ResponseJsonObj) == 0x0108);
static_assert(offsetof(UPlayFabServerAPI, CallAuthenticationContext) == 0x08D8);
static_assert(offsetof(UPlayFabServerAPI, RequestJsonObj) == 0x08E0);
static_assert(offsetof(UPlayFabServerAPI, ResponseJsonObj) == 0x08E8);
static_assert(offsetof(FPlayFabError, ErrorName) == 0x0008);
static_assert(offsetof(FPlayFabError, ErrorMessage) == 0x0018);
static_assert(offsetof(FPlayFabError, ErrorDetails) == 0x0028);
static_assert(offsetof(FPlayFabBaseModel, responseError) == 0x0000);
static_assert(offsetof(FPlayFabBaseModel, responseData) == 0x0038);
static_assert(offsetof(FPlayFabResultCommon, Request) == 0x0000);
static_assert(offsetof(FPlayFabRequestCommon, AuthenticationContext) == 0x0000);
static_assert(offsetof(FAdminAbortTaskInstanceRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminAbortTaskInstanceRequest, TaskInstanceId) == 0x0010);
static_assert(offsetof(FAdminAddLocalizedNewsRequest, Body) == 0x0008);
static_assert(offsetof(FAdminAddLocalizedNewsRequest, CustomTags) == 0x0018);
static_assert(offsetof(FAdminAddLocalizedNewsRequest, Language) == 0x0020);
static_assert(offsetof(FAdminAddLocalizedNewsRequest, NewsId) == 0x0030);
static_assert(offsetof(FAdminAddLocalizedNewsRequest, Title) == 0x0040);
static_assert(offsetof(FAdminAddNewsResult, NewsId) == 0x0008);
static_assert(offsetof(FAdminAddNewsRequest, Body) == 0x0008);
static_assert(offsetof(FAdminAddNewsRequest, CustomTags) == 0x0018);
static_assert(offsetof(FAdminAddNewsRequest, Timestamp) == 0x0020);
static_assert(offsetof(FAdminAddNewsRequest, Title) == 0x0030);
static_assert(offsetof(FAdminAddPlayerTagRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminAddPlayerTagRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FAdminAddPlayerTagRequest, TagName) == 0x0020);
static_assert(offsetof(FAdminModifyUserVirtualCurrencyResult, PlayFabId) == 0x0010);
static_assert(offsetof(FAdminModifyUserVirtualCurrencyResult, VirtualCurrency) == 0x0020);
static_assert(offsetof(FAdminAddUserVirtualCurrencyRequest, CustomTags) == 0x0010);
static_assert(offsetof(FAdminAddUserVirtualCurrencyRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FAdminAddUserVirtualCurrencyRequest, VirtualCurrency) == 0x0028);
static_assert(offsetof(FAdminAddVirtualCurrencyTypesRequest, VirtualCurrencies) == 0x0008);
static_assert(offsetof(FAdminBanUsersResult, BanData) == 0x0008);
static_assert(offsetof(FAdminBanUsersRequest, Bans) == 0x0008);
static_assert(offsetof(FAdminBanUsersRequest, CustomTags) == 0x0018);
static_assert(offsetof(FAdminCheckLimitedEditionItemAvailabilityRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FAdminCheckLimitedEditionItemAvailabilityRequest, ItemId) == 0x0018);
static_assert(offsetof(FAdminCreateTaskResult, TaskId) == 0x0008);
static_assert(offsetof(FAdminCreateActionsOnPlayerSegmentTaskRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminCreateActionsOnPlayerSegmentTaskRequest, Description) == 0x0010);
static_assert(offsetof(FAdminCreateActionsOnPlayerSegmentTaskRequest, Name) == 0x0028);
static_assert(offsetof(FAdminCreateActionsOnPlayerSegmentTaskRequest, Parameter) == 0x0038);
static_assert(offsetof(FAdminCreateActionsOnPlayerSegmentTaskRequest, Schedule) == 0x0040);
static_assert(offsetof(FAdminCreateCloudScriptTaskRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminCreateCloudScriptTaskRequest, Description) == 0x0010);
static_assert(offsetof(FAdminCreateCloudScriptTaskRequest, Name) == 0x0028);
static_assert(offsetof(FAdminCreateCloudScriptTaskRequest, Parameter) == 0x0038);
static_assert(offsetof(FAdminCreateCloudScriptTaskRequest, Schedule) == 0x0040);
static_assert(offsetof(FAdminCreateInsightsScheduledScalingTaskRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminCreateInsightsScheduledScalingTaskRequest, Description) == 0x0010);
static_assert(offsetof(FAdminCreateInsightsScheduledScalingTaskRequest, Name) == 0x0028);
static_assert(offsetof(FAdminCreateInsightsScheduledScalingTaskRequest, Parameter) == 0x0038);
static_assert(offsetof(FAdminCreateInsightsScheduledScalingTaskRequest, Schedule) == 0x0040);
static_assert(offsetof(FAdminCreateOpenIdConnectionRequest, ClientId) == 0x0008);
static_assert(offsetof(FAdminCreateOpenIdConnectionRequest, ClientSecret) == 0x0018);
static_assert(offsetof(FAdminCreateOpenIdConnectionRequest, ConnectionId) == 0x0028);
static_assert(offsetof(FAdminCreateOpenIdConnectionRequest, IssuerDiscoveryUrl) == 0x0040);
static_assert(offsetof(FAdminCreateOpenIdConnectionRequest, IssuerInformation) == 0x0050);
static_assert(offsetof(FAdminCreatePlayerSharedSecretResult, SecretKey) == 0x0008);
static_assert(offsetof(FAdminCreatePlayerSharedSecretRequest, FriendlyName) == 0x0008);
static_assert(offsetof(FAdminCreatePlayerStatisticDefinitionResult, Statistic) == 0x0008);
static_assert(offsetof(FAdminCreatePlayerStatisticDefinitionRequest, AggregationMethod) == 0x0008);
static_assert(offsetof(FAdminCreatePlayerStatisticDefinitionRequest, CustomTags) == 0x0010);
static_assert(offsetof(FAdminCreatePlayerStatisticDefinitionRequest, StatisticName) == 0x0018);
static_assert(offsetof(FAdminCreatePlayerStatisticDefinitionRequest, VersionChangeInterval) == 0x0028);
static_assert(offsetof(FAdminCreateSegmentResponse, ErrorMessage) == 0x0008);
static_assert(offsetof(FAdminCreateSegmentResponse, SegmentId) == 0x0018);
static_assert(offsetof(FAdminCreateSegmentRequest, SegmentModel) == 0x0008);
static_assert(offsetof(FAdminDeleteMasterPlayerAccountResult, JobReceiptId) == 0x0008);
static_assert(offsetof(FAdminDeleteMasterPlayerAccountResult, TitleIds) == 0x0018);
static_assert(offsetof(FAdminDeleteSegmentsResponse, ErrorMessage) == 0x0008);
static_assert(offsetof(FAdminExportMasterPlayerDataResult, JobReceiptId) == 0x0008);
static_assert(offsetof(FAdminGetActionsOnPlayersInSegmentTaskInstanceResult, Parameter) == 0x0008);
static_assert(offsetof(FAdminGetActionsOnPlayersInSegmentTaskInstanceResult, Summary) == 0x0010);
static_assert(offsetof(FAdminGetAllSegmentsResult, Segments) == 0x0008);
static_assert(offsetof(FAdminGetCatalogItemsResult, Catalog) == 0x0008);
static_assert(offsetof(FAdminGetCloudScriptRevisionResult, CreatedAt) == 0x0008);
static_assert(offsetof(FAdminGetCloudScriptRevisionResult, Files) == 0x0018);
static_assert(offsetof(FAdminGetCloudScriptTaskInstanceResult, Parameter) == 0x0008);
static_assert(offsetof(FAdminGetCloudScriptTaskInstanceResult, Summary) == 0x0010);
static_assert(offsetof(FAdminGetCloudScriptVersionsResult, Versions) == 0x0008);
static_assert(offsetof(FAdminGetContentListResult, Contents) == 0x0008);
static_assert(offsetof(FAdminGetContentUploadUrlResult, URL) == 0x0008);
static_assert(offsetof(FAdminGetDataReportResult, DownloadUrl) == 0x0008);
static_assert(offsetof(FAdminGetMatchmakerGameInfoResult, BuildVersion) == 0x0008);
static_assert(offsetof(FAdminGetMatchmakerGameInfoResult, EndTime) == 0x0018);
static_assert(offsetof(FAdminGetMatchmakerGameInfoResult, LobbyId) == 0x0028);
static_assert(offsetof(FAdminGetMatchmakerGameInfoResult, Mode) == 0x0038);
static_assert(offsetof(FAdminGetMatchmakerGameInfoResult, Players) == 0x0048);
static_assert(offsetof(FAdminGetMatchmakerGameInfoResult, Region) == 0x0058);
static_assert(offsetof(FAdminGetMatchmakerGameInfoResult, ServerIPV4Address) == 0x0060);
static_assert(offsetof(FAdminGetMatchmakerGameInfoResult, ServerIPV6Address) == 0x0070);
static_assert(offsetof(FAdminGetMatchmakerGameInfoResult, ServerPublicDNSName) == 0x0088);
static_assert(offsetof(FAdminGetMatchmakerGameInfoResult, StartTime) == 0x0098);
static_assert(offsetof(FAdminGetMatchmakerGameInfoResult, TitleID) == 0x00A8);
static_assert(offsetof(FAdminGetMatchmakerGameModesResult, GameModes) == 0x0008);
static_assert(offsetof(FAdminGetPlayedTitleListResult, TitleIds) == 0x0008);
static_assert(offsetof(FAdminGetPlayerIdFromAuthTokenResult, PlayFabId) == 0x0008);
static_assert(offsetof(FAdminGetPlayerProfileResult, PlayerProfile) == 0x0008);
static_assert(offsetof(FAdminGetPlayerSegmentsResult, Segments) == 0x0008);
static_assert(offsetof(FAdminGetPlayerSharedSecretsResult, SharedSecrets) == 0x0008);
static_assert(offsetof(FAdminGetPlayersInSegmentResult, ContinuationToken) == 0x0008);
static_assert(offsetof(FAdminGetPlayersInSegmentResult, PlayerProfiles) == 0x0018);
static_assert(offsetof(FAdminGetPlayerStatisticDefinitionsResult, Statistics) == 0x0008);
static_assert(offsetof(FAdminGetPlayerStatisticVersionsResult, StatisticVersions) == 0x0008);
static_assert(offsetof(FAdminGetPlayerTagsResult, PlayFabId) == 0x0008);
static_assert(offsetof(FAdminGetPlayerTagsResult, Tags) == 0x0018);
static_assert(offsetof(FAdminGetPolicyResponse, PolicyName) == 0x0008);
static_assert(offsetof(FAdminGetPolicyResponse, Statements) == 0x0020);
static_assert(offsetof(FAdminGetPublisherDataResult, Data) == 0x0008);
static_assert(offsetof(FAdminGetRandomResultTablesResult, Tables) == 0x0008);
static_assert(offsetof(FAdminGetSegmentsResponse, ErrorMessage) == 0x0008);
static_assert(offsetof(FAdminGetSegmentsResponse, Segments) == 0x0018);
static_assert(offsetof(FAdminGetStoreItemsResult, CatalogVersion) == 0x0008);
static_assert(offsetof(FAdminGetStoreItemsResult, MarketingData) == 0x0018);
static_assert(offsetof(FAdminGetStoreItemsResult, Source) == 0x0020);
static_assert(offsetof(FAdminGetStoreItemsResult, Store) == 0x0028);
static_assert(offsetof(FAdminGetStoreItemsResult, StoreId) == 0x0038);
static_assert(offsetof(FAdminGetTaskInstancesResult, Summaries) == 0x0008);
static_assert(offsetof(FAdminGetTasksResult, Tasks) == 0x0008);
static_assert(offsetof(FAdminGetTitleDataResult, Data) == 0x0008);
static_assert(offsetof(FAdminLookupUserAccountInfoResult, UserInfo) == 0x0008);
static_assert(offsetof(FAdminGetUserBansResult, BanData) == 0x0008);
static_assert(offsetof(FAdminGetUserDataResult, Data) == 0x0008);
static_assert(offsetof(FAdminGetUserDataResult, PlayFabId) == 0x0018);
static_assert(offsetof(FAdminGetUserInventoryResult, Inventory) == 0x0008);
static_assert(offsetof(FAdminGetUserInventoryResult, PlayFabId) == 0x0018);
static_assert(offsetof(FAdminGetUserInventoryResult, VirtualCurrency) == 0x0028);
static_assert(offsetof(FAdminGetUserInventoryResult, VirtualCurrencyRechargeTimes) == 0x0030);
static_assert(offsetof(FAdminGrantItemsToUsersResult, ItemGrantResults) == 0x0008);
static_assert(offsetof(FAdminIncrementPlayerStatisticVersionResult, StatisticVersion) == 0x0008);
static_assert(offsetof(FAdminListOpenIdConnectionResponse, Connections) == 0x0008);
static_assert(offsetof(FAdminListVirtualCurrencyTypesResult, VirtualCurrencies) == 0x0008);
static_assert(offsetof(FAdminModifyServerBuildResult, ActiveRegions) == 0x0008);
static_assert(offsetof(FAdminModifyServerBuildResult, BuildId) == 0x0018);
static_assert(offsetof(FAdminModifyServerBuildResult, CommandLineTemplate) == 0x0028);
static_assert(offsetof(FAdminModifyServerBuildResult, Comment) == 0x0038);
static_assert(offsetof(FAdminModifyServerBuildResult, ExecutablePath) == 0x0048);
static_assert(offsetof(FAdminModifyServerBuildResult, Status) == 0x0060);
static_assert(offsetof(FAdminModifyServerBuildResult, Timestamp) == 0x0068);
static_assert(offsetof(FAdminModifyServerBuildResult, TitleID) == 0x0078);
static_assert(offsetof(FAdminRefundPurchaseResponse, PurchaseStatus) == 0x0008);
static_assert(offsetof(FAdminResolvePurchaseDisputeResponse, PurchaseStatus) == 0x0008);
static_assert(offsetof(FAdminRevokeAllBansForUserResult, BanData) == 0x0008);
static_assert(offsetof(FAdminRevokeBansResult, BanData) == 0x0008);
static_assert(offsetof(FAdminRevokeInventoryItemsResult, Errors) == 0x0008);
static_assert(offsetof(FAdminRunTaskResult, TaskInstanceId) == 0x0008);
static_assert(offsetof(FAdminSetupPushNotificationResult, ARN) == 0x0008);
static_assert(offsetof(FAdminUpdateBansResult, BanData) == 0x0008);
static_assert(offsetof(FAdminUpdatePlayerStatisticDefinitionResult, Statistic) == 0x0008);
static_assert(offsetof(FAdminUpdatePolicyResponse, PolicyName) == 0x0008);
static_assert(offsetof(FAdminUpdatePolicyResponse, Statements) == 0x0018);
static_assert(offsetof(FAdminUpdateSegmentResponse, ErrorMessage) == 0x0008);
static_assert(offsetof(FAdminUpdateSegmentResponse, SegmentId) == 0x0018);
static_assert(offsetof(FAdminUpdateUserTitleDisplayNameResult, DisplayName) == 0x0008);
static_assert(offsetof(FAdminDeleteContentRequest, Key) == 0x0008);
static_assert(offsetof(FAdminDeleteMasterPlayerAccountRequest, MetaData) == 0x0008);
static_assert(offsetof(FAdminDeleteMasterPlayerAccountRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FAdminDeleteMembershipSubscriptionRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminDeleteMembershipSubscriptionRequest, MembershipId) == 0x0010);
static_assert(offsetof(FAdminDeleteMembershipSubscriptionRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FAdminDeleteMembershipSubscriptionRequest, SubscriptionId) == 0x0030);
static_assert(offsetof(FAdminDeleteOpenIdConnectionRequest, ConnectionId) == 0x0008);
static_assert(offsetof(FAdminDeletePlayerRequest, PlayFabId) == 0x0008);
static_assert(offsetof(FAdminDeletePlayerSharedSecretRequest, SecretKey) == 0x0008);
static_assert(offsetof(FAdminDeleteSegmentRequest, SegmentId) == 0x0008);
static_assert(offsetof(FAdminDeleteStoreRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FAdminDeleteStoreRequest, CustomTags) == 0x0018);
static_assert(offsetof(FAdminDeleteStoreRequest, StoreId) == 0x0020);
static_assert(offsetof(FAdminDeleteTaskRequest, Identifier) == 0x0008);
static_assert(offsetof(FAdminDeleteTitleDataOverrideRequest, OverrideLabel) == 0x0008);
static_assert(offsetof(FAdminExportMasterPlayerDataRequest, PlayFabId) == 0x0008);
static_assert(offsetof(FAdminGetTaskInstanceRequest, TaskInstanceId) == 0x0008);
static_assert(offsetof(FAdminGetCatalogItemsRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FAdminGetContentListRequest, Prefix) == 0x0008);
static_assert(offsetof(FAdminGetContentUploadUrlRequest, ContentType) == 0x0008);
static_assert(offsetof(FAdminGetContentUploadUrlRequest, Key) == 0x0018);
static_assert(offsetof(FAdminGetDataReportRequest, ReportName) == 0x0010);
static_assert(offsetof(FAdminGetMatchmakerGameInfoRequest, LobbyId) == 0x0008);
static_assert(offsetof(FAdminGetMatchmakerGameModesRequest, BuildVersion) == 0x0008);
static_assert(offsetof(FAdminGetPlayedTitleListRequest, PlayFabId) == 0x0008);
static_assert(offsetof(FAdminGetPlayerIdFromAuthTokenRequest, Token) == 0x0008);
static_assert(offsetof(FAdminGetPlayerIdFromAuthTokenRequest, TokenType) == 0x0018);
static_assert(offsetof(FAdminGetPlayerProfileRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminGetPlayerProfileRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FAdminGetPlayerProfileRequest, ProfileConstraints) == 0x0020);
static_assert(offsetof(FAdminGetPlayersSegmentsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminGetPlayersSegmentsRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FAdminGetPlayersInSegmentRequest, ContinuationToken) == 0x0008);
static_assert(offsetof(FAdminGetPlayersInSegmentRequest, CustomTags) == 0x0018);
static_assert(offsetof(FAdminGetPlayersInSegmentRequest, SegmentId) == 0x0028);
static_assert(offsetof(FAdminGetPlayerStatisticVersionsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminGetPlayerStatisticVersionsRequest, StatisticName) == 0x0010);
static_assert(offsetof(FAdminGetPlayerTagsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminGetPlayerTagsRequest, Namespace) == 0x0010);
static_assert(offsetof(FAdminGetPlayerTagsRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FAdminGetPolicyRequest, PolicyName) == 0x0008);
static_assert(offsetof(FAdminGetPublisherDataRequest, Keys) == 0x0008);
static_assert(offsetof(FAdminGetRandomResultTablesRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FAdminGetSegmentsRequest, SegmentIds) == 0x0008);
static_assert(offsetof(FAdminGetStoreItemsRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FAdminGetStoreItemsRequest, StoreId) == 0x0018);
static_assert(offsetof(FAdminGetTaskInstancesRequest, StartedAtRangeFrom) == 0x0008);
static_assert(offsetof(FAdminGetTaskInstancesRequest, StartedAtRangeTo) == 0x0018);
static_assert(offsetof(FAdminGetTaskInstancesRequest, StatusFilter) == 0x0028);
static_assert(offsetof(FAdminGetTaskInstancesRequest, TaskIdentifier) == 0x0030);
static_assert(offsetof(FAdminGetTasksRequest, Identifier) == 0x0008);
static_assert(offsetof(FAdminGetTitleDataRequest, Keys) == 0x0008);
static_assert(offsetof(FAdminGetTitleDataRequest, OverrideLabel) == 0x0018);
static_assert(offsetof(FAdminLookupUserAccountInfoRequest, Email) == 0x0008);
static_assert(offsetof(FAdminLookupUserAccountInfoRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FAdminLookupUserAccountInfoRequest, TitleDisplayName) == 0x0028);
static_assert(offsetof(FAdminLookupUserAccountInfoRequest, Username) == 0x0038);
static_assert(offsetof(FAdminGetUserBansRequest, PlayFabId) == 0x0008);
static_assert(offsetof(FAdminGetUserDataRequest, Keys) == 0x0010);
static_assert(offsetof(FAdminGetUserDataRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FAdminGetUserInventoryRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminGetUserInventoryRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FAdminGrantItemsToUsersRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FAdminGrantItemsToUsersRequest, CustomTags) == 0x0018);
static_assert(offsetof(FAdminGrantItemsToUsersRequest, ItemGrants) == 0x0020);
static_assert(offsetof(FAdminIncrementLimitedEditionItemAvailabilityRequest, CatalogVersion) == 0x0010);
static_assert(offsetof(FAdminIncrementLimitedEditionItemAvailabilityRequest, CustomTags) == 0x0020);
static_assert(offsetof(FAdminIncrementLimitedEditionItemAvailabilityRequest, ItemId) == 0x0028);
static_assert(offsetof(FAdminIncrementPlayerStatisticVersionRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminIncrementPlayerStatisticVersionRequest, StatisticName) == 0x0010);
static_assert(offsetof(FAdminModifyServerBuildRequest, ActiveRegions) == 0x0008);
static_assert(offsetof(FAdminModifyServerBuildRequest, BuildId) == 0x0018);
static_assert(offsetof(FAdminModifyServerBuildRequest, CommandLineTemplate) == 0x0028);
static_assert(offsetof(FAdminModifyServerBuildRequest, Comment) == 0x0038);
static_assert(offsetof(FAdminModifyServerBuildRequest, CustomTags) == 0x0048);
static_assert(offsetof(FAdminModifyServerBuildRequest, ExecutablePath) == 0x0050);
static_assert(offsetof(FAdminModifyServerBuildRequest, Timestamp) == 0x0068);
static_assert(offsetof(FAdminRefundPurchaseRequest, OrderId) == 0x0008);
static_assert(offsetof(FAdminRefundPurchaseRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FAdminRefundPurchaseRequest, Reason) == 0x0028);
static_assert(offsetof(FAdminRemovePlayerTagRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminRemovePlayerTagRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FAdminRemovePlayerTagRequest, TagName) == 0x0020);
static_assert(offsetof(FAdminRemoveVirtualCurrencyTypesRequest, VirtualCurrencies) == 0x0008);
static_assert(offsetof(FAdminResetCharacterStatisticsRequest, CharacterId) == 0x0008);
static_assert(offsetof(FAdminResetCharacterStatisticsRequest, CustomTags) == 0x0018);
static_assert(offsetof(FAdminResetCharacterStatisticsRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FAdminResetPasswordRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminResetPasswordRequest, Password) == 0x0010);
static_assert(offsetof(FAdminResetPasswordRequest, Token) == 0x0020);
static_assert(offsetof(FAdminResetUserStatisticsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminResetUserStatisticsRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FAdminResolvePurchaseDisputeRequest, OrderId) == 0x0008);
static_assert(offsetof(FAdminResolvePurchaseDisputeRequest, Outcome) == 0x0018);
static_assert(offsetof(FAdminResolvePurchaseDisputeRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FAdminResolvePurchaseDisputeRequest, Reason) == 0x0030);
static_assert(offsetof(FAdminRevokeAllBansForUserRequest, PlayFabId) == 0x0008);
static_assert(offsetof(FAdminRevokeBansRequest, BanIds) == 0x0008);
static_assert(offsetof(FAdminRevokeInventoryItemRequest, CharacterId) == 0x0008);
static_assert(offsetof(FAdminRevokeInventoryItemRequest, ItemInstanceId) == 0x0018);
static_assert(offsetof(FAdminRevokeInventoryItemRequest, PlayFabId) == 0x0028);
static_assert(offsetof(FAdminRevokeInventoryItemsRequest, Items) == 0x0008);
static_assert(offsetof(FAdminRunTaskRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminRunTaskRequest, Identifier) == 0x0010);
static_assert(offsetof(FAdminSendAccountRecoveryEmailRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminSendAccountRecoveryEmailRequest, Email) == 0x0010);
static_assert(offsetof(FAdminSendAccountRecoveryEmailRequest, EmailTemplateId) == 0x0020);
static_assert(offsetof(FAdminUpdateCatalogItemsRequest, Catalog) == 0x0008);
static_assert(offsetof(FAdminUpdateCatalogItemsRequest, CatalogVersion) == 0x0018);
static_assert(offsetof(FAdminUpdateCatalogItemsRequest, CustomTags) == 0x0028);
static_assert(offsetof(FAdminSetMembershipOverrideRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminSetMembershipOverrideRequest, ExpirationTime) == 0x0010);
static_assert(offsetof(FAdminSetMembershipOverrideRequest, MembershipId) == 0x0020);
static_assert(offsetof(FAdminSetMembershipOverrideRequest, PlayFabId) == 0x0030);
static_assert(offsetof(FAdminSetPlayerSecretRequest, PlayerSecret) == 0x0008);
static_assert(offsetof(FAdminSetPlayerSecretRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FAdminSetPublishedRevisionRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminSetPublisherDataRequest, Key) == 0x0008);
static_assert(offsetof(FAdminSetPublisherDataRequest, Value) == 0x0018);
static_assert(offsetof(FAdminUpdateStoreItemsRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FAdminUpdateStoreItemsRequest, CustomTags) == 0x0018);
static_assert(offsetof(FAdminUpdateStoreItemsRequest, MarketingData) == 0x0020);
static_assert(offsetof(FAdminUpdateStoreItemsRequest, Store) == 0x0028);
static_assert(offsetof(FAdminUpdateStoreItemsRequest, StoreId) == 0x0038);
static_assert(offsetof(FAdminSetTitleDataRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminSetTitleDataRequest, Key) == 0x0010);
static_assert(offsetof(FAdminSetTitleDataRequest, Value) == 0x0020);
static_assert(offsetof(FAdminSetTitleDataAndOverridesRequest, KeyValues) == 0x0008);
static_assert(offsetof(FAdminSetTitleDataAndOverridesRequest, OverrideLabel) == 0x0018);
static_assert(offsetof(FAdminSetupPushNotificationRequest, Credential) == 0x0008);
static_assert(offsetof(FAdminSetupPushNotificationRequest, Key) == 0x0018);
static_assert(offsetof(FAdminSetupPushNotificationRequest, Name) == 0x0028);
static_assert(offsetof(FAdminSetupPushNotificationRequest, PLATFORM) == 0x0039);
static_assert(offsetof(FAdminSubtractUserVirtualCurrencyRequest, CustomTags) == 0x0010);
static_assert(offsetof(FAdminSubtractUserVirtualCurrencyRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FAdminSubtractUserVirtualCurrencyRequest, VirtualCurrency) == 0x0028);
static_assert(offsetof(FAdminUpdateBansRequest, Bans) == 0x0008);
static_assert(offsetof(FAdminUpdateCloudScriptRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminUpdateCloudScriptRequest, DeveloperPlayFabId) == 0x0010);
static_assert(offsetof(FAdminUpdateCloudScriptRequest, Files) == 0x0020);
static_assert(offsetof(FAdminUpdateOpenIdConnectionRequest, ClientId) == 0x0008);
static_assert(offsetof(FAdminUpdateOpenIdConnectionRequest, ClientSecret) == 0x0018);
static_assert(offsetof(FAdminUpdateOpenIdConnectionRequest, ConnectionId) == 0x0028);
static_assert(offsetof(FAdminUpdateOpenIdConnectionRequest, IssuerDiscoveryUrl) == 0x0038);
static_assert(offsetof(FAdminUpdateOpenIdConnectionRequest, IssuerInformation) == 0x0048);
static_assert(offsetof(FAdminUpdatePlayerSharedSecretRequest, FriendlyName) == 0x0010);
static_assert(offsetof(FAdminUpdatePlayerSharedSecretRequest, SecretKey) == 0x0020);
static_assert(offsetof(FAdminUpdatePlayerStatisticDefinitionRequest, AggregationMethod) == 0x0008);
static_assert(offsetof(FAdminUpdatePlayerStatisticDefinitionRequest, StatisticName) == 0x0010);
static_assert(offsetof(FAdminUpdatePlayerStatisticDefinitionRequest, VersionChangeInterval) == 0x0020);
static_assert(offsetof(FAdminUpdatePolicyRequest, PolicyName) == 0x0010);
static_assert(offsetof(FAdminUpdatePolicyRequest, Statements) == 0x0028);
static_assert(offsetof(FAdminUpdateRandomResultTablesRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FAdminUpdateRandomResultTablesRequest, CustomTags) == 0x0018);
static_assert(offsetof(FAdminUpdateRandomResultTablesRequest, Tables) == 0x0020);
static_assert(offsetof(FAdminUpdateSegmentRequest, SegmentModel) == 0x0008);
static_assert(offsetof(FAdminUpdateTaskRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminUpdateTaskRequest, Description) == 0x0010);
static_assert(offsetof(FAdminUpdateTaskRequest, Identifier) == 0x0020);
static_assert(offsetof(FAdminUpdateTaskRequest, Name) == 0x0030);
static_assert(offsetof(FAdminUpdateTaskRequest, Parameter) == 0x0040);
static_assert(offsetof(FAdminUpdateTaskRequest, Schedule) == 0x0048);
static_assert(offsetof(FAdminUpdateTaskRequest, Type) == 0x0058);
static_assert(offsetof(FAdminUpdateUserDataRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminUpdateUserDataRequest, Data) == 0x0010);
static_assert(offsetof(FAdminUpdateUserDataRequest, KeysToRemove) == 0x0018);
static_assert(offsetof(FAdminUpdateUserDataRequest, Permission) == 0x0028);
static_assert(offsetof(FAdminUpdateUserDataRequest, PlayFabId) == 0x0030);
static_assert(offsetof(FAdminUpdateUserInternalDataRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminUpdateUserInternalDataRequest, Data) == 0x0010);
static_assert(offsetof(FAdminUpdateUserInternalDataRequest, KeysToRemove) == 0x0018);
static_assert(offsetof(FAdminUpdateUserInternalDataRequest, PlayFabId) == 0x0028);
static_assert(offsetof(FAdminUpdateUserTitleDisplayNameRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAdminUpdateUserTitleDisplayNameRequest, DisplayName) == 0x0010);
static_assert(offsetof(FAdminUpdateUserTitleDisplayNameRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FAuthenticationGetEntityTokenResponse, Entity) == 0x0008);
static_assert(offsetof(FAuthenticationGetEntityTokenResponse, EntityToken) == 0x0010);
static_assert(offsetof(FAuthenticationGetEntityTokenResponse, TokenExpiration) == 0x0020);
static_assert(offsetof(FAuthenticationValidateEntityTokenResponse, Entity) == 0x0008);
static_assert(offsetof(FAuthenticationValidateEntityTokenResponse, IdentifiedDeviceType) == 0x0010);
static_assert(offsetof(FAuthenticationValidateEntityTokenResponse, IdentityProvider) == 0x0011);
static_assert(offsetof(FAuthenticationValidateEntityTokenResponse, IdentityProviderIssuedId) == 0x0018);
static_assert(offsetof(FAuthenticationValidateEntityTokenResponse, Lineage) == 0x0028);
static_assert(offsetof(FAuthenticationGetEntityTokenRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAuthenticationGetEntityTokenRequest, Entity) == 0x0010);
static_assert(offsetof(FAuthenticationValidateEntityTokenRequest, CustomTags) == 0x0008);
static_assert(offsetof(FAuthenticationValidateEntityTokenRequest, EntityToken) == 0x0010);
static_assert(offsetof(FClientAcceptTradeResponse, Trade) == 0x0008);
static_assert(offsetof(FClientAcceptTradeRequest, AcceptedInventoryInstanceIds) == 0x0008);
static_assert(offsetof(FClientAcceptTradeRequest, OfferingPlayerId) == 0x0018);
static_assert(offsetof(FClientAcceptTradeRequest, TradeId) == 0x0028);
static_assert(offsetof(FClientAddFriendRequest, FriendEmail) == 0x0008);
static_assert(offsetof(FClientAddFriendRequest, FriendPlayFabId) == 0x0018);
static_assert(offsetof(FClientAddFriendRequest, FriendTitleDisplayName) == 0x0028);
static_assert(offsetof(FClientAddFriendRequest, FriendUsername) == 0x0038);
static_assert(offsetof(FClientAddGenericIDRequest, GenericId) == 0x0008);
static_assert(offsetof(FClientAddOrUpdateContactEmailRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientAddOrUpdateContactEmailRequest, EmailAddress) == 0x0010);
static_assert(offsetof(FClientAddSharedGroupMembersRequest, PlayFabIds) == 0x0008);
static_assert(offsetof(FClientAddSharedGroupMembersRequest, SharedGroupId) == 0x0018);
static_assert(offsetof(FClientAddUsernamePasswordResult, Username) == 0x0008);
static_assert(offsetof(FClientAddUsernamePasswordRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientAddUsernamePasswordRequest, Email) == 0x0010);
static_assert(offsetof(FClientAddUsernamePasswordRequest, Password) == 0x0020);
static_assert(offsetof(FClientAddUsernamePasswordRequest, Username) == 0x0030);
static_assert(offsetof(FClientModifyUserVirtualCurrencyResult, PlayFabId) == 0x0010);
static_assert(offsetof(FClientModifyUserVirtualCurrencyResult, VirtualCurrency) == 0x0020);
static_assert(offsetof(FClientAddUserVirtualCurrencyRequest, CustomTags) == 0x0010);
static_assert(offsetof(FClientAddUserVirtualCurrencyRequest, VirtualCurrency) == 0x0018);
static_assert(offsetof(FClientAndroidDevicePushNotificationRegistrationRequest, ConfirmationMessage) == 0x0008);
static_assert(offsetof(FClientAndroidDevicePushNotificationRegistrationRequest, DeviceToken) == 0x0018);
static_assert(offsetof(FClientAttributeInstallRequest, Adid) == 0x0008);
static_assert(offsetof(FClientAttributeInstallRequest, Idfa) == 0x0018);
static_assert(offsetof(FClientCancelTradeResponse, Trade) == 0x0008);
static_assert(offsetof(FClientCancelTradeRequest, TradeId) == 0x0008);
static_assert(offsetof(FClientConfirmPurchaseResult, Items) == 0x0008);
static_assert(offsetof(FClientConfirmPurchaseResult, OrderId) == 0x0018);
static_assert(offsetof(FClientConfirmPurchaseResult, PurchaseDate) == 0x0028);
static_assert(offsetof(FClientConfirmPurchaseRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientConfirmPurchaseRequest, OrderId) == 0x0010);
static_assert(offsetof(FClientConsumeItemResult, ItemInstanceId) == 0x0008);
static_assert(offsetof(FClientConsumeItemRequest, CharacterId) == 0x0008);
static_assert(offsetof(FClientConsumeItemRequest, CustomTags) == 0x0020);
static_assert(offsetof(FClientConsumeItemRequest, ItemInstanceId) == 0x0028);
static_assert(offsetof(FClientConsumeMicrosoftStoreEntitlementsResponse, Items) == 0x0008);
static_assert(offsetof(FClientConsumeMicrosoftStoreEntitlementsRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientConsumeMicrosoftStoreEntitlementsRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientConsumeMicrosoftStoreEntitlementsRequest, MarketplaceSpecificData) == 0x0020);
static_assert(offsetof(FClientConsumePS5EntitlementsResult, Items) == 0x0008);
static_assert(offsetof(FClientConsumePS5EntitlementsRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientConsumePS5EntitlementsRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientConsumePS5EntitlementsRequest, MarketplaceSpecificData) == 0x0020);
static_assert(offsetof(FClientConsumePSNEntitlementsResult, ItemsGranted) == 0x0008);
static_assert(offsetof(FClientConsumePSNEntitlementsRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientConsumePSNEntitlementsRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientConsumeXboxEntitlementsResult, Items) == 0x0008);
static_assert(offsetof(FClientConsumeXboxEntitlementsRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientConsumeXboxEntitlementsRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientConsumeXboxEntitlementsRequest, XboxToken) == 0x0020);
static_assert(offsetof(FClientCreateSharedGroupResult, SharedGroupId) == 0x0008);
static_assert(offsetof(FClientCreateSharedGroupRequest, SharedGroupId) == 0x0008);
static_assert(offsetof(FClientExecuteCloudScriptResult, Error) == 0x0010);
static_assert(offsetof(FClientExecuteCloudScriptResult, FunctionName) == 0x0020);
static_assert(offsetof(FClientExecuteCloudScriptResult, FunctionResult) == 0x0030);
static_assert(offsetof(FClientExecuteCloudScriptResult, Logs) == 0x0040);
static_assert(offsetof(FClientGetAccountInfoResult, AccountInfo) == 0x0008);
static_assert(offsetof(FClientGetAdPlacementsResult, AdPlacements) == 0x0008);
static_assert(offsetof(FClientListUsersCharactersResult, Characters) == 0x0008);
static_assert(offsetof(FClientGetCatalogItemsResult, Catalog) == 0x0008);
static_assert(offsetof(FClientGetCharacterDataResult, CharacterId) == 0x0008);
static_assert(offsetof(FClientGetCharacterDataResult, Data) == 0x0018);
static_assert(offsetof(FClientGetCharacterInventoryResult, CharacterId) == 0x0008);
static_assert(offsetof(FClientGetCharacterInventoryResult, Inventory) == 0x0018);
static_assert(offsetof(FClientGetCharacterInventoryResult, VirtualCurrency) == 0x0028);
static_assert(offsetof(FClientGetCharacterInventoryResult, VirtualCurrencyRechargeTimes) == 0x0030);
static_assert(offsetof(FClientGetCharacterLeaderboardResult, Leaderboard) == 0x0008);
static_assert(offsetof(FClientGetCharacterStatisticsResult, CharacterStatistics) == 0x0008);
static_assert(offsetof(FClientGetContentDownloadUrlResult, URL) == 0x0008);
static_assert(offsetof(FClientCurrentGamesResult, Games) == 0x0010);
static_assert(offsetof(FClientGetLeaderboardResult, Leaderboard) == 0x0008);
static_assert(offsetof(FClientGetLeaderboardResult, NextReset) == 0x0018);
static_assert(offsetof(FClientGetFriendLeaderboardAroundPlayerResult, Leaderboard) == 0x0008);
static_assert(offsetof(FClientGetFriendLeaderboardAroundPlayerResult, NextReset) == 0x0018);
static_assert(offsetof(FClientGetFriendsListResult, Friends) == 0x0008);
static_assert(offsetof(FClientGameServerRegionsResult, Regions) == 0x0008);
static_assert(offsetof(FClientGetLeaderboardAroundCharacterResult, Leaderboard) == 0x0008);
static_assert(offsetof(FClientGetLeaderboardAroundPlayerResult, Leaderboard) == 0x0008);
static_assert(offsetof(FClientGetLeaderboardAroundPlayerResult, NextReset) == 0x0018);
static_assert(offsetof(FClientGetLeaderboardForUsersCharactersResult, Leaderboard) == 0x0008);
static_assert(offsetof(FClientGetPaymentTokenResult, OrderId) == 0x0008);
static_assert(offsetof(FClientGetPaymentTokenResult, ProviderToken) == 0x0018);
static_assert(offsetof(FClientGetPhotonAuthenticationTokenResult, PhotonCustomAuthenticationToken) == 0x0008);
static_assert(offsetof(FClientGetPlayerCombinedInfoResult, InfoResultPayload) == 0x0008);
static_assert(offsetof(FClientGetPlayerCombinedInfoResult, PlayFabId) == 0x0010);
static_assert(offsetof(FClientGetPlayerProfileResult, PlayerProfile) == 0x0008);
static_assert(offsetof(FClientGetPlayerSegmentsResult, Segments) == 0x0008);
static_assert(offsetof(FClientGetPlayerStatisticsResult, Statistics) == 0x0008);
static_assert(offsetof(FClientGetPlayerStatisticVersionsResult, StatisticVersions) == 0x0008);
static_assert(offsetof(FClientGetPlayerTagsResult, PlayFabId) == 0x0008);
static_assert(offsetof(FClientGetPlayerTagsResult, Tags) == 0x0018);
static_assert(offsetof(FClientGetPlayerTradesResponse, AcceptedTrades) == 0x0008);
static_assert(offsetof(FClientGetPlayerTradesResponse, OpenedTrades) == 0x0018);
static_assert(offsetof(FClientGetPlayFabIDsFromFacebookIDsResult, Data) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult, Data) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromGameCenterIDsResult, Data) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromGenericIDsResult, Data) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromGoogleIDsResult, Data) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromKongregateIDsResult, Data) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult, Data) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromPSNAccountIDsResult, Data) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromSteamIDsResult, Data) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromTwitchIDsResult, Data) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromXboxLiveIDsResult, Data) == 0x0008);
static_assert(offsetof(FClientGetPublisherDataResult, Data) == 0x0008);
static_assert(offsetof(FClientGetPurchaseResult, OrderId) == 0x0008);
static_assert(offsetof(FClientGetPurchaseResult, PaymentProvider) == 0x0018);
static_assert(offsetof(FClientGetPurchaseResult, PurchaseDate) == 0x0028);
static_assert(offsetof(FClientGetPurchaseResult, TransactionId) == 0x0038);
static_assert(offsetof(FClientGetPurchaseResult, TransactionStatus) == 0x0048);
static_assert(offsetof(FClientGetSharedGroupDataResult, Data) == 0x0008);
static_assert(offsetof(FClientGetSharedGroupDataResult, Members) == 0x0010);
static_assert(offsetof(FClientGetStoreItemsResult, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientGetStoreItemsResult, MarketingData) == 0x0018);
static_assert(offsetof(FClientGetStoreItemsResult, Source) == 0x0020);
static_assert(offsetof(FClientGetStoreItemsResult, Store) == 0x0028);
static_assert(offsetof(FClientGetStoreItemsResult, StoreId) == 0x0038);
static_assert(offsetof(FClientGetTimeResult, Time) == 0x0008);
static_assert(offsetof(FClientGetTitleDataResult, Data) == 0x0008);
static_assert(offsetof(FClientGetTitleNewsResult, News) == 0x0008);
static_assert(offsetof(FClientGetTitlePublicKeyResult, RSAPublicKey) == 0x0008);
static_assert(offsetof(FClientGetTradeStatusResponse, Trade) == 0x0008);
static_assert(offsetof(FClientGetUserDataResult, Data) == 0x0008);
static_assert(offsetof(FClientGetUserInventoryResult, Inventory) == 0x0008);
static_assert(offsetof(FClientGetUserInventoryResult, VirtualCurrency) == 0x0018);
static_assert(offsetof(FClientGetUserInventoryResult, VirtualCurrencyRechargeTimes) == 0x0020);
static_assert(offsetof(FClientGrantCharacterToUserResult, CharacterId) == 0x0008);
static_assert(offsetof(FClientGrantCharacterToUserResult, CharacterType) == 0x0018);
static_assert(offsetof(FPlayFabLoginResultCommon, AuthenticationContext) == 0x0008);
static_assert(offsetof(FClientLoginResult, EntityToken) == 0x0010);
static_assert(offsetof(FClientLoginResult, InfoResultPayload) == 0x0018);
static_assert(offsetof(FClientLoginResult, LastLoginTime) == 0x0020);
static_assert(offsetof(FClientLoginResult, PlayFabId) == 0x0038);
static_assert(offsetof(FClientLoginResult, SessionTicket) == 0x0048);
static_assert(offsetof(FClientLoginResult, SettingsForUser) == 0x0058);
static_assert(offsetof(FClientLoginResult, TreatmentAssignment) == 0x0060);
static_assert(offsetof(FClientMatchmakeResult, Expires) == 0x0008);
static_assert(offsetof(FClientMatchmakeResult, LobbyId) == 0x0018);
static_assert(offsetof(FClientMatchmakeResult, ServerIPV4Address) == 0x0030);
static_assert(offsetof(FClientMatchmakeResult, ServerIPV6Address) == 0x0040);
static_assert(offsetof(FClientMatchmakeResult, ServerPublicDNSName) == 0x0058);
static_assert(offsetof(FClientMatchmakeResult, Status) == 0x0068);
static_assert(offsetof(FClientMatchmakeResult, Ticket) == 0x0070);
static_assert(offsetof(FClientOpenTradeResponse, Trade) == 0x0008);
static_assert(offsetof(FClientPayForPurchaseResult, OrderId) == 0x0010);
static_assert(offsetof(FClientPayForPurchaseResult, ProviderData) == 0x0020);
static_assert(offsetof(FClientPayForPurchaseResult, ProviderToken) == 0x0030);
static_assert(offsetof(FClientPayForPurchaseResult, PurchaseConfirmationPageURL) == 0x0040);
static_assert(offsetof(FClientPayForPurchaseResult, PurchaseCurrency) == 0x0050);
static_assert(offsetof(FClientPayForPurchaseResult, Status) == 0x0064);
static_assert(offsetof(FClientPayForPurchaseResult, VCAmount) == 0x0068);
static_assert(offsetof(FClientPayForPurchaseResult, VirtualCurrency) == 0x0070);
static_assert(offsetof(FClientPurchaseItemResult, Items) == 0x0008);
static_assert(offsetof(FClientRedeemCouponResult, GrantedItems) == 0x0008);
static_assert(offsetof(FClientRegisterPlayFabUserResult, EntityToken) == 0x0008);
static_assert(offsetof(FClientRegisterPlayFabUserResult, PlayFabId) == 0x0010);
static_assert(offsetof(FClientRegisterPlayFabUserResult, SessionTicket) == 0x0020);
static_assert(offsetof(FClientRegisterPlayFabUserResult, SettingsForUser) == 0x0030);
static_assert(offsetof(FClientRegisterPlayFabUserResult, Username) == 0x0038);
static_assert(offsetof(FClientRestoreIOSPurchasesResult, Fulfillments) == 0x0008);
static_assert(offsetof(FClientRewardAdActivityResult, AdActivityEventId) == 0x0008);
static_assert(offsetof(FClientRewardAdActivityResult, DebugResults) == 0x0018);
static_assert(offsetof(FClientRewardAdActivityResult, PlacementId) == 0x0028);
static_assert(offsetof(FClientRewardAdActivityResult, PlacementName) == 0x0038);
static_assert(offsetof(FClientRewardAdActivityResult, RewardResults) == 0x0050);
static_assert(offsetof(FClientStartPurchaseResult, Contents) == 0x0008);
static_assert(offsetof(FClientStartPurchaseResult, OrderId) == 0x0018);
static_assert(offsetof(FClientStartPurchaseResult, PaymentOptions) == 0x0028);
static_assert(offsetof(FClientStartPurchaseResult, VirtualCurrencyBalances) == 0x0038);
static_assert(offsetof(FClientUnlockContainerItemResult, GrantedItems) == 0x0008);
static_assert(offsetof(FClientUnlockContainerItemResult, UnlockedItemInstanceId) == 0x0018);
static_assert(offsetof(FClientUnlockContainerItemResult, UnlockedWithItemInstanceId) == 0x0028);
static_assert(offsetof(FClientUnlockContainerItemResult, VirtualCurrency) == 0x0038);
static_assert(offsetof(FClientUpdateUserTitleDisplayNameResult, DisplayName) == 0x0008);
static_assert(offsetof(FClientValidateAmazonReceiptResult, Fulfillments) == 0x0008);
static_assert(offsetof(FClientValidateGooglePlayPurchaseResult, Fulfillments) == 0x0008);
static_assert(offsetof(FClientValidateIOSReceiptResult, Fulfillments) == 0x0008);
static_assert(offsetof(FClientValidateWindowsReceiptResult, Fulfillments) == 0x0008);
static_assert(offsetof(FClientWriteEventResponse, EventId) == 0x0008);
static_assert(offsetof(FClientExecuteCloudScriptRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientExecuteCloudScriptRequest, FunctionName) == 0x0010);
static_assert(offsetof(FClientExecuteCloudScriptRequest, FunctionParameter) == 0x0020);
static_assert(offsetof(FClientExecuteCloudScriptRequest, RevisionSelection) == 0x0029);
static_assert(offsetof(FClientGetAccountInfoRequest, Email) == 0x0008);
static_assert(offsetof(FClientGetAccountInfoRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FClientGetAccountInfoRequest, TitleDisplayName) == 0x0028);
static_assert(offsetof(FClientGetAccountInfoRequest, Username) == 0x0038);
static_assert(offsetof(FClientGetAdPlacementsRequest, AppId) == 0x0008);
static_assert(offsetof(FClientGetAdPlacementsRequest, Identifier) == 0x0018);
static_assert(offsetof(FClientListUsersCharactersRequest, PlayFabId) == 0x0008);
static_assert(offsetof(FClientGetCatalogItemsRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientGetCharacterDataRequest, CharacterId) == 0x0008);
static_assert(offsetof(FClientGetCharacterDataRequest, Keys) == 0x0020);
static_assert(offsetof(FClientGetCharacterDataRequest, PlayFabId) == 0x0030);
static_assert(offsetof(FClientGetCharacterInventoryRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientGetCharacterInventoryRequest, CharacterId) == 0x0018);
static_assert(offsetof(FClientGetCharacterInventoryRequest, CustomTags) == 0x0028);
static_assert(offsetof(FClientGetCharacterLeaderboardRequest, CharacterType) == 0x0008);
static_assert(offsetof(FClientGetCharacterLeaderboardRequest, StatisticName) == 0x0020);
static_assert(offsetof(FClientGetCharacterStatisticsRequest, CharacterId) == 0x0008);
static_assert(offsetof(FClientGetContentDownloadUrlRequest, HttpMethod) == 0x0008);
static_assert(offsetof(FClientGetContentDownloadUrlRequest, Key) == 0x0018);
static_assert(offsetof(FClientCurrentGamesRequest, BuildVersion) == 0x0008);
static_assert(offsetof(FClientCurrentGamesRequest, GAMEMODE) == 0x0018);
static_assert(offsetof(FClientCurrentGamesRequest, Region) == 0x0028);
static_assert(offsetof(FClientCurrentGamesRequest, StatisticName) == 0x0030);
static_assert(offsetof(FClientCurrentGamesRequest, TagFilter) == 0x0040);
static_assert(offsetof(FClientGetFriendLeaderboardRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientGetFriendLeaderboardRequest, ProfileConstraints) == 0x0018);
static_assert(offsetof(FClientGetFriendLeaderboardRequest, StatisticName) == 0x0028);
static_assert(offsetof(FClientGetFriendLeaderboardRequest, XboxToken) == 0x0040);
static_assert(offsetof(FClientGetFriendLeaderboardAroundPlayerRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientGetFriendLeaderboardAroundPlayerRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FClientGetFriendLeaderboardAroundPlayerRequest, ProfileConstraints) == 0x0028);
static_assert(offsetof(FClientGetFriendLeaderboardAroundPlayerRequest, StatisticName) == 0x0030);
static_assert(offsetof(FClientGetFriendLeaderboardAroundPlayerRequest, XboxToken) == 0x0048);
static_assert(offsetof(FClientGetFriendsListRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientGetFriendsListRequest, ProfileConstraints) == 0x0018);
static_assert(offsetof(FClientGetFriendsListRequest, XboxToken) == 0x0020);
static_assert(offsetof(FClientGameServerRegionsRequest, BuildVersion) == 0x0008);
static_assert(offsetof(FClientGetLeaderboardRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientGetLeaderboardRequest, ProfileConstraints) == 0x0018);
static_assert(offsetof(FClientGetLeaderboardRequest, StatisticName) == 0x0028);
static_assert(offsetof(FClientGetLeaderboardAroundCharacterRequest, CharacterId) == 0x0008);
static_assert(offsetof(FClientGetLeaderboardAroundCharacterRequest, CharacterType) == 0x0018);
static_assert(offsetof(FClientGetLeaderboardAroundCharacterRequest, StatisticName) == 0x0030);
static_assert(offsetof(FClientGetLeaderboardAroundPlayerRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientGetLeaderboardAroundPlayerRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FClientGetLeaderboardAroundPlayerRequest, ProfileConstraints) == 0x0028);
static_assert(offsetof(FClientGetLeaderboardAroundPlayerRequest, StatisticName) == 0x0030);
static_assert(offsetof(FClientGetLeaderboardForUsersCharactersRequest, StatisticName) == 0x0008);
static_assert(offsetof(FClientGetPaymentTokenRequest, TokenProvider) == 0x0008);
static_assert(offsetof(FClientGetPhotonAuthenticationTokenRequest, PhotonApplicationId) == 0x0008);
static_assert(offsetof(FClientGetPlayerCombinedInfoRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientGetPlayerCombinedInfoRequest, InfoRequestParameters) == 0x0010);
static_assert(offsetof(FClientGetPlayerCombinedInfoRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FClientGetPlayerProfileRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientGetPlayerProfileRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FClientGetPlayerProfileRequest, ProfileConstraints) == 0x0020);
static_assert(offsetof(FClientGetPlayerStatisticsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientGetPlayerStatisticsRequest, StatisticNames) == 0x0010);
static_assert(offsetof(FClientGetPlayerStatisticsRequest, StatisticNameVersions) == 0x0020);
static_assert(offsetof(FClientGetPlayerStatisticVersionsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientGetPlayerStatisticVersionsRequest, StatisticName) == 0x0010);
static_assert(offsetof(FClientGetPlayerTagsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientGetPlayerTagsRequest, Namespace) == 0x0010);
static_assert(offsetof(FClientGetPlayerTagsRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FClientGetPlayerTradesRequest, StatusFilter) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromFacebookIDsRequest, FacebookIDs) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromFacebookInstantGamesIdsRequest, FacebookInstantGamesIds) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromGameCenterIDsRequest, GameCenterIDs) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromGenericIDsRequest, GenericIDs) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromGoogleIDsRequest, GoogleIDs) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromKongregateIDsRequest, KongregateIDs) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest, NintendoSwitchDeviceIds) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromPSNAccountIDsRequest, PSNAccountIDs) == 0x0010);
static_assert(offsetof(FClientGetPlayFabIDsFromSteamIDsRequest, SteamStringIDs) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromTwitchIDsRequest, TwitchIds) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromXboxLiveIDsRequest, Sandbox) == 0x0008);
static_assert(offsetof(FClientGetPlayFabIDsFromXboxLiveIDsRequest, XboxLiveAccountIDs) == 0x0018);
static_assert(offsetof(FClientGetPublisherDataRequest, Keys) == 0x0008);
static_assert(offsetof(FClientGetPurchaseRequest, OrderId) == 0x0008);
static_assert(offsetof(FClientGetSharedGroupDataRequest, Keys) == 0x0010);
static_assert(offsetof(FClientGetSharedGroupDataRequest, SharedGroupId) == 0x0020);
static_assert(offsetof(FClientGetStoreItemsRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientGetStoreItemsRequest, StoreId) == 0x0018);
static_assert(offsetof(FClientGetTitleDataRequest, Keys) == 0x0008);
static_assert(offsetof(FClientGetTitleDataRequest, OverrideLabel) == 0x0018);
static_assert(offsetof(FClientGetTitlePublicKeyRequest, TitleSharedSecret) == 0x0008);
static_assert(offsetof(FClientGetTradeStatusRequest, OfferingPlayerId) == 0x0008);
static_assert(offsetof(FClientGetTradeStatusRequest, TradeId) == 0x0018);
static_assert(offsetof(FClientGetUserDataRequest, Keys) == 0x0010);
static_assert(offsetof(FClientGetUserDataRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FClientGetUserInventoryRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientGrantCharacterToUserRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientGrantCharacterToUserRequest, CharacterName) == 0x0018);
static_assert(offsetof(FClientGrantCharacterToUserRequest, CustomTags) == 0x0028);
static_assert(offsetof(FClientGrantCharacterToUserRequest, ItemId) == 0x0030);
static_assert(offsetof(FClientLinkAndroidDeviceIDRequest, AndroidDevice) == 0x0008);
static_assert(offsetof(FClientLinkAndroidDeviceIDRequest, AndroidDeviceId) == 0x0018);
static_assert(offsetof(FClientLinkAndroidDeviceIDRequest, CustomTags) == 0x0028);
static_assert(offsetof(FClientLinkAndroidDeviceIDRequest, OS) == 0x0038);
static_assert(offsetof(FClientLinkAppleRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientLinkAppleRequest, IdentityToken) == 0x0018);
static_assert(offsetof(FClientLinkCustomIDRequest, CustomId) == 0x0008);
static_assert(offsetof(FClientLinkCustomIDRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientLinkFacebookAccountRequest, AccessToken) == 0x0008);
static_assert(offsetof(FClientLinkFacebookAccountRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientLinkFacebookInstantGamesIdRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientLinkFacebookInstantGamesIdRequest, FacebookInstantGamesSignature) == 0x0010);
static_assert(offsetof(FClientLinkGameCenterAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientLinkGameCenterAccountRequest, GameCenterId) == 0x0018);
static_assert(offsetof(FClientLinkGameCenterAccountRequest, PublicKeyUrl) == 0x0028);
static_assert(offsetof(FClientLinkGameCenterAccountRequest, Salt) == 0x0038);
static_assert(offsetof(FClientLinkGameCenterAccountRequest, Signature) == 0x0048);
static_assert(offsetof(FClientLinkGameCenterAccountRequest, Timestamp) == 0x0058);
static_assert(offsetof(FClientLinkGoogleAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientLinkGoogleAccountRequest, ServerAuthCode) == 0x0018);
static_assert(offsetof(FClientLinkIOSDeviceIDRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientLinkIOSDeviceIDRequest, DeviceID) == 0x0010);
static_assert(offsetof(FClientLinkIOSDeviceIDRequest, DeviceModel) == 0x0020);
static_assert(offsetof(FClientLinkIOSDeviceIDRequest, OS) == 0x0038);
static_assert(offsetof(FClientLinkKongregateAccountRequest, AuthTicket) == 0x0008);
static_assert(offsetof(FClientLinkKongregateAccountRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientLinkKongregateAccountRequest, KongregateId) == 0x0028);
static_assert(offsetof(FClientLinkNintendoServiceAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientLinkNintendoServiceAccountRequest, IdentityToken) == 0x0018);
static_assert(offsetof(FClientLinkNintendoSwitchDeviceIdRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientLinkNintendoSwitchDeviceIdRequest, NintendoSwitchDeviceId) == 0x0018);
static_assert(offsetof(FClientLinkOpenIdConnectRequest, ConnectionId) == 0x0008);
static_assert(offsetof(FClientLinkOpenIdConnectRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientLinkOpenIdConnectRequest, IdToken) == 0x0028);
static_assert(offsetof(FClientLinkPSNAccountRequest, AuthCode) == 0x0008);
static_assert(offsetof(FClientLinkPSNAccountRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientLinkPSNAccountRequest, RedirectUri) == 0x0028);
static_assert(offsetof(FClientLinkSteamAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientLinkSteamAccountRequest, SteamTicket) == 0x0018);
static_assert(offsetof(FClientLinkTwitchAccountRequest, AccessToken) == 0x0008);
static_assert(offsetof(FClientLinkTwitchAccountRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientLinkXboxAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientLinkXboxAccountRequest, XboxToken) == 0x0018);
static_assert(offsetof(FClientLoginWithAndroidDeviceIDRequest, AndroidDevice) == 0x0008);
static_assert(offsetof(FClientLoginWithAndroidDeviceIDRequest, AndroidDeviceId) == 0x0018);
static_assert(offsetof(FClientLoginWithAndroidDeviceIDRequest, CustomTags) == 0x0030);
static_assert(offsetof(FClientLoginWithAndroidDeviceIDRequest, EncryptedRequest) == 0x0038);
static_assert(offsetof(FClientLoginWithAndroidDeviceIDRequest, InfoRequestParameters) == 0x0048);
static_assert(offsetof(FClientLoginWithAndroidDeviceIDRequest, OS) == 0x0050);
static_assert(offsetof(FClientLoginWithAndroidDeviceIDRequest, PlayerSecret) == 0x0060);
static_assert(offsetof(FClientLoginWithAppleRequest, CustomTags) == 0x0010);
static_assert(offsetof(FClientLoginWithAppleRequest, EncryptedRequest) == 0x0018);
static_assert(offsetof(FClientLoginWithAppleRequest, IdentityToken) == 0x0028);
static_assert(offsetof(FClientLoginWithAppleRequest, InfoRequestParameters) == 0x0038);
static_assert(offsetof(FClientLoginWithAppleRequest, PlayerSecret) == 0x0040);
static_assert(offsetof(FClientLoginWithCustomIDRequest, CustomId) == 0x0010);
static_assert(offsetof(FClientLoginWithCustomIDRequest, CustomTags) == 0x0020);
static_assert(offsetof(FClientLoginWithCustomIDRequest, EncryptedRequest) == 0x0028);
static_assert(offsetof(FClientLoginWithCustomIDRequest, InfoRequestParameters) == 0x0038);
static_assert(offsetof(FClientLoginWithCustomIDRequest, PlayerSecret) == 0x0040);
static_assert(offsetof(FClientLoginWithEmailAddressRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientLoginWithEmailAddressRequest, Email) == 0x0010);
static_assert(offsetof(FClientLoginWithEmailAddressRequest, InfoRequestParameters) == 0x0020);
static_assert(offsetof(FClientLoginWithEmailAddressRequest, Password) == 0x0028);
static_assert(offsetof(FClientLoginWithFacebookRequest, AccessToken) == 0x0008);
static_assert(offsetof(FClientLoginWithFacebookRequest, CustomTags) == 0x0020);
static_assert(offsetof(FClientLoginWithFacebookRequest, EncryptedRequest) == 0x0028);
static_assert(offsetof(FClientLoginWithFacebookRequest, InfoRequestParameters) == 0x0038);
static_assert(offsetof(FClientLoginWithFacebookRequest, PlayerSecret) == 0x0040);
static_assert(offsetof(FClientLoginWithFacebookInstantGamesIdRequest, CustomTags) == 0x0010);
static_assert(offsetof(FClientLoginWithFacebookInstantGamesIdRequest, EncryptedRequest) == 0x0018);
static_assert(offsetof(FClientLoginWithFacebookInstantGamesIdRequest, FacebookInstantGamesSignature) == 0x0028);
static_assert(offsetof(FClientLoginWithFacebookInstantGamesIdRequest, InfoRequestParameters) == 0x0038);
static_assert(offsetof(FClientLoginWithFacebookInstantGamesIdRequest, PlayerSecret) == 0x0040);
static_assert(offsetof(FClientLoginWithGameCenterRequest, CustomTags) == 0x0010);
static_assert(offsetof(FClientLoginWithGameCenterRequest, EncryptedRequest) == 0x0018);
static_assert(offsetof(FClientLoginWithGameCenterRequest, InfoRequestParameters) == 0x0028);
static_assert(offsetof(FClientLoginWithGameCenterRequest, PlayerId) == 0x0030);
static_assert(offsetof(FClientLoginWithGameCenterRequest, PlayerSecret) == 0x0040);
static_assert(offsetof(FClientLoginWithGameCenterRequest, PublicKeyUrl) == 0x0050);
static_assert(offsetof(FClientLoginWithGameCenterRequest, Salt) == 0x0060);
static_assert(offsetof(FClientLoginWithGameCenterRequest, Signature) == 0x0070);
static_assert(offsetof(FClientLoginWithGameCenterRequest, Timestamp) == 0x0080);
static_assert(offsetof(FClientLoginWithGoogleAccountRequest, CustomTags) == 0x0010);
static_assert(offsetof(FClientLoginWithGoogleAccountRequest, EncryptedRequest) == 0x0018);
static_assert(offsetof(FClientLoginWithGoogleAccountRequest, InfoRequestParameters) == 0x0028);
static_assert(offsetof(FClientLoginWithGoogleAccountRequest, PlayerSecret) == 0x0030);
static_assert(offsetof(FClientLoginWithGoogleAccountRequest, ServerAuthCode) == 0x0040);
static_assert(offsetof(FClientLoginWithIOSDeviceIDRequest, CustomTags) == 0x0010);
static_assert(offsetof(FClientLoginWithIOSDeviceIDRequest, DeviceID) == 0x0018);
static_assert(offsetof(FClientLoginWithIOSDeviceIDRequest, DeviceModel) == 0x0028);
static_assert(offsetof(FClientLoginWithIOSDeviceIDRequest, EncryptedRequest) == 0x0038);
static_assert(offsetof(FClientLoginWithIOSDeviceIDRequest, InfoRequestParameters) == 0x0048);
static_assert(offsetof(FClientLoginWithIOSDeviceIDRequest, OS) == 0x0050);
static_assert(offsetof(FClientLoginWithIOSDeviceIDRequest, PlayerSecret) == 0x0060);
static_assert(offsetof(FClientLoginWithKongregateRequest, AuthTicket) == 0x0008);
static_assert(offsetof(FClientLoginWithKongregateRequest, CustomTags) == 0x0020);
static_assert(offsetof(FClientLoginWithKongregateRequest, EncryptedRequest) == 0x0028);
static_assert(offsetof(FClientLoginWithKongregateRequest, InfoRequestParameters) == 0x0038);
static_assert(offsetof(FClientLoginWithKongregateRequest, KongregateId) == 0x0040);
static_assert(offsetof(FClientLoginWithKongregateRequest, PlayerSecret) == 0x0050);
static_assert(offsetof(FClientLoginWithNintendoServiceAccountRequest, CustomTags) == 0x0010);
static_assert(offsetof(FClientLoginWithNintendoServiceAccountRequest, EncryptedRequest) == 0x0018);
static_assert(offsetof(FClientLoginWithNintendoServiceAccountRequest, IdentityToken) == 0x0028);
static_assert(offsetof(FClientLoginWithNintendoServiceAccountRequest, InfoRequestParameters) == 0x0038);
static_assert(offsetof(FClientLoginWithNintendoServiceAccountRequest, PlayerSecret) == 0x0040);
static_assert(offsetof(FClientLoginWithNintendoSwitchDeviceIdRequest, CustomTags) == 0x0010);
static_assert(offsetof(FClientLoginWithNintendoSwitchDeviceIdRequest, EncryptedRequest) == 0x0018);
static_assert(offsetof(FClientLoginWithNintendoSwitchDeviceIdRequest, InfoRequestParameters) == 0x0028);
static_assert(offsetof(FClientLoginWithNintendoSwitchDeviceIdRequest, NintendoSwitchDeviceId) == 0x0030);
static_assert(offsetof(FClientLoginWithNintendoSwitchDeviceIdRequest, PlayerSecret) == 0x0040);
static_assert(offsetof(FClientLoginWithOpenIdConnectRequest, ConnectionId) == 0x0008);
static_assert(offsetof(FClientLoginWithOpenIdConnectRequest, CustomTags) == 0x0020);
static_assert(offsetof(FClientLoginWithOpenIdConnectRequest, EncryptedRequest) == 0x0028);
static_assert(offsetof(FClientLoginWithOpenIdConnectRequest, IdToken) == 0x0038);
static_assert(offsetof(FClientLoginWithOpenIdConnectRequest, InfoRequestParameters) == 0x0048);
static_assert(offsetof(FClientLoginWithOpenIdConnectRequest, PlayerSecret) == 0x0050);
static_assert(offsetof(FClientLoginWithPlayFabRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientLoginWithPlayFabRequest, InfoRequestParameters) == 0x0010);
static_assert(offsetof(FClientLoginWithPlayFabRequest, Password) == 0x0018);
static_assert(offsetof(FClientLoginWithPlayFabRequest, Username) == 0x0028);
static_assert(offsetof(FClientLoginWithPSNRequest, AuthCode) == 0x0008);
static_assert(offsetof(FClientLoginWithPSNRequest, CustomTags) == 0x0020);
static_assert(offsetof(FClientLoginWithPSNRequest, EncryptedRequest) == 0x0028);
static_assert(offsetof(FClientLoginWithPSNRequest, InfoRequestParameters) == 0x0038);
static_assert(offsetof(FClientLoginWithPSNRequest, PlayerSecret) == 0x0048);
static_assert(offsetof(FClientLoginWithPSNRequest, RedirectUri) == 0x0058);
static_assert(offsetof(FClientLoginWithSteamRequest, CustomTags) == 0x0010);
static_assert(offsetof(FClientLoginWithSteamRequest, EncryptedRequest) == 0x0018);
static_assert(offsetof(FClientLoginWithSteamRequest, InfoRequestParameters) == 0x0028);
static_assert(offsetof(FClientLoginWithSteamRequest, PlayerSecret) == 0x0030);
static_assert(offsetof(FClientLoginWithSteamRequest, SteamTicket) == 0x0040);
static_assert(offsetof(FClientLoginWithTwitchRequest, AccessToken) == 0x0008);
static_assert(offsetof(FClientLoginWithTwitchRequest, CustomTags) == 0x0020);
static_assert(offsetof(FClientLoginWithTwitchRequest, EncryptedRequest) == 0x0028);
static_assert(offsetof(FClientLoginWithTwitchRequest, InfoRequestParameters) == 0x0038);
static_assert(offsetof(FClientLoginWithTwitchRequest, PlayerSecret) == 0x0040);
static_assert(offsetof(FClientLoginWithXboxRequest, CustomTags) == 0x0010);
static_assert(offsetof(FClientLoginWithXboxRequest, EncryptedRequest) == 0x0018);
static_assert(offsetof(FClientLoginWithXboxRequest, InfoRequestParameters) == 0x0028);
static_assert(offsetof(FClientLoginWithXboxRequest, PlayerSecret) == 0x0030);
static_assert(offsetof(FClientLoginWithXboxRequest, XboxToken) == 0x0040);
static_assert(offsetof(FClientMatchmakeRequest, BuildVersion) == 0x0008);
static_assert(offsetof(FClientMatchmakeRequest, CharacterId) == 0x0018);
static_assert(offsetof(FClientMatchmakeRequest, CustomTags) == 0x0028);
static_assert(offsetof(FClientMatchmakeRequest, GAMEMODE) == 0x0030);
static_assert(offsetof(FClientMatchmakeRequest, LobbyId) == 0x0040);
static_assert(offsetof(FClientMatchmakeRequest, Region) == 0x0050);
static_assert(offsetof(FClientMatchmakeRequest, StatisticName) == 0x0058);
static_assert(offsetof(FClientMatchmakeRequest, TagFilter) == 0x0068);
static_assert(offsetof(FClientOpenTradeRequest, AllowedPlayerIds) == 0x0008);
static_assert(offsetof(FClientOpenTradeRequest, OfferedInventoryInstanceIds) == 0x0018);
static_assert(offsetof(FClientOpenTradeRequest, RequestedCatalogItemIds) == 0x0028);
static_assert(offsetof(FClientPayForPurchaseRequest, Currency) == 0x0008);
static_assert(offsetof(FClientPayForPurchaseRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientPayForPurchaseRequest, OrderId) == 0x0020);
static_assert(offsetof(FClientPayForPurchaseRequest, ProviderName) == 0x0030);
static_assert(offsetof(FClientPayForPurchaseRequest, ProviderTransactionId) == 0x0040);
static_assert(offsetof(FClientPurchaseItemRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientPurchaseItemRequest, CharacterId) == 0x0018);
static_assert(offsetof(FClientPurchaseItemRequest, CustomTags) == 0x0028);
static_assert(offsetof(FClientPurchaseItemRequest, ItemId) == 0x0030);
static_assert(offsetof(FClientPurchaseItemRequest, StoreId) == 0x0048);
static_assert(offsetof(FClientPurchaseItemRequest, VirtualCurrency) == 0x0058);
static_assert(offsetof(FClientRedeemCouponRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientRedeemCouponRequest, CharacterId) == 0x0018);
static_assert(offsetof(FClientRedeemCouponRequest, CouponCode) == 0x0028);
static_assert(offsetof(FClientRedeemCouponRequest, CustomTags) == 0x0038);
static_assert(offsetof(FClientRefreshPSNAuthTokenRequest, AuthCode) == 0x0008);
static_assert(offsetof(FClientRefreshPSNAuthTokenRequest, RedirectUri) == 0x0020);
static_assert(offsetof(FClientRegisterForIOSPushNotificationRequest, ConfirmationMessage) == 0x0008);
static_assert(offsetof(FClientRegisterForIOSPushNotificationRequest, DeviceToken) == 0x0018);
static_assert(offsetof(FClientRegisterPlayFabUserRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientRegisterPlayFabUserRequest, DisplayName) == 0x0010);
static_assert(offsetof(FClientRegisterPlayFabUserRequest, Email) == 0x0020);
static_assert(offsetof(FClientRegisterPlayFabUserRequest, EncryptedRequest) == 0x0030);
static_assert(offsetof(FClientRegisterPlayFabUserRequest, InfoRequestParameters) == 0x0040);
static_assert(offsetof(FClientRegisterPlayFabUserRequest, Password) == 0x0048);
static_assert(offsetof(FClientRegisterPlayFabUserRequest, PlayerSecret) == 0x0058);
static_assert(offsetof(FClientRegisterPlayFabUserRequest, Username) == 0x0070);
static_assert(offsetof(FClientRemoveContactEmailRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientRemoveFriendRequest, FriendPlayFabId) == 0x0008);
static_assert(offsetof(FClientRemoveGenericIDRequest, GenericId) == 0x0008);
static_assert(offsetof(FClientRemoveSharedGroupMembersRequest, PlayFabIds) == 0x0008);
static_assert(offsetof(FClientRemoveSharedGroupMembersRequest, SharedGroupId) == 0x0018);
static_assert(offsetof(FClientReportAdActivityRequest, Activity) == 0x0008);
static_assert(offsetof(FClientReportAdActivityRequest, CustomTags) == 0x0010);
static_assert(offsetof(FClientReportAdActivityRequest, PlacementId) == 0x0018);
static_assert(offsetof(FClientReportAdActivityRequest, RewardId) == 0x0028);
static_assert(offsetof(FClientDeviceInfoRequest, Info) == 0x0008);
static_assert(offsetof(FClientReportPlayerClientRequest, Comment) == 0x0008);
static_assert(offsetof(FClientReportPlayerClientRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientReportPlayerClientRequest, ReporteeId) == 0x0020);
static_assert(offsetof(FClientRestoreIOSPurchasesRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientRestoreIOSPurchasesRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientRestoreIOSPurchasesRequest, ReceiptData) == 0x0020);
static_assert(offsetof(FClientRewardAdActivityRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientRewardAdActivityRequest, PlacementId) == 0x0010);
static_assert(offsetof(FClientRewardAdActivityRequest, RewardId) == 0x0020);
static_assert(offsetof(FClientSendAccountRecoveryEmailRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientSendAccountRecoveryEmailRequest, Email) == 0x0010);
static_assert(offsetof(FClientSendAccountRecoveryEmailRequest, EmailTemplateId) == 0x0020);
static_assert(offsetof(FClientSetFriendTagsRequest, FriendPlayFabId) == 0x0008);
static_assert(offsetof(FClientSetFriendTagsRequest, Tags) == 0x0018);
static_assert(offsetof(FClientSetPlayerSecretRequest, EncryptedRequest) == 0x0008);
static_assert(offsetof(FClientSetPlayerSecretRequest, PlayerSecret) == 0x0018);
static_assert(offsetof(FClientStartPurchaseRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientStartPurchaseRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientStartPurchaseRequest, Items) == 0x0020);
static_assert(offsetof(FClientStartPurchaseRequest, StoreId) == 0x0030);
static_assert(offsetof(FClientSubtractUserVirtualCurrencyRequest, CustomTags) == 0x0010);
static_assert(offsetof(FClientSubtractUserVirtualCurrencyRequest, VirtualCurrency) == 0x0018);
static_assert(offsetof(FClientUnlinkAndroidDeviceIDRequest, AndroidDeviceId) == 0x0008);
static_assert(offsetof(FClientUnlinkAndroidDeviceIDRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientUnlinkAppleRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUnlinkCustomIDRequest, CustomId) == 0x0008);
static_assert(offsetof(FClientUnlinkCustomIDRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientUnlinkFacebookAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUnlinkFacebookInstantGamesIdRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUnlinkFacebookInstantGamesIdRequest, FacebookInstantGamesId) == 0x0010);
static_assert(offsetof(FClientUnlinkGameCenterAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUnlinkGoogleAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUnlinkIOSDeviceIDRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUnlinkIOSDeviceIDRequest, DeviceID) == 0x0010);
static_assert(offsetof(FClientUnlinkKongregateAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUnlinkNintendoServiceAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUnlinkNintendoSwitchDeviceIdRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUnlinkNintendoSwitchDeviceIdRequest, NintendoSwitchDeviceId) == 0x0010);
static_assert(offsetof(FClientUnlinkOpenIdConnectRequest, ConnectionId) == 0x0008);
static_assert(offsetof(FClientUnlinkOpenIdConnectRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientUnlinkPSNAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUnlinkSteamAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUnlinkTwitchAccountRequest, AccessToken) == 0x0008);
static_assert(offsetof(FClientUnlinkTwitchAccountRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientUnlinkXboxAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUnlockContainerInstanceRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientUnlockContainerInstanceRequest, CharacterId) == 0x0018);
static_assert(offsetof(FClientUnlockContainerInstanceRequest, ContainerItemInstanceId) == 0x0028);
static_assert(offsetof(FClientUnlockContainerInstanceRequest, CustomTags) == 0x0038);
static_assert(offsetof(FClientUnlockContainerInstanceRequest, KeyItemInstanceId) == 0x0040);
static_assert(offsetof(FClientUnlockContainerItemRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientUnlockContainerItemRequest, CharacterId) == 0x0018);
static_assert(offsetof(FClientUnlockContainerItemRequest, ContainerItemId) == 0x0028);
static_assert(offsetof(FClientUnlockContainerItemRequest, CustomTags) == 0x0038);
static_assert(offsetof(FClientUpdateAvatarUrlRequest, ImageUrl) == 0x0008);
static_assert(offsetof(FClientUpdateCharacterDataRequest, CharacterId) == 0x0008);
static_assert(offsetof(FClientUpdateCharacterDataRequest, CustomTags) == 0x0018);
static_assert(offsetof(FClientUpdateCharacterDataRequest, Data) == 0x0020);
static_assert(offsetof(FClientUpdateCharacterDataRequest, KeysToRemove) == 0x0028);
static_assert(offsetof(FClientUpdateCharacterDataRequest, Permission) == 0x0038);
static_assert(offsetof(FClientUpdateCharacterStatisticsRequest, CharacterId) == 0x0008);
static_assert(offsetof(FClientUpdateCharacterStatisticsRequest, CharacterStatistics) == 0x0018);
static_assert(offsetof(FClientUpdateCharacterStatisticsRequest, CustomTags) == 0x0020);
static_assert(offsetof(FClientUpdatePlayerStatisticsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUpdatePlayerStatisticsRequest, Statistics) == 0x0010);
static_assert(offsetof(FClientUpdateSharedGroupDataRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUpdateSharedGroupDataRequest, Data) == 0x0010);
static_assert(offsetof(FClientUpdateSharedGroupDataRequest, KeysToRemove) == 0x0018);
static_assert(offsetof(FClientUpdateSharedGroupDataRequest, Permission) == 0x0028);
static_assert(offsetof(FClientUpdateSharedGroupDataRequest, SharedGroupId) == 0x0030);
static_assert(offsetof(FClientUpdateUserDataRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUpdateUserDataRequest, Data) == 0x0010);
static_assert(offsetof(FClientUpdateUserDataRequest, KeysToRemove) == 0x0018);
static_assert(offsetof(FClientUpdateUserDataRequest, Permission) == 0x0028);
static_assert(offsetof(FClientUpdateUserTitleDisplayNameRequest, CustomTags) == 0x0008);
static_assert(offsetof(FClientUpdateUserTitleDisplayNameRequest, DisplayName) == 0x0010);
static_assert(offsetof(FClientValidateAmazonReceiptRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientValidateAmazonReceiptRequest, CurrencyCode) == 0x0018);
static_assert(offsetof(FClientValidateAmazonReceiptRequest, CustomTags) == 0x0028);
static_assert(offsetof(FClientValidateAmazonReceiptRequest, ReceiptId) == 0x0038);
static_assert(offsetof(FClientValidateAmazonReceiptRequest, UserId) == 0x0048);
static_assert(offsetof(FClientValidateGooglePlayPurchaseRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientValidateGooglePlayPurchaseRequest, CurrencyCode) == 0x0018);
static_assert(offsetof(FClientValidateGooglePlayPurchaseRequest, CustomTags) == 0x0028);
static_assert(offsetof(FClientValidateGooglePlayPurchaseRequest, ReceiptJson) == 0x0038);
static_assert(offsetof(FClientValidateGooglePlayPurchaseRequest, Signature) == 0x0048);
static_assert(offsetof(FClientValidateIOSReceiptRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientValidateIOSReceiptRequest, CurrencyCode) == 0x0018);
static_assert(offsetof(FClientValidateIOSReceiptRequest, CustomTags) == 0x0028);
static_assert(offsetof(FClientValidateIOSReceiptRequest, ReceiptData) == 0x0038);
static_assert(offsetof(FClientValidateWindowsReceiptRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FClientValidateWindowsReceiptRequest, CurrencyCode) == 0x0018);
static_assert(offsetof(FClientValidateWindowsReceiptRequest, CustomTags) == 0x0028);
static_assert(offsetof(FClientValidateWindowsReceiptRequest, Receipt) == 0x0038);
static_assert(offsetof(FClientWriteClientCharacterEventRequest, Body) == 0x0008);
static_assert(offsetof(FClientWriteClientCharacterEventRequest, CharacterId) == 0x0010);
static_assert(offsetof(FClientWriteClientCharacterEventRequest, CustomTags) == 0x0020);
static_assert(offsetof(FClientWriteClientCharacterEventRequest, EventName) == 0x0028);
static_assert(offsetof(FClientWriteClientCharacterEventRequest, Timestamp) == 0x0038);
static_assert(offsetof(FClientWriteClientPlayerEventRequest, Body) == 0x0008);
static_assert(offsetof(FClientWriteClientPlayerEventRequest, CustomTags) == 0x0010);
static_assert(offsetof(FClientWriteClientPlayerEventRequest, EventName) == 0x0018);
static_assert(offsetof(FClientWriteClientPlayerEventRequest, Timestamp) == 0x0028);
static_assert(offsetof(FClientWriteTitleEventRequest, Body) == 0x0008);
static_assert(offsetof(FClientWriteTitleEventRequest, CustomTags) == 0x0010);
static_assert(offsetof(FClientWriteTitleEventRequest, EventName) == 0x0018);
static_assert(offsetof(FClientWriteTitleEventRequest, Timestamp) == 0x0028);
static_assert(offsetof(FCloudScriptExecuteCloudScriptResult, Error) == 0x0010);
static_assert(offsetof(FCloudScriptExecuteCloudScriptResult, FunctionName) == 0x0020);
static_assert(offsetof(FCloudScriptExecuteCloudScriptResult, FunctionResult) == 0x0030);
static_assert(offsetof(FCloudScriptExecuteCloudScriptResult, Logs) == 0x0040);
static_assert(offsetof(FCloudScriptExecuteFunctionResult, Error) == 0x0008);
static_assert(offsetof(FCloudScriptExecuteFunctionResult, FunctionName) == 0x0018);
static_assert(offsetof(FCloudScriptExecuteFunctionResult, FunctionResult) == 0x0028);
static_assert(offsetof(FCloudScriptGetFunctionResult, ConnectionString) == 0x0008);
static_assert(offsetof(FCloudScriptGetFunctionResult, FunctionUrl) == 0x0018);
static_assert(offsetof(FCloudScriptGetFunctionResult, QueueName) == 0x0028);
static_assert(offsetof(FCloudScriptGetFunctionResult, TriggerType) == 0x0038);
static_assert(offsetof(FCloudScriptListFunctionsResult, Functions) == 0x0008);
static_assert(offsetof(FCloudScriptListHttpFunctionsResult, Functions) == 0x0008);
static_assert(offsetof(FCloudScriptListQueuedFunctionsResult, Functions) == 0x0008);
static_assert(offsetof(FCloudScriptExecuteEntityCloudScriptRequest, CustomTags) == 0x0008);
static_assert(offsetof(FCloudScriptExecuteEntityCloudScriptRequest, Entity) == 0x0010);
static_assert(offsetof(FCloudScriptExecuteEntityCloudScriptRequest, FunctionName) == 0x0018);
static_assert(offsetof(FCloudScriptExecuteEntityCloudScriptRequest, FunctionParameter) == 0x0028);
static_assert(offsetof(FCloudScriptExecuteEntityCloudScriptRequest, RevisionSelection) == 0x0031);
static_assert(offsetof(FCloudScriptExecuteFunctionRequest, CustomTags) == 0x0008);
static_assert(offsetof(FCloudScriptExecuteFunctionRequest, Entity) == 0x0010);
static_assert(offsetof(FCloudScriptExecuteFunctionRequest, FunctionName) == 0x0018);
static_assert(offsetof(FCloudScriptExecuteFunctionRequest, FunctionParameter) == 0x0028);
static_assert(offsetof(FCloudScriptGetFunctionRequest, CustomTags) == 0x0008);
static_assert(offsetof(FCloudScriptGetFunctionRequest, FunctionName) == 0x0010);
static_assert(offsetof(FCloudScriptListFunctionsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FCloudScriptPostFunctionResultForEntityTriggeredActionRequest, CustomTags) == 0x0008);
static_assert(offsetof(FCloudScriptPostFunctionResultForEntityTriggeredActionRequest, Entity) == 0x0010);
static_assert(offsetof(FCloudScriptPostFunctionResultForEntityTriggeredActionRequest, FunctionResult) == 0x0018);
static_assert(offsetof(FCloudScriptPostFunctionResultForFunctionExecutionRequest, CustomTags) == 0x0008);
static_assert(offsetof(FCloudScriptPostFunctionResultForFunctionExecutionRequest, Entity) == 0x0010);
static_assert(offsetof(FCloudScriptPostFunctionResultForFunctionExecutionRequest, FunctionResult) == 0x0018);
static_assert(offsetof(FCloudScriptPostFunctionResultForPlayerTriggeredActionRequest, CustomTags) == 0x0008);
static_assert(offsetof(FCloudScriptPostFunctionResultForPlayerTriggeredActionRequest, Entity) == 0x0010);
static_assert(offsetof(FCloudScriptPostFunctionResultForPlayerTriggeredActionRequest, FunctionResult) == 0x0018);
static_assert(offsetof(FCloudScriptPostFunctionResultForPlayerTriggeredActionRequest, PlayerProfile) == 0x0020);
static_assert(offsetof(FCloudScriptPostFunctionResultForPlayerTriggeredActionRequest, PlayStreamEventEnvelope) == 0x0028);
static_assert(offsetof(FCloudScriptPostFunctionResultForScheduledTaskRequest, CustomTags) == 0x0008);
static_assert(offsetof(FCloudScriptPostFunctionResultForScheduledTaskRequest, Entity) == 0x0010);
static_assert(offsetof(FCloudScriptPostFunctionResultForScheduledTaskRequest, FunctionResult) == 0x0018);
static_assert(offsetof(FCloudScriptPostFunctionResultForScheduledTaskRequest, ScheduledTaskId) == 0x0020);
static_assert(offsetof(FCloudScriptRegisterHttpFunctionRequest, CustomTags) == 0x0008);
static_assert(offsetof(FCloudScriptRegisterHttpFunctionRequest, FunctionName) == 0x0010);
static_assert(offsetof(FCloudScriptRegisterHttpFunctionRequest, FunctionUrl) == 0x0020);
static_assert(offsetof(FCloudScriptRegisterQueuedFunctionRequest, ConnectionString) == 0x0008);
static_assert(offsetof(FCloudScriptRegisterQueuedFunctionRequest, CustomTags) == 0x0018);
static_assert(offsetof(FCloudScriptRegisterQueuedFunctionRequest, FunctionName) == 0x0020);
static_assert(offsetof(FCloudScriptRegisterQueuedFunctionRequest, QueueName) == 0x0030);
static_assert(offsetof(FCloudScriptUnregisterFunctionRequest, CustomTags) == 0x0008);
static_assert(offsetof(FCloudScriptUnregisterFunctionRequest, FunctionName) == 0x0010);
static_assert(offsetof(FDataAbortFileUploadsResponse, Entity) == 0x0008);
static_assert(offsetof(FDataAbortFileUploadsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FDataAbortFileUploadsRequest, Entity) == 0x0010);
static_assert(offsetof(FDataAbortFileUploadsRequest, FileNames) == 0x0018);
static_assert(offsetof(FDataDeleteFilesResponse, Entity) == 0x0008);
static_assert(offsetof(FDataFinalizeFileUploadsResponse, Entity) == 0x0008);
static_assert(offsetof(FDataFinalizeFileUploadsResponse, MetaData) == 0x0010);
static_assert(offsetof(FDataGetFilesResponse, Entity) == 0x0008);
static_assert(offsetof(FDataGetFilesResponse, MetaData) == 0x0010);
static_assert(offsetof(FDataGetObjectsResponse, Entity) == 0x0008);
static_assert(offsetof(FDataGetObjectsResponse, Objects) == 0x0010);
static_assert(offsetof(FDataInitiateFileUploadsResponse, Entity) == 0x0008);
static_assert(offsetof(FDataInitiateFileUploadsResponse, UploadDetails) == 0x0018);
static_assert(offsetof(FDataSetObjectsResponse, SetResults) == 0x0010);
static_assert(offsetof(FDataDeleteFilesRequest, CustomTags) == 0x0008);
static_assert(offsetof(FDataDeleteFilesRequest, Entity) == 0x0010);
static_assert(offsetof(FDataDeleteFilesRequest, FileNames) == 0x0018);
static_assert(offsetof(FDataFinalizeFileUploadsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FDataFinalizeFileUploadsRequest, Entity) == 0x0010);
static_assert(offsetof(FDataFinalizeFileUploadsRequest, FileNames) == 0x0018);
static_assert(offsetof(FDataGetFilesRequest, CustomTags) == 0x0008);
static_assert(offsetof(FDataGetFilesRequest, Entity) == 0x0010);
static_assert(offsetof(FDataGetObjectsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FDataGetObjectsRequest, Entity) == 0x0010);
static_assert(offsetof(FDataInitiateFileUploadsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FDataInitiateFileUploadsRequest, Entity) == 0x0010);
static_assert(offsetof(FDataInitiateFileUploadsRequest, FileNames) == 0x0018);
static_assert(offsetof(FDataSetObjectsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FDataSetObjectsRequest, Entity) == 0x0010);
static_assert(offsetof(FDataSetObjectsRequest, Objects) == 0x0020);
static_assert(offsetof(FEconomyCreateDraftItemResponse, Item) == 0x0008);
static_assert(offsetof(FEconomyCreateDraftItemRequest, CustomTags) == 0x0008);
static_assert(offsetof(FEconomyCreateDraftItemRequest, Item) == 0x0010);
static_assert(offsetof(FEconomyCreateUploadUrlsResponse, UploadUrls) == 0x0008);
static_assert(offsetof(FEconomyCreateUploadUrlsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FEconomyCreateUploadUrlsRequest, Files) == 0x0010);
static_assert(offsetof(FEconomyGetCatalogConfigResponse, Config) == 0x0008);
static_assert(offsetof(FEconomyGetDraftItemResponse, Item) == 0x0008);
static_assert(offsetof(FEconomyGetDraftItemsResponse, ContinuationToken) == 0x0008);
static_assert(offsetof(FEconomyGetDraftItemsResponse, Items) == 0x0018);
static_assert(offsetof(FEconomyGetEntityDraftItemsResponse, ContinuationToken) == 0x0008);
static_assert(offsetof(FEconomyGetEntityDraftItemsResponse, Items) == 0x0018);
static_assert(offsetof(FEconomyGetEntityItemReviewResponse, Review) == 0x0008);
static_assert(offsetof(FEconomyGetItemResponse, Item) == 0x0008);
static_assert(offsetof(FEconomyGetItemModerationStateResponse, State) == 0x0008);
static_assert(offsetof(FEconomyGetItemPublishStatusResponse, Result) == 0x0008);
static_assert(offsetof(FEconomyGetItemPublishStatusResponse, StatusMessage) == 0x0010);
static_assert(offsetof(FEconomyGetItemReviewsResponse, ContinuationToken) == 0x0008);
static_assert(offsetof(FEconomyGetItemReviewsResponse, Reviews) == 0x0018);
static_assert(offsetof(FEconomyGetItemReviewSummaryResponse, LeastFavorableReview) == 0x0008);
static_assert(offsetof(FEconomyGetItemReviewSummaryResponse, MostFavorableReview) == 0x0010);
static_assert(offsetof(FEconomyGetItemReviewSummaryResponse, Rating) == 0x0018);
static_assert(offsetof(FEconomyGetItemsResponse, Items) == 0x0008);
static_assert(offsetof(FEconomySearchItemsResponse, ContinuationToken) == 0x0008);
static_assert(offsetof(FEconomySearchItemsResponse, Items) == 0x0018);
static_assert(offsetof(FEconomyUpdateDraftItemResponse, Item) == 0x0008);
static_assert(offsetof(FEconomyDeleteEntityItemReviewsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FEconomyDeleteEntityItemReviewsRequest, Entity) == 0x0010);
static_assert(offsetof(FEconomyDeleteItemRequest, AlternateId) == 0x0008);
static_assert(offsetof(FEconomyDeleteItemRequest, CustomTags) == 0x0010);
static_assert(offsetof(FEconomyDeleteItemRequest, Entity) == 0x0018);
static_assert(offsetof(FEconomyDeleteItemRequest, ID) == 0x0020);
static_assert(offsetof(FEconomyGetCatalogConfigRequest, CustomTags) == 0x0008);
static_assert(offsetof(FEconomyGetDraftItemRequest, AlternateId) == 0x0008);
static_assert(offsetof(FEconomyGetDraftItemRequest, CustomTags) == 0x0010);
static_assert(offsetof(FEconomyGetDraftItemRequest, Entity) == 0x0018);
static_assert(offsetof(FEconomyGetDraftItemRequest, ID) == 0x0020);
static_assert(offsetof(FEconomyGetDraftItemsRequest, AlternateIds) == 0x0008);
static_assert(offsetof(FEconomyGetDraftItemsRequest, CustomTags) == 0x0018);
static_assert(offsetof(FEconomyGetDraftItemsRequest, Entity) == 0x0020);
static_assert(offsetof(FEconomyGetDraftItemsRequest, Ids) == 0x0028);
static_assert(offsetof(FEconomyGetEntityDraftItemsRequest, ContinuationToken) == 0x0008);
static_assert(offsetof(FEconomyGetEntityDraftItemsRequest, CustomTags) == 0x0020);
static_assert(offsetof(FEconomyGetEntityDraftItemsRequest, Entity) == 0x0028);
static_assert(offsetof(FEconomyGetEntityItemReviewRequest, AlternateId) == 0x0008);
static_assert(offsetof(FEconomyGetEntityItemReviewRequest, CustomTags) == 0x0010);
static_assert(offsetof(FEconomyGetEntityItemReviewRequest, Entity) == 0x0018);
static_assert(offsetof(FEconomyGetEntityItemReviewRequest, ID) == 0x0020);
static_assert(offsetof(FEconomyGetItemRequest, AlternateId) == 0x0008);
static_assert(offsetof(FEconomyGetItemRequest, CustomTags) == 0x0010);
static_assert(offsetof(FEconomyGetItemRequest, Entity) == 0x0018);
static_assert(offsetof(FEconomyGetItemRequest, ID) == 0x0020);
static_assert(offsetof(FEconomyGetItemModerationStateRequest, AlternateId) == 0x0008);
static_assert(offsetof(FEconomyGetItemModerationStateRequest, CustomTags) == 0x0010);
static_assert(offsetof(FEconomyGetItemModerationStateRequest, ID) == 0x0018);
static_assert(offsetof(FEconomyGetItemPublishStatusRequest, AlternateId) == 0x0008);
static_assert(offsetof(FEconomyGetItemPublishStatusRequest, CustomTags) == 0x0010);
static_assert(offsetof(FEconomyGetItemPublishStatusRequest, Entity) == 0x0018);
static_assert(offsetof(FEconomyGetItemPublishStatusRequest, ID) == 0x0020);
static_assert(offsetof(FEconomyGetItemReviewsRequest, AlternateId) == 0x0008);
static_assert(offsetof(FEconomyGetItemReviewsRequest, ContinuationToken) == 0x0010);
static_assert(offsetof(FEconomyGetItemReviewsRequest, CustomTags) == 0x0028);
static_assert(offsetof(FEconomyGetItemReviewsRequest, ID) == 0x0030);
static_assert(offsetof(FEconomyGetItemReviewsRequest, OrderBy) == 0x0040);
static_assert(offsetof(FEconomyGetItemReviewSummaryRequest, AlternateId) == 0x0008);
static_assert(offsetof(FEconomyGetItemReviewSummaryRequest, CustomTags) == 0x0010);
static_assert(offsetof(FEconomyGetItemReviewSummaryRequest, ID) == 0x0018);
static_assert(offsetof(FEconomyGetItemsRequest, AlternateIds) == 0x0008);
static_assert(offsetof(FEconomyGetItemsRequest, CustomTags) == 0x0018);
static_assert(offsetof(FEconomyGetItemsRequest, Entity) == 0x0020);
static_assert(offsetof(FEconomyGetItemsRequest, Ids) == 0x0028);
static_assert(offsetof(FEconomyPublishDraftItemRequest, AlternateId) == 0x0008);
static_assert(offsetof(FEconomyPublishDraftItemRequest, CustomTags) == 0x0010);
static_assert(offsetof(FEconomyPublishDraftItemRequest, Entity) == 0x0018);
static_assert(offsetof(FEconomyPublishDraftItemRequest, ETag) == 0x0020);
static_assert(offsetof(FEconomyPublishDraftItemRequest, ID) == 0x0030);
static_assert(offsetof(FEconomyReportItemRequest, AlternateId) == 0x0008);
static_assert(offsetof(FEconomyReportItemRequest, ConcernCategory) == 0x0010);
static_assert(offsetof(FEconomyReportItemRequest, CustomTags) == 0x0018);
static_assert(offsetof(FEconomyReportItemRequest, Entity) == 0x0020);
static_assert(offsetof(FEconomyReportItemRequest, ID) == 0x0028);
static_assert(offsetof(FEconomyReportItemRequest, Reason) == 0x0038);
static_assert(offsetof(FEconomyReportItemReviewRequest, AlternateId) == 0x0008);
static_assert(offsetof(FEconomyReportItemReviewRequest, ConcernCategory) == 0x0010);
static_assert(offsetof(FEconomyReportItemReviewRequest, CustomTags) == 0x0018);
static_assert(offsetof(FEconomyReportItemReviewRequest, Entity) == 0x0020);
static_assert(offsetof(FEconomyReportItemReviewRequest, ItemId) == 0x0028);
static_assert(offsetof(FEconomyReportItemReviewRequest, Reason) == 0x0038);
static_assert(offsetof(FEconomyReportItemReviewRequest, ReviewId) == 0x0048);
static_assert(offsetof(FEconomyReviewItemRequest, AlternateId) == 0x0008);
static_assert(offsetof(FEconomyReviewItemRequest, CustomTags) == 0x0010);
static_assert(offsetof(FEconomyReviewItemRequest, Entity) == 0x0018);
static_assert(offsetof(FEconomyReviewItemRequest, ID) == 0x0020);
static_assert(offsetof(FEconomyReviewItemRequest, Review) == 0x0030);
static_assert(offsetof(FEconomySearchItemsRequest, ContinuationToken) == 0x0008);
static_assert(offsetof(FEconomySearchItemsRequest, CustomTags) == 0x0020);
static_assert(offsetof(FEconomySearchItemsRequest, Entity) == 0x0028);
static_assert(offsetof(FEconomySearchItemsRequest, Filter) == 0x0030);
static_assert(offsetof(FEconomySearchItemsRequest, OrderBy) == 0x0040);
static_assert(offsetof(FEconomySearchItemsRequest, Search) == 0x0050);
static_assert(offsetof(FEconomySearchItemsRequest, Select) == 0x0060);
static_assert(offsetof(FEconomySetItemModerationStateRequest, AlternateId) == 0x0008);
static_assert(offsetof(FEconomySetItemModerationStateRequest, CustomTags) == 0x0010);
static_assert(offsetof(FEconomySetItemModerationStateRequest, ID) == 0x0018);
static_assert(offsetof(FEconomySetItemModerationStateRequest, Reason) == 0x0028);
static_assert(offsetof(FEconomySetItemModerationStateRequest, Status) == 0x0038);
static_assert(offsetof(FEconomySubmitItemReviewVoteRequest, AlternateId) == 0x0008);
static_assert(offsetof(FEconomySubmitItemReviewVoteRequest, CustomTags) == 0x0010);
static_assert(offsetof(FEconomySubmitItemReviewVoteRequest, Entity) == 0x0018);
static_assert(offsetof(FEconomySubmitItemReviewVoteRequest, ItemId) == 0x0020);
static_assert(offsetof(FEconomySubmitItemReviewVoteRequest, ReviewId) == 0x0030);
static_assert(offsetof(FEconomySubmitItemReviewVoteRequest, Vote) == 0x0040);
static_assert(offsetof(FEconomyTakedownItemReviewsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FEconomyTakedownItemReviewsRequest, Reviews) == 0x0010);
static_assert(offsetof(FEconomyUpdateCatalogConfigRequest, Config) == 0x0008);
static_assert(offsetof(FEconomyUpdateCatalogConfigRequest, CustomTags) == 0x0010);
static_assert(offsetof(FEconomyUpdateDraftItemRequest, CustomTags) == 0x0008);
static_assert(offsetof(FEconomyUpdateDraftItemRequest, Item) == 0x0010);
static_assert(offsetof(FEventsWriteEventsResponse, AssignedEventIds) == 0x0008);
static_assert(offsetof(FEventsWriteEventsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FEventsWriteEventsRequest, Events) == 0x0010);
static_assert(offsetof(FExperimentationCreateExclusionGroupResult, ExclusionGroupId) == 0x0008);
static_assert(offsetof(FExperimentationCreateExclusionGroupRequest, CustomTags) == 0x0008);
static_assert(offsetof(FExperimentationCreateExclusionGroupRequest, Description) == 0x0010);
static_assert(offsetof(FExperimentationCreateExclusionGroupRequest, Name) == 0x0020);
static_assert(offsetof(FExperimentationCreateExperimentResult, ExperimentId) == 0x0008);
static_assert(offsetof(FExperimentationCreateExperimentRequest, CustomTags) == 0x0008);
static_assert(offsetof(FExperimentationCreateExperimentRequest, Description) == 0x0010);
static_assert(offsetof(FExperimentationCreateExperimentRequest, EndDate) == 0x0020);
static_assert(offsetof(FExperimentationCreateExperimentRequest, ExclusionGroupId) == 0x0030);
static_assert(offsetof(FExperimentationCreateExperimentRequest, ExperimentType) == 0x0044);
static_assert(offsetof(FExperimentationCreateExperimentRequest, Name) == 0x0048);
static_assert(offsetof(FExperimentationCreateExperimentRequest, SegmentId) == 0x0058);
static_assert(offsetof(FExperimentationCreateExperimentRequest, StartDate) == 0x0068);
static_assert(offsetof(FExperimentationCreateExperimentRequest, TitlePlayerAccountTestIds) == 0x0078);
static_assert(offsetof(FExperimentationCreateExperimentRequest, Variants) == 0x0088);
static_assert(offsetof(FExperimentationGetExclusionGroupsResult, ExclusionGroups) == 0x0008);
static_assert(offsetof(FExperimentationGetExclusionGroupTrafficResult, TrafficAllocations) == 0x0008);
static_assert(offsetof(FExperimentationGetExperimentsResult, Experiments) == 0x0008);
static_assert(offsetof(FExperimentationGetLatestScorecardResult, Scorecard) == 0x0008);
static_assert(offsetof(FExperimentationGetTreatmentAssignmentResult, TreatmentAssignment) == 0x0008);
static_assert(offsetof(FExperimentationDeleteExclusionGroupRequest, CustomTags) == 0x0008);
static_assert(offsetof(FExperimentationDeleteExclusionGroupRequest, ExclusionGroupId) == 0x0010);
static_assert(offsetof(FExperimentationDeleteExperimentRequest, CustomTags) == 0x0008);
static_assert(offsetof(FExperimentationDeleteExperimentRequest, ExperimentId) == 0x0010);
static_assert(offsetof(FExperimentationGetExclusionGroupsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FExperimentationGetExclusionGroupTrafficRequest, CustomTags) == 0x0008);
static_assert(offsetof(FExperimentationGetExclusionGroupTrafficRequest, ExclusionGroupId) == 0x0010);
static_assert(offsetof(FExperimentationGetExperimentsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FExperimentationGetLatestScorecardRequest, CustomTags) == 0x0008);
static_assert(offsetof(FExperimentationGetLatestScorecardRequest, ExperimentId) == 0x0010);
static_assert(offsetof(FExperimentationGetTreatmentAssignmentRequest, CustomTags) == 0x0008);
static_assert(offsetof(FExperimentationGetTreatmentAssignmentRequest, Entity) == 0x0010);
static_assert(offsetof(FExperimentationStartExperimentRequest, CustomTags) == 0x0008);
static_assert(offsetof(FExperimentationStartExperimentRequest, ExperimentId) == 0x0010);
static_assert(offsetof(FExperimentationStopExperimentRequest, CustomTags) == 0x0008);
static_assert(offsetof(FExperimentationStopExperimentRequest, ExperimentId) == 0x0010);
static_assert(offsetof(FExperimentationUpdateExclusionGroupRequest, CustomTags) == 0x0008);
static_assert(offsetof(FExperimentationUpdateExclusionGroupRequest, Description) == 0x0010);
static_assert(offsetof(FExperimentationUpdateExclusionGroupRequest, ExclusionGroupId) == 0x0020);
static_assert(offsetof(FExperimentationUpdateExclusionGroupRequest, Name) == 0x0030);
static_assert(offsetof(FExperimentationUpdateExperimentRequest, CustomTags) == 0x0008);
static_assert(offsetof(FExperimentationUpdateExperimentRequest, Description) == 0x0010);
static_assert(offsetof(FExperimentationUpdateExperimentRequest, EndDate) == 0x0020);
static_assert(offsetof(FExperimentationUpdateExperimentRequest, ExclusionGroupId) == 0x0030);
static_assert(offsetof(FExperimentationUpdateExperimentRequest, ExperimentType) == 0x0044);
static_assert(offsetof(FExperimentationUpdateExperimentRequest, ID) == 0x0048);
static_assert(offsetof(FExperimentationUpdateExperimentRequest, Name) == 0x0058);
static_assert(offsetof(FExperimentationUpdateExperimentRequest, SegmentId) == 0x0068);
static_assert(offsetof(FExperimentationUpdateExperimentRequest, StartDate) == 0x0078);
static_assert(offsetof(FExperimentationUpdateExperimentRequest, TitlePlayerAccountTestIds) == 0x0088);
static_assert(offsetof(FExperimentationUpdateExperimentRequest, Variants) == 0x0098);
static_assert(offsetof(FGroupsAcceptGroupApplicationRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsAcceptGroupApplicationRequest, Entity) == 0x0010);
static_assert(offsetof(FGroupsAcceptGroupApplicationRequest, Group) == 0x0018);
static_assert(offsetof(FGroupsAcceptGroupInvitationRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsAcceptGroupInvitationRequest, Entity) == 0x0010);
static_assert(offsetof(FGroupsAcceptGroupInvitationRequest, Group) == 0x0018);
static_assert(offsetof(FGroupsAddMembersRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsAddMembersRequest, Group) == 0x0010);
static_assert(offsetof(FGroupsAddMembersRequest, Members) == 0x0018);
static_assert(offsetof(FGroupsAddMembersRequest, RoleId) == 0x0028);
static_assert(offsetof(FGroupsApplyToGroupResponse, Entity) == 0x0008);
static_assert(offsetof(FGroupsApplyToGroupResponse, Expires) == 0x0010);
static_assert(offsetof(FGroupsApplyToGroupResponse, Group) == 0x0020);
static_assert(offsetof(FGroupsApplyToGroupRequest, CustomTags) == 0x0010);
static_assert(offsetof(FGroupsApplyToGroupRequest, Entity) == 0x0018);
static_assert(offsetof(FGroupsApplyToGroupRequest, Group) == 0x0020);
static_assert(offsetof(FGroupsBlockEntityRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsBlockEntityRequest, Entity) == 0x0010);
static_assert(offsetof(FGroupsBlockEntityRequest, Group) == 0x0018);
static_assert(offsetof(FGroupsChangeMemberRoleRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsChangeMemberRoleRequest, DestinationRoleId) == 0x0010);
static_assert(offsetof(FGroupsChangeMemberRoleRequest, Group) == 0x0020);
static_assert(offsetof(FGroupsChangeMemberRoleRequest, Members) == 0x0028);
static_assert(offsetof(FGroupsChangeMemberRoleRequest, OriginRoleId) == 0x0038);
static_assert(offsetof(FGroupsCreateGroupResponse, AdminRoleId) == 0x0008);
static_assert(offsetof(FGroupsCreateGroupResponse, Created) == 0x0018);
static_assert(offsetof(FGroupsCreateGroupResponse, Group) == 0x0028);
static_assert(offsetof(FGroupsCreateGroupResponse, GroupName) == 0x0030);
static_assert(offsetof(FGroupsCreateGroupResponse, MemberRoleId) == 0x0040);
static_assert(offsetof(FGroupsCreateGroupResponse, Roles) == 0x0058);
static_assert(offsetof(FGroupsCreateGroupRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsCreateGroupRequest, Entity) == 0x0010);
static_assert(offsetof(FGroupsCreateGroupRequest, GroupName) == 0x0018);
static_assert(offsetof(FGroupsCreateGroupRoleResponse, RoleId) == 0x0010);
static_assert(offsetof(FGroupsCreateGroupRoleResponse, RoleName) == 0x0020);
static_assert(offsetof(FGroupsCreateGroupRoleRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsCreateGroupRoleRequest, Group) == 0x0010);
static_assert(offsetof(FGroupsCreateGroupRoleRequest, RoleId) == 0x0018);
static_assert(offsetof(FGroupsCreateGroupRoleRequest, RoleName) == 0x0028);
static_assert(offsetof(FGroupsGetGroupResponse, AdminRoleId) == 0x0008);
static_assert(offsetof(FGroupsGetGroupResponse, Created) == 0x0018);
static_assert(offsetof(FGroupsGetGroupResponse, Group) == 0x0028);
static_assert(offsetof(FGroupsGetGroupResponse, GroupName) == 0x0030);
static_assert(offsetof(FGroupsGetGroupResponse, MemberRoleId) == 0x0040);
static_assert(offsetof(FGroupsGetGroupResponse, Roles) == 0x0058);
static_assert(offsetof(FGroupsInviteToGroupResponse, Expires) == 0x0008);
static_assert(offsetof(FGroupsInviteToGroupResponse, Group) == 0x0018);
static_assert(offsetof(FGroupsInviteToGroupResponse, InvitedByEntity) == 0x0020);
static_assert(offsetof(FGroupsInviteToGroupResponse, InvitedEntity) == 0x0028);
static_assert(offsetof(FGroupsInviteToGroupResponse, RoleId) == 0x0030);
static_assert(offsetof(FGroupsListGroupApplicationsResponse, Applications) == 0x0008);
static_assert(offsetof(FGroupsListGroupBlocksResponse, BlockedEntities) == 0x0008);
static_assert(offsetof(FGroupsListGroupInvitationsResponse, Invitations) == 0x0008);
static_assert(offsetof(FGroupsListGroupMembersResponse, Members) == 0x0008);
static_assert(offsetof(FGroupsListMembershipResponse, Groups) == 0x0008);
static_assert(offsetof(FGroupsListMembershipOpportunitiesResponse, Applications) == 0x0008);
static_assert(offsetof(FGroupsListMembershipOpportunitiesResponse, Invitations) == 0x0018);
static_assert(offsetof(FGroupsUpdateGroupResponse, OperationReason) == 0x0008);
static_assert(offsetof(FGroupsUpdateGroupResponse, SetResult) == 0x001C);
static_assert(offsetof(FGroupsUpdateGroupRoleResponse, OperationReason) == 0x0008);
static_assert(offsetof(FGroupsUpdateGroupRoleResponse, SetResult) == 0x001C);
static_assert(offsetof(FGroupsDeleteGroupRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsDeleteGroupRequest, Group) == 0x0010);
static_assert(offsetof(FGroupsDeleteRoleRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsDeleteRoleRequest, Group) == 0x0010);
static_assert(offsetof(FGroupsDeleteRoleRequest, RoleId) == 0x0018);
static_assert(offsetof(FGroupsGetGroupRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsGetGroupRequest, Group) == 0x0010);
static_assert(offsetof(FGroupsGetGroupRequest, GroupName) == 0x0018);
static_assert(offsetof(FGroupsInviteToGroupRequest, CustomTags) == 0x0010);
static_assert(offsetof(FGroupsInviteToGroupRequest, Entity) == 0x0018);
static_assert(offsetof(FGroupsInviteToGroupRequest, Group) == 0x0020);
static_assert(offsetof(FGroupsInviteToGroupRequest, RoleId) == 0x0028);
static_assert(offsetof(FGroupsIsMemberRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsIsMemberRequest, Entity) == 0x0010);
static_assert(offsetof(FGroupsIsMemberRequest, Group) == 0x0018);
static_assert(offsetof(FGroupsIsMemberRequest, RoleId) == 0x0020);
static_assert(offsetof(FGroupsListGroupApplicationsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsListGroupApplicationsRequest, Group) == 0x0010);
static_assert(offsetof(FGroupsListGroupBlocksRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsListGroupBlocksRequest, Group) == 0x0010);
static_assert(offsetof(FGroupsListGroupInvitationsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsListGroupInvitationsRequest, Group) == 0x0010);
static_assert(offsetof(FGroupsListGroupMembersRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsListGroupMembersRequest, Group) == 0x0010);
static_assert(offsetof(FGroupsListMembershipRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsListMembershipRequest, Entity) == 0x0010);
static_assert(offsetof(FGroupsListMembershipOpportunitiesRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsListMembershipOpportunitiesRequest, Entity) == 0x0010);
static_assert(offsetof(FGroupsRemoveGroupApplicationRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsRemoveGroupApplicationRequest, Entity) == 0x0010);
static_assert(offsetof(FGroupsRemoveGroupApplicationRequest, Group) == 0x0018);
static_assert(offsetof(FGroupsRemoveGroupInvitationRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsRemoveGroupInvitationRequest, Entity) == 0x0010);
static_assert(offsetof(FGroupsRemoveGroupInvitationRequest, Group) == 0x0018);
static_assert(offsetof(FGroupsRemoveMembersRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsRemoveMembersRequest, Group) == 0x0010);
static_assert(offsetof(FGroupsRemoveMembersRequest, Members) == 0x0018);
static_assert(offsetof(FGroupsRemoveMembersRequest, RoleId) == 0x0028);
static_assert(offsetof(FGroupsUnblockEntityRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsUnblockEntityRequest, Entity) == 0x0010);
static_assert(offsetof(FGroupsUnblockEntityRequest, Group) == 0x0018);
static_assert(offsetof(FGroupsUpdateGroupRequest, AdminRoleId) == 0x0008);
static_assert(offsetof(FGroupsUpdateGroupRequest, CustomTags) == 0x0018);
static_assert(offsetof(FGroupsUpdateGroupRequest, Group) == 0x0028);
static_assert(offsetof(FGroupsUpdateGroupRequest, GroupName) == 0x0030);
static_assert(offsetof(FGroupsUpdateGroupRequest, MemberRoleId) == 0x0040);
static_assert(offsetof(FGroupsUpdateGroupRoleRequest, CustomTags) == 0x0008);
static_assert(offsetof(FGroupsUpdateGroupRoleRequest, Group) == 0x0018);
static_assert(offsetof(FGroupsUpdateGroupRoleRequest, RoleId) == 0x0020);
static_assert(offsetof(FGroupsUpdateGroupRoleRequest, RoleName) == 0x0030);
static_assert(offsetof(FInsightsInsightsGetDetailsResponse, ErrorMessage) == 0x0010);
static_assert(offsetof(FInsightsInsightsGetDetailsResponse, Limits) == 0x0020);
static_assert(offsetof(FInsightsInsightsGetDetailsResponse, PendingOperations) == 0x0028);
static_assert(offsetof(FInsightsInsightsGetLimitsResponse, SubMeters) == 0x0018);
static_assert(offsetof(FInsightsInsightsGetOperationStatusResponse, Message) == 0x0008);
static_assert(offsetof(FInsightsInsightsGetOperationStatusResponse, OperationCompletedTime) == 0x0018);
static_assert(offsetof(FInsightsInsightsGetOperationStatusResponse, OperationId) == 0x0028);
static_assert(offsetof(FInsightsInsightsGetOperationStatusResponse, OperationLastUpdated) == 0x0038);
static_assert(offsetof(FInsightsInsightsGetOperationStatusResponse, OperationStartedTime) == 0x0048);
static_assert(offsetof(FInsightsInsightsGetOperationStatusResponse, OperationType) == 0x0058);
static_assert(offsetof(FInsightsInsightsGetOperationStatusResponse, Status) == 0x0070);
static_assert(offsetof(FInsightsInsightsGetPendingOperationsResponse, PendingOperations) == 0x0008);
static_assert(offsetof(FInsightsInsightsOperationResponse, Message) == 0x0008);
static_assert(offsetof(FInsightsInsightsOperationResponse, OperationId) == 0x0018);
static_assert(offsetof(FInsightsInsightsOperationResponse, OperationType) == 0x0028);
static_assert(offsetof(FInsightsInsightsEmptyRequest, CustomTags) == 0x0008);
static_assert(offsetof(FInsightsInsightsGetOperationStatusRequest, CustomTags) == 0x0008);
static_assert(offsetof(FInsightsInsightsGetOperationStatusRequest, OperationId) == 0x0010);
static_assert(offsetof(FInsightsInsightsGetPendingOperationsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FInsightsInsightsGetPendingOperationsRequest, OperationType) == 0x0010);
static_assert(offsetof(FInsightsInsightsSetPerformanceRequest, CustomTags) == 0x0008);
static_assert(offsetof(FInsightsInsightsSetStorageRetentionRequest, CustomTags) == 0x0008);
static_assert(offsetof(FLocalizationGetLanguageListResponse, LanguageList) == 0x0008);
static_assert(offsetof(FLocalizationGetLanguageListRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMatchmakerAuthUserResponse, PlayFabId) == 0x0010);
static_assert(offsetof(FMatchmakerAuthUserRequest, AuthorizationTicket) == 0x0008);
static_assert(offsetof(FMatchmakerUserInfoResponse, Inventory) == 0x0008);
static_assert(offsetof(FMatchmakerUserInfoResponse, PlayFabId) == 0x0020);
static_assert(offsetof(FMatchmakerUserInfoResponse, SteamId) == 0x0030);
static_assert(offsetof(FMatchmakerUserInfoResponse, TitleDisplayName) == 0x0040);
static_assert(offsetof(FMatchmakerUserInfoResponse, Username) == 0x0050);
static_assert(offsetof(FMatchmakerUserInfoResponse, VirtualCurrency) == 0x0060);
static_assert(offsetof(FMatchmakerUserInfoResponse, VirtualCurrencyRechargeTimes) == 0x0068);
static_assert(offsetof(FMatchmakerPlayerJoinedRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMatchmakerPlayerJoinedRequest, LobbyId) == 0x0010);
static_assert(offsetof(FMatchmakerPlayerJoinedRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FMatchmakerPlayerLeftRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMatchmakerPlayerLeftRequest, LobbyId) == 0x0010);
static_assert(offsetof(FMatchmakerPlayerLeftRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FMatchmakerUserInfoRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMatchmakerUserInfoRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest, Entity) == 0x0010);
static_assert(offsetof(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest, QueueName) == 0x0018);
static_assert(offsetof(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest, Entity) == 0x0010);
static_assert(offsetof(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest, QueueName) == 0x0018);
static_assert(offsetof(FMultiplayerCancelMatchmakingTicketRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerCancelMatchmakingTicketRequest, QueueName) == 0x0010);
static_assert(offsetof(FMultiplayerCancelMatchmakingTicketRequest, TicketId) == 0x0020);
static_assert(offsetof(FMultiplayerCancelServerBackfillTicketRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerCancelServerBackfillTicketRequest, QueueName) == 0x0010);
static_assert(offsetof(FMultiplayerCancelServerBackfillTicketRequest, TicketId) == 0x0020);
static_assert(offsetof(FMultiplayerBuildAliasDetailsResponse, AliasId) == 0x0008);
static_assert(offsetof(FMultiplayerBuildAliasDetailsResponse, AliasName) == 0x0018);
static_assert(offsetof(FMultiplayerBuildAliasDetailsResponse, BuildSelectionCriteria) == 0x0028);
static_assert(offsetof(FMultiplayerCreateBuildAliasRequest, AliasName) == 0x0008);
static_assert(offsetof(FMultiplayerCreateBuildAliasRequest, BuildSelectionCriteria) == 0x0018);
static_assert(offsetof(FMultiplayerCreateBuildAliasRequest, CustomTags) == 0x0028);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, BuildId) == 0x0010);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, BuildName) == 0x0020);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, ContainerFlavor) == 0x0030);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, ContainerRunCommand) == 0x0038);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, CreationTime) == 0x0048);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, CustomGameContainerImage) == 0x0058);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, GameAssetReferences) == 0x0060);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, GameCertificateReferences) == 0x0070);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, LinuxInstrumentationConfiguration) == 0x0080);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, MetaData) == 0x0088);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, MonitoringApplicationConfiguration) == 0x0090);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, OsPlatform) == 0x00A0);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, Ports) == 0x00B0);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, RegionConfigurations) == 0x00C0);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, ServerType) == 0x00D0);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerResponse, VmSize) == 0x00E1);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerRequest, BuildName) == 0x0010);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerRequest, ContainerFlavor) == 0x0020);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerRequest, ContainerImageReference) == 0x0028);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerRequest, ContainerRunCommand) == 0x0030);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerRequest, CustomTags) == 0x0040);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerRequest, GameAssetReferences) == 0x0048);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerRequest, GameCertificateReferences) == 0x0058);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerRequest, LinuxInstrumentationConfiguration) == 0x0068);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerRequest, MetaData) == 0x0070);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerRequest, MonitoringApplicationConfiguration) == 0x0078);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerRequest, Ports) == 0x0088);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerRequest, RegionConfigurations) == 0x0098);
static_assert(offsetof(FMultiplayerCreateBuildWithCustomContainerRequest, VmSize) == 0x00A9);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, BuildId) == 0x0010);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, BuildName) == 0x0020);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, ContainerFlavor) == 0x0030);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, CreationTime) == 0x0038);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, GameAssetReferences) == 0x0048);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, GameCertificateReferences) == 0x0058);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, GameWorkingDirectory) == 0x0068);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, InstrumentationConfiguration) == 0x0078);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, MetaData) == 0x0080);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, MonitoringApplicationConfiguration) == 0x0088);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, OsPlatform) == 0x0098);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, Ports) == 0x00A8);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, RegionConfigurations) == 0x00B8);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, ServerType) == 0x00C8);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, StartMultiplayerServerCommand) == 0x00D8);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerResponse, VmSize) == 0x00E9);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerRequest, BuildName) == 0x0010);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerRequest, ContainerFlavor) == 0x0020);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerRequest, CustomTags) == 0x0028);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerRequest, GameAssetReferences) == 0x0030);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerRequest, GameCertificateReferences) == 0x0040);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerRequest, GameWorkingDirectory) == 0x0050);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerRequest, InstrumentationConfiguration) == 0x0060);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerRequest, MetaData) == 0x0068);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerRequest, MonitoringApplicationConfiguration) == 0x0070);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerRequest, Ports) == 0x0080);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerRequest, RegionConfigurations) == 0x0090);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerRequest, StartMultiplayerServerCommand) == 0x00A0);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerRequest, VmSize) == 0x00B1);
static_assert(offsetof(FMultiplayerCreateBuildWithManagedContainerRequest, WindowsCrashDumpConfiguration) == 0x00B8);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, BuildId) == 0x0010);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, BuildName) == 0x0020);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, ContainerFlavor) == 0x0030);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, CreationTime) == 0x0038);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, GameAssetReferences) == 0x0048);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, GameCertificateReferences) == 0x0058);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, GameWorkingDirectory) == 0x0068);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, InstrumentationConfiguration) == 0x0078);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, MetaData) == 0x0088);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, MonitoringApplicationConfiguration) == 0x0090);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, OsPlatform) == 0x00A0);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, Ports) == 0x00B0);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, RegionConfigurations) == 0x00C0);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, ServerType) == 0x00D0);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, StartMultiplayerServerCommand) == 0x00E0);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerResponse, VmSize) == 0x00F1);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerRequest, BuildName) == 0x0010);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerRequest, CustomTags) == 0x0020);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerRequest, GameAssetReferences) == 0x0028);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerRequest, GameCertificateReferences) == 0x0038);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerRequest, GameWorkingDirectory) == 0x0048);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerRequest, InstrumentationConfiguration) == 0x0058);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerRequest, MetaData) == 0x0068);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerRequest, MonitoringApplicationConfiguration) == 0x0070);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerRequest, OsPlatform) == 0x0080);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerRequest, Ports) == 0x0090);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerRequest, RegionConfigurations) == 0x00A0);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerRequest, StartMultiplayerServerCommand) == 0x00B0);
static_assert(offsetof(FMultiplayerCreateBuildWithProcessBasedServerRequest, VmSize) == 0x00C1);
static_assert(offsetof(FMultiplayerCreateLobbyResult, ConnectionString) == 0x0008);
static_assert(offsetof(FMultiplayerCreateLobbyResult, LobbyId) == 0x0018);
static_assert(offsetof(FMultiplayerCreateLobbyRequest, AccessPolicy) == 0x0008);
static_assert(offsetof(FMultiplayerCreateLobbyRequest, CustomTags) == 0x0010);
static_assert(offsetof(FMultiplayerCreateLobbyRequest, LobbyData) == 0x0018);
static_assert(offsetof(FMultiplayerCreateLobbyRequest, Members) == 0x0028);
static_assert(offsetof(FMultiplayerCreateLobbyRequest, Owner) == 0x0038);
static_assert(offsetof(FMultiplayerCreateLobbyRequest, OwnerMigrationPolicy) == 0x0040);
static_assert(offsetof(FMultiplayerCreateLobbyRequest, SearchData) == 0x0048);
static_assert(offsetof(FMultiplayerCreateMatchmakingTicketResult, TicketId) == 0x0008);
static_assert(offsetof(FMultiplayerCreateMatchmakingTicketRequest, Creator) == 0x0008);
static_assert(offsetof(FMultiplayerCreateMatchmakingTicketRequest, CustomTags) == 0x0010);
static_assert(offsetof(FMultiplayerCreateMatchmakingTicketRequest, MembersToMatchWith) == 0x0020);
static_assert(offsetof(FMultiplayerCreateMatchmakingTicketRequest, QueueName) == 0x0030);
static_assert(offsetof(FMultiplayerCreateRemoteUserResponse, ExpirationTime) == 0x0008);
static_assert(offsetof(FMultiplayerCreateRemoteUserResponse, Password) == 0x0018);
static_assert(offsetof(FMultiplayerCreateRemoteUserResponse, Username) == 0x0028);
static_assert(offsetof(FMultiplayerCreateRemoteUserRequest, BuildId) == 0x0008);
static_assert(offsetof(FMultiplayerCreateRemoteUserRequest, CustomTags) == 0x0018);
static_assert(offsetof(FMultiplayerCreateRemoteUserRequest, ExpirationTime) == 0x0020);
static_assert(offsetof(FMultiplayerCreateRemoteUserRequest, Region) == 0x0030);
static_assert(offsetof(FMultiplayerCreateRemoteUserRequest, Username) == 0x0040);
static_assert(offsetof(FMultiplayerCreateRemoteUserRequest, VmId) == 0x0050);
static_assert(offsetof(FMultiplayerCreateServerBackfillTicketResult, TicketId) == 0x0008);
static_assert(offsetof(FMultiplayerCreateServerBackfillTicketRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerCreateServerBackfillTicketRequest, Members) == 0x0018);
static_assert(offsetof(FMultiplayerCreateServerBackfillTicketRequest, QueueName) == 0x0028);
static_assert(offsetof(FMultiplayerCreateServerBackfillTicketRequest, ServerDetails) == 0x0038);
static_assert(offsetof(FMultiplayerCreateServerMatchmakingTicketRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerCreateServerMatchmakingTicketRequest, Members) == 0x0018);
static_assert(offsetof(FMultiplayerCreateServerMatchmakingTicketRequest, QueueName) == 0x0028);
static_assert(offsetof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse, RequestId) == 0x0008);
static_assert(offsetof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, ChangeDescription) == 0x0008);
static_assert(offsetof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, Changes) == 0x0018);
static_assert(offsetof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, ContactEmail) == 0x0028);
static_assert(offsetof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, CustomTags) == 0x0038);
static_assert(offsetof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, Notes) == 0x0040);
static_assert(offsetof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, StartDate) == 0x0050);
static_assert(offsetof(FMultiplayerEnableMultiplayerServersForTitleResponse, Status) == 0x0008);
static_assert(offsetof(FMultiplayerFindFriendLobbiesResult, Lobbies) == 0x0008);
static_assert(offsetof(FMultiplayerFindFriendLobbiesResult, Pagination) == 0x0018);
static_assert(offsetof(FMultiplayerFindLobbiesResult, Lobbies) == 0x0008);
static_assert(offsetof(FMultiplayerFindLobbiesResult, Pagination) == 0x0018);
static_assert(offsetof(FMultiplayerGetAssetDownloadUrlResponse, AssetDownloadUrl) == 0x0008);
static_assert(offsetof(FMultiplayerGetAssetDownloadUrlResponse, Filename) == 0x0018);
static_assert(offsetof(FMultiplayerGetAssetUploadUrlResponse, AssetUploadUrl) == 0x0008);
static_assert(offsetof(FMultiplayerGetAssetUploadUrlResponse, Filename) == 0x0018);
static_assert(offsetof(FMultiplayerGetBuildResponse, BuildId) == 0x0010);
static_assert(offsetof(FMultiplayerGetBuildResponse, BuildName) == 0x0020);
static_assert(offsetof(FMultiplayerGetBuildResponse, BuildStatus) == 0x0030);
static_assert(offsetof(FMultiplayerGetBuildResponse, ContainerFlavor) == 0x0040);
static_assert(offsetof(FMultiplayerGetBuildResponse, ContainerRunCommand) == 0x0048);
static_assert(offsetof(FMultiplayerGetBuildResponse, CreationTime) == 0x0058);
static_assert(offsetof(FMultiplayerGetBuildResponse, CustomGameContainerImage) == 0x0068);
static_assert(offsetof(FMultiplayerGetBuildResponse, GameAssetReferences) == 0x0070);
static_assert(offsetof(FMultiplayerGetBuildResponse, GameCertificateReferences) == 0x0080);
static_assert(offsetof(FMultiplayerGetBuildResponse, InstrumentationConfiguration) == 0x0090);
static_assert(offsetof(FMultiplayerGetBuildResponse, MetaData) == 0x0098);
static_assert(offsetof(FMultiplayerGetBuildResponse, OsPlatform) == 0x00A8);
static_assert(offsetof(FMultiplayerGetBuildResponse, Ports) == 0x00B8);
static_assert(offsetof(FMultiplayerGetBuildResponse, RegionConfigurations) == 0x00C8);
static_assert(offsetof(FMultiplayerGetBuildResponse, ServerType) == 0x00D8);
static_assert(offsetof(FMultiplayerGetBuildResponse, StartMultiplayerServerCommand) == 0x00E8);
static_assert(offsetof(FMultiplayerGetBuildResponse, VmSize) == 0x00F8);
static_assert(offsetof(FMultiplayerGetContainerRegistryCredentialsResponse, DnsName) == 0x0008);
static_assert(offsetof(FMultiplayerGetContainerRegistryCredentialsResponse, Password) == 0x0018);
static_assert(offsetof(FMultiplayerGetContainerRegistryCredentialsResponse, Username) == 0x0028);
static_assert(offsetof(FMultiplayerGetLobbyResult, Lobby) == 0x0008);
static_assert(offsetof(FMultiplayerGetMatchResult, ArrangementString) == 0x0008);
static_assert(offsetof(FMultiplayerGetMatchResult, MatchID) == 0x0018);
static_assert(offsetof(FMultiplayerGetMatchResult, Members) == 0x0028);
static_assert(offsetof(FMultiplayerGetMatchResult, RegionPreferences) == 0x0038);
static_assert(offsetof(FMultiplayerGetMatchResult, ServerDetails) == 0x0048);
static_assert(offsetof(FMultiplayerGetMatchmakingTicketResult, CancellationReasonString) == 0x0008);
static_assert(offsetof(FMultiplayerGetMatchmakingTicketResult, Created) == 0x0020);
static_assert(offsetof(FMultiplayerGetMatchmakingTicketResult, Creator) == 0x0030);
static_assert(offsetof(FMultiplayerGetMatchmakingTicketResult, MatchID) == 0x0040);
static_assert(offsetof(FMultiplayerGetMatchmakingTicketResult, Members) == 0x0050);
static_assert(offsetof(FMultiplayerGetMatchmakingTicketResult, MembersToMatchWith) == 0x0060);
static_assert(offsetof(FMultiplayerGetMatchmakingTicketResult, QueueName) == 0x0070);
static_assert(offsetof(FMultiplayerGetMatchmakingTicketResult, Status) == 0x0080);
static_assert(offsetof(FMultiplayerGetMatchmakingTicketResult, TicketId) == 0x0090);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsResponse, BuildId) == 0x0008);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsResponse, ConnectedPlayers) == 0x0018);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsResponse, FQDN) == 0x0028);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsResponse, IPV4Address) == 0x0038);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsResponse, LastStateTransitionTime) == 0x0048);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsResponse, Ports) == 0x0058);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsResponse, Region) == 0x0068);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsResponse, ServerId) == 0x0078);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsResponse, SessionId) == 0x0088);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsResponse, State) == 0x0098);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsResponse, VmId) == 0x00A8);
static_assert(offsetof(FMultiplayerGetMultiplayerServerLogsResponse, LogDownloadUrl) == 0x0008);
static_assert(offsetof(FMultiplayerGetQueueStatisticsResult, TimeToMatchStatisticsInSeconds) == 0x0010);
static_assert(offsetof(FMultiplayerGetRemoteLoginEndpointResponse, IPV4Address) == 0x0008);
static_assert(offsetof(FMultiplayerGetServerBackfillTicketResult, CancellationReasonString) == 0x0008);
static_assert(offsetof(FMultiplayerGetServerBackfillTicketResult, Created) == 0x0018);
static_assert(offsetof(FMultiplayerGetServerBackfillTicketResult, MatchID) == 0x0030);
static_assert(offsetof(FMultiplayerGetServerBackfillTicketResult, Members) == 0x0040);
static_assert(offsetof(FMultiplayerGetServerBackfillTicketResult, QueueName) == 0x0050);
static_assert(offsetof(FMultiplayerGetServerBackfillTicketResult, ServerDetails) == 0x0060);
static_assert(offsetof(FMultiplayerGetServerBackfillTicketResult, Status) == 0x0068);
static_assert(offsetof(FMultiplayerGetServerBackfillTicketResult, TicketId) == 0x0078);
static_assert(offsetof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse, Status) == 0x0008);
static_assert(offsetof(FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse, Change) == 0x0008);
static_assert(offsetof(FMultiplayerGetTitleMultiplayerServersQuotasResponse, Quotas) == 0x0008);
static_assert(offsetof(FMultiplayerJoinLobbyResult, LobbyId) == 0x0008);
static_assert(offsetof(FMultiplayerListMultiplayerServersResponse, MultiplayerServerSummaries) == 0x0008);
static_assert(offsetof(FMultiplayerListMultiplayerServersResponse, SkipToken) == 0x0020);
static_assert(offsetof(FMultiplayerListAssetSummariesResponse, AssetSummaries) == 0x0008);
static_assert(offsetof(FMultiplayerListAssetSummariesResponse, SkipToken) == 0x0020);
static_assert(offsetof(FMultiplayerListBuildAliasesResponse, BuildAliases) == 0x0008);
static_assert(offsetof(FMultiplayerListBuildAliasesResponse, SkipToken) == 0x0020);
static_assert(offsetof(FMultiplayerListBuildSummariesResponse, BuildSummaries) == 0x0008);
static_assert(offsetof(FMultiplayerListBuildSummariesResponse, SkipToken) == 0x0020);
static_assert(offsetof(FMultiplayerListCertificateSummariesResponse, CertificateSummaries) == 0x0008);
static_assert(offsetof(FMultiplayerListCertificateSummariesResponse, SkipToken) == 0x0020);
static_assert(offsetof(FMultiplayerListContainerImagesResponse, Images) == 0x0008);
static_assert(offsetof(FMultiplayerListContainerImagesResponse, SkipToken) == 0x0020);
static_assert(offsetof(FMultiplayerListContainerImageTagsResponse, Tags) == 0x0008);
static_assert(offsetof(FMultiplayerListMatchmakingTicketsForPlayerResult, TicketIds) == 0x0008);
static_assert(offsetof(FMultiplayerListPartyQosServersResponse, QosServers) == 0x0010);
static_assert(offsetof(FMultiplayerListPartyQosServersResponse, SkipToken) == 0x0020);
static_assert(offsetof(FMultiplayerListQosServersForTitleResponse, QosServers) == 0x0010);
static_assert(offsetof(FMultiplayerListQosServersForTitleResponse, SkipToken) == 0x0020);
static_assert(offsetof(FMultiplayerListServerBackfillTicketsForPlayerResult, TicketIds) == 0x0008);
static_assert(offsetof(FMultiplayerListTitleMultiplayerServersQuotaChangesResponse, Changes) == 0x0008);
static_assert(offsetof(FMultiplayerListVirtualMachineSummariesResponse, SkipToken) == 0x0010);
static_assert(offsetof(FMultiplayerListVirtualMachineSummariesResponse, VirtualMachines) == 0x0020);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerResponse, BuildId) == 0x0008);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerResponse, ConnectedPlayers) == 0x0018);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerResponse, FQDN) == 0x0028);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerResponse, IPV4Address) == 0x0038);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerResponse, LastStateTransitionTime) == 0x0048);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerResponse, Ports) == 0x0058);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerResponse, Region) == 0x0068);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerResponse, ServerId) == 0x0078);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerResponse, SessionId) == 0x0088);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerResponse, State) == 0x0098);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerResponse, VmId) == 0x00A8);
static_assert(offsetof(FMultiplayerRolloverContainerRegistryCredentialsResponse, DnsName) == 0x0008);
static_assert(offsetof(FMultiplayerRolloverContainerRegistryCredentialsResponse, Password) == 0x0018);
static_assert(offsetof(FMultiplayerRolloverContainerRegistryCredentialsResponse, Username) == 0x0028);
static_assert(offsetof(FMultiplayerSubscribeToLobbyResourceResult, Topic) == 0x0008);
static_assert(offsetof(FMultiplayerDeleteAssetRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerDeleteAssetRequest, Filename) == 0x0010);
static_assert(offsetof(FMultiplayerDeleteBuildRequest, BuildId) == 0x0008);
static_assert(offsetof(FMultiplayerDeleteBuildRequest, CustomTags) == 0x0018);
static_assert(offsetof(FMultiplayerDeleteBuildAliasRequest, AliasId) == 0x0008);
static_assert(offsetof(FMultiplayerDeleteBuildAliasRequest, CustomTags) == 0x0018);
static_assert(offsetof(FMultiplayerDeleteBuildRegionRequest, BuildId) == 0x0008);
static_assert(offsetof(FMultiplayerDeleteBuildRegionRequest, CustomTags) == 0x0018);
static_assert(offsetof(FMultiplayerDeleteBuildRegionRequest, Region) == 0x0020);
static_assert(offsetof(FMultiplayerDeleteCertificateRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerDeleteCertificateRequest, Name) == 0x0010);
static_assert(offsetof(FMultiplayerDeleteContainerImageRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerDeleteContainerImageRequest, ImageName) == 0x0010);
static_assert(offsetof(FMultiplayerDeleteLobbyRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerDeleteLobbyRequest, LobbyId) == 0x0010);
static_assert(offsetof(FMultiplayerDeleteRemoteUserRequest, BuildId) == 0x0008);
static_assert(offsetof(FMultiplayerDeleteRemoteUserRequest, CustomTags) == 0x0018);
static_assert(offsetof(FMultiplayerDeleteRemoteUserRequest, Region) == 0x0020);
static_assert(offsetof(FMultiplayerDeleteRemoteUserRequest, Username) == 0x0030);
static_assert(offsetof(FMultiplayerDeleteRemoteUserRequest, VmId) == 0x0040);
static_assert(offsetof(FMultiplayerEnableMultiplayerServersForTitleRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerFindFriendLobbiesRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerFindFriendLobbiesRequest, Filter) == 0x0018);
static_assert(offsetof(FMultiplayerFindFriendLobbiesRequest, OrderBy) == 0x0028);
static_assert(offsetof(FMultiplayerFindFriendLobbiesRequest, Pagination) == 0x0038);
static_assert(offsetof(FMultiplayerFindFriendLobbiesRequest, XboxToken) == 0x0040);
static_assert(offsetof(FMultiplayerFindLobbiesRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerFindLobbiesRequest, Filter) == 0x0010);
static_assert(offsetof(FMultiplayerFindLobbiesRequest, OrderBy) == 0x0020);
static_assert(offsetof(FMultiplayerFindLobbiesRequest, Pagination) == 0x0030);
static_assert(offsetof(FMultiplayerGetAssetDownloadUrlRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerGetAssetDownloadUrlRequest, Filename) == 0x0010);
static_assert(offsetof(FMultiplayerGetAssetUploadUrlRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerGetAssetUploadUrlRequest, Filename) == 0x0010);
static_assert(offsetof(FMultiplayerGetBuildRequest, BuildId) == 0x0008);
static_assert(offsetof(FMultiplayerGetBuildRequest, CustomTags) == 0x0018);
static_assert(offsetof(FMultiplayerGetBuildAliasRequest, AliasId) == 0x0008);
static_assert(offsetof(FMultiplayerGetBuildAliasRequest, CustomTags) == 0x0018);
static_assert(offsetof(FMultiplayerGetContainerRegistryCredentialsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerGetLobbyRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerGetLobbyRequest, LobbyId) == 0x0010);
static_assert(offsetof(FMultiplayerGetMatchRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerGetMatchRequest, MatchID) == 0x0018);
static_assert(offsetof(FMultiplayerGetMatchRequest, QueueName) == 0x0028);
static_assert(offsetof(FMultiplayerGetMatchmakingTicketRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerGetMatchmakingTicketRequest, QueueName) == 0x0018);
static_assert(offsetof(FMultiplayerGetMatchmakingTicketRequest, TicketId) == 0x0028);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsRequest, BuildId) == 0x0008);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsRequest, CustomTags) == 0x0018);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsRequest, Region) == 0x0020);
static_assert(offsetof(FMultiplayerGetMultiplayerServerDetailsRequest, SessionId) == 0x0030);
static_assert(offsetof(FMultiplayerGetMultiplayerServerLogsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerGetMultiplayerServerLogsRequest, ServerId) == 0x0010);
static_assert(offsetof(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest, SessionId) == 0x0010);
static_assert(offsetof(FMultiplayerGetQueueStatisticsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerGetQueueStatisticsRequest, QueueName) == 0x0010);
static_assert(offsetof(FMultiplayerGetRemoteLoginEndpointRequest, BuildId) == 0x0008);
static_assert(offsetof(FMultiplayerGetRemoteLoginEndpointRequest, CustomTags) == 0x0018);
static_assert(offsetof(FMultiplayerGetRemoteLoginEndpointRequest, Region) == 0x0020);
static_assert(offsetof(FMultiplayerGetRemoteLoginEndpointRequest, VmId) == 0x0030);
static_assert(offsetof(FMultiplayerGetServerBackfillTicketRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerGetServerBackfillTicketRequest, QueueName) == 0x0018);
static_assert(offsetof(FMultiplayerGetServerBackfillTicketRequest, TicketId) == 0x0028);
static_assert(offsetof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest, RequestId) == 0x0010);
static_assert(offsetof(FMultiplayerGetTitleMultiplayerServersQuotasRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerInviteToLobbyRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerInviteToLobbyRequest, InviteeEntity) == 0x0010);
static_assert(offsetof(FMultiplayerInviteToLobbyRequest, LobbyId) == 0x0018);
static_assert(offsetof(FMultiplayerInviteToLobbyRequest, MemberEntity) == 0x0028);
static_assert(offsetof(FMultiplayerJoinArrangedLobbyRequest, AccessPolicy) == 0x0008);
static_assert(offsetof(FMultiplayerJoinArrangedLobbyRequest, ArrangementString) == 0x0010);
static_assert(offsetof(FMultiplayerJoinArrangedLobbyRequest, CustomTags) == 0x0020);
static_assert(offsetof(FMultiplayerJoinArrangedLobbyRequest, MemberData) == 0x0030);
static_assert(offsetof(FMultiplayerJoinArrangedLobbyRequest, MemberEntity) == 0x0038);
static_assert(offsetof(FMultiplayerJoinArrangedLobbyRequest, OwnerMigrationPolicy) == 0x0040);
static_assert(offsetof(FMultiplayerJoinLobbyRequest, ConnectionString) == 0x0008);
static_assert(offsetof(FMultiplayerJoinLobbyRequest, CustomTags) == 0x0018);
static_assert(offsetof(FMultiplayerJoinLobbyRequest, MemberData) == 0x0020);
static_assert(offsetof(FMultiplayerJoinLobbyRequest, MemberEntity) == 0x0028);
static_assert(offsetof(FMultiplayerJoinMatchmakingTicketRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerJoinMatchmakingTicketRequest, Member) == 0x0010);
static_assert(offsetof(FMultiplayerJoinMatchmakingTicketRequest, QueueName) == 0x0018);
static_assert(offsetof(FMultiplayerJoinMatchmakingTicketRequest, TicketId) == 0x0028);
static_assert(offsetof(FMultiplayerLeaveLobbyRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerLeaveLobbyRequest, LobbyId) == 0x0010);
static_assert(offsetof(FMultiplayerLeaveLobbyRequest, MemberEntity) == 0x0020);
static_assert(offsetof(FMultiplayerListMultiplayerServersRequest, BuildId) == 0x0008);
static_assert(offsetof(FMultiplayerListMultiplayerServersRequest, CustomTags) == 0x0018);
static_assert(offsetof(FMultiplayerListMultiplayerServersRequest, Region) == 0x0028);
static_assert(offsetof(FMultiplayerListMultiplayerServersRequest, SkipToken) == 0x0038);
static_assert(offsetof(FMultiplayerListAssetSummariesRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerListAssetSummariesRequest, SkipToken) == 0x0018);
static_assert(offsetof(FMultiplayerListBuildAliasesRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerListBuildAliasesRequest, SkipToken) == 0x0018);
static_assert(offsetof(FMultiplayerListBuildSummariesRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerListBuildSummariesRequest, SkipToken) == 0x0018);
static_assert(offsetof(FMultiplayerListCertificateSummariesRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerListCertificateSummariesRequest, SkipToken) == 0x0018);
static_assert(offsetof(FMultiplayerListContainerImagesRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerListContainerImagesRequest, SkipToken) == 0x0018);
static_assert(offsetof(FMultiplayerListContainerImageTagsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerListContainerImageTagsRequest, ImageName) == 0x0010);
static_assert(offsetof(FMultiplayerListMatchmakingTicketsForPlayerRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerListMatchmakingTicketsForPlayerRequest, Entity) == 0x0010);
static_assert(offsetof(FMultiplayerListMatchmakingTicketsForPlayerRequest, QueueName) == 0x0018);
static_assert(offsetof(FMultiplayerListPartyQosServersRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerListQosServersForTitleRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerListServerBackfillTicketsForPlayerRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerListServerBackfillTicketsForPlayerRequest, Entity) == 0x0010);
static_assert(offsetof(FMultiplayerListServerBackfillTicketsForPlayerRequest, QueueName) == 0x0018);
static_assert(offsetof(FMultiplayerListTitleMultiplayerServersQuotaChangesRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerListVirtualMachineSummariesRequest, BuildId) == 0x0008);
static_assert(offsetof(FMultiplayerListVirtualMachineSummariesRequest, CustomTags) == 0x0018);
static_assert(offsetof(FMultiplayerListVirtualMachineSummariesRequest, Region) == 0x0028);
static_assert(offsetof(FMultiplayerListVirtualMachineSummariesRequest, SkipToken) == 0x0038);
static_assert(offsetof(FMultiplayerRemoveMemberFromLobbyRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerRemoveMemberFromLobbyRequest, LobbyId) == 0x0010);
static_assert(offsetof(FMultiplayerRemoveMemberFromLobbyRequest, MemberEntity) == 0x0020);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerRequest, BuildAliasParams) == 0x0008);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerRequest, BuildId) == 0x0010);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerRequest, CustomTags) == 0x0020);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerRequest, InitialPlayers) == 0x0028);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerRequest, PreferredRegions) == 0x0038);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerRequest, SessionCookie) == 0x0048);
static_assert(offsetof(FMultiplayerRequestMultiplayerServerRequest, SessionId) == 0x0058);
static_assert(offsetof(FMultiplayerRolloverContainerRegistryCredentialsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerShutdownMultiplayerServerRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerShutdownMultiplayerServerRequest, SessionId) == 0x0010);
static_assert(offsetof(FMultiplayerSubscribeToLobbyResourceRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerSubscribeToLobbyResourceRequest, EntityKey) == 0x0010);
static_assert(offsetof(FMultiplayerSubscribeToLobbyResourceRequest, PubSubConnectionHandle) == 0x0018);
static_assert(offsetof(FMultiplayerSubscribeToLobbyResourceRequest, ResourceId) == 0x0028);
static_assert(offsetof(FMultiplayerSubscribeToLobbyResourceRequest, Type) == 0x003C);
static_assert(offsetof(FMultiplayerUnsubscribeFromLobbyResourceRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerUnsubscribeFromLobbyResourceRequest, EntityKey) == 0x0010);
static_assert(offsetof(FMultiplayerUnsubscribeFromLobbyResourceRequest, PubSubConnectionHandle) == 0x0018);
static_assert(offsetof(FMultiplayerUnsubscribeFromLobbyResourceRequest, ResourceId) == 0x0028);
static_assert(offsetof(FMultiplayerUnsubscribeFromLobbyResourceRequest, Type) == 0x003C);
static_assert(offsetof(FMultiplayerUntagContainerImageRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerUntagContainerImageRequest, ImageName) == 0x0010);
static_assert(offsetof(FMultiplayerUntagContainerImageRequest, Tag) == 0x0020);
static_assert(offsetof(FMultiplayerUpdateBuildAliasRequest, AliasId) == 0x0008);
static_assert(offsetof(FMultiplayerUpdateBuildAliasRequest, AliasName) == 0x0018);
static_assert(offsetof(FMultiplayerUpdateBuildAliasRequest, BuildSelectionCriteria) == 0x0028);
static_assert(offsetof(FMultiplayerUpdateBuildAliasRequest, CustomTags) == 0x0038);
static_assert(offsetof(FMultiplayerUpdateBuildNameRequest, BuildId) == 0x0008);
static_assert(offsetof(FMultiplayerUpdateBuildNameRequest, BuildName) == 0x0018);
static_assert(offsetof(FMultiplayerUpdateBuildNameRequest, CustomTags) == 0x0028);
static_assert(offsetof(FMultiplayerUpdateBuildRegionRequest, BuildId) == 0x0008);
static_assert(offsetof(FMultiplayerUpdateBuildRegionRequest, BuildRegion) == 0x0018);
static_assert(offsetof(FMultiplayerUpdateBuildRegionRequest, CustomTags) == 0x0020);
static_assert(offsetof(FMultiplayerUpdateBuildRegionsRequest, BuildId) == 0x0008);
static_assert(offsetof(FMultiplayerUpdateBuildRegionsRequest, BuildRegions) == 0x0018);
static_assert(offsetof(FMultiplayerUpdateBuildRegionsRequest, CustomTags) == 0x0028);
static_assert(offsetof(FMultiplayerUpdateLobbyRequest, AccessPolicy) == 0x0008);
static_assert(offsetof(FMultiplayerUpdateLobbyRequest, CustomTags) == 0x0010);
static_assert(offsetof(FMultiplayerUpdateLobbyRequest, LobbyData) == 0x0018);
static_assert(offsetof(FMultiplayerUpdateLobbyRequest, LobbyDataToDelete) == 0x0020);
static_assert(offsetof(FMultiplayerUpdateLobbyRequest, LobbyId) == 0x0030);
static_assert(offsetof(FMultiplayerUpdateLobbyRequest, MemberData) == 0x0048);
static_assert(offsetof(FMultiplayerUpdateLobbyRequest, MemberDataToDelete) == 0x0050);
static_assert(offsetof(FMultiplayerUpdateLobbyRequest, MemberEntity) == 0x0060);
static_assert(offsetof(FMultiplayerUpdateLobbyRequest, MembershipLock) == 0x0068);
static_assert(offsetof(FMultiplayerUpdateLobbyRequest, Owner) == 0x0070);
static_assert(offsetof(FMultiplayerUpdateLobbyRequest, SearchData) == 0x0078);
static_assert(offsetof(FMultiplayerUpdateLobbyRequest, SearchDataToDelete) == 0x0080);
static_assert(offsetof(FMultiplayerUploadCertificateRequest, CustomTags) == 0x0008);
static_assert(offsetof(FMultiplayerUploadCertificateRequest, GameCertificate) == 0x0010);
static_assert(offsetof(FProfilesGetGlobalPolicyResponse, Permissions) == 0x0008);
static_assert(offsetof(FProfilesGetEntityProfileResponse, Profile) == 0x0008);
static_assert(offsetof(FProfilesGetEntityProfilesResponse, Profiles) == 0x0008);
static_assert(offsetof(FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse, TitleID) == 0x0008);
static_assert(offsetof(FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse, TitlePlayerAccounts) == 0x0018);
static_assert(offsetof(FProfilesSetProfileLanguageResponse, OperationResult) == 0x0008);
static_assert(offsetof(FProfilesSetEntityProfilePolicyResponse, Permissions) == 0x0008);
static_assert(offsetof(FProfilesGetGlobalPolicyRequest, CustomTags) == 0x0008);
static_assert(offsetof(FProfilesGetGlobalPolicyRequest, Entity) == 0x0010);
static_assert(offsetof(FProfilesGetEntityProfileRequest, CustomTags) == 0x0008);
static_assert(offsetof(FProfilesGetEntityProfileRequest, Entity) == 0x0018);
static_assert(offsetof(FProfilesGetEntityProfilesRequest, CustomTags) == 0x0008);
static_assert(offsetof(FProfilesGetEntityProfilesRequest, Entities) == 0x0018);
static_assert(offsetof(FProfilesGetTitlePlayersFromMasterPlayerAccountIdsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FProfilesGetTitlePlayersFromMasterPlayerAccountIdsRequest, MasterPlayerAccountIds) == 0x0010);
static_assert(offsetof(FProfilesSetGlobalPolicyRequest, CustomTags) == 0x0008);
static_assert(offsetof(FProfilesSetGlobalPolicyRequest, Permissions) == 0x0010);
static_assert(offsetof(FProfilesSetProfileLanguageRequest, CustomTags) == 0x0008);
static_assert(offsetof(FProfilesSetProfileLanguageRequest, Entity) == 0x0010);
static_assert(offsetof(FProfilesSetProfileLanguageRequest, Language) == 0x0020);
static_assert(offsetof(FProfilesSetEntityProfilePolicyRequest, CustomTags) == 0x0008);
static_assert(offsetof(FProfilesSetEntityProfilePolicyRequest, Entity) == 0x0010);
static_assert(offsetof(FProfilesSetEntityProfilePolicyRequest, Statements) == 0x0018);
static_assert(offsetof(FServerModifyCharacterVirtualCurrencyResult, VirtualCurrency) == 0x0010);
static_assert(offsetof(FServerAddCharacterVirtualCurrencyRequest, CharacterId) == 0x0010);
static_assert(offsetof(FServerAddCharacterVirtualCurrencyRequest, CustomTags) == 0x0020);
static_assert(offsetof(FServerAddCharacterVirtualCurrencyRequest, PlayFabId) == 0x0028);
static_assert(offsetof(FServerAddCharacterVirtualCurrencyRequest, VirtualCurrency) == 0x0038);
static_assert(offsetof(FServerAddFriendRequest, FriendEmail) == 0x0008);
static_assert(offsetof(FServerAddFriendRequest, FriendPlayFabId) == 0x0018);
static_assert(offsetof(FServerAddFriendRequest, FriendTitleDisplayName) == 0x0028);
static_assert(offsetof(FServerAddFriendRequest, FriendUsername) == 0x0038);
static_assert(offsetof(FServerAddFriendRequest, PlayFabId) == 0x0048);
static_assert(offsetof(FServerAddGenericIDRequest, GenericId) == 0x0008);
static_assert(offsetof(FServerAddGenericIDRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FServerAddPlayerTagRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerAddPlayerTagRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FServerAddPlayerTagRequest, TagName) == 0x0020);
static_assert(offsetof(FServerAddSharedGroupMembersRequest, PlayFabIds) == 0x0008);
static_assert(offsetof(FServerAddSharedGroupMembersRequest, SharedGroupId) == 0x0018);
static_assert(offsetof(FServerModifyUserVirtualCurrencyResult, PlayFabId) == 0x0010);
static_assert(offsetof(FServerModifyUserVirtualCurrencyResult, VirtualCurrency) == 0x0020);
static_assert(offsetof(FServerAddUserVirtualCurrencyRequest, CustomTags) == 0x0010);
static_assert(offsetof(FServerAddUserVirtualCurrencyRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FServerAddUserVirtualCurrencyRequest, VirtualCurrency) == 0x0028);
static_assert(offsetof(FServerAuthenticateSessionTicketResult, UserInfo) == 0x0010);
static_assert(offsetof(FServerAuthenticateSessionTicketRequest, SessionTicket) == 0x0008);
static_assert(offsetof(FServerAwardSteamAchievementResult, AchievementResults) == 0x0008);
static_assert(offsetof(FServerAwardSteamAchievementRequest, Achievements) == 0x0008);
static_assert(offsetof(FServerBanUsersResult, BanData) == 0x0008);
static_assert(offsetof(FServerBanUsersRequest, Bans) == 0x0008);
static_assert(offsetof(FServerBanUsersRequest, CustomTags) == 0x0018);
static_assert(offsetof(FServerConsumeItemResult, ItemInstanceId) == 0x0008);
static_assert(offsetof(FServerConsumeItemRequest, CharacterId) == 0x0008);
static_assert(offsetof(FServerConsumeItemRequest, CustomTags) == 0x0020);
static_assert(offsetof(FServerConsumeItemRequest, ItemInstanceId) == 0x0028);
static_assert(offsetof(FServerConsumeItemRequest, PlayFabId) == 0x0038);
static_assert(offsetof(FServerCreateSharedGroupResult, SharedGroupId) == 0x0008);
static_assert(offsetof(FServerCreateSharedGroupRequest, SharedGroupId) == 0x0008);
static_assert(offsetof(FServerEvaluateRandomResultTableResult, ResultItemId) == 0x0008);
static_assert(offsetof(FServerExecuteCloudScriptResult, Error) == 0x0010);
static_assert(offsetof(FServerExecuteCloudScriptResult, FunctionName) == 0x0020);
static_assert(offsetof(FServerExecuteCloudScriptResult, FunctionResult) == 0x0030);
static_assert(offsetof(FServerExecuteCloudScriptResult, Logs) == 0x0040);
static_assert(offsetof(FServerGetAllSegmentsResult, Segments) == 0x0008);
static_assert(offsetof(FServerListUsersCharactersResult, Characters) == 0x0008);
static_assert(offsetof(FServerGetCatalogItemsResult, Catalog) == 0x0008);
static_assert(offsetof(FServerGetCharacterDataResult, CharacterId) == 0x0008);
static_assert(offsetof(FServerGetCharacterDataResult, Data) == 0x0018);
static_assert(offsetof(FServerGetCharacterDataResult, PlayFabId) == 0x0028);
static_assert(offsetof(FServerGetCharacterInventoryResult, CharacterId) == 0x0008);
static_assert(offsetof(FServerGetCharacterInventoryResult, Inventory) == 0x0018);
static_assert(offsetof(FServerGetCharacterInventoryResult, PlayFabId) == 0x0028);
static_assert(offsetof(FServerGetCharacterInventoryResult, VirtualCurrency) == 0x0038);
static_assert(offsetof(FServerGetCharacterInventoryResult, VirtualCurrencyRechargeTimes) == 0x0040);
static_assert(offsetof(FServerGetCharacterLeaderboardResult, Leaderboard) == 0x0008);
static_assert(offsetof(FServerGetCharacterStatisticsResult, CharacterId) == 0x0008);
static_assert(offsetof(FServerGetCharacterStatisticsResult, CharacterStatistics) == 0x0018);
static_assert(offsetof(FServerGetCharacterStatisticsResult, PlayFabId) == 0x0020);
static_assert(offsetof(FServerGetContentDownloadUrlResult, URL) == 0x0008);
static_assert(offsetof(FServerGetLeaderboardResult, Leaderboard) == 0x0008);
static_assert(offsetof(FServerGetLeaderboardResult, NextReset) == 0x0018);
static_assert(offsetof(FServerGetFriendsListResult, Friends) == 0x0008);
static_assert(offsetof(FServerGetLeaderboardAroundCharacterResult, Leaderboard) == 0x0008);
static_assert(offsetof(FServerGetLeaderboardAroundUserResult, Leaderboard) == 0x0008);
static_assert(offsetof(FServerGetLeaderboardAroundUserResult, NextReset) == 0x0018);
static_assert(offsetof(FServerGetLeaderboardForUsersCharactersResult, Leaderboard) == 0x0008);
static_assert(offsetof(FServerGetPlayerCombinedInfoResult, InfoResultPayload) == 0x0008);
static_assert(offsetof(FServerGetPlayerCombinedInfoResult, PlayFabId) == 0x0010);
static_assert(offsetof(FServerGetPlayerProfileResult, PlayerProfile) == 0x0008);
static_assert(offsetof(FServerGetPlayerSegmentsResult, Segments) == 0x0008);
static_assert(offsetof(FServerGetPlayersInSegmentResult, ContinuationToken) == 0x0008);
static_assert(offsetof(FServerGetPlayersInSegmentResult, PlayerProfiles) == 0x0018);
static_assert(offsetof(FServerGetPlayerStatisticsResult, PlayFabId) == 0x0008);
static_assert(offsetof(FServerGetPlayerStatisticsResult, Statistics) == 0x0018);
static_assert(offsetof(FServerGetPlayerStatisticVersionsResult, StatisticVersions) == 0x0008);
static_assert(offsetof(FServerGetPlayerTagsResult, PlayFabId) == 0x0008);
static_assert(offsetof(FServerGetPlayerTagsResult, Tags) == 0x0018);
static_assert(offsetof(FServerGetPlayFabIDsFromFacebookIDsResult, Data) == 0x0008);
static_assert(offsetof(FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult, Data) == 0x0008);
static_assert(offsetof(FServerGetPlayFabIDsFromGenericIDsResult, Data) == 0x0008);
static_assert(offsetof(FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult, Data) == 0x0008);
static_assert(offsetof(FServerGetPlayFabIDsFromPSNAccountIDsResult, Data) == 0x0008);
static_assert(offsetof(FServerGetPlayFabIDsFromSteamIDsResult, Data) == 0x0008);
static_assert(offsetof(FServerGetPlayFabIDsFromXboxLiveIDsResult, Data) == 0x0008);
static_assert(offsetof(FServerGetPublisherDataResult, Data) == 0x0008);
static_assert(offsetof(FServerGetRandomResultTablesResult, Tables) == 0x0008);
static_assert(offsetof(FServerGetServerCustomIDsFromPlayFabIDsResult, Data) == 0x0008);
static_assert(offsetof(FServerGetSharedGroupDataResult, Data) == 0x0008);
static_assert(offsetof(FServerGetSharedGroupDataResult, Members) == 0x0010);
static_assert(offsetof(FServerGetStoreItemsResult, CatalogVersion) == 0x0008);
static_assert(offsetof(FServerGetStoreItemsResult, MarketingData) == 0x0018);
static_assert(offsetof(FServerGetStoreItemsResult, Source) == 0x0020);
static_assert(offsetof(FServerGetStoreItemsResult, Store) == 0x0028);
static_assert(offsetof(FServerGetStoreItemsResult, StoreId) == 0x0038);
static_assert(offsetof(FServerGetTimeResult, Time) == 0x0008);
static_assert(offsetof(FServerGetTitleDataResult, Data) == 0x0008);
static_assert(offsetof(FServerGetTitleNewsResult, News) == 0x0008);
static_assert(offsetof(FServerGetUserAccountInfoResult, UserInfo) == 0x0008);
static_assert(offsetof(FServerGetUserBansResult, BanData) == 0x0008);
static_assert(offsetof(FServerGetUserDataResult, Data) == 0x0008);
static_assert(offsetof(FServerGetUserDataResult, PlayFabId) == 0x0018);
static_assert(offsetof(FServerGetUserInventoryResult, Inventory) == 0x0008);
static_assert(offsetof(FServerGetUserInventoryResult, PlayFabId) == 0x0018);
static_assert(offsetof(FServerGetUserInventoryResult, VirtualCurrency) == 0x0028);
static_assert(offsetof(FServerGetUserInventoryResult, VirtualCurrencyRechargeTimes) == 0x0030);
static_assert(offsetof(FServerGrantCharacterToUserResult, CharacterId) == 0x0008);
static_assert(offsetof(FServerGrantItemsToCharacterResult, ItemGrantResults) == 0x0008);
static_assert(offsetof(FServerGrantItemsToUserResult, ItemGrantResults) == 0x0008);
static_assert(offsetof(FServerGrantItemsToUsersResult, ItemGrantResults) == 0x0008);
static_assert(offsetof(FServerServerLoginResult, EntityToken) == 0x0010);
static_assert(offsetof(FServerServerLoginResult, InfoResultPayload) == 0x0018);
static_assert(offsetof(FServerServerLoginResult, LastLoginTime) == 0x0020);
static_assert(offsetof(FServerServerLoginResult, PlayFabId) == 0x0038);
static_assert(offsetof(FServerServerLoginResult, SessionTicket) == 0x0048);
static_assert(offsetof(FServerServerLoginResult, SettingsForUser) == 0x0058);
static_assert(offsetof(FServerServerLoginResult, TreatmentAssignment) == 0x0060);
static_assert(offsetof(FServerModifyItemUsesResult, ItemInstanceId) == 0x0008);
static_assert(offsetof(FServerNotifyMatchmakerPlayerLeftResult, PlayerState) == 0x0008);
static_assert(offsetof(FServerRedeemCouponResult, GrantedItems) == 0x0008);
static_assert(offsetof(FServerRedeemMatchmakerTicketResult, Error) == 0x0008);
static_assert(offsetof(FServerRedeemMatchmakerTicketResult, UserInfo) == 0x0020);
static_assert(offsetof(FServerRegisterGameResponse, LobbyId) == 0x0008);
static_assert(offsetof(FServerRevokeAllBansForUserResult, BanData) == 0x0008);
static_assert(offsetof(FServerRevokeBansResult, BanData) == 0x0008);
static_assert(offsetof(FServerRevokeInventoryItemsResult, Errors) == 0x0008);
static_assert(offsetof(FServerSavePushNotificationTemplateResult, PushNotificationTemplateId) == 0x0008);
static_assert(offsetof(FServerUnlockContainerItemResult, GrantedItems) == 0x0008);
static_assert(offsetof(FServerUnlockContainerItemResult, UnlockedItemInstanceId) == 0x0018);
static_assert(offsetof(FServerUnlockContainerItemResult, UnlockedWithItemInstanceId) == 0x0028);
static_assert(offsetof(FServerUnlockContainerItemResult, VirtualCurrency) == 0x0038);
static_assert(offsetof(FServerUpdateBansResult, BanData) == 0x0008);
static_assert(offsetof(FServerWriteEventResponse, EventId) == 0x0008);
static_assert(offsetof(FServerDeleteCharacterFromUserRequest, CharacterId) == 0x0008);
static_assert(offsetof(FServerDeleteCharacterFromUserRequest, CustomTags) == 0x0018);
static_assert(offsetof(FServerDeleteCharacterFromUserRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FServerDeletePlayerRequest, PlayFabId) == 0x0008);
static_assert(offsetof(FServerDeletePushNotificationTemplateRequest, PushNotificationTemplateId) == 0x0008);
static_assert(offsetof(FServerDeleteSharedGroupRequest, SharedGroupId) == 0x0008);
static_assert(offsetof(FServerDeregisterGameRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerDeregisterGameRequest, LobbyId) == 0x0010);
static_assert(offsetof(FServerEvaluateRandomResultTableRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FServerEvaluateRandomResultTableRequest, TableId) == 0x0018);
static_assert(offsetof(FServerExecuteCloudScriptServerRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerExecuteCloudScriptServerRequest, FunctionName) == 0x0010);
static_assert(offsetof(FServerExecuteCloudScriptServerRequest, FunctionParameter) == 0x0020);
static_assert(offsetof(FServerExecuteCloudScriptServerRequest, PlayFabId) == 0x0030);
static_assert(offsetof(FServerExecuteCloudScriptServerRequest, RevisionSelection) == 0x0040);
static_assert(offsetof(FServerListUsersCharactersRequest, PlayFabId) == 0x0008);
static_assert(offsetof(FServerGetCatalogItemsRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FServerGetCharacterDataRequest, CharacterId) == 0x0008);
static_assert(offsetof(FServerGetCharacterDataRequest, Keys) == 0x0020);
static_assert(offsetof(FServerGetCharacterDataRequest, PlayFabId) == 0x0030);
static_assert(offsetof(FServerGetCharacterInventoryRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FServerGetCharacterInventoryRequest, CharacterId) == 0x0018);
static_assert(offsetof(FServerGetCharacterInventoryRequest, CustomTags) == 0x0028);
static_assert(offsetof(FServerGetCharacterInventoryRequest, PlayFabId) == 0x0030);
static_assert(offsetof(FServerGetCharacterLeaderboardRequest, CharacterType) == 0x0008);
static_assert(offsetof(FServerGetCharacterLeaderboardRequest, StatisticName) == 0x0020);
static_assert(offsetof(FServerGetCharacterStatisticsRequest, CharacterId) == 0x0008);
static_assert(offsetof(FServerGetCharacterStatisticsRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FServerGetContentDownloadUrlRequest, HttpMethod) == 0x0008);
static_assert(offsetof(FServerGetContentDownloadUrlRequest, Key) == 0x0018);
static_assert(offsetof(FServerGetFriendLeaderboardRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerGetFriendLeaderboardRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FServerGetFriendLeaderboardRequest, ProfileConstraints) == 0x0028);
static_assert(offsetof(FServerGetFriendLeaderboardRequest, StatisticName) == 0x0038);
static_assert(offsetof(FServerGetFriendLeaderboardRequest, XboxToken) == 0x0050);
static_assert(offsetof(FServerGetFriendsListRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerGetFriendsListRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FServerGetFriendsListRequest, ProfileConstraints) == 0x0028);
static_assert(offsetof(FServerGetFriendsListRequest, XboxToken) == 0x0030);
static_assert(offsetof(FServerGetLeaderboardRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerGetLeaderboardRequest, ProfileConstraints) == 0x0018);
static_assert(offsetof(FServerGetLeaderboardRequest, StatisticName) == 0x0028);
static_assert(offsetof(FServerGetLeaderboardAroundCharacterRequest, CharacterId) == 0x0008);
static_assert(offsetof(FServerGetLeaderboardAroundCharacterRequest, CharacterType) == 0x0018);
static_assert(offsetof(FServerGetLeaderboardAroundCharacterRequest, PlayFabId) == 0x0030);
static_assert(offsetof(FServerGetLeaderboardAroundCharacterRequest, StatisticName) == 0x0040);
static_assert(offsetof(FServerGetLeaderboardAroundUserRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerGetLeaderboardAroundUserRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FServerGetLeaderboardAroundUserRequest, ProfileConstraints) == 0x0028);
static_assert(offsetof(FServerGetLeaderboardAroundUserRequest, StatisticName) == 0x0030);
static_assert(offsetof(FServerGetLeaderboardForUsersCharactersRequest, PlayFabId) == 0x0008);
static_assert(offsetof(FServerGetLeaderboardForUsersCharactersRequest, StatisticName) == 0x0018);
static_assert(offsetof(FServerGetPlayerCombinedInfoRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerGetPlayerCombinedInfoRequest, InfoRequestParameters) == 0x0010);
static_assert(offsetof(FServerGetPlayerCombinedInfoRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FServerGetPlayerProfileRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerGetPlayerProfileRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FServerGetPlayerProfileRequest, ProfileConstraints) == 0x0020);
static_assert(offsetof(FServerGetPlayersSegmentsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerGetPlayersSegmentsRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FServerGetPlayersInSegmentRequest, ContinuationToken) == 0x0008);
static_assert(offsetof(FServerGetPlayersInSegmentRequest, CustomTags) == 0x0018);
static_assert(offsetof(FServerGetPlayersInSegmentRequest, SegmentId) == 0x0028);
static_assert(offsetof(FServerGetPlayerStatisticsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerGetPlayerStatisticsRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FServerGetPlayerStatisticsRequest, StatisticNames) == 0x0020);
static_assert(offsetof(FServerGetPlayerStatisticsRequest, StatisticNameVersions) == 0x0030);
static_assert(offsetof(FServerGetPlayerStatisticVersionsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerGetPlayerStatisticVersionsRequest, StatisticName) == 0x0010);
static_assert(offsetof(FServerGetPlayerTagsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerGetPlayerTagsRequest, Namespace) == 0x0010);
static_assert(offsetof(FServerGetPlayerTagsRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FServerGetPlayFabIDsFromFacebookIDsRequest, FacebookIDs) == 0x0008);
static_assert(offsetof(FServerGetPlayFabIDsFromFacebookInstantGamesIdsRequest, FacebookInstantGamesIds) == 0x0008);
static_assert(offsetof(FServerGetPlayFabIDsFromGenericIDsRequest, GenericIDs) == 0x0008);
static_assert(offsetof(FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest, NintendoSwitchDeviceIds) == 0x0008);
static_assert(offsetof(FServerGetPlayFabIDsFromPSNAccountIDsRequest, PSNAccountIDs) == 0x0010);
static_assert(offsetof(FServerGetPlayFabIDsFromSteamIDsRequest, SteamStringIDs) == 0x0008);
static_assert(offsetof(FServerGetPlayFabIDsFromXboxLiveIDsRequest, Sandbox) == 0x0008);
static_assert(offsetof(FServerGetPlayFabIDsFromXboxLiveIDsRequest, XboxLiveAccountIDs) == 0x0018);
static_assert(offsetof(FServerGetPublisherDataRequest, Keys) == 0x0008);
static_assert(offsetof(FServerGetRandomResultTablesRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FServerGetRandomResultTablesRequest, TableIDs) == 0x0018);
static_assert(offsetof(FServerGetServerCustomIDsFromPlayFabIDsRequest, PlayFabIds) == 0x0008);
static_assert(offsetof(FServerGetSharedGroupDataRequest, Keys) == 0x0010);
static_assert(offsetof(FServerGetSharedGroupDataRequest, SharedGroupId) == 0x0020);
static_assert(offsetof(FServerGetStoreItemsServerRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FServerGetStoreItemsServerRequest, CustomTags) == 0x0018);
static_assert(offsetof(FServerGetStoreItemsServerRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FServerGetStoreItemsServerRequest, StoreId) == 0x0030);
static_assert(offsetof(FServerGetTitleDataRequest, Keys) == 0x0008);
static_assert(offsetof(FServerGetTitleDataRequest, OverrideLabel) == 0x0018);
static_assert(offsetof(FServerGetUserAccountInfoRequest, PlayFabId) == 0x0008);
static_assert(offsetof(FServerGetUserBansRequest, PlayFabId) == 0x0008);
static_assert(offsetof(FServerGetUserDataRequest, Keys) == 0x0010);
static_assert(offsetof(FServerGetUserDataRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FServerGetUserInventoryRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerGetUserInventoryRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FServerGrantCharacterToUserRequest, CharacterName) == 0x0008);
static_assert(offsetof(FServerGrantCharacterToUserRequest, CharacterType) == 0x0018);
static_assert(offsetof(FServerGrantCharacterToUserRequest, CustomTags) == 0x0028);
static_assert(offsetof(FServerGrantCharacterToUserRequest, PlayFabId) == 0x0030);
static_assert(offsetof(FServerGrantItemsToCharacterRequest, Annotation) == 0x0008);
static_assert(offsetof(FServerGrantItemsToCharacterRequest, CatalogVersion) == 0x0018);
static_assert(offsetof(FServerGrantItemsToCharacterRequest, CharacterId) == 0x0028);
static_assert(offsetof(FServerGrantItemsToCharacterRequest, CustomTags) == 0x0038);
static_assert(offsetof(FServerGrantItemsToCharacterRequest, ItemIds) == 0x0040);
static_assert(offsetof(FServerGrantItemsToCharacterRequest, PlayFabId) == 0x0050);
static_assert(offsetof(FServerGrantItemsToUserRequest, Annotation) == 0x0008);
static_assert(offsetof(FServerGrantItemsToUserRequest, CatalogVersion) == 0x0018);
static_assert(offsetof(FServerGrantItemsToUserRequest, CustomTags) == 0x0028);
static_assert(offsetof(FServerGrantItemsToUserRequest, ItemIds) == 0x0030);
static_assert(offsetof(FServerGrantItemsToUserRequest, PlayFabId) == 0x0040);
static_assert(offsetof(FServerGrantItemsToUsersRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FServerGrantItemsToUsersRequest, CustomTags) == 0x0018);
static_assert(offsetof(FServerGrantItemsToUsersRequest, ItemGrants) == 0x0020);
static_assert(offsetof(FServerLinkPSNAccountRequest, AuthCode) == 0x0008);
static_assert(offsetof(FServerLinkPSNAccountRequest, CustomTags) == 0x0018);
static_assert(offsetof(FServerLinkPSNAccountRequest, PlayFabId) == 0x0028);
static_assert(offsetof(FServerLinkPSNAccountRequest, RedirectUri) == 0x0038);
static_assert(offsetof(FServerLinkServerCustomIdRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerLinkServerCustomIdRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FServerLinkServerCustomIdRequest, ServerCustomId) == 0x0028);
static_assert(offsetof(FServerLinkXboxAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerLinkXboxAccountRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FServerLinkXboxAccountRequest, XboxToken) == 0x0028);
static_assert(offsetof(FServerLoginWithServerCustomIdRequest, CustomTags) == 0x0010);
static_assert(offsetof(FServerLoginWithServerCustomIdRequest, InfoRequestParameters) == 0x0018);
static_assert(offsetof(FServerLoginWithServerCustomIdRequest, PlayerSecret) == 0x0020);
static_assert(offsetof(FServerLoginWithServerCustomIdRequest, ServerCustomId) == 0x0030);
static_assert(offsetof(FServerLoginWithSteamIdRequest, CustomTags) == 0x0010);
static_assert(offsetof(FServerLoginWithSteamIdRequest, InfoRequestParameters) == 0x0018);
static_assert(offsetof(FServerLoginWithSteamIdRequest, SteamId) == 0x0020);
static_assert(offsetof(FServerLoginWithXboxRequest, CustomTags) == 0x0010);
static_assert(offsetof(FServerLoginWithXboxRequest, InfoRequestParameters) == 0x0018);
static_assert(offsetof(FServerLoginWithXboxRequest, XboxToken) == 0x0020);
static_assert(offsetof(FServerLoginWithXboxIdRequest, CustomTags) == 0x0010);
static_assert(offsetof(FServerLoginWithXboxIdRequest, InfoRequestParameters) == 0x0018);
static_assert(offsetof(FServerLoginWithXboxIdRequest, Sandbox) == 0x0020);
static_assert(offsetof(FServerLoginWithXboxIdRequest, XboxId) == 0x0030);
static_assert(offsetof(FServerModifyItemUsesRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerModifyItemUsesRequest, ItemInstanceId) == 0x0010);
static_assert(offsetof(FServerModifyItemUsesRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FServerMoveItemToCharacterFromCharacterRequest, GivingCharacterId) == 0x0008);
static_assert(offsetof(FServerMoveItemToCharacterFromCharacterRequest, ItemInstanceId) == 0x0018);
static_assert(offsetof(FServerMoveItemToCharacterFromCharacterRequest, PlayFabId) == 0x0028);
static_assert(offsetof(FServerMoveItemToCharacterFromCharacterRequest, ReceivingCharacterId) == 0x0038);
static_assert(offsetof(FServerMoveItemToCharacterFromUserRequest, CharacterId) == 0x0008);
static_assert(offsetof(FServerMoveItemToCharacterFromUserRequest, ItemInstanceId) == 0x0018);
static_assert(offsetof(FServerMoveItemToCharacterFromUserRequest, PlayFabId) == 0x0028);
static_assert(offsetof(FServerMoveItemToUserFromCharacterRequest, CharacterId) == 0x0008);
static_assert(offsetof(FServerMoveItemToUserFromCharacterRequest, ItemInstanceId) == 0x0018);
static_assert(offsetof(FServerMoveItemToUserFromCharacterRequest, PlayFabId) == 0x0028);
static_assert(offsetof(FServerNotifyMatchmakerPlayerLeftRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerNotifyMatchmakerPlayerLeftRequest, LobbyId) == 0x0010);
static_assert(offsetof(FServerNotifyMatchmakerPlayerLeftRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FServerRedeemCouponRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FServerRedeemCouponRequest, CharacterId) == 0x0018);
static_assert(offsetof(FServerRedeemCouponRequest, CouponCode) == 0x0028);
static_assert(offsetof(FServerRedeemCouponRequest, CustomTags) == 0x0038);
static_assert(offsetof(FServerRedeemCouponRequest, PlayFabId) == 0x0040);
static_assert(offsetof(FServerRedeemMatchmakerTicketRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerRedeemMatchmakerTicketRequest, LobbyId) == 0x0010);
static_assert(offsetof(FServerRedeemMatchmakerTicketRequest, Ticket) == 0x0020);
static_assert(offsetof(FServerRefreshGameServerInstanceHeartbeatRequest, LobbyId) == 0x0008);
static_assert(offsetof(FServerRegisterGameRequest, Build) == 0x0008);
static_assert(offsetof(FServerRegisterGameRequest, CustomTags) == 0x0018);
static_assert(offsetof(FServerRegisterGameRequest, GAMEMODE) == 0x0020);
static_assert(offsetof(FServerRegisterGameRequest, LobbyId) == 0x0030);
static_assert(offsetof(FServerRegisterGameRequest, Region) == 0x0040);
static_assert(offsetof(FServerRegisterGameRequest, ServerIPV4Address) == 0x0048);
static_assert(offsetof(FServerRegisterGameRequest, ServerIPV6Address) == 0x0058);
static_assert(offsetof(FServerRegisterGameRequest, ServerPort) == 0x0068);
static_assert(offsetof(FServerRegisterGameRequest, ServerPublicDNSName) == 0x0078);
static_assert(offsetof(FServerRegisterGameRequest, Tags) == 0x0088);
static_assert(offsetof(FServerRemoveFriendRequest, FriendPlayFabId) == 0x0008);
static_assert(offsetof(FServerRemoveFriendRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FServerRemoveGenericIDRequest, GenericId) == 0x0008);
static_assert(offsetof(FServerRemoveGenericIDRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FServerRemovePlayerTagRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerRemovePlayerTagRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FServerRemovePlayerTagRequest, TagName) == 0x0020);
static_assert(offsetof(FServerRemoveSharedGroupMembersRequest, PlayFabIds) == 0x0008);
static_assert(offsetof(FServerRemoveSharedGroupMembersRequest, SharedGroupId) == 0x0018);
static_assert(offsetof(FServerReportPlayerServerRequest, Comment) == 0x0008);
static_assert(offsetof(FServerReportPlayerServerRequest, CustomTags) == 0x0018);
static_assert(offsetof(FServerReportPlayerServerRequest, ReporteeId) == 0x0020);
static_assert(offsetof(FServerReportPlayerServerRequest, ReporterId) == 0x0030);
static_assert(offsetof(FServerRevokeAllBansForUserRequest, PlayFabId) == 0x0008);
static_assert(offsetof(FServerRevokeBansRequest, BanIds) == 0x0008);
static_assert(offsetof(FServerRevokeInventoryItemRequest, CharacterId) == 0x0008);
static_assert(offsetof(FServerRevokeInventoryItemRequest, ItemInstanceId) == 0x0018);
static_assert(offsetof(FServerRevokeInventoryItemRequest, PlayFabId) == 0x0028);
static_assert(offsetof(FServerRevokeInventoryItemsRequest, Items) == 0x0008);
static_assert(offsetof(FServerSavePushNotificationTemplateRequest, AndroidPayload) == 0x0008);
static_assert(offsetof(FServerSavePushNotificationTemplateRequest, ID) == 0x0018);
static_assert(offsetof(FServerSavePushNotificationTemplateRequest, IOSPayload) == 0x0028);
static_assert(offsetof(FServerSavePushNotificationTemplateRequest, LocalizedPushNotificationTemplates) == 0x0038);
static_assert(offsetof(FServerSavePushNotificationTemplateRequest, Name) == 0x0040);
static_assert(offsetof(FServerSendCustomAccountRecoveryEmailRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerSendCustomAccountRecoveryEmailRequest, Email) == 0x0010);
static_assert(offsetof(FServerSendCustomAccountRecoveryEmailRequest, EmailTemplateId) == 0x0020);
static_assert(offsetof(FServerSendCustomAccountRecoveryEmailRequest, Username) == 0x0030);
static_assert(offsetof(FServerSendEmailFromTemplateRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerSendEmailFromTemplateRequest, EmailTemplateId) == 0x0010);
static_assert(offsetof(FServerSendEmailFromTemplateRequest, PlayFabId) == 0x0020);
static_assert(offsetof(FServerSendPushNotificationRequest, AdvancedPlatformDelivery) == 0x0008);
static_assert(offsetof(FServerSendPushNotificationRequest, CustomTags) == 0x0018);
static_assert(offsetof(FServerSendPushNotificationRequest, Message) == 0x0020);
static_assert(offsetof(FServerSendPushNotificationRequest, Package) == 0x0030);
static_assert(offsetof(FServerSendPushNotificationRequest, Recipient) == 0x0038);
static_assert(offsetof(FServerSendPushNotificationRequest, Subject) == 0x0048);
static_assert(offsetof(FServerSendPushNotificationRequest, TargetPlatforms) == 0x0058);
static_assert(offsetof(FServerSendPushNotificationFromTemplateRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerSendPushNotificationFromTemplateRequest, PushNotificationTemplateId) == 0x0010);
static_assert(offsetof(FServerSendPushNotificationFromTemplateRequest, Recipient) == 0x0020);
static_assert(offsetof(FServerSetFriendTagsRequest, FriendPlayFabId) == 0x0008);
static_assert(offsetof(FServerSetFriendTagsRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FServerSetFriendTagsRequest, Tags) == 0x0028);
static_assert(offsetof(FServerSetGameServerInstanceDataRequest, GameServerData) == 0x0008);
static_assert(offsetof(FServerSetGameServerInstanceDataRequest, LobbyId) == 0x0018);
static_assert(offsetof(FServerSetGameServerInstanceStateRequest, LobbyId) == 0x0008);
static_assert(offsetof(FServerSetGameServerInstanceStateRequest, State) == 0x0018);
static_assert(offsetof(FServerSetGameServerInstanceTagsRequest, LobbyId) == 0x0008);
static_assert(offsetof(FServerSetGameServerInstanceTagsRequest, Tags) == 0x0018);
static_assert(offsetof(FServerSetPlayerSecretRequest, PlayerSecret) == 0x0008);
static_assert(offsetof(FServerSetPlayerSecretRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FServerSetPublisherDataRequest, Key) == 0x0008);
static_assert(offsetof(FServerSetPublisherDataRequest, Value) == 0x0018);
static_assert(offsetof(FServerSetTitleDataRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerSetTitleDataRequest, Key) == 0x0010);
static_assert(offsetof(FServerSetTitleDataRequest, Value) == 0x0020);
static_assert(offsetof(FServerSubtractCharacterVirtualCurrencyRequest, CharacterId) == 0x0010);
static_assert(offsetof(FServerSubtractCharacterVirtualCurrencyRequest, CustomTags) == 0x0020);
static_assert(offsetof(FServerSubtractCharacterVirtualCurrencyRequest, PlayFabId) == 0x0028);
static_assert(offsetof(FServerSubtractCharacterVirtualCurrencyRequest, VirtualCurrency) == 0x0038);
static_assert(offsetof(FServerSubtractUserVirtualCurrencyRequest, CustomTags) == 0x0010);
static_assert(offsetof(FServerSubtractUserVirtualCurrencyRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FServerSubtractUserVirtualCurrencyRequest, VirtualCurrency) == 0x0028);
static_assert(offsetof(FServerUnlinkPSNAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerUnlinkPSNAccountRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FServerUnlinkServerCustomIdRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerUnlinkServerCustomIdRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FServerUnlinkServerCustomIdRequest, ServerCustomId) == 0x0020);
static_assert(offsetof(FServerUnlinkXboxAccountRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerUnlinkXboxAccountRequest, PlayFabId) == 0x0010);
static_assert(offsetof(FServerUnlockContainerInstanceRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FServerUnlockContainerInstanceRequest, CharacterId) == 0x0018);
static_assert(offsetof(FServerUnlockContainerInstanceRequest, ContainerItemInstanceId) == 0x0028);
static_assert(offsetof(FServerUnlockContainerInstanceRequest, CustomTags) == 0x0038);
static_assert(offsetof(FServerUnlockContainerInstanceRequest, KeyItemInstanceId) == 0x0040);
static_assert(offsetof(FServerUnlockContainerInstanceRequest, PlayFabId) == 0x0050);
static_assert(offsetof(FServerUnlockContainerItemRequest, CatalogVersion) == 0x0008);
static_assert(offsetof(FServerUnlockContainerItemRequest, CharacterId) == 0x0018);
static_assert(offsetof(FServerUnlockContainerItemRequest, ContainerItemId) == 0x0028);
static_assert(offsetof(FServerUnlockContainerItemRequest, CustomTags) == 0x0038);
static_assert(offsetof(FServerUnlockContainerItemRequest, PlayFabId) == 0x0040);
static_assert(offsetof(FServerUpdateAvatarUrlRequest, ImageUrl) == 0x0008);
static_assert(offsetof(FServerUpdateAvatarUrlRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FServerUpdateBansRequest, Bans) == 0x0008);
static_assert(offsetof(FServerUpdateCharacterDataRequest, CharacterId) == 0x0008);
static_assert(offsetof(FServerUpdateCharacterDataRequest, CustomTags) == 0x0018);
static_assert(offsetof(FServerUpdateCharacterDataRequest, Data) == 0x0020);
static_assert(offsetof(FServerUpdateCharacterDataRequest, KeysToRemove) == 0x0028);
static_assert(offsetof(FServerUpdateCharacterDataRequest, Permission) == 0x0038);
static_assert(offsetof(FServerUpdateCharacterDataRequest, PlayFabId) == 0x0040);
static_assert(offsetof(FServerUpdateCharacterStatisticsRequest, CharacterId) == 0x0008);
static_assert(offsetof(FServerUpdateCharacterStatisticsRequest, CharacterStatistics) == 0x0018);
static_assert(offsetof(FServerUpdateCharacterStatisticsRequest, CustomTags) == 0x0020);
static_assert(offsetof(FServerUpdateCharacterStatisticsRequest, PlayFabId) == 0x0028);
static_assert(offsetof(FServerUpdatePlayerStatisticsRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerUpdatePlayerStatisticsRequest, PlayFabId) == 0x0018);
static_assert(offsetof(FServerUpdatePlayerStatisticsRequest, Statistics) == 0x0028);
static_assert(offsetof(FServerUpdateSharedGroupDataRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerUpdateSharedGroupDataRequest, Data) == 0x0010);
static_assert(offsetof(FServerUpdateSharedGroupDataRequest, KeysToRemove) == 0x0018);
static_assert(offsetof(FServerUpdateSharedGroupDataRequest, Permission) == 0x0028);
static_assert(offsetof(FServerUpdateSharedGroupDataRequest, SharedGroupId) == 0x0030);
static_assert(offsetof(FServerUpdateUserDataRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerUpdateUserDataRequest, Data) == 0x0010);
static_assert(offsetof(FServerUpdateUserDataRequest, KeysToRemove) == 0x0018);
static_assert(offsetof(FServerUpdateUserDataRequest, Permission) == 0x0028);
static_assert(offsetof(FServerUpdateUserDataRequest, PlayFabId) == 0x0030);
static_assert(offsetof(FServerUpdateUserInternalDataRequest, CustomTags) == 0x0008);
static_assert(offsetof(FServerUpdateUserInternalDataRequest, Data) == 0x0010);
static_assert(offsetof(FServerUpdateUserInternalDataRequest, KeysToRemove) == 0x0018);
static_assert(offsetof(FServerUpdateUserInternalDataRequest, PlayFabId) == 0x0028);
static_assert(offsetof(FServerUpdateUserInventoryItemDataRequest, CharacterId) == 0x0008);
static_assert(offsetof(FServerUpdateUserInventoryItemDataRequest, CustomTags) == 0x0018);
static_assert(offsetof(FServerUpdateUserInventoryItemDataRequest, Data) == 0x0020);
static_assert(offsetof(FServerUpdateUserInventoryItemDataRequest, ItemInstanceId) == 0x0028);
static_assert(offsetof(FServerUpdateUserInventoryItemDataRequest, KeysToRemove) == 0x0038);
static_assert(offsetof(FServerUpdateUserInventoryItemDataRequest, PlayFabId) == 0x0048);
static_assert(offsetof(FServerWriteServerCharacterEventRequest, Body) == 0x0008);
static_assert(offsetof(FServerWriteServerCharacterEventRequest, CharacterId) == 0x0010);
static_assert(offsetof(FServerWriteServerCharacterEventRequest, CustomTags) == 0x0020);
static_assert(offsetof(FServerWriteServerCharacterEventRequest, EventName) == 0x0028);
static_assert(offsetof(FServerWriteServerCharacterEventRequest, PlayFabId) == 0x0038);
static_assert(offsetof(FServerWriteServerCharacterEventRequest, Timestamp) == 0x0048);
static_assert(offsetof(FServerWriteServerPlayerEventRequest, Body) == 0x0008);
static_assert(offsetof(FServerWriteServerPlayerEventRequest, CustomTags) == 0x0010);
static_assert(offsetof(FServerWriteServerPlayerEventRequest, EventName) == 0x0018);
static_assert(offsetof(FServerWriteServerPlayerEventRequest, PlayFabId) == 0x0028);
static_assert(offsetof(FServerWriteServerPlayerEventRequest, Timestamp) == 0x0038);
static_assert(offsetof(FServerWriteTitleEventRequest, Body) == 0x0008);
static_assert(offsetof(FServerWriteTitleEventRequest, CustomTags) == 0x0010);
static_assert(offsetof(FServerWriteTitleEventRequest, EventName) == 0x0018);
static_assert(offsetof(FServerWriteTitleEventRequest, Timestamp) == 0x0028);
