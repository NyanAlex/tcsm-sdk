
/********************************************************
*                                                       *
*   Package generated using UEDumper by Spuckwaffel.    *
*                                                       *
********************************************************/

#pragma once
#include "BasicType.h"
#include "AIModule.h"
#include "AkAudio.h"
#include "BBQBackendServices.h"
#include "BBQCore.h"
#include "BBQInterface.h"
#include "BBQUtilities.h"
#include "CoreUObject.h"
#include "merged_AudioMixer_Engine_UMG_MovieScene_MovieSceneTracks.h"
#include "EnhancedInput.h"
#include "GameplayAbilities.h"
#include "GameplayCameras.h"
#include "GameplayTags.h"
#include "GameplayTasks.h"
#include "GameplayVariables.h"
#include "LevelSequence.h"
#include "merged_AudioMixer_Engine_UMG_MovieScene_MovieSceneTracks.h"
#include "NavigationSystem.h"
#include "Niagara.h"
#include "OnlineSubsystemBBQ.h"
#include "PhysicsCore.h"
#include "merged_AudioMixer_Engine_UMG_MovieScene_MovieSceneTracks.h"

#pragma pack(push, 0x1)

class AABBQDismembermentActor;
class AAssetSelectionDebugActor;
class ABBQAbilityTarget_HeightenedSense;
class ABBQAbilityTarget_IKnowEngines;
class ABBQAbilityTarget_SenseActors;
class ABBQAbilityTarget_ThereTheyAre;
class ABBQBarbedWire;
class ABBQBarbedWireOnDoorFrame;
class ABBQBloodBucket;
class ABBQBloodPool;
class ABBQBoltholeBase;
class ABBQCar;
class ABBQCattleGridJunction;
class ABBQChainsawProp;
class ABBQCharacterBehaviour;
class ABBQCollectable;
class ABBQCommTriggerBox;
class ABBQContextualKillLocation;
class ABBQDeathBloodApplicationActor;
class ABBQDestructibleActor;
class ABBQDismembermentActor;
class ABBQDismembermentMorphTargetLerper;
class ABBQDoorBase;
class ABBQDoorHinge;
class ABBQDoorSliding;
class ABBQEscapeZone;
class ABBQFlickeringLight;
class ABBQFootprintClue;
class ABBQFuseBoxBase;
class ABBQFuseBoxDoorBase;
class ABBQFuseBoxLocator;
class ABBQFuseBoxMinigame;
class ABBQFuseboxDoorDressing;
class ABBQGameSessionCharacter;
class ABBQGameSessionCharacterAnimated;
class ABBQGameSessionGameMode;
class ABBQGameSessionGameState;
class ABBQGameSessionPlayerState;
class ABBQGameSessionWorldSettings;
class ABBQGameWorldManager;
class ABBQGameplayAbilityTargetActor_CookListen;
class ABBQGameplayAbilityTargetActor_Footprints;
class ABBQGameplayAbilityTargetActor_PlaceTrap;
class ABBQGameplayCueNotify_Actor;
class ABBQGameplayLight;
class ABBQGarageControl;
class ABBQGarageDoor;
class ABBQGenerator;
class ABBQGrandpa;
class ABBQGrandpaRandomiser;
class ABBQGrandpaSneakAttackBehaviour;
class ABBQGrandpaSpawn;
class ABBQHarvestLocation;
class ABBQHidingSpot;
class ABBQHidingVolume;
class ABBQImposter;
class ABBQIncapacitatedBehaviour;
class ABBQInspectableObjectBase;
class ABBQInteractionMinigame;
class ABBQInteractionMinigame_DoorUnlock;
class ABBQInteractionUIActor;
class ABBQInteractiveLightSource;
class ABBQLadder;
class ABBQLevelActorRandomizer;
class ABBQLevelIntro;
class ABBQLevelLobby;
class ABBQLevelOutro;
class ABBQLevelRoomVolume;
class ABBQLevelSequenceActor;
class ABBQLevelSequenceTrigger;
class ABBQLocationTrigger;
class ABBQLockBase;
class ABBQMasterSingleObjectRandomiser;
class ABBQMercuryCarHidingSpot;
class ABBQMeshVisualiser;
class ABBQMinigameTestSpawner;
class ABBQMinigameV2;
class ABBQMultiplayerMinigameTester;
class ABBQMultiplayerMinigameV2;
class ABBQNetSyncedDoorBase;
class ABBQNoiseMaker;
class ABBQNoiseMakerChicken;
class ABBQObstacleSpawnBlocker;
class ABBQPickupDispenser;
class ABBQPickupDistributor;
class ABBQPickupSpawnerGroup;
class ABBQPickupSpawnerMarker;
class ABBQPipeExit;
class ABBQPipeGate;
class ABBQPipeValve;
class ABBQPlacementGuideArrow;
class ABBQPlayerCameraManager;
class ABBQPlayerController;
class ABBQPlayerRestrainer;
class ABBQPoisonCloud;
class ABBQPolicePhone;
class ABBQPowderCloud;
class ABBQProceduralFence;
class ABBQPushButton;
class ABBQRecoveryVolume;
class ABBQReplayPlayerController;
class ABBQSampleLevelSequenceActor;
class ABBQSidling;
class ABBQSissyPowderPickup;
class ABBQSkeletalMeshActor;
class ABBQSneakAttackBehaviour;
class ABBQSneakAttackKnifeBehaviour;
class ABBQSneakAttackTargetBehaviour;
class ABBQSpectatorPawn;
class ABBQSplineCameraVolume;
class ABBQSweetSpotMinigame;
class ABBQTimeOfDayLoader;
class ABBQTrap;
class ABBQTraversalActor;
class ABBQVfx;
class ABBQVictimRestrainedStart;
class ABBQWaterValve;
class ABBQWell;
class ABBQWrenchAttackBehaviour;
class AGeneratorCattleGrid;
class ASSACosmeticCueNotify_Actor;
class AVisualDamageApplicationActor_Manual;
class AVisualDamageApplicationActor_Mesh;
class AVisualDamageApplicationActor_Sweep;
class UBBQAbilityBarge;
class UBBQAbilityBlowPowder;
class UBBQAbilityClothesline;
class UBBQAbilityConsumeItem;
class UBBQAbilityCookListen;
class UBBQAbilityDetectGrandpa;
class UBBQAbilityEnvironmentalAttack;
class UBBQAbilityFirstAid;
class UBBQAbilityFocusPerk;
class UBBQAbilityFullVial;
class UBBQAbilityGrandpaSonar;
class UBBQAbilityHearing;
class UBBQAbilityHeightenedSense;
class UBBQAbilityHuntMode;
class UBBQAbilityISeeYou;
class UBBQAbilityIncapacitatedRecover;
class UBBQAbilityInvestigateFootsteps;
class UBBQAbilityJohnnyBloodlust;
class UBBQAbilityKnowWatch;
class UBBQAbilityListenTagChange;
class UBBQAbilityLocateGrandpa;
class UBBQAbilityMeleeAttack;
class UBBQAbilityMeleeChainsaw;
class UBBQAbilityMeleeChainsawSlam;
class UBBQAbilityMeleeReaction;
class UBBQAbilityPainIsNothing;
class UBBQAbilityPerfume;
class UBBQAbilityPerkAdrenalineRush;
class UBBQAbilityPerkAttributePoints;
class UBBQAbilityPerkHelpMe;
class UBBQAbilityPerkNoStopping;
class UBBQAbilityPerkSticksAndStones;
class UBBQAbilityPerkWellTrained;
class UBBQAbilityPlaceTrap;
class UBBQAbilityRipstall;
class UBBQAbilitySneakAttack;
class UBBQAbilitySpyOnPlayer;
class UBBQAbilityStatusEffect;
class UBBQAbilityTask_BargeAimingAssistTask;
class UBBQAbilityTask_ExecuteMeleeAttack;
class UBBQAbilityTask_WaitAbilityBlocked;
class UBBQAbilityTask_WaitBargeAreaOfEffectOverlap;
class UBBQAbilityTask_WaitGameplayTagWindow;
class UBBQAbilityTask_WaitInputHold;
class UBBQAbilityThickSkin;
class UBBQAbilityTrackFootprints;
class UBBQAbilityUltimateEscape;
class UBBQAnimInstance;
class UBBQAnimNotifyState_HingeDoorAkEvent;
class UBBQAnimNotify_CameraShake;
class UBBQAnimNotify_Comm;
class UBBQAnimNotify_DisablePlayerPlayerCollision;
class UBBQAnimNotify_Footsteps;
class UBBQAnimNotify_HingeDoorAkEvent;
class UBBQAnimNotify_RunForwards;
class UBBQAnimNotify_WindowLandingAssist;
class UBBQAnimatedHoldCharacterBehaviourInterface;
class UBBQAssetManager;
class UBBQAttributeSet_CookListen;
class UBBQAttributeSet_Melee;
class UBBQAttributeSet_SpyAbility;
class UBBQAudioDebugSubsystem;
class UBBQBarbedWireSlot;
class UBBQBarbedWiredCheckNotifyState;
class UBBQBaseBleedoutData;
class UBBQBleedoutComponent;
class UBBQBloodTrailComponent;
class UBBQBloodTrailPooledDecalComponent;
class UBBQBlueprintFunctionLibraryGameSessionGameState;
class UBBQBoxComponent;
class UBBQCalculationBleedingOutRate;
class UBBQCalculationFamilySlowdown;
class UBBQCalculationRestoreChunk;
class UBBQCalculationSSACooldown;
class UBBQCameraComponent;
class UBBQCameraFadingSettings;
class UBBQCameraFadingSubobject;
class UBBQCameraFramingSettings;
class UBBQCameraShake;
class UBBQCameraSuggestedFramingSubobject;
class UBBQCameraTargetLockSettings;
class UBBQCameraTargetLockSubobject;
class UBBQCameraTerrainFollowSettings;
class UBBQCameraTerrainFollowSubobject;
class UBBQCameraVolumeComponent;
class UBBQChainsawComponent;
class UBBQCharacterAnimSettings;
class UBBQCharacterAudioComponent;
class UBBQCharacterBehaviourComponent;
class UBBQCharacterInventoryComponent;
class UBBQCharacterMovementComponent;
class UBBQCheatManager;
class UBBQCinematicCameraModifier;
class UBBQCinematicCameraPlayerComponent;
class UBBQClamberableObstacle;
class UBBQCloseEncounterComponent;
class UBBQCloseEncounterHitFrameState;
class UBBQCombatInteractionEvent;
class UBBQComponentInputInterface;
class UBBQCustomTriggerCondition;
class UBBQCustomTriggerCondition_PowderCloud;
class UBBQDamageType;
class UBBQDamageType_DisconnectionTimeout;
class UBBQDeathBloodComponent;
class UBBQDebugAchievementComponent;
class UBBQDebugDrawComponent;
class UBBQDialogComponent;
class UBBQDismembermentComponent;
class UBBQDoorSlicerComponent;
class UBBQElectroTrapComponent;
class UBBQEnvHitReceiverSubObject;
class UBBQEnvironmentDamageSettings;
class UBBQEnvironmentHitReceiver;
class UBBQExecutionComponent;
class UBBQExecutionSettings;
class UBBQFootstepTrail;
class UBBQGameSessionBlueprintFunctionLibrary;
class UBBQGameSessionProjectSettings;
class UBBQGameUtilitiesLibrary;
class UBBQGenericNotifyState;
class UBBQHUDMainWidget;
class UBBQHidingVictimProximityComponent;
class UBBQHidingVolumeComponent;
class UBBQInteractableInterface;
class UBBQInteractionComponent;
class UBBQInteractionEventComponent;
class UBBQInteractionMinigameAudioDataAsset;
class UBBQInteractionMinigameAudioPlayer;
class UBBQInteractionType;
class UBBQInteractorComponent;
class UBBQInventoryContainerWidget;
class UBBQInventorySlotWidget;
class UBBQInventoryWidget;
class UBBQLabelNotify;
class UBBQLevelSequenceCollisionObject;
class UBBQLevelSequenceMeshReplacer;
class UBBQLevelSequencePlayer;
class UBBQLifeSaverAbilityBase;
class UBBQLifeSaverCooldownRequirement;
class UBBQLineOfSightTrackerSubsystem;
class UBBQLockComponent;
class UBBQLockComponentV2;
class UBBQMeleeArcNotifyState;
class UBBQMeleeComponent;
class UBBQMeleeHitFrameNotifyState;
class UBBQMinigameGameplayComponent;
class UBBQMinigameGameplayComponent_Interaction;
class UBBQMinigameSettingsV2;
class UBBQMinigameSettingsV2_Interaction;
class UBBQMinigameSettingsV2_SweetSpot;
class UBBQMinigameWidget;
class UBBQMovementDisorder;
class UBBQMovementDisorderComponent;
class UBBQMultiplayerMinigameManagerV2;
class UBBQNoiseOutlineComponent;
class UBBQNoiseSpottableInterface;
class UBBQNotifyState_ChainsawPendingOverheat;
class UBBQNotifyState_ChainsawRevvingDisabled;
class UBBQOutlineRenderer;
class UBBQPairedAnimationComponent;
class UBBQPerfumeBottleBreakNotifyState;
class UBBQPickupSpawnerComponent;
class UBBQPlayerCommandChannel;
class UBBQPlayerRpcChannel;
class UBBQPointOfInterestComponent;
class UBBQPointOfInterestLocatorComponent;
class UBBQSampleLevelSequencePlayer;
class UBBQScriptDebugger;
class UBBQSimpleCostCalculation;
class UBBQSkeletalMeshComponent;
class UBBQSneakAttackAreaComponent;
class UBBQSneakAttackKnifeNotifyState;
class UBBQSneakAttackNotifyState;
class UBBQSplineCameraVolumeComponent;
class UBBQSpringArmComponent;
class UBBQSpyAbilityHandlerComponent;
class UBBQStarSignAbility;
class UBBQStudyAndTamperAbility;
class UBBQStudyAndTamperComponent;
class UBBQStudyAndTamperObjectComponent;
class UBBQStudyAndTamperObjectInterface;
class UBBQTestRPCChannel;
class UBBQTimeOfDayLevelStreamingSubsystem;
class UBBQTraversalInterface;
class UBBQTriggerAreaComponent;
class UBBQVictimTrackerComponent;
class UBBQViewTargetManagerComponent;
class UBBQWindowSmashVFX;
class UBBQWorldOutlineInfoComponent;
class UBBQWrenchAttackNotifyState;
class UCharacterCameraShakesConfig;
class UCloseGrabWindowAnimNotifyState;
class UDamageDiscoveredVictimAnimNotifyState;
class UDamageGrabbedVictimAnimNotifyState;
class UDisableInterruptSearchSuccessAnimNotifyState;
class UEnterHidingSpotLoopAnimNotifyState;
class UFollowToHidingCameraAnimNotifyState;
class UGenerateDialogGameplayTagsCommandlet;
class UGrabItemAnimNotifyState;
class UHarvestIntoEndedAnimNotifyState;
class UHarvestOutEndedAnimNotifyState;
class UHoldItemAnimNotifyState;
class UIncapResponseTable;
class UInventoryTagMapping;
class ULadderClimbIntoBottomCorrectionNotifyState;
class ULadderClimbIntoTopCorrectionNotifyState;
class ULadderFootingAnimNotify;
class ULadderGrabWindowAnimNotifyState;
class ULocksContainer;
class UMeleeAttackVisualiserComponent;
class UOpenGrabWindowAnimNotifyState;
class UPairedAnimationDisableElevationFixNotifyState;
class UPairedAnimationDisablePositionLockingNotifyState;
class UPairedAnimationEnableElevationFixNotifyState;
class UPairedAnimationEndEarlyNotifyState;
class UPickupZones;
class UResetCameraOverrideStateAnimNotify;
class UUBBQAbilityDodge;
class UVictimRestraintEndedAnimNotifyState;
class UVisualDamageInstigatorComponent;
class UVisualDamageInteractionMappingAsset;
class UVisualDamageReceiverComponent;

/// Enum /Script/BBQGameSession.EEndMinigameReason
/// Size: 0x01 (1 bytes)
enum class EEndMinigameReason : uint8_t
{
	EEndMinigameReason__Invalid                                                      = 0,
	EEndMinigameReason__Success                                                      = 1,
	EEndMinigameReason__Fail                                                         = 2,
	EEndMinigameReason__Cancel                                                       = 3,
	EEndMinigameReason__Incapacitated                                                = 4,
	EEndMinigameReason__Interrupt                                                    = 5
};

/// Enum /Script/BBQGameSession.ENoiseType
/// Size: 0x01 (1 bytes)
enum class ENoiseType : uint8_t
{
	ENoiseType__Footstep                                                             = 0,
	ENoiseType__Door                                                                 = 1,
	ENoiseType__Attack                                                               = 2
};

/// Enum /Script/BBQGameSession.EBBQPairedAnimRoleTransformRule
/// Size: 0x01 (1 bytes)
enum class EBBQPairedAnimRoleTransformRule : uint8_t
{
	EBBQPairedAnimRoleTransformRule__INVALID                                         = 0,
	EBBQPairedAnimRoleTransformRule__FixedOffsetOnStart                              = 1,
	EBBQPairedAnimRoleTransformRule__ContinuouslyUpdateOffset                        = 2,
	EBBQPairedAnimRoleTransformRule__NoOffset                                        = 3
};

/// Enum /Script/BBQGameSession.EBBQPairedAnimRole
/// Size: 0x01 (1 bytes)
enum class EBBQPairedAnimRole : uint8_t
{
	EBBQPairedAnimRole__None                                                         = 0,
	EBBQPairedAnimRole__Leader                                                       = 1,
	EBBQPairedAnimRole__Follower                                                     = 2
};

/// Enum /Script/BBQGameSession.EChainsawState
/// Size: 0x01 (1 bytes)
enum class EChainsawState : uint8_t
{
	EChainsawState__Off                                                              = 0,
	EChainsawState__TurningOn                                                        = 1,
	EChainsawState__On                                                               = 2,
	EChainsawState__Overheated                                                       = 3,
	EChainsawState__Stalled                                                          = 4,
	EChainsawState__INIT                                                             = 6
};

/// Enum /Script/BBQGameSession.ECloseEncounterState
/// Size: 0x01 (1 bytes)
enum class ECloseEncounterState : uint8_t
{
	ECloseEncounterState__INVALID                                                    = 0,
	ECloseEncounterState__Start                                                      = 1,
	ECloseEncounterState__InProgress                                                 = 2,
	ECloseEncounterState__InProgress_AttackerWinning                                 = 3,
	ECloseEncounterState__AttackerWin                                                = 4,
	ECloseEncounterState__DefenderWin                                                = 5,
	ECloseEncounterState__DefenderRescued                                            = 6,
	ECloseEncounterState__GenericInterruption                                        = 7
};

/// Enum /Script/BBQGameSession.EBBQElectroTrapState
/// Size: 0x01 (1 bytes)
enum class EBBQElectroTrapState : uint8_t
{
	EBBQElectroTrapState__NoBattery                                                  = 0,
	EBBQElectroTrapState__Activated                                                  = 1,
	EBBQElectroTrapState__Deactivated                                                = 2
};

/// Enum /Script/BBQGameSession.EInteractionMethod
/// Size: 0x01 (1 bytes)
enum class EInteractionMethod : uint8_t
{
	EInteractionMethod__Primary                                                      = 0,
	EInteractionMethod__Secondary                                                    = 1,
	EInteractionMethod__Attack                                                       = 2,
	EInteractionMethod__PerkAbility                                                  = 3,
	EInteractionMethod__Special                                                      = 4,
	EInteractionMethod__Inventory                                                    = 5
};

/// Enum /Script/BBQGameSession.EBBQElectroTrapInteraction
/// Size: 0x01 (1 bytes)
enum class EBBQElectroTrapInteraction : uint8_t
{
	EBBQElectroTrapInteraction__Add                                                  = 0,
	EBBQElectroTrapInteraction__Remove                                               = 1,
	EBBQElectroTrapInteraction__Enable                                               = 2,
	EBBQElectroTrapInteraction__Disable                                              = 3
};

/// Enum /Script/BBQGameSession.EHidingSpotType
/// Size: 0x01 (1 bytes)
enum class EHidingSpotType : uint8_t
{
	EHidingSpotType__None                                                            = 0,
	EHidingSpotType__Freezer                                                         = 1,
	EHidingSpotType__Locker                                                          = 2,
	EHidingSpotType__Trunk                                                           = 4,
	EHidingSpotType__CarTrunk                                                        = 8,
	EHidingSpotType__Wardrobe                                                        = 16
};

/// Enum /Script/BBQGameSession.EBBQHidingPlayerState
/// Size: 0x01 (1 bytes)
enum class EBBQHidingPlayerState : uint8_t
{
	EBBQHidingPlayerState__None                                                      = 0,
	EBBQHidingPlayerState__EnteringHidingSpot                                        = 1,
	EBBQHidingPlayerState__Hidden                                                    = 2,
	EBBQHidingPlayerState__Leaving_Interaction                                       = 3,
	EBBQHidingPlayerState__Leaving_Dying                                             = 4,
	EBBQHidingPlayerState__Leaving_BurstOut                                          = 5,
	EBBQHidingPlayerState__Leaving_DraggedOut                                        = 6,
	EBBQHidingPlayerState__Leaving_Grabbed                                           = 7
};

/// Enum /Script/BBQGameSession.EBBQBehaviourDispatchType
/// Size: 0x01 (1 bytes)
enum class EBBQBehaviourDispatchType : uint8_t
{
	EBBQBehaviourDispatchType__OwningClientOnly                                      = 0,
	EBBQBehaviourDispatchType__ServerAndAllClients                                   = 1,
	EBBQBehaviourDispatchType__ServerOnly                                            = 2
};

/// Enum /Script/BBQGameSession.EBBQHitReactionDirection
/// Size: 0x01 (1 bytes)
enum class EBBQHitReactionDirection : uint8_t
{
	EBBQHitReactionDirection__Front                                                  = 0,
	EBBQHitReactionDirection__FrontLeft                                              = 1,
	EBBQHitReactionDirection__FrontRight                                             = 2,
	EBBQHitReactionDirection__Left                                                   = 3,
	EBBQHitReactionDirection__Right                                                  = 4,
	EBBQHitReactionDirection__BackLeft                                               = 5,
	EBBQHitReactionDirection__BackRight                                              = 6,
	EBBQHitReactionDirection__Back                                                   = 7
};

/// Enum /Script/BBQGameSession.ESpyAbilityPhase
/// Size: 0x01 (1 bytes)
enum class ESpyAbilityPhase : uint8_t
{
	ESpyAbilityPhase__OwnerView                                                      = 0,
	ESpyAbilityPhase__FadeFromOwner                                                  = 1,
	ESpyAbilityPhase__FadeToVictim                                                   = 2,
	ESpyAbilityPhase__VictimView                                                     = 3,
	ESpyAbilityPhase__FadeFromVictim                                                 = 4,
	ESpyAbilityPhase__FadeToOwner                                                    = 5,
	ESpyAbilityPhase__Count                                                          = 6
};

/// Enum /Script/BBQGameSession.EDodgeDirection
/// Size: 0x01 (1 bytes)
enum class EDodgeDirection : uint8_t
{
	EDodgeDirection__None                                                            = 0,
	EDodgeDirection__Front                                                           = 1,
	EDodgeDirection__Back                                                            = 2,
	EDodgeDirection__Left                                                            = 3,
	EDodgeDirection__Right                                                           = 4
};

/// Enum /Script/BBQGameSession.EBBQStationaryTransitionType
/// Size: 0x01 (1 bytes)
enum class EBBQStationaryTransitionType : uint8_t
{
	EBBQStationaryTransitionType__None                                               = 0,
	EBBQStationaryTransitionType__Breakout                                           = 1,
	EBBQStationaryTransitionType__Blend                                              = 2
};

/// Enum /Script/BBQGameSession.EBBQComboType
/// Size: 0x01 (1 bytes)
enum class EBBQComboType : uint8_t
{
	EBBQComboType__Never                                                             = 0,
	EBBQComboType__Notifies                                                          = 1
};

/// Enum /Script/BBQGameSession.EBBQLockOnType
/// Size: 0x01 (1 bytes)
enum class EBBQLockOnType : uint8_t
{
	EBBQLockOnType__Always                                                           = 0,
	EBBQLockOnType__Notifies                                                         = 1
};

/// Enum /Script/BBQGameSession.EBBQComboState
/// Size: 0x01 (1 bytes)
enum class EBBQComboState : uint8_t
{
	ComboNotAttempted                                                                = 0,
	ComboMissed                                                                      = 1,
	ComboHit                                                                         = 2
};

/// Enum /Script/BBQGameSession.EBBQMeleeAttackState
/// Size: 0x01 (1 bytes)
enum class EBBQMeleeAttackState : uint8_t
{
	AttackInProgress                                                                 = 0,
	AttackHit                                                                        = 1,
	AttackMissed                                                                     = 2,
	AttackInternalCancel                                                             = 3
};

/// Enum /Script/BBQGameSession.EBBQAnimSelectionMethod
/// Size: 0x01 (1 bytes)
enum class EBBQAnimSelectionMethod : uint8_t
{
	EBBQAnimSelectionMethod__Sequence                                                = 0,
	EBBQAnimSelectionMethod__RandomAfterFirst                                        = 1,
	EBBQAnimSelectionMethod__Random                                                  = 2
};

/// Enum /Script/BBQGameSession.EBBQMeleeAttackHitFrameType
/// Size: 0x01 (1 bytes)
enum class EBBQMeleeAttackHitFrameType : uint8_t
{
	EBBQMeleeAttackHitFrameType__DamageEnabled                                       = 0,
	EBBQMeleeAttackHitFrameType__EarlyOutOnHitEnabled                                = 1,
	EBBQMeleeAttackHitFrameType__EarlyOutOnMissEnabled                               = 2,
	EBBQMeleeAttackHitFrameType__EarlyOutOnMoveEnabled                               = 3,
	EBBQMeleeAttackHitFrameType__LockOnEnabled                                       = 4,
	EBBQMeleeAttackHitFrameType__ComboEnabled                                        = 5,
	EBBQMeleeAttackHitFrameType__RepeatEnabled                                       = 6
};

/// Enum /Script/BBQGameSession.EBarbedWireOutlineVisibility
/// Size: 0x01 (1 bytes)
enum class EBarbedWireOutlineVisibility : uint8_t
{
	EBarbedWireOutlineVisibility__Disabled                                           = 0,
	EBarbedWireOutlineVisibility__BarbedWireOwner                                    = 1,
	EBarbedWireOutlineVisibility__FamilyMembers                                      = 2,
	EBarbedWireOutlineVisibility__Victims                                            = 3,
	EBarbedWireOutlineVisibility__All                                                = 4
};

/// Enum /Script/BBQGameSession.EBarbedWireState
/// Size: 0x01 (1 bytes)
enum class EBarbedWireState : uint8_t
{
	EBarbedWireState__None                                                           = 0,
	EBarbedWireState__Set                                                            = 1,
	EBarbedWireState__Trampled                                                       = 2,
	EBarbedWireState__Cut                                                            = 3,
	EBarbedWireState__Tangled                                                        = 4
};

/// Enum /Script/BBQGameSession.EBoltholeFlags
/// Size: 0x01 (1 bytes)
enum class EBoltholeFlags : uint8_t
{
	EBoltholeFlags__None                                                             = 0,
	EBoltholeFlags__BeingOpened                                                      = 1,
	EBoltholeFlags__BarbWire                                                         = 2,
	EBoltholeFlags__Barricading                                                      = 4,
	EBoltholeFlags__Destroying                                                       = 8,
	EBoltholeFlags__Opened                                                           = 16,
	EBoltholeFlags__Closed                                                           = 32,
	EBoltholeFlags__Destroyed                                                        = 128,
	EBoltholeFlags__Default                                                          = 0
};

/// Enum /Script/BBQGameSession.EBoltholeState
/// Size: 0x01 (1 bytes)
enum class EBoltholeState : uint8_t
{
	EBoltholeState__NONE                                                             = 0,
	EBoltholeState__OPENED                                                           = 1,
	EBoltholeState__CLOSED                                                           = 2,
	EBoltholeState__DESTROYED                                                        = 3
};

/// Enum /Script/BBQGameSession.EBBQLockOnTargetProvider
/// Size: 0x01 (1 bytes)
enum class EBBQLockOnTargetProvider : uint8_t
{
	ForcedMovement                                                                   = 0,
	Melee                                                                            = 1,
	Count                                                                            = 2
};

/// Enum /Script/BBQGameSession.EBBQCloseEncounterHitFrameType
/// Size: 0x01 (1 bytes)
enum class EBBQCloseEncounterHitFrameType : uint8_t
{
	EBBQCloseEncounterHitFrameType__ApplyEffects                                     = 0,
	EBBQCloseEncounterHitFrameType__ApplyEffectsToOpponent                           = 1
};

/// Enum /Script/BBQGameSession.ECERole
/// Size: 0x01 (1 bytes)
enum class ECERole : uint8_t
{
	ECERole__ECERole_None                                                            = 0,
	ECERole__ECERole_Attacker                                                        = 1,
	ECERole__ECERole_Defender                                                        = 2
};

/// Enum /Script/BBQGameSession.ECloseEncounterWinnerSelection
/// Size: 0x01 (1 bytes)
enum class ECloseEncounterWinnerSelection : uint8_t
{
	ECloseEncounterWinnerSelection__Minigame                                         = 0,
	ECloseEncounterWinnerSelection__AttackerAlwaysWins                               = 1,
	ECloseEncounterWinnerSelection__DefenderAlwaysWins                               = 2
};

/// Enum /Script/BBQGameSession.EBBQIncapacitationReason
/// Size: 0x01 (1 bytes)
enum class EBBQIncapacitationReason : uint8_t
{
	EBBQIncapacitationReason__Invalid                                                = 0,
	EBBQIncapacitationReason__Melee                                                  = 1,
	EBBQIncapacitationReason__BleedOut                                               = 2
};

/// Enum /Script/BBQGameSession.EBBQComm_TriggeredBy
/// Size: 0x01 (1 bytes)
enum class EBBQComm_TriggeredBy : uint8_t
{
	EBBQComm_TriggeredBy__Everyone                                                   = 0,
	EBBQComm_TriggeredBy__FamilyMembers                                              = 1,
	EBBQComm_TriggeredBy__Victims                                                    = 2
};

/// Enum /Script/BBQGameSession.ECommExecFailReason
/// Size: 0x01 (1 bytes)
enum class ECommExecFailReason : uint8_t
{
	ECommExecFailReason__None                                                        = 0,
	ECommExecFailReason__GlobalCooldown                                              = 1,
	ECommExecFailReason__CharacterCooldown                                           = 2,
	ECommExecFailReason__Probability                                                 = 3,
	ECommExecFailReason__PoolExhausted                                               = 4,
	ECommExecFailReason__CharacterIsInDanger                                         = 5,
	ECommExecFailReason__CannotFindAddressee                                         = 6,
	ECommExecFailReason__InvalidLineIndex                                            = 7,
	ECommExecFailReason__RequiredTags                                                = 8,
	ECommExecFailReason__BlockedTags                                                 = 9,
	ECommExecFailReason__UNKNOWN                                                     = 10
};

/// Enum /Script/BBQGameSession.ECommVocalisationType
/// Size: 0x01 (1 bytes)
enum class ECommVocalisationType : uint8_t
{
	ECommVocalisationType__Muttered                                                  = 0,
	ECommVocalisationType__Spoken                                                    = 1,
	ECommVocalisationType__Shouted                                                   = 2,
	ECommVocalisationType__Screamed                                                  = 3
};

/// Enum /Script/BBQGameSession.ECommBroadcastRule
/// Size: 0x01 (1 bytes)
enum class ECommBroadcastRule : uint8_t
{
	ECommBroadcastRule__Self                                                         = 0,
	ECommBroadcastRule__Team                                                         = 1,
	ECommBroadcastRule__All                                                          = 2
};

/// Enum /Script/BBQGameSession.EDoorAction
/// Size: 0x01 (1 bytes)
enum class EDoorAction : uint8_t
{
	EDoorAction__Invalid                                                             = 0,
	EDoorAction__Open                                                                = 1,
	EDoorAction__Close                                                               = 2,
	EDoorAction__Unlock                                                              = 3,
	EDoorAction__Lock                                                                = 4,
	EDoorAction__Latch                                                               = 5,
	EDoorAction__Unlatch                                                             = 6,
	EDoorAction__SprintOpen                                                          = 7,
	EDoorAction__SprintClose                                                         = 8,
	EDoorAction__Damage                                                              = 9,
	EDoorAction__Destroy                                                             = 10,
	EDoorAction__AddLock                                                             = 11,
	EDoorAction__RecoverLock                                                         = 12,
	EDoorAction__RetrieveLockAfterBarge                                              = 13,
	EDoorAction__Barge                                                               = 14
};

/// Enum /Script/BBQGameSession.EDoorSide
/// Size: 0x01 (1 bytes)
enum class EDoorSide : uint8_t
{
	EDoorSide__Invalid                                                               = 0,
	EDoorSide__Front                                                                 = 1,
	EDoorSide__Rear                                                                  = 2
};

/// Enum /Script/BBQGameSession.EDoorDirection
/// Size: 0x01 (1 bytes)
enum class EDoorDirection : uint8_t
{
	EDoorDirection__Invalid                                                          = 0,
	EDoorDirection__Inwards                                                          = 1,
	EDoorDirection__Outwards                                                         = 2,
	EDoorDirection__Left                                                             = 3,
	EDoorDirection__Right                                                            = 4
};

/// Enum /Script/BBQGameSession.EDoorState
/// Size: 0x01 (1 bytes)
enum class EDoorState : uint8_t
{
	EDoorState__None                                                                 = 0,
	EDoorState__Default                                                              = 0,
	EDoorState__Open                                                                 = 1,
	EDoorState__Physics                                                              = 2,
	EDoorState__Animating                                                            = 4,
	EDoorState__Barged                                                               = 8,
	EDoorState__Latch                                                                = 16,
	EDoorState__Cooldown                                                             = 32,
	EDoorState__Frozen                                                               = 64,
	EDoorState__Destroyed                                                            = 128,
	EDoorState__PreventLock                                                          = 237
};

/// Enum /Script/BBQGameSession.EBBQDoorSlicerDefaultVFXDir
/// Size: 0x01 (1 bytes)
enum class EBBQDoorSlicerDefaultVFXDir : uint8_t
{
	EBBQDoorSlicerDefaultVFXDir__Forward                                             = 0,
	EBBQDoorSlicerDefaultVFXDir__Right                                               = 1,
	EBBQDoorSlicerDefaultVFXDir__Up                                                  = 2
};

/// Enum /Script/BBQGameSession.EAttackDirectionReference
/// Size: 0x01 (1 bytes)
enum class EAttackDirectionReference : uint8_t
{
	EAttackDirectionReference__PlayerForward                                         = 0,
	EAttackDirectionReference__ImpactNormal                                          = 1
};

/// Enum /Script/BBQGameSession.EEscapeZoneType
/// Size: 0x01 (1 bytes)
enum class EEscapeZoneType : uint8_t
{
	EEscapeZoneType__Invalid                                                         = 0,
	EEscapeZoneType__Road                                                            = 1,
	EEscapeZoneType__RearGate                                                        = 2,
	EEscapeZoneType__FuseBox                                                         = 3,
	EEscapeZoneType__PressureValve                                                   = 4
};

/// Enum /Script/BBQGameSession.EFuseboxAction
/// Size: 0x01 (1 bytes)
enum class EFuseboxAction : uint8_t
{
	EFuseboxAction__None                                                             = 0,
	EFuseboxAction__OpenCabinet                                                      = 1,
	EFuseboxAction__PlaceFuse                                                        = 2,
	EFuseboxAction__FixFusebox                                                       = 3,
	EFuseboxAction__TurnOn                                                           = 4,
	EFuseboxAction__TurnOff                                                          = 5
};

/// Enum /Script/BBQGameSession.EFuseBoxState
/// Size: 0x01 (1 bytes)
enum class EFuseBoxState : uint8_t
{
	EFuseBoxState__Invalid                                                           = 0,
	EFuseBoxState__Open                                                              = 1,
	EFuseBoxState__HasFuse                                                           = 2,
	EFuseBoxState__Fixed                                                             = 4,
	EFuseBoxState__On                                                                = 8
};

/// Enum /Script/BBQGameSession.EBBQHUDVisibleGroup
/// Size: 0x01 (1 bytes)
enum class EBBQHUDVisibleGroup : uint8_t
{
	EBBQHUDVisibleGroup__None                                                        = 0,
	EBBQHUDVisibleGroup__RequiredOnly                                                = 1,
	EBBQHUDVisibleGroup__Cutscene                                                    = 2,
	EBBQHUDVisibleGroup__InputPromptsOnly                                            = 3,
	EBBQHUDVisibleGroup__NancyAbility                                                = 4,
	EBBQHUDVisibleGroup__All                                                         = 5,
	EBBQHUDVisibleGroup__Count                                                       = 6
};

/// Enum /Script/BBQGameSession.EBBQNotificationType
/// Size: 0x01 (1 bytes)
enum class EBBQNotificationType : uint8_t
{
	EBBQNotificationType__None                                                       = 0,
	EBBQNotificationType__SideNotification                                           = 1,
	EBBQNotificationType__CentralNotification                                        = 2,
	EBBQNotificationType__FailNotification                                           = 3
};

/// Enum /Script/BBQGameSession.EGameplayActivityEventReceiver
/// Size: 0x01 (1 bytes)
enum class EGameplayActivityEventReceiver : uint8_t
{
	EGameplayActivityEventReceiver__None                                             = 0,
	EGameplayActivityEventReceiver__Instigator                                       = 1,
	EGameplayActivityEventReceiver__AllFamilyMembers                                 = 2,
	EGameplayActivityEventReceiver__AllVictims                                       = 3,
	EGameplayActivityEventReceiver__Everyone                                         = 4,
	EGameplayActivityEventReceiver__AllFamilyMembersExceptInstigator                 = 5,
	EGameplayActivityEventReceiver__AllVictimsExceptInstigator                       = 6,
	EGameplayActivityEventReceiver__EveryoneExceptInstigator                         = 7
};

/// Enum /Script/BBQGameSession.EBBQPerformingTraversalSection
/// Size: 0x01 (1 bytes)
enum class EBBQPerformingTraversalSection : uint8_t
{
	EBBQPerformingTraversalSection__None                                             = 0,
	EBBQPerformingTraversalSection__Intro                                            = 1,
	EBBQPerformingTraversalSection__Main                                             = 2,
	EBBQPerformingTraversalSection__Outro                                            = 3
};

/// Enum /Script/BBQGameSession.EBBQPerformingTraversalType
/// Size: 0x01 (1 bytes)
enum class EBBQPerformingTraversalType : uint8_t
{
	EBBQPerformingTraversalType__None                                                = 0,
	EBBQPerformingTraversalType__PerformingTraversal                                 = 1,
	EBBQPerformingTraversalType__PerformingFastTraversal                             = 2
};

/// Enum /Script/BBQGameSession.EBBQClimbingLadderState
/// Size: 0x01 (1 bytes)
enum class EBBQClimbingLadderState : uint8_t
{
	EBBQClimbingLadderState__Invalid                                                 = 0,
	EBBQClimbingLadderState__EnteringBottom                                          = 1,
	EBBQClimbingLadderState__EnteringTop                                             = 2,
	EBBQClimbingLadderState__ClimbingUp                                              = 3,
	EBBQClimbingLadderState__ClimbingDown                                            = 4,
	EBBQClimbingLadderState__ExitingTop                                              = 5,
	EBBQClimbingLadderState__ExitingBottom                                           = 6
};

/// Enum /Script/BBQGameSession.EBBQAnimatedMontageType
/// Size: 0x01 (1 bytes)
enum class EBBQAnimatedMontageType : uint8_t
{
	EBBQAnimatedMontageType__Invalid                                                 = 0,
	EBBQAnimatedMontageType__Ragdoll                                                 = 1,
	EBBQAnimatedMontageType__DisableMovement                                         = 2,
	EBBQAnimatedMontageType__JumpToSection                                           = 3
};

/// Enum /Script/BBQGameSession.EBBQUsingFromWellState
/// Size: 0x01 (1 bytes)
enum class EBBQUsingFromWellState : uint8_t
{
	EBBQUsingFromWellState__Invalid                                                  = 0,
	EBBQUsingFromWellState__EnteringWell                                             = 1,
	EBBQUsingFromWellState__EnteredWell                                              = 2,
	EBBQUsingFromWellState__FallingFromWell                                          = 3
};

/// Enum /Script/BBQGameSession.EDraggingState
/// Size: 0x01 (1 bytes)
enum class EDraggingState : uint8_t
{
	EDraggingState__Invalid                                                          = 0,
	EDraggingState__Pickup_Started                                                   = 1,
	EDraggingState__Pickup_Ended                                                     = 2,
	EDraggingState__ContextualKill_Execution                                         = 3
};

/// Enum /Script/BBQGameSession.EBBQWindowDamageType
/// Size: 0x01 (1 bytes)
enum class EBBQWindowDamageType : uint8_t
{
	EBBQWindowDamageType__PlayerFallDamage                                           = 0,
	EBBQWindowDamageType__PlayerFallDamage_1stfloor                                  = 1,
	EBBQWindowDamageType__BreakWindowDamage                                          = 2
};

/// Enum /Script/BBQGameSession.EBBQAnimationState
/// Size: 0x01 (1 bytes)
enum class EBBQAnimationState : uint8_t
{
	EBBQAnimationState__Idle                                                         = 0,
	EBBQAnimationState__StoppedSidling                                               = 1,
	EBBQAnimationState__StartedSidling                                               = 2,
	EBBQAnimationState__StartedSidlingLeft                                           = 3,
	EBBQAnimationState__StartedSidlingRight                                          = 4,
	EBBQAnimationState__StartedClimbingLadderUp                                      = 5,
	EBBQAnimationState__StoppedClimbingLadderUp                                      = 6,
	EBBQAnimationState__StartedClimbingLadderDown                                    = 7,
	EBBQAnimationState__StoppedClimbingLadderDown                                    = 8,
	EBBQAnimationState__StartedEnteringWell                                          = 9,
	EBBQAnimationState__StartedFallingFromWell                                       = 10
};

/// Enum /Script/BBQGameSession.EBBQExecutionState
/// Size: 0x01 (1 bytes)
enum class EBBQExecutionState : uint8_t
{
	EBBQExecutionState__Invalid                                                      = 0,
	EBBQExecutionState__ExecutedWithTransition                                       = 1,
	EBBQExecutionState__ExecutingWithTransition                                      = 2,
	EBBQExecutionState__Executed                                                     = 3,
	EBBQExecutionState__Executing                                                    = 4
};

/// Enum /Script/BBQGameSession.EBBQDoorAction
/// Size: 0x01 (1 bytes)
enum class EBBQDoorAction : uint8_t
{
	EBBQDoorAction__Invalid                                                          = 0,
	EBBQDoorAction__Open                                                             = 1,
	EBBQDoorAction__Close                                                            = 2,
	EBBQDoorAction__Destroy                                                          = 3,
	EBBQDoorAction__WinDestroy                                                       = 4,
	EBBQDoorAction__LockUp                                                           = 5,
	EBBQDoorAction__Barge                                                            = 6,
	EBBQDoorAction__Latch                                                            = 7,
	EBBQDoorAction__Unlatch                                                          = 8
};

/// Enum /Script/BBQGameSession.EBBQCustomMovementMode
/// Size: 0x01 (1 bytes)
enum class EBBQCustomMovementMode : uint8_t
{
	EBBQCustomMovementMode__Climbing                                                 = 0,
	EBBQCustomMovementMode__Sidling                                                  = 1
};

/// Enum /Script/BBQGameSession.EBBQ_MatchResult
/// Size: 0x01 (1 bytes)
enum class EBBQ_MatchResult : uint8_t
{
	EBBQ_MatchResult__VICTIMS_WIN                                                    = 0,
	EBBQ_MatchResult__FAMILY_WIN                                                     = 1,
	EBBQ_MatchResult__NOBODY_WINS                                                    = 2
};

/// Enum /Script/BBQGameSession.ETraversalType
/// Size: 0x01 (1 bytes)
enum class ETraversalType : uint8_t
{
	ETraversalType__None                                                             = 0,
	ETraversalType__Bolthole                                                         = 1,
	ETraversalType__Sidle                                                            = 2,
	ETraversalType__Ladder                                                           = 4
};

/// Enum /Script/BBQGameSession.EGrandpaPerceptionReason
/// Size: 0x01 (1 bytes)
enum class EGrandpaPerceptionReason : uint8_t
{
	EGrandpaPerceptionReason__None                                                   = 0,
	EGrandpaPerceptionReason__SneakAttackArea                                        = 1,
	EGrandpaPerceptionReason__AlertArea                                              = 2,
	EGrandpaPerceptionReason__Vision                                                 = 4
};

/// Enum /Script/BBQGameSession.EGrandpaSonarState
/// Size: 0x01 (1 bytes)
enum class EGrandpaSonarState : uint8_t
{
	EGrandpaSonarState__NotActivated                                                 = 0,
	EGrandpaSonarState__ActivatedInGracePeriod                                       = 1,
	EGrandpaSonarState__ActivatedScreaming                                           = 2,
	EGrandpaSonarState__ActivatedFully                                               = 3
};

/// Enum /Script/BBQGameSession.EGrandpaState
/// Size: 0x01 (1 bytes)
enum class EGrandpaState : uint8_t
{
	EGrandpaState__Sleeping                                                          = 0,
	EGrandpaState__Ready                                                             = 1,
	EGrandpaState__Cooldown                                                          = 2,
	EGrandpaState__Incapacitated                                                     = 3,
	EGrandpaState__Alerted                                                           = 4,
	EGrandpaState__HalfAlerted                                                       = 5,
	EGrandpaState__FeedBlood                                                         = 6,
	EGrandpaState__FeedBloodIncapacitated                                            = 7
};

/// Enum /Script/BBQGameSession.EHarvestOutcome
/// Size: 0x01 (1 bytes)
enum class EHarvestOutcome : uint8_t
{
	EHarvestOutcome__VictimSuccess                                                   = 0,
	EHarvestOutcome__FamilySuccess_BloodLet                                          = 1,
	EHarvestOutcome__FamilySuccess_Execution                                         = 2,
	EHarvestOutcome__VictimLeftMatch                                                 = 3,
	EHarvestOutcome__FamilyLeftMatch                                                 = 4,
	EHarvestOutcome__FamilyStunned                                                   = 5
};

/// Enum /Script/BBQGameSession.EInteractionEventTest_Hintable
/// Size: 0x01 (1 bytes)
enum class EInteractionEventTest_Hintable : uint8_t
{
	EInteractionEventTest_Hintable__CustomConditions                                 = 0,
	EInteractionEventTest_Hintable__NoForbiddenTags                                  = 1,
	EInteractionEventTest_Hintable__AllRequiredTags                                  = 2,
	EInteractionEventTest_Hintable__AllRequiredItems                                 = 3,
	EInteractionEventTest_Hintable__NotInUse                                         = 4
};

/// Enum /Script/BBQGameSession.EInteractionEventTest_Soft
/// Size: 0x01 (1 bytes)
enum class EInteractionEventTest_Soft : uint8_t
{
	EInteractionEventTest_Soft__AttackBlock                                          = 0,
	EInteractionEventTest_Soft__InRange                                              = 1,
	EInteractionEventTest_Soft__Alignment                                            = 2,
	EInteractionEventTest_Soft__CustomConditions                                     = 3
};

/// Enum /Script/BBQGameSession.EInteractionEventTest_Hard
/// Size: 0x01 (1 bytes)
enum class EInteractionEventTest_Hard : uint8_t
{
	EInteractionEventTest_Hard__Enabled                                              = 0,
	EInteractionEventTest_Hard__ValidInstigator                                      = 1,
	EInteractionEventTest_Hard__CorrectTeam                                          = 2,
	EInteractionEventTest_Hard__NoForbiddenTagsOnOwner                               = 3,
	EInteractionEventTest_Hard__AllRequiredTagsOnOwner                               = 4,
	EInteractionEventTest_Hard__AlreadyUsing                                         = 5,
	EInteractionEventTest_Hard__CustomConditions                                     = 6
};

/// Enum /Script/BBQGameSession.EInteractionTest_Soft
/// Size: 0x01 (1 bytes)
enum class EInteractionTest_Soft : uint8_t
{
	EInteractionTest_Soft__InRange                                                   = 0,
	EInteractionTest_Soft__PositionCheck                                             = 1,
	EInteractionTest_Soft__AngleRangeCheck                                           = 2
};

/// Enum /Script/BBQGameSession.EInteractionTest_Hard
/// Size: 0x01 (1 bytes)
enum class EInteractionTest_Hard : uint8_t
{
	EInteractionTest_Hard__Enabled                                                   = 0,
	EInteractionTest_Hard__LineOfSight                                               = 1
};

/// Enum /Script/BBQGameSession.EInteractionTestSeverity
/// Size: 0x01 (1 bytes)
enum class EInteractionTestSeverity : uint8_t
{
	EInteractionTestSeverity__Hard                                                   = 0,
	EInteractionTestSeverity__Soft                                                   = 1,
	EInteractionTestSeverity__Hintable                                               = 2
};

/// Enum /Script/BBQGameSession.EInteractionEventPromptType
/// Size: 0x01 (1 bytes)
enum class EInteractionEventPromptType : uint8_t
{
	EInteractionEventPromptType__WorldSpace                                          = 0,
	EInteractionEventPromptType__HUD                                                 = 1
};

/// Enum /Script/BBQGameSession.EInteractionEventNotifyType
/// Size: 0x01 (1 bytes)
enum class EInteractionEventNotifyType : uint8_t
{
	EInteractionEventNotifyType__ServerOnly                                          = 0,
	EInteractionEventNotifyType__ServerAndAllClients                                 = 1
};

/// Enum /Script/BBQGameSession.EInteractionAlignment
/// Size: 0x01 (1 bytes)
enum class EInteractionAlignment : uint8_t
{
	EInteractionAlignment__None                                                      = 0,
	EInteractionAlignment__PosXAxis                                                  = 1,
	EInteractionAlignment__NegXAxis                                                  = 2,
	EInteractionAlignment__EitherXAxis                                               = 3,
	EInteractionAlignment__PosYAxis                                                  = 4,
	EInteractionAlignment__NegYAxis                                                  = 5,
	EInteractionAlignment__EitherYAxis                                               = 6,
	EInteractionAlignment__Centre                                                    = 7
};

/// Enum /Script/BBQGameSession.ELightSourceState
/// Size: 0x01 (1 bytes)
enum class ELightSourceState : uint8_t
{
	ELightSourceState__Invalid                                                       = 0,
	ELightSourceState__Off                                                           = 1,
	ELightSourceState__On                                                            = 2,
	ELightSourceState__Trapped                                                       = 3,
	ELightSourceState__Exploded                                                      = 4
};

/// Enum /Script/BBQGameSession.ELadderInteractionState
/// Size: 0x01 (1 bytes)
enum class ELadderInteractionState : uint8_t
{
	ELadderInteractionState__Invalid                                                 = 0,
	ELadderInteractionState__Unfold                                                  = 1
};

/// Enum /Script/BBQGameSession.EBBQLadderDismountType
/// Size: 0x01 (1 bytes)
enum class EBBQLadderDismountType : uint8_t
{
	EBBQLadderDismountType__None                                                     = 0,
	EBBQLadderDismountType__Low                                                      = 1,
	EBBQLadderDismountType__High                                                     = 2
};

/// Enum /Script/BBQGameSession.EBBQLadderDismountReason
/// Size: 0x01 (1 bytes)
enum class EBBQLadderDismountReason : uint8_t
{
	EBBQLadderDismountReason__Invalid                                                = 0,
	EBBQLadderDismountReason__Manual                                                 = 1,
	EBBQLadderDismountReason__Grab                                                   = 2,
	EBBQLadderDismountReason__HitByMelee                                             = 3
};

/// Enum /Script/BBQGameSession.ELadderState
/// Size: 0x01 (1 bytes)
enum class ELadderState : uint8_t
{
	ELadderState__None                                                               = 0,
	ELadderState__Default                                                            = 0,
	ELadderState__Destroyed                                                          = 1
};

/// Enum /Script/BBQGameSession.ELadderType
/// Size: 0x01 (1 bytes)
enum class ELadderType : uint8_t
{
	ELadderType__Default                                                             = 0,
	ELadderType__Attic                                                               = 1
};

/// Enum /Script/BBQGameSession.EIntroImposterType
/// Size: 0x01 (1 bytes)
enum class EIntroImposterType : uint8_t
{
	EIntroImposterType__VictimToKill                                                 = 0,
	EIntroImposterType__Family1                                                      = 1,
	EIntroImposterType__Family2                                                      = 2,
	EIntroImposterType__Leatherface                                                  = 3
};

/// Enum /Script/BBQGameSession.ELockState
/// Size: 0x01 (1 bytes)
enum class ELockState : uint8_t
{
	ELockState__Empty                                                                = 0,
	ELockState__Hidden                                                               = 1,
	ELockState__Deactivated                                                          = 2,
	ELockState__Disengaged                                                           = 4,
	ELockState__Rear                                                                 = 16,
	ELockState__Destroyed                                                            = 128,
	ELockState__Default                                                              = 0
};

/// Enum /Script/BBQGameSession.MeleeAttackInput
/// Size: 0x01 (1 bytes)
enum class MeleeAttackInput : uint8_t
{
	MeleeAttackInput__Primary                                                        = 0,
	MeleeAttackInput__Secondary                                                      = 1
};

/// Enum /Script/BBQGameSession.EMinigameActionValidationType
/// Size: 0x01 (1 bytes)
enum class EMinigameActionValidationType : uint8_t
{
	EMinigameActionValidationType__None                                              = 0,
	EMinigameActionValidationType__Action                                            = 1,
	EMinigameActionValidationType__GenericAction                                     = 2,
	EMinigameActionValidationType__PrimaryAbilityAction                              = 3,
	EMinigameActionValidationType__Count                                             = 4
};

/// Enum /Script/BBQGameSession.EMinigameTimerId
/// Size: 0x01 (1 bytes)
enum class EMinigameTimerId : uint8_t
{
	EMinigameTimerId__Invalid                                                        = 0,
	EMinigameTimerId__StartDelay                                                     = 1,
	EMinigameTimerId__EndDelay                                                       = 2,
	EMinigameTimerId__InputDelay                                                     = 3,
	EMinigameTimerId__GenericTimer1                                                  = 4,
	EMinigameTimerId__GenericTimer2                                                  = 5,
	EMinigameTimerId__GenericTimer3                                                  = 6,
	EMinigameTimerId__GenericTimer4                                                  = 7,
	EMinigameTimerId__GenericTimer5                                                  = 8
};

/// Enum /Script/BBQGameSession.EInputValidationResult
/// Size: 0x01 (1 bytes)
enum class EInputValidationResult : uint8_t
{
	EInputValidationResult__None                                                     = 0,
	EInputValidationResult__Fail                                                     = 1,
	EInputValidationResult__Success                                                  = 2
};

/// Enum /Script/BBQGameSession.ENetSyncedDoorState
/// Size: 0x01 (1 bytes)
enum class ENetSyncedDoorState : uint8_t
{
	ENetSyncedDoorState__None                                                        = 0,
	ENetSyncedDoorState__Default                                                     = 0,
	ENetSyncedDoorState__Open                                                        = 1,
	ENetSyncedDoorState__Physics                                                     = 2,
	ENetSyncedDoorState__Animating                                                   = 4,
	ENetSyncedDoorState__Cooldown                                                    = 32,
	ENetSyncedDoorState__Frozen                                                      = 64
};

/// Enum /Script/BBQGameSession.EChickenState
/// Size: 0x01 (1 bytes)
enum class EChickenState : uint8_t
{
	EChickenState__Idle                                                              = 0,
	EChickenState__Alerted                                                           = 1,
	EChickenState__SemiAlerted                                                       = 2,
	EChickenState__Dead                                                              = 3
};

/// Enum /Script/BBQGameSession.ENoiseTriggerType
/// Size: 0x01 (1 bytes)
enum class ENoiseTriggerType : uint8_t
{
	ENoiseTriggerType__None                                                          = 0,
	ENoiseTriggerType__InsideArea                                                    = 1,
	ENoiseTriggerType__UnCrouched                                                    = 2,
	ENoiseTriggerType__TooClose                                                      = 4,
	ENoiseTriggerType__Any                                                           = 7
};

/// Enum /Script/BBQGameSession.EOutlineDurationStackRule
/// Size: 0x01 (1 bytes)
enum class EOutlineDurationStackRule : uint8_t
{
	EOutlineDurationStackRule__Add                                                   = 0,
	EOutlineDurationStackRule__Override                                              = 1
};

/// Enum /Script/BBQGameSession.EPipeValveState
/// Size: 0x01 (1 bytes)
enum class EPipeValveState : uint8_t
{
	EPipeValveState__Invalid                                                         = 0,
	EPipeValveState__ValveMissing                                                    = 1,
	EPipeValveState__ValveAttached                                                   = 2,
	EPipeValveState__Closed                                                          = 3,
	EPipeValveState__Open                                                            = 4
};

/// Enum /Script/BBQGameSession.EPlayerMovementState
/// Size: 0x01 (1 bytes)
enum class EPlayerMovementState : uint8_t
{
	EPlayerMovementState__PMS_Idle                                                   = 0,
	EPlayerMovementState__PMS_Walk                                                   = 1,
	EPlayerMovementState__PMS_Run                                                    = 2,
	EPlayerMovementState__PMS_Sprint                                                 = 3,
	EPlayerMovementState__PMS_Jump                                                   = 4,
	EPlayerMovementState__PMS_Land                                                   = 5,
	EPlayerMovementState__PMS_CrouchIdle                                             = 6,
	EPlayerMovementState__PMS_CrouchWalk                                             = 7,
	EPlayerMovementState__PMS_Dead                                                   = 8
};

/// Enum /Script/BBQGameSession.EPolicePhoneAction
/// Size: 0x01 (1 bytes)
enum class EPolicePhoneAction : uint8_t
{
	EPolicePhoneAction__None                                                         = 0,
	EPolicePhoneAction__OpenCabinet                                                  = 1,
	EPolicePhoneAction__PlaceFuse                                                    = 2,
	EPolicePhoneAction__FixPolicePhone                                               = 3,
	EPolicePhoneAction__TurnOn                                                       = 4,
	EPolicePhoneAction__TurnOff                                                      = 5,
	EPolicePhoneAction__Calling                                                      = 6
};

/// Enum /Script/BBQGameSession.EPolicePhoneState
/// Size: 0x01 (1 bytes)
enum class EPolicePhoneState : uint8_t
{
	EPolicePhoneState__Invalid                                                       = 0,
	EPolicePhoneState__Open                                                          = 1,
	EPolicePhoneState__HasFuse                                                       = 2,
	EPolicePhoneState__Fixed                                                         = 4,
	EPolicePhoneState__On                                                            = 8
};

/// Enum /Script/BBQGameSession.EBBQSneakAttackDirection
/// Size: 0x01 (1 bytes)
enum class EBBQSneakAttackDirection : uint8_t
{
	EBBQSneakAttackDirection__Left                                                   = 0,
	EBBQSneakAttackDirection__Right                                                  = 1,
	EBBQSneakAttackDirection__Center                                                 = 2
};

/// Enum /Script/BBQGameSession.ESplineCameraDirection
/// Size: 0x01 (1 bytes)
enum class ESplineCameraDirection : uint8_t
{
	ESplineCameraDirection__None                                                     = 0,
	ESplineCameraDirection__Forward                                                  = 1,
	ESplineCameraDirection__Backward                                                 = 2
};

/// Enum /Script/BBQGameSession.ESSAGameplayCueState
/// Size: 0x01 (1 bytes)
enum class ESSAGameplayCueState : uint8_t
{
	ESSAGameplayCueState__None                                                       = 0,
	ESSAGameplayCueState__Activation                                                 = 1,
	ESSAGameplayCueState__BuffDuration                                               = 2,
	ESSAGameplayCueState__DebuffDuration                                             = 3,
	ESSAGameplayCueState__Max                                                        = 4
};

/// Enum /Script/BBQGameSession.ETrapState
/// Size: 0x01 (1 bytes)
enum class ETrapState : uint8_t
{
	ETrapState__None                                                                 = 0,
	ETrapState__Placed                                                               = 1,
	ETrapState__Active                                                               = 2,
	ETrapState__Dismantled                                                           = 3
};

/// Enum /Script/BBQGameSession.EAttributeComparison
/// Size: 0x01 (1 bytes)
enum class EAttributeComparison : uint8_t
{
	EAttributeComparison__LessThan                                                   = 0,
	EAttributeComparison__GreaterThan                                                = 1,
	EAttributeComparison__Equal                                                      = 2
};

/// Enum /Script/BBQGameSession.ETriggerAreaNotifyType
/// Size: 0x01 (1 bytes)
enum class ETriggerAreaNotifyType : uint8_t
{
	ETriggerAreaNotifyType__LocalClient                                              = 0,
	ETriggerAreaNotifyType__ServerOnly                                               = 1,
	ETriggerAreaNotifyType__AllClientsAndServer                                      = 2
};

/// Enum /Script/BBQGameSession.EBBQWellInterruptionResponse
/// Size: 0x01 (1 bytes)
enum class EBBQWellInterruptionResponse : uint8_t
{
	EBBQWellInterruptionResponse__None                                               = 0,
	EBBQWellInterruptionResponse__Interrupt                                          = 1,
	EBBQWellInterruptionResponse__Fall                                               = 2
};

/// Enum /Script/BBQGameSession.EBBQWellEnteringMethod
/// Size: 0x01 (1 bytes)
enum class EBBQWellEnteringMethod : uint8_t
{
	EBBQWellEnteringMethod__Invalid                                                  = 0,
	EBBQWellEnteringMethod__Clambering                                               = 1,
	EBBQWellEnteringMethod__Jumping                                                  = 2,
	EBBQWellEnteringMethod__BeingThrown                                              = 3
};

/// Enum /Script/BBQGameSession.EBBQAnimationAttackDirection
/// Size: 0x01 (1 bytes)
enum class EBBQAnimationAttackDirection : uint8_t
{
	EBBQAnimationAttackDirection__Straight                                           = 0,
	EBBQAnimationAttackDirection__LeftSwing                                          = 1,
	EBBQAnimationAttackDirection__RightSwing                                         = 2,
	EBBQAnimationAttackDirection__UpSwing                                            = 3,
	EBBQAnimationAttackDirection__DownSwing                                          = 4
};

/// Enum /Script/BBQGameSession.EBBQAttackVisualTraceType
/// Size: 0x01 (1 bytes)
enum class EBBQAttackVisualTraceType : uint8_t
{
	EBBQAttackVisualTraceType__Simple                                                = 0,
	EBBQAttackVisualTraceType__FromRightHand                                         = 1,
	EBBQAttackVisualTraceType__FromManualOverrideSceneActor                          = 2
};

/// Enum /Script/BBQGameSession.EBBQAttackType
/// Size: 0x01 (1 bytes)
enum class EBBQAttackType : uint8_t
{
	EBBQAttackType__None                                                             = 0,
	EBBQAttackType__Melee_Chainsaw_Thrust                                            = 1,
	EBBQAttackType__Melee_Chainsaw_Barge                                             = 2,
	EBBQAttackType__Melee_Chainsaw_Slice                                             = 3,
	EBBQAttackType__Melee_Razor_Slice                                                = 4,
	EBBQAttackType__Melee_Hammer_Blow                                                = 5,
	EBBQAttackType__Melee_Knife_Stab                                                 = 6,
	EBBQAttackType__Melee_Broom_Blow                                                 = 7,
	EBBQAttackType__Feedback_Splash_Small                                            = 8,
	EBBQAttackType__Feedback_Splash_Large                                            = 9,
	EBBQAttackType__Glass_Break_Cut                                                  = 10,
	EBBQAttackType__Max                                                              = 11
};

/// Enum /Script/BBQGameSession.EBBQEnvironemntBloodSplashType
/// Size: 0x01 (1 bytes)
enum class EBBQEnvironemntBloodSplashType : uint8_t
{
	EBBQEnvironemntBloodSplashType__Floor                                            = 0,
	EBBQEnvironemntBloodSplashType__Wall                                             = 1,
	EBBQEnvironemntBloodSplashType__WallOrBystander                                  = 2
};

/// Struct /Script/BBQGameSession.ConsumeItemEffects
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FConsumeItemEffects
{ 
	TArray<class UClass*>                              Effects;                                                    // 0x0000   (0x0010)  
};

/// Struct /Script/BBQGameSession.MeleeAttackAnimSlotSet
/// Size: 0x0002 (2 bytes) (0x000000 - 0x000002) align 1 MaxSize: 0x0002
struct FMeleeAttackAnimSlotSet
{ 
	EBBQCombatAnimSlot                                 AttackAnimSlot;                                             // 0x0000   (0x0001)  
	EBBQCombatAnimSlot                                 AttackAnimSlot_Stationary;                                  // 0x0001   (0x0001)  
};

/// Struct /Script/BBQGameSession.GameplayCueData
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 4 MaxSize: 0x000C
struct FGameplayCueData
{ 
	FGameplayTag                                       GameplayCueTag;                                             // 0x0000   (0x0008)  
	bool                                               bIsLocal;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x3];                                       // 0x0009   (0x0003)  MISSED
};

/// Struct /Script/BBQGameSession.BBQOutlineRendererConfig
/// Size: 0x0098 (152 bytes) (0x000000 - 0x000098) align 8 MaxSize: 0x0098
struct FBBQOutlineRendererConfig
{ 
	FName                                              InstanceName;                                               // 0x0000   (0x0008)  
	float                                              Duration;                                                   // 0x0008   (0x0004)  
	char                                               ColorIndex;                                                 // 0x000C   (0x0001)  
	ETeamID                                            TeamVisible;                                                // 0x000D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x000E   (0x0002)  MISSED
	FGameplayTagContainer                              VisibilityRequiredTags;                                     // 0x0010   (0x0020)  
	FGameplayTagContainer                              VisiblityIgnoreTags;                                        // 0x0030   (0x0020)  
	FGameplayTagContainer                              OwnerRequiredTags;                                          // 0x0050   (0x0020)  
	FGameplayTagContainer                              OwnerIgnoreTags;                                            // 0x0070   (0x0020)  
	EOutlineDurationStackRule                          DurationStackRule;                                          // 0x0090   (0x0001)  
	bool                                               bHighlightOnlyIfMoving;                                     // 0x0091   (0x0001)  
	unsigned char                                      UnknownData01_7[0x6];                                       // 0x0092   (0x0006)  MISSED
};

/// Struct /Script/BBQGameSession.BBQHuntModeDetectableObject
/// Size: 0x0058 (88 bytes) (0x000000 - 0x000058) align 8 MaxSize: 0x0058
struct FBBQHuntModeDetectableObject
{ 
	TSoftObjectPtr<class UClass*>                      ActorClass;                                                 // 0x0000   (0x0028)  
	FGameplayTagContainer                              RequiredCharacterTags;                                      // 0x0028   (0x0020)  
	FName                                              RequiredActorTag;                                           // 0x0048   (0x0008)  
	bool                                               bAlwaysDetected;                                            // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0051   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.SenseInfo
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 MaxSize: 0x0018
struct FSenseInfo
{ 
	class UNiagaraComponent*                           SpawnedPS;                                                  // 0x0000   (0x0008)  
	float                                              DistanceToOwnerAvatar;                                      // 0x0008   (0x0004)  
	float                                              DistanceNormalized;                                         // 0x000C   (0x0004)  
	float                                              CurrentSize;                                                // 0x0010   (0x0004)  
	float                                              VisibilityNormalized;                                       // 0x0014   (0x0004)  
};

/// Struct /Script/BBQGameSession.HandleInfo
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 MaxSize: 0x0018
struct FHandleInfo
{ 
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/BBQGameSession.HighlightInfo
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FHighlightInfo
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/BBQGameSession.BBQGameplayAbilityTargetingClueInfo
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 MaxSize: 0x0018
struct FBBQGameplayAbilityTargetingClueInfo
{ 
	class ABBQGameSessionCharacter*                    OwnerCharacter;                                             // 0x0000   (0x0008)  
	int32_t                                            FootprintIndex;                                             // 0x0008   (0x0004)  
	FVector                                            FootprintLocation;                                          // 0x000C   (0x000C)  
};

/// Struct /Script/BBQGameSession.BBQTurnInPlaceAsset
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 MaxSize: 0x0020
struct FBBQTurnInPlaceAsset
{ 
	class UAnimSequenceBase*                           Animation;                                                  // 0x0000   (0x0008)  
	float                                              AnimatedAngle;                                              // 0x0008   (0x0004)  
	FName                                              SlotName;                                                   // 0x000C   (0x0008)  
	float                                              PlayRate;                                                   // 0x0014   (0x0004)  
	bool                                               ScaleTurnAngle;                                             // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.CommonBleedoutInfo
/// Size: 0x0028 (40 bytes) (0x000000 - 0x000028) align 8 MaxSize: 0x0028
struct FCommonBleedoutInfo
{ 
	int32_t                                            level;                                                      // 0x0000   (0x0004)  
	float                                              HealthReduction;                                            // 0x0004   (0x0004)  
	float                                              Period;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FDataTableRowHandle                                NotificationRow;                                            // 0x0010   (0x0010)  
	float                                              TimeTillDeath;                                              // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_7[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/BBQGameSession.TimeBasedBleedoutInfo
/// Size: 0x0030 (48 bytes) (0x000000 - 0x000030) align 8 MaxSize: 0x0030
struct FTimeBasedBleedoutInfo
{ 
	float                                              StartTime;                                                  // 0x0000   (0x0004)  
	float                                              EndTime;                                                    // 0x0004   (0x0004)  
	FCommonBleedoutInfo                                BleedoutData;                                               // 0x0008   (0x0028)  
};

/// Struct /Script/BBQGameSession.TagBasedBleedoutInfo
/// Size: 0x0030 (48 bytes) (0x000000 - 0x000030) align 8 MaxSize: 0x0030
struct FTagBasedBleedoutInfo
{ 
	FGameplayTag                                       Tag;                                                        // 0x0000   (0x0008)  
	FCommonBleedoutInfo                                BleedoutData;                                               // 0x0008   (0x0028)  
};

/// Struct /Script/BBQGameSession.BleedoutHandle
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 4 MaxSize: 0x000C
struct FBleedoutHandle
{ 
	int32_t                                            Index;                                                      // 0x0000   (0x0004)  
	float                                              HealthReduction;                                            // 0x0004   (0x0004)  
	float                                              BleedoutStartedTime;                                        // 0x0008   (0x0004)  
};

/// Struct /Script/BBQGameSession.BBQCameraState_CameraShake
/// Size: 0x0028 (40 bytes) (0x000000 - 0x000028) align 8 MaxSize: 0x0028
struct FBBQCameraState_CameraShake
{ 
	class UClass*                                      ShakeClass;                                                 // 0x0000   (0x0008)  
	float                                              Scale;                                                      // 0x0008   (0x0004)  
	ECameraShakePlaySpace                              PlaySpace;                                                  // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
	FRotator                                           UserPlaySpaceRot;                                           // 0x0010   (0x000C)  
	float                                              Delay;                                                      // 0x001C   (0x0004)  
	bool                                               bLoop;                                                      // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_7[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.BBQ_Camera_State
/// Size: 0x00C0 (192 bytes) (0x000008 - 0x0000C0) align 8 MaxSize: 0x00C0
struct FBBQ_Camera_State : FTableRowBase
{ 
	bool                                               bDisablePlayerControl;                                      // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              MouseTurnMultiplier;                                        // 0x000C   (0x0004)  
	float                                              MousePitchMultiplier;                                       // 0x0010   (0x0004)  
	float                                              TurnMultiplier;                                             // 0x0014   (0x0004)  
	float                                              PitchMultiplier;                                            // 0x0018   (0x0004)  
	float                                              PitchMin;                                                   // 0x001C   (0x0004)  
	float                                              PitchMax;                                                   // 0x0020   (0x0004)  
	float                                              DefaultPitch;                                               // 0x0024   (0x0004)  
	float                                              FollowDistance;                                             // 0x0028   (0x0004)  
	float                                              FOV;                                                        // 0x002C   (0x0004)  
	FVector                                            TargetOffset;                                               // 0x0030   (0x000C)  
	FVector                                            PositionOffset;                                             // 0x003C   (0x000C)  
	FVector                                            LookAtPointOffset;                                          // 0x0048   (0x000C)  
	float                                              PositionLagSpeed;                                           // 0x0054   (0x0004)  
	float                                              RotationLagSpeed;                                           // 0x0058   (0x0004)  
	float                                              MaxLagDistance;                                             // 0x005C   (0x0004)  
	float                                              TerrainFollowInterpSpeedMultiplier;                         // 0x0060   (0x0004)  
	float                                              MotionBlurAmount;                                           // 0x0064   (0x0004)  
	bool                                               bUseTerrainFollow;                                          // 0x0068   (0x0001)  
	bool                                               bUseObjectFading;                                           // 0x0069   (0x0001)  
	bool                                               bUseTargetLock;                                             // 0x006A   (0x0001)  
	bool                                               bResetCameraRotation;                                       // 0x006B   (0x0001)  
	bool                                               bOverrideOutTransition;                                     // 0x006C   (0x0001)  
	bool                                               bDisableCollisionWithPlayers;                               // 0x006D   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x006E   (0x0002)  MISSED
	float                                              TransitionTime;                                             // 0x0070   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0074   (0x0004)  MISSED
	class UCurveFloat*                                 TransitionCurve;                                            // 0x0078   (0x0008)  
	float                                              OutTransitionTime;                                          // 0x0080   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0084   (0x0004)  MISSED
	class UCurveFloat*                                 OutTransitionCurve;                                         // 0x0088   (0x0008)  
	FBBQCameraState_CameraShake                        CameraShake;                                                // 0x0090   (0x0028)  
	bool                                               bOverride_MouseTurnMultiplier : 1;                          // 0x00B8:0 (0x0001)  
	bool                                               bOverride_MousePitchMultiplier : 1;                         // 0x00B8:1 (0x0001)  
	bool                                               bOverride_TurnMultiplier : 1;                               // 0x00B8:2 (0x0001)  
	bool                                               bOverride_PitchMultiplier : 1;                              // 0x00B8:3 (0x0001)  
	bool                                               bOverride_PitchMin : 1;                                     // 0x00B8:4 (0x0001)  
	bool                                               bOverride_PitchMax : 1;                                     // 0x00B8:5 (0x0001)  
	bool                                               bOverride_DefaultPitch : 1;                                 // 0x00B8:6 (0x0001)  
	bool                                               bOverride_FollowDistance : 1;                               // 0x00B8:7 (0x0001)  
	bool                                               bOverride_FOV : 1;                                          // 0x00B9:0 (0x0001)  
	bool                                               bOverride_TargetOffset : 1;                                 // 0x00B9:1 (0x0001)  
	bool                                               bOverride_PositionOffset : 1;                               // 0x00B9:2 (0x0001)  
	bool                                               bOverride_LookAtPointOffset : 1;                            // 0x00B9:3 (0x0001)  
	bool                                               bOverride_PositionLagSpeed : 1;                             // 0x00B9:4 (0x0001)  
	bool                                               bOverride_RotationLagSpeed : 1;                             // 0x00B9:5 (0x0001)  
	bool                                               bOverride_MaxLagDistance : 1;                               // 0x00B9:6 (0x0001)  
	bool                                               bOverride_TerrainFollowInterpSpeedMultiplier : 1;           // 0x00B9:7 (0x0001)  
	bool                                               bOverride_MotionBlurAmount : 1;                             // 0x00BA:0 (0x0001)  
	bool                                               bOverride_bUseTerrainFollow : 1;                            // 0x00BA:1 (0x0001)  
	bool                                               bOverride_bUseObjectFading : 1;                             // 0x00BA:2 (0x0001)  
	bool                                               bOverride_bUseTargetLock : 1;                               // 0x00BA:3 (0x0001)  
	bool                                               bOverride_bResetCameraRotation : 1;                         // 0x00BA:4 (0x0001)  
	bool                                               bOverride_bOverrideOutTransition : 1;                       // 0x00BA:5 (0x0001)  
	bool                                               bOverride_TransitionTime : 1;                               // 0x00BA:6 (0x0001)  
	bool                                               bOverride_TransitionCurve : 1;                              // 0x00BA:7 (0x0001)  
	bool                                               bOverride_CameraShake : 1;                                  // 0x00BB:0 (0x0001)  
	bool                                               bOverride_bDisableCollisionWithPlayers : 1;                 // 0x00BB:1 (0x0001)  
	unsigned char                                      UnknownData04_7[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Struct /Script/BBQGameSession.CameraStateBlendable
/// Size: 0x00E0 (224 bytes) (0x000000 - 0x0000E0) align 8 MaxSize: 0x00E0
struct FCameraStateBlendable
{ 
	unsigned char                                      UnknownData00_7[0x18];                                      // 0x0000   (0x0018)  MISSED
	FBBQ_Camera_State                                  State;                                                      // 0x0018   (0x00C0)  
	class UCameraShakeBase*                            ActiveCameraShake;                                          // 0x00D8   (0x0008)  
};

/// Struct /Script/BBQGameSession.CameraStateModifier
/// Size: 0x0030 (48 bytes) (0x000000 - 0x000030) align 8 MaxSize: 0x0030
struct FCameraStateModifier
{ 
	class UBBQCameraVolumeComponent*                   SourceCameraVolume;                                         // 0x0000   (0x0008)  
	FDataTableRowHandle                                CameraStateRowHandle;                                       // 0x0008   (0x0010)  
	unsigned char                                      UnknownData00_7[0x18];                                      // 0x0018   (0x0018)  MISSED
};

/// Struct /Script/BBQGameSession.BBQCameraFramingOffset
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 4 MaxSize: 0x0010
struct FBBQCameraFramingOffset
{ 
	float                                              Angle;                                                      // 0x0000   (0x0004)  
	float                                              ArmLength;                                                  // 0x0004   (0x0004)  
	float                                              ArmHeight;                                                  // 0x0008   (0x0004)  
	bool                                               bFallbackCamera;                                            // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_7[0x3];                                       // 0x000D   (0x0003)  MISSED
};

/// Struct /Script/BBQGameSession.ChainsawHeatLevelTag
/// Size: 0x0080 (128 bytes) (0x000000 - 0x000080) align 8 MaxSize: 0x0080
struct FChainsawHeatLevelTag
{ 
	FGameplayVariableFloat                             HeatLevel;                                                  // 0x0000   (0x0058)  
	FGameplayTag                                       GameplayTag;                                                // 0x0058   (0x0008)  
	FGameplayTag                                       LowMarginGameplayTag;                                       // 0x0060   (0x0008)  
	float                                              LowMarginValue;                                             // 0x0068   (0x0004)  
	FGameplayTag                                       HighMarginGameplayTag;                                      // 0x006C   (0x0008)  
	float                                              HighMarginValue;                                            // 0x0074   (0x0004)  
	bool                                               bAddWhenBelow;                                              // 0x0078   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0079   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.BBQCinematicCameraSetup
/// Size: 0x0048 (72 bytes) (0x000000 - 0x000048) align 8 MaxSize: 0x0048
struct FBBQCinematicCameraSetup
{ 
	bool                                               bOverrideSequenceMode;                                      // 0x0000   (0x0001)  
	bool                                               bOverrideFallbackFramingDuration;                           // 0x0001   (0x0001)  
	bool                                               bOverrideAudioListener;                                     // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x0003   (0x0005)  MISSED
	class ULevelSequence*                              LevelSequence;                                              // 0x0008   (0x0008)  
	float                                              SequenceBlendInTime;                                        // 0x0010   (0x0004)  
	float                                              SequenceBlendOutTime;                                       // 0x0014   (0x0004)  
	class UBBQLevelSequenceCollisionObject*            LevelSequenceCollision;                                     // 0x0018   (0x0008)  
	bool                                               bResetCameraAfterSequence;                                  // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0021   (0x0007)  MISSED
	class UClass*                                      FallbackFramingSettings;                                    // 0x0028   (0x0008)  
	float                                              FallbackFramingDuration;                                    // 0x0030   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0034   (0x0004)  MISSED
	FString                                            MusicPlayerState;                                           // 0x0038   (0x0010)  
};

/// Struct /Script/BBQGameSession.BBQPairedAnimation
/// Size: 0x0100 (256 bytes) (0x000000 - 0x000100) align 16 MaxSize: 0x0100
struct FBBQPairedAnimation
{ 
	class UAnimMontage*                                LeaderAnimationMontage;                                     // 0x0000   (0x0008)  
	FBBQCinematicCameraSetup                           LeaderCameraSetup;                                          // 0x0008   (0x0048)  
	class ULevelSequence*                              LeaderAssetSequence;                                        // 0x0050   (0x0008)  
	bool                                               bAttachLeaderAssetSequenceToFollower;                       // 0x0058   (0x0001)  
	bool                                               bCanContinePlayingWithoutPartner;                           // 0x0059   (0x0001)  
	bool                                               bCanContinueCinematicWithoutPartner;                        // 0x005A   (0x0001)  
	bool                                               bLoopLevelSequence;                                         // 0x005B   (0x0001)  
	bool                                               bOffsetLeaderCharacter;                                     // 0x005C   (0x0001)  
	bool                                               bOverrideCollision;                                         // 0x005D   (0x0001)  
	bool                                               bMoveLeaderToAvoidOverlap;                                  // 0x005E   (0x0001)  
	EBBQPairedAnimRole                                 OverrideCameraFramingCharacter;                             // 0x005F   (0x0001)  
	bool                                               bAdjustMeshPitchForElevation;                               // 0x0060   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0061   (0x0003)  MISSED
	float                                              MaxPitchForElevation;                                       // 0x0064   (0x0004)  
	class UAnimMontage*                                FollowerAnimationMontage;                                   // 0x0068   (0x0008)  
	FBBQCinematicCameraSetup                           FollowerCameraSetup;                                        // 0x0070   (0x0048)  
	class ULevelSequence*                              FollowerAssetSequence;                                      // 0x00B8   (0x0008)  
	bool                                               bAttachFollowerAssetSequenceToLeader;                       // 0x00C0   (0x0001)  
	EBBQPairedAnimRoleTransformRule                    AnimationTransformRule;                                     // 0x00C1   (0x0001)  
	unsigned char                                      UnknownData01_6[0xE];                                       // 0x00C2   (0x000E)  MISSED
	FTransform                                         FollowerOffset;                                             // 0x00D0   (0x0030)  
};

/// Struct /Script/BBQGameSession.BBQPairedAnimationSet
/// Size: 0x0150 (336 bytes) (0x000000 - 0x000150) align 16 MaxSize: 0x0150
struct FBBQPairedAnimationSet
{ 
	TMap<FGameplayTag, FBBQPairedAnimation>            TagSpecificOverrides;                                       // 0x0000   (0x0050)  
	FBBQPairedAnimation                                BaseSetup;                                                  // 0x0050   (0x0100)  
};

/// Struct /Script/BBQGameSession.BBQExecutionProperties
/// Size: 0x01D0 (464 bytes) (0x000000 - 0x0001D0) align 16 MaxSize: 0x01D0
struct FBBQExecutionProperties
{ 
	FName                                              ExecutionDataName;                                          // 0x0000   (0x0008)  
	class UClass*                                      ExecutionerEffect;                                          // 0x0008   (0x0008)  
	class UClass*                                      VictimEffect;                                               // 0x0010   (0x0008)  
	TMap<FGameplayTag, class UTexture2D*>              ErosionTextureMap;                                          // 0x0018   (0x0050)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0068   (0x0008)  MISSED
	FBBQPairedAnimationSet                             PairedAnimationSet;                                         // 0x0070   (0x0150)  
	float                                              ClearanceAreaSize;                                          // 0x01C0   (0x0004)  
	float                                              MinimumClearanceAreaSize;                                   // 0x01C4   (0x0004)  
	float                                              MaxHeightDifference;                                        // 0x01C8   (0x0004)  
	bool                                               bVictimStartsLyingDown;                                     // 0x01CC   (0x0001)  
	unsigned char                                      UnknownData01_7[0x3];                                       // 0x01CD   (0x0003)  MISSED
};

/// Struct /Script/BBQGameSession.BBQInventoryItem
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 MaxSize: 0x0020
struct FBBQInventoryItem
{ 
	FGameplayTag                                       Type;                                                       // 0x0000   (0x0008)  
	class UTexture2D*                                  SlotTexture;                                                // 0x0008   (0x0008)  
	class AActor*                                      EffectInstigator;                                           // 0x0010   (0x0008)  
	bool                                               IsEquipped;                                                 // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.BBQLockOnTargetInfo
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FBBQLockOnTargetInfo
{ 
	class UObject*                                     LockOnTarget;                                               // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x0008   (0x0008)  MISSED
};

/// Struct /Script/BBQGameSession.BBQMapPosition
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 MaxSize: 0x0020
struct FBBQMapPosition
{ 
	FVector                                            Location;                                                   // 0x0000   (0x000C)  
	float                                              Yaw;                                                        // 0x000C   (0x0004)  
	FString                                            Name;                                                       // 0x0010   (0x0010)  
};

/// Struct /Script/BBQGameSession.NoiseOutlineConfig
/// Size: 0x0048 (72 bytes) (0x000000 - 0x000048) align 8 MaxSize: 0x0048
struct FNoiseOutlineConfig
{ 
	class UNiagaraSystem*                              PSTemplate;                                                 // 0x0000   (0x0008)  
	float                                              PulseRate;                                                  // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UAkAudioEvent*                               AudioEvent;                                                 // 0x0010   (0x0008)  
	float                                              MaxDistance;                                                // 0x0018   (0x0004)  
	float                                              Duration;                                                   // 0x001C   (0x0004)  
	class ABBQGameSessionCharacter*                    SoleRecipientOfEffect;                                      // 0x0020   (0x0008)  
	ETeamID                                            Team;                                                       // 0x0028   (0x0001)  
	char                                               ColorIndex;                                                 // 0x0029   (0x0001)  
	bool                                               bHighlightAllComponents;                                    // 0x002A   (0x0001)  
	unsigned char                                      UnknownData01_6[0x5];                                       // 0x002B   (0x0005)  MISSED
	TArray<FName>                                      TaggedComponentsToHighlight;                                // 0x0030   (0x0010)  
	bool                                               bDestroyAfterEnd;                                           // 0x0040   (0x0001)  
	unsigned char                                      UnknownData02_7[0x7];                                       // 0x0041   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.BBQCloseEncounterStateRepInfo
/// Size: 0x0080 (128 bytes) (0x000000 - 0x000080) align 16 MaxSize: 0x0080
struct FBBQCloseEncounterStateRepInfo
{ 
	ECloseEncounterState                               CloseEncounterState;                                        // 0x0000   (0x0001)  
	ECERole                                            OverrideWinner;                                             // 0x0001   (0x0001)  
	bool                                               bLastEncounterFinished;                                     // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x0003   (0x0005)  MISSED
	FDataTableRowHandle                                CloseEncounterDefinition;                                   // 0x0008   (0x0010)  
	class AActor*                                      Defender;                                                   // 0x0018   (0x0008)  
	FTransform                                         AttackerTransform;                                          // 0x0020   (0x0030)  
	FTransform                                         DefenderTransform;                                          // 0x0050   (0x0030)  
};

/// Struct /Script/BBQGameSession.CloseEncounterParticipant
/// Size: 0x0028 (40 bytes) (0x000000 - 0x000028) align 8 MaxSize: 0x0028
struct FCloseEncounterParticipant
{ 
	class AActor*                                      ParticipantActor;                                           // 0x0000   (0x0008)  
	class UBBQPairedAnimationComponent*                ParticipantPairedAnimationComponent;                        // 0x0008   (0x0008)  
	class UBBQCloseEncounterComponent*                 ParticipantCloseEncounterComponent;                         // 0x0010   (0x0008)  
	unsigned char                                      UnknownData00_7[0x10];                                      // 0x0018   (0x0010)  MISSED
};

/// Struct /Script/BBQGameSession.HingeDoorAnimation
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 4 MaxSize: 0x0010
struct FHingeDoorAnimation
{ 
	float                                              Duration;                                                   // 0x0000   (0x0004)  
	float                                              StartAngle;                                                 // 0x0004   (0x0004)  
	float                                              EndAngle;                                                   // 0x0008   (0x0004)  
	float                                              Loudness;                                                   // 0x000C   (0x0004)  
};

/// Struct /Script/BBQGameSession.HingeDoorSoundState
/// Size: 0x0040 (64 bytes) (0x000000 - 0x000040) align 8 MaxSize: 0x0040
struct FHingeDoorSoundState
{ 
	class UAkAudioEvent*                               AkEvent;                                                    // 0x0000   (0x0008)  
	class UAkRtpc*                                     IsLocalRtpc;                                                // 0x0008   (0x0008)  
	class UWorld*                                      World;                                                      // 0x0010   (0x0008)  
	class UAkRoomComponent*                            RoomOverride;                                               // 0x0018   (0x0008)  
	unsigned char                                      UnknownData00_7[0x20];                                      // 0x0020   (0x0020)  MISSED
};

/// Struct /Script/BBQGameSession.DoorSlicerStump
/// Size: 0x0030 (48 bytes) (0x000000 - 0x000030) align 8 MaxSize: 0x0030
struct FDoorSlicerStump
{ 
	float                                              StumpNormalizedTimeKey;                                     // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	FComponentReference                                StumpMeshReference;                                         // 0x0008   (0x0028)  
};

/// Struct /Script/BBQGameSession.DoorSlicerParts
/// Size: 0x00E8 (232 bytes) (0x000000 - 0x0000E8) align 8 MaxSize: 0x00E8
struct FDoorSlicerParts
{ 
	FComponentReference                                SliceVFXPathReference;                                      // 0x0000   (0x0028)  
	class USplineComponent*                            DoorSliceVFXPath;                                           // 0x0028   (0x0008)  
	FComponentReference                                SliceMeshReference;                                         // 0x0030   (0x0028)  
	class UMeshComponent*                              DoorSliceMesh;                                              // 0x0058   (0x0008)  
	TArray<FDoorSlicerStump>                           DoorSliceStumps;                                            // 0x0060   (0x0010)  
	float                                              SliceShaderTraveDistace;                                    // 0x0070   (0x0004)  
	float                                              SliceProgress;                                              // 0x0074   (0x0004)  
	float                                              MaxSliceTime;                                               // 0x0078   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x007C   (0x0004)  MISSED
	TArray<class UMaterialInstanceDynamic*>            DoorSliceDynamicMaterials;                                  // 0x0080   (0x0010)  
	TMap<int32_t, int32_t>                             DoorSliceProgressParamterMap;                               // 0x0090   (0x0050)  
	bool                                               bDoorSliceInitted;                                          // 0x00E0   (0x0001)  
	bool                                               bDoorSliceIsValid;                                          // 0x00E1   (0x0001)  
	bool                                               bDoorSliceComplete;                                         // 0x00E2   (0x0001)  
	unsigned char                                      UnknownData01_7[0x5];                                       // 0x00E3   (0x0005)  MISSED
};

/// Struct /Script/BBQGameSession.DoorSlicerSmashable
/// Size: 0x0040 (64 bytes) (0x000000 - 0x000040) align 8 MaxSize: 0x0040
struct FDoorSlicerSmashable
{ 
	float                                              SmashableNormalizedTimeKey;                                 // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<FComponentReference>                        SmashableComponents;                                        // 0x0008   (0x0010)  
	TArray<int32_t>                                    SmashableSliceDependencies;                                 // 0x0018   (0x0010)  
	FVector2D                                          SmashableForce;                                             // 0x0028   (0x0008)  
	class UNiagaraSystem*                              SmashableVFX;                                               // 0x0030   (0x0008)  
	bool                                               bWasSmashed;                                                // 0x0038   (0x0001)  
	unsigned char                                      UnknownData01_7[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.BBQ_SlidingAnimationRepInfo
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FBBQ_SlidingAnimationRepInfo
{ 
	class UCurveFloat*                                 AnimationCurve;                                             // 0x0000   (0x0008)  
	float                                              AnimationTimer;                                             // 0x0008   (0x0004)  
	bool                                               bReverseAnimation;                                          // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_7[0x3];                                       // 0x000D   (0x0003)  MISSED
};

/// Struct /Script/BBQGameSession.BBQElectroTrapInteractionSettings
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FBBQElectroTrapInteractionSettings
{ 
	EInteractionMethod                                 InteractionMethod;                                          // 0x0000   (0x0001)  
	EBBQAnimSlot_AddOn1                                AnimSlot;                                                   // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0002   (0x0006)  MISSED
	class UAnimMontage*                                MontageToPlay;                                              // 0x0008   (0x0008)  
};

/// Struct /Script/BBQGameSession.EnvironmentDamageSettings
/// Size: 0x0058 (88 bytes) (0x000000 - 0x000058) align 8 MaxSize: 0x0058
struct FEnvironmentDamageSettings
{ 
	class UAnimMontage*                                AttackMontage;                                              // 0x0000   (0x0008)  
	bool                                               bOneShot;                                                   // 0x0008   (0x0001)  
	bool                                               bUsePlayerOrientation;                                      // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x000A   (0x0002)  MISSED
	float                                              SweepRadius;                                                // 0x000C   (0x0004)  
	float                                              SweepStartOffset;                                           // 0x0010   (0x0004)  
	EAttackDirectionReference                          AttackReference;                                            // 0x0014   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0015   (0x0003)  MISSED
	FVector                                            AttackDirectionNormal;                                      // 0x0018   (0x000C)  
	float                                              ReferenceRotation;                                          // 0x0024   (0x0004)  
	float                                              SweepDistance;                                              // 0x0028   (0x0004)  
	float                                              SweepRate;                                                  // 0x002C   (0x0004)  
	float                                              AttackDuration;                                             // 0x0030   (0x0004)  
	float                                              SliceDistancePerTick;                                       // 0x0034   (0x0004)  
	float                                              MaximumSliceDistance;                                       // 0x0038   (0x0004)  
	float                                              AdditionalDistanceOnSlice;                                  // 0x003C   (0x0004)  
	float                                              SliceFillInTick;                                            // 0x0040   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0044   (0x0004)  MISSED
	class UCurveFloat*                                 DecalSpawnProbabilityCurve;                                 // 0x0048   (0x0008)  
	bool                                               bUseSliceDirectionForDecals;                                // 0x0050   (0x0001)  
	unsigned char                                      UnknownData03_7[0x7];                                       // 0x0051   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.LockOnTargetVolumeInfo
/// Size: 0x0068 (104 bytes) (0x000000 - 0x000068) align 8 MaxSize: 0x0068
struct FLockOnTargetVolumeInfo
{ 
	FComponentReference                                LockOnBoxComponentRef;                                      // 0x0000   (0x0028)  
	FComponentReference                                LockOnTargetSceneComponentRef;                              // 0x0028   (0x0028)  
	bool                                               bOverrideVolumeEnabled;                                     // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0051   (0x0007)  MISSED
	class UBoxComponent*                               LockOnBoxComponent;                                         // 0x0058   (0x0008)  
	class USceneComponent*                             LockOnTarget;                                               // 0x0060   (0x0008)  
};

/// Struct /Script/BBQGameSession.Fuse
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 4 MaxSize: 0x0008
struct FFuse
{ 
	int32_t                                            AmpValue;                                                   // 0x0000   (0x0004)  
	int32_t                                            ColorIndex;                                                 // 0x0004   (0x0004)  
};

/// Struct /Script/BBQGameSession.FuseboxInteractionState
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FFuseboxInteractionState
{ 
	class ABBQGameSessionCharacterAnimated*            InteractingCharacter;                                       // 0x0000   (0x0008)  
	EFuseboxAction                                     Action;                                                     // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.InputActionContainer
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FInputActionContainer
{ 
	TArray<class UInputAction*>                        InputActions;                                               // 0x0000   (0x0010)  
};

/// Struct /Script/BBQGameSession.BBQMinigameState
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 4 MaxSize: 0x0010
struct FBBQMinigameState
{ 
	float                                              Points;                                                     // 0x0000   (0x0004)  
	float                                              ActiveTimerRemainingTime;                                   // 0x0004   (0x0004)  
	float                                              DecayElapsedTime;                                           // 0x0008   (0x0004)  
	EMinigameTimerId                                   ActiveTimerId;                                              // 0x000C   (0x0001)  
	EEndMinigameReason                                 EndReason;                                                  // 0x000D   (0x0001)  
	unsigned char                                      UnknownData00_7[0x2];                                       // 0x000E   (0x0002)  MISSED
};

/// Struct /Script/BBQGameSession.BBQMinigameNetState_SweetSpot
/// Size: 0x0004 (4 bytes) (0x000000 - 0x000004) align 4 MaxSize: 0x0004
struct FBBQMinigameNetState_SweetSpot
{ 
	float                                              MarkerPosition;                                             // 0x0000   (0x0004)  
};

/// Struct /Script/BBQGameSession.BBQMinigameNetState_FuseBox
/// Size: 0x0030 (48 bytes) (0x000000 - 0x000030) align 8 MaxSize: 0x0030
struct FBBQMinigameNetState_FuseBox
{ 
	TArray<int32_t>                                    FuseSlots;                                                  // 0x0000   (0x0010)  
	TArray<int32_t>                                    FreeFuses;                                                  // 0x0010   (0x0010)  
	int32_t                                            FloatingFuse;                                               // 0x0020   (0x0004)  
	int32_t                                            HoveredFuseButtonIndex;                                     // 0x0024   (0x0004)  
	bool                                               bIsHoveredFuseButtonASlot;                                  // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.BBQMinigameNetState_Interaction
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 4 MaxSize: 0x0018
struct FBBQMinigameNetState_Interaction
{ 
	float                                              NoiseLevel;                                                 // 0x0000   (0x0004)  
	int32_t                                            AngleIndex;                                                 // 0x0004   (0x0004)  
	float                                              LeftAxisAngle;                                              // 0x0008   (0x0004)  
	bool                                               bIsInSweetSpot;                                             // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
	float                                              HoldElapsedTime;                                            // 0x0010   (0x0004)  
	float                                              NoiseDecayElapsedTime;                                      // 0x0014   (0x0004)  
};

/// Struct /Script/BBQGameSession.BBQMinigameNetState
/// Size: 0x0068 (104 bytes) (0x000000 - 0x000068) align 8 MaxSize: 0x0068
struct FBBQMinigameNetState
{ 
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x0000   (0x0008)  MISSED
	FBBQMinigameState                                  BaseState;                                                  // 0x0008   (0x0010)  
	FBBQMinigameNetState_SweetSpot                     SweetSpotState;                                             // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FBBQMinigameNetState_FuseBox                       FuseBoxState;                                               // 0x0020   (0x0030)  
	FBBQMinigameNetState_Interaction                   InteractionState;                                           // 0x0050   (0x0018)  
};

/// Struct /Script/BBQGameSession.BBQMinigameSavedState
/// Size: 0x0070 (112 bytes) (0x000000 - 0x000070) align 8 MaxSize: 0x0070
struct FBBQMinigameSavedState
{ 
	int32_t                                            RandomSeed;                                                 // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	FBBQMinigameNetState                               NetState;                                                   // 0x0008   (0x0068)  
};

/// Struct /Script/BBQGameSession.BBQMinigameInitialState
/// Size: 0x0088 (136 bytes) (0x000000 - 0x000088) align 8 MaxSize: 0x0088
struct FBBQMinigameInitialState
{ 
	int32_t                                            RandomSeed;                                                 // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	class UBBQMinigameSettingsV2*                      MinigameSettings;                                           // 0x0008   (0x0008)  
	FBBQMinigameSavedState                             SavedState;                                                 // 0x0010   (0x0070)  
	class AActor*                                      MinigameInstigatorActor;                                    // 0x0080   (0x0008)  
};

/// Struct /Script/BBQGameSession.SpottingVFXProperties
/// Size: 0x0070 (112 bytes) (0x000000 - 0x000070) align 8 MaxSize: 0x0070
struct FSpottingVFXProperties
{ 
	class UNiagaraSystem*                              TemplateIdle;                                               // 0x0000   (0x0008)  
	class UNiagaraSystem*                              TemplateNoiseDetected;                                      // 0x0008   (0x0008)  
	class UNiagaraSystem*                              TemplateFocusing;                                           // 0x0010   (0x0008)  
	FString                                            RotationVariableName;                                       // 0x0018   (0x0010)  
	FString                                            DirectionVariableName;                                      // 0x0028   (0x0010)  
	FString                                            SizeVariableName;                                           // 0x0038   (0x0010)  
	FString                                            ScaleVariableName;                                          // 0x0048   (0x0010)  
	FVector                                            PositionOffset;                                             // 0x0058   (0x000C)  
	float                                              Size;                                                       // 0x0064   (0x0004)  
	class UCurveFloat*                                 ScaleCurve;                                                 // 0x0068   (0x0008)  
};

/// Struct /Script/BBQGameSession.CookListenPostProcessProperties
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 8 MaxSize: 0x0050
struct FCookListenPostProcessProperties
{ 
	class UMaterialInterface*                          Material;                                                   // 0x0000   (0x0008)  
	FName                                              SizeParameterName;                                          // 0x0008   (0x0008)  
	FName                                              AngleVectorParameterName;                                   // 0x0010   (0x0008)  
	FName                                              AmplitudeVectorParameterName;                               // 0x0018   (0x0008)  
	FName                                              OmniNoiseParameterName;                                     // 0x0020   (0x0008)  
	float                                              IdleNoiseAmplitude;                                         // 0x0028   (0x0004)  
	float                                              SpottingNoiseAmplitude;                                     // 0x002C   (0x0004)  
	float                                              FocusingNoiseAmplitude;                                     // 0x0030   (0x0004)  
	float                                              FocusingTargetAmplitudeFactor;                              // 0x0034   (0x0004)  
	int32_t                                            MaxNumOfNoiseSources;                                       // 0x0038   (0x0004)  
	float                                              BaseSize;                                                   // 0x003C   (0x0004)  
	class UCurveFloat*                                 SizeScaleCurve;                                             // 0x0040   (0x0008)  
	float                                              ParametersInterpSpeed;                                      // 0x0048   (0x0004)  
	bool                                               bDisableOnCooldown;                                         // 0x004C   (0x0001)  
	bool                                               bDisableDirectionalInfoWhenFocusing;                        // 0x004D   (0x0001)  
	unsigned char                                      UnknownData00_7[0x2];                                       // 0x004E   (0x0002)  MISSED
};

/// Struct /Script/BBQGameSession.BBQNoiseTargetInfo
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 MaxSize: 0x0018
struct FBBQNoiseTargetInfo
{ 
	class UNiagaraComponent*                           SpawnedVFX;                                                 // 0x0000   (0x0008)  
	float                                              DistanceToOwnerAvatar;                                      // 0x0008   (0x0004)  
	float                                              CurrentSize;                                                // 0x000C   (0x0004)  
	float                                              SizeReducingElapsedTime;                                    // 0x0010   (0x0004)  
	float                                              TimeSinceSpottable;                                         // 0x0014   (0x0004)  
};

/// Struct /Script/BBQGameSession.BBQFootprint
/// Size: 0x0028 (40 bytes) (0x000000 - 0x000028) align 4 MaxSize: 0x0028
struct FBBQFootprint
{ 
	int32_t                                            IndexInTrail;                                               // 0x0000   (0x0004)  
	float                                              Timestamp;                                                  // 0x0004   (0x0004)  
	FVector                                            Location;                                                   // 0x0008   (0x000C)  
	FVector                                            Direction;                                                  // 0x0014   (0x000C)  
	TWeakObjectPtr<class ABBQGameSessionCharacter*>    OwnerCharacter;                                             // 0x0020   (0x0008)  
};

/// Struct /Script/BBQGameSession.BBQFootprintVisualData
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 MaxSize: 0x0020
struct FBBQFootprintVisualData
{ 
	class UDecalComponent*                             DecalComponent;                                             // 0x0000   (0x0008)  
	class UNiagaraComponent*                           VfxComponent;                                               // 0x0008   (0x0008)  
	uint32_t                                           FootprintHash;                                              // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_7[0xC];                                       // 0x0014   (0x000C)  MISSED
};

/// Struct /Script/BBQGameSession.BBQTargetActorMeshState
/// Size: 0x0048 (72 bytes) (0x000000 - 0x000048) align 8 MaxSize: 0x0048
struct FBBQTargetActorMeshState
{ 
	bool                                               bEnableOutline;                                             // 0x0000   (0x0001)  
	bool                                               bUseOriginalMaterials;                                      // 0x0001   (0x0001)  
	bool                                               bEnableMaterialParameter;                                   // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x0003   (0x0005)  MISSED
	class UMaterialInterface*                          MaterialOverride;                                           // 0x0008   (0x0008)  
	int32_t                                            OutlineColorIndex;                                          // 0x0010   (0x0004)  
	FName                                              ParameterName;                                              // 0x0014   (0x0008)  
	FLinearColor                                       ParameterValue;                                             // 0x001C   (0x0010)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x002C   (0x0004)  MISSED
	class UStaticMeshComponent*                        StaticMeshComponent;                                        // 0x0030   (0x0008)  
	TArray<class UMaterialInterface*>                  Materials;                                                  // 0x0038   (0x0010)  
};

/// Struct /Script/BBQGameSession.BBQControlSchemeDefaults
/// Size: 0x0002 (2 bytes) (0x000000 - 0x000002) align 1 MaxSize: 0x0002
struct FBBQControlSchemeDefaults
{ 
	BBQGait                                            Gait;                                                       // 0x0000   (0x0001)  
	BBQStance                                          Stance;                                                     // 0x0001   (0x0001)  
};

/// Struct /Script/BBQGameSession.BBQTraversalData
/// Size: 0x0044 (68 bytes) (0x000000 - 0x000044) align 4 MaxSize: 0x0044
struct FBBQTraversalData
{ 
	FVector                                            SlideToLocation;                                            // 0x0000   (0x000C)  
	FRotator                                           SlideToRotation;                                            // 0x000C   (0x000C)  
	EBBQAnimSlot                                       TraversalAnimSlot;                                          // 0x0018   (0x0001)  
	EBBQAnimSlot                                       FastTraversalAnimSlot;                                      // 0x0019   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x001A   (0x0002)  MISSED
	FName                                              IntroSection;                                               // 0x001C   (0x0008)  
	FName                                              MainSection;                                                // 0x0024   (0x0008)  
	FName                                              OutroIdleSection;                                           // 0x002C   (0x0008)  
	FName                                              OutroDownedSection;                                         // 0x0034   (0x0008)  
	float                                              AnimRate;                                                   // 0x003C   (0x0004)  
	bool                                               bPerformFastTraversal;                                      // 0x0040   (0x0001)  
	unsigned char                                      UnknownData01_7[0x3];                                       // 0x0041   (0x0003)  MISSED
};

/// Struct /Script/BBQGameSession.BBQDoorActionParams
/// Size: 0x0038 (56 bytes) (0x000000 - 0x000038) align 8 MaxSize: 0x0038
struct FBBQDoorActionParams
{ 
	class ABBQDoorBase*                                Door;                                                       // 0x0000   (0x0008)  
	class UAnimMontage*                                Montage;                                                    // 0x0008   (0x0008)  
	EBBQDoorAction                                     Type;                                                       // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0011   (0x0003)  MISSED
	FVector                                            Location;                                                   // 0x0014   (0x000C)  
	FRotator                                           Rotation;                                                   // 0x0020   (0x000C)  
	bool                                               bShouldSlide;                                               // 0x002C   (0x0001)  
	bool                                               bUnlockFirst;                                               // 0x002D   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x002E   (0x0002)  MISSED
	float                                              ActionServerTime;                                           // 0x0030   (0x0004)  
	float                                              ActionTime;                                                 // 0x0034   (0x0004)  
};

/// Struct /Script/BBQGameSession.BBQMovementSettings
/// Size: 0x0038 (56 bytes) (0x000008 - 0x000038) align 8 MaxSize: 0x0038
struct FBBQMovementSettings : FTableRowBase
{ 
	float                                              WalkSpeed;                                                  // 0x0008   (0x0004)  
	float                                              RunSpeed;                                                   // 0x000C   (0x0004)  
	float                                              SprintSpeed;                                                // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	class UCurveVector*                                MovementCurve;                                              // 0x0018   (0x0008)  
	class UCurveFloat*                                 RotationRateCurve;                                          // 0x0020   (0x0008)  
	class UCurveFloat*                                 StrideBlendCurve;                                           // 0x0028   (0x0008)  
	class UCurveFloat*                                 GaitBlendCurve;                                             // 0x0030   (0x0008)  
};

/// Struct /Script/BBQGameSession.BBQMovementSettingsStance
/// Size: 0x0078 (120 bytes) (0x000008 - 0x000078) align 8 MaxSize: 0x0078
struct FBBQMovementSettingsStance : FTableRowBase
{ 
	FBBQMovementSettings                               Standing;                                                   // 0x0008   (0x0038)  
	FBBQMovementSettings                               Crouching;                                                  // 0x0040   (0x0038)  
};

/// Struct /Script/BBQGameSession.BBQMovementSettingsState
/// Size: 0x01E8 (488 bytes) (0x000008 - 0x0001E8) align 8 MaxSize: 0x01E8
struct FBBQMovementSettingsState : FTableRowBase
{ 
	FBBQMovementSettingsStance                         VelocityDirection;                                          // 0x0008   (0x0078)  
	FBBQMovementSettingsStance                         LookingDirection;                                           // 0x0080   (0x0078)  
	FBBQMovementSettingsStance                         Aiming;                                                     // 0x00F8   (0x0078)  
	FBBQMovementSettingsStance                         DraggingVictim;                                             // 0x0170   (0x0078)  
};

/// Struct /Script/BBQGameSession.BBQMovementSettingsMode
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FBBQMovementSettingsMode : FTableRowBase
{ 
	float                                              LadderClimbUpDistance;                                      // 0x0008   (0x0004)  
	float                                              LadderClimbUpSpeed;                                         // 0x000C   (0x0004)  
	float                                              LadderClimbDownDistance;                                    // 0x0010   (0x0004)  
	float                                              LadderClimbDownSpeed;                                       // 0x0014   (0x0004)  
};

/// Struct /Script/BBQGameSession.BBQAnimatedMontage
/// Size: 0x0048 (72 bytes) (0x000000 - 0x000048) align 8 MaxSize: 0x0048
struct FBBQAnimatedMontage
{ 
	EBBQAnimatedMontageType                            Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	class UAnimMontage*                                Montage;                                                    // 0x0008   (0x0008)  
	float                                              PlayRate;                                                   // 0x0010   (0x0004)  
	float                                              StartingPosition;                                           // 0x0014   (0x0004)  
	FName                                              StartingSection;                                            // 0x0018   (0x0008)  
	FGameplayTagContainer                              GrantedTags;                                                // 0x0020   (0x0020)  
	int32_t                                            Context;                                                    // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_7[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Struct /Script/BBQGameSession.BBQAnimationData
/// Size: 0x0038 (56 bytes) (0x000000 - 0x000038) align 4 MaxSize: 0x0038
struct FBBQAnimationData
{ 
	FVector                                            StartLocation;                                              // 0x0000   (0x000C)  
	FVector                                            EndLocation;                                                // 0x000C   (0x000C)  
	FVector                                            ExitLocation;                                               // 0x0018   (0x000C)  
	FRotator                                           Rotation;                                                   // 0x0024   (0x000C)  
	FGameplayTag                                       TargetMovementState;                                        // 0x0030   (0x0008)  
};

/// Struct /Script/BBQGameSession.BBQWellData
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FBBQWellData
{ 
	class ABBQWell*                                    Well;                                                       // 0x0000   (0x0008)  
	EBBQWellEnteringMethod                             EnteringMethod;                                             // 0x0008   (0x0001)  
	bool                                               bIsIncapacitated;                                           // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_7[0x6];                                       // 0x000A   (0x0006)  MISSED
};

/// Struct /Script/BBQGameSession.BBQAnimationState
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 8 MaxSize: 0x0050
struct FBBQAnimationState
{ 
	EBBQAnimationState                                 State;                                                      // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	FBBQAnimationData                                  Data;                                                       // 0x0004   (0x0038)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x003C   (0x0004)  MISSED
	FBBQWellData                                       WellData;                                                   // 0x0040   (0x0010)  
};

/// Struct /Script/BBQGameSession.BBQDraggingInfo
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 MaxSize: 0x0018
struct FBBQDraggingInfo
{ 
	class ABBQGameSessionCharacterAnimated*            DraggedPlayer;                                              // 0x0000   (0x0008)  
	class ABBQContextualKillLocation*                  ContextualKillLocation;                                     // 0x0008   (0x0008)  
	EDraggingState                                     State;                                                      // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.BBQWellInfo
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FBBQWellInfo
{ 
	class AActor*                                      WellBeingUsed;                                              // 0x0000   (0x0008)  
	EBBQWellEnteringMethod                             WellEnteringMethod;                                         // 0x0008   (0x0001)  
	EBBQUsingFromWellState                             UsingWellState;                                             // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_7[0x6];                                       // 0x000A   (0x0006)  MISSED
};

/// Struct /Script/BBQGameSession.BBQMinigameInstigatorSavedState
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 8 MaxSize: 0x0050
struct FBBQMinigameInstigatorSavedState
{ 
	TMap<FName, FBBQMinigameSavedState>                SavedMinigameStateMap;                                      // 0x0000   (0x0050)  
};

/// Struct /Script/BBQGameSession.BBQGlobalOutlineRendererConfig
/// Size: 0x0030 (48 bytes) (0x000000 - 0x000030) align 8 MaxSize: 0x0030
struct FBBQGlobalOutlineRendererConfig
{ 
	FGameplayTagContainer                              OwnerIgnoreTags;                                            // 0x0000   (0x0020)  
	TArray<FName>                                      OutlineInstancesIgnored;                                    // 0x0020   (0x0010)  
};

/// Struct /Script/BBQGameSession.GrandpaSpawnSettings
/// Size: 0x0002 (2 bytes) (0x000000 - 0x000002) align 1 MaxSize: 0x0002
struct FGrandpaSpawnSettings
{ 
	bool                                               bLeftFeedingLocatorEnabled;                                 // 0x0000   (0x0001)  
	bool                                               bRightFeedingLocatorEnabled;                                // 0x0001   (0x0001)  
};

/// Struct /Script/BBQGameSession.GrandpaPerceptionInfo
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FGrandpaPerceptionInfo
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/BBQGameSession.GrandpaFeedingInfo
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 MaxSize: 0x0018
struct FGrandpaFeedingInfo
{ 
	class ABBQGameSessionCharacterAnimated*            CharacterFeedingBlood;                                      // 0x0000   (0x0008)  
	class USceneComponent*                             LocatorBeingUsed;                                           // 0x0008   (0x0008)  
	bool                                               bIsLeftLocator;                                             // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.BBQHidingSpotCurves
/// Size: 0x00C8 (200 bytes) (0x000000 - 0x0000C8) align 8 MaxSize: 0x00C8
struct FBBQHidingSpotCurves
{ 
	class UCurveVector*                                EnterCurve;                                                 // 0x0000   (0x0008)  
	class UCurveVector*                                LeaveCurve;                                                 // 0x0008   (0x0008)  
	class UCurveVector*                                BurstOutCurve;                                              // 0x0010   (0x0008)  
	class UCurveVector*                                SearchFailDefaultCurve;                                     // 0x0018   (0x0008)  
	TMap<FGameplayTag, class UCurveVector*>            SearchFailCurveBySearchingCharacter;                        // 0x0020   (0x0050)  
	class UCurveVector*                                SearchSuccessDefaultCurve;                                  // 0x0070   (0x0008)  
	TMap<FGameplayTag, class UCurveVector*>            SearchSuccessCurveBySearchingCharacter;                     // 0x0078   (0x0050)  
};

/// Struct /Script/BBQGameSession.HidingPlayerCameraInfo
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 4 MaxSize: 0x0018
struct FHidingPlayerCameraInfo
{ 
	FVector                                            HidingPlayerLocation;                                       // 0x0000   (0x000C)  
	FRotator                                           HidingPlayerRotation;                                       // 0x000C   (0x000C)  
};

/// Struct /Script/BBQGameSession.HidingCharacterInfo
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FHidingCharacterInfo
{ 
	class ABBQGameSessionCharacter*                    HidingCharacter;                                            // 0x0000   (0x0008)  
	EBBQHidingPlayerState                              CurrentState;                                               // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.BBQLevelSequenceAnimOverride
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 8 MaxSize: 0x0050
struct FBBQLevelSequenceAnimOverride
{ 
	TMap<class UAnimSequenceBase*, class UAnimSequenceBase*> Overrides;                                            // 0x0000   (0x0050)  
};

/// Struct /Script/BBQGameSession.IncapAnimSlotSet
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 8 MaxSize: 0x0050
struct FIncapAnimSlotSet
{ 
	FBBQCinematicCameraSetup                           CameraSetup;                                                // 0x0000   (0x0048)  
	EBBQCombatAnimSlot                                 DownAnimSlot_Stationary;                                    // 0x0048   (0x0001)  
	EBBQCombatAnimSlot                                 DownAnimSlot_Moving;                                        // 0x0049   (0x0001)  
	EBBQCombatAnimSlot                                 ToNeutralAnimSlot;                                          // 0x004A   (0x0001)  
	unsigned char                                      UnknownData00_7[0x5];                                       // 0x004B   (0x0005)  MISSED
};

/// Struct /Script/BBQGameSession.IncapResponse
/// Size: 0x00C8 (200 bytes) (0x000000 - 0x0000C8) align 8 MaxSize: 0x00C8
struct FIncapResponse
{ 
	FString                                            Name;                                                       // 0x0000   (0x0010)  
	bool                                               bUseAttackerToDetermineDirection;                           // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FGameplayTagContainer                              InResponseToTags;                                           // 0x0018   (0x0020)  
	FGameplayTagContainer                              CharacterRequiredTags;                                      // 0x0038   (0x0020)  
	FGameplayTagContainer                              CharacterForbiddenTags;                                     // 0x0058   (0x0020)  
	TMap<EBBQHitReactionDirection, FIncapAnimSlotSet>  IncapAnimSlotSets;                                          // 0x0078   (0x0050)  
};

/// Struct /Script/BBQGameSession.LightSourceMaterialInfo
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FLightSourceMaterialInfo
{ 
	int32_t                                            MaterialIndex;                                              // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	class UMaterialInterface*                          MaterialInterface;                                          // 0x0008   (0x0008)  
};

/// Struct /Script/BBQGameSession.LightSourceInteraction
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FLightSourceInteraction
{ 
	class ABBQGameSessionCharacterAnimated*            InteractingPlayer;                                          // 0x0000   (0x0008)  
	ELightSourceState                                  FinalState;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.InteractionPrimativePair
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FInteractionPrimativePair
{ 
	class UBBQInteractionComponent*                    InteractionComponent;                                       // 0x0000   (0x0008)  
	class UPrimitiveComponent*                         PrimitiveComponent;                                         // 0x0008   (0x0008)  
};

/// Struct /Script/BBQGameSession.InteractionAvailabilityEventData
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 MaxSize: 0x0018
struct FInteractionAvailabilityEventData
{ 
	class UBBQInteractionEventComponent*               InteractionEventComponent;                                  // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_7[0x10];                                      // 0x0008   (0x0010)  MISSED
};

/// Struct /Script/BBQGameSession.InteractionAvailabilityData
/// Size: 0x0128 (296 bytes) (0x000000 - 0x000128) align 8 MaxSize: 0x0128
struct FInteractionAvailabilityData
{ 
	class UBBQInteractionComponent*                    InteractionComponent;                                       // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0008   (0x0028)  MISSED
	TMap<class UBBQInteractionEventComponent*, FInteractionAvailabilityEventData> EventAvailabiltyData;            // 0x0030   (0x0050)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0080   (0x0008)  MISSED
	TMap<uint32_t, class UBBQInteractionEventComponent*> InteractionMethodToAvailableEventMap_Press;               // 0x0088   (0x0050)  
	TMap<uint32_t, class UBBQInteractionEventComponent*> InteractionMethodToAvailableEventMap_Hold;                // 0x00D8   (0x0050)  
};

/// Struct /Script/BBQGameSession.LadderInteractionInfo
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FLadderInteractionInfo
{ 
	class ABBQGameSessionCharacterAnimated*            InteractingCharacter;                                       // 0x0000   (0x0008)  
	ELadderInteractionState                            TargetState;                                                // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.BBQLadderEnterTopCorrectionInfo
/// Size: 0x0014 (20 bytes) (0x000000 - 0x000014) align 4 MaxSize: 0x0014
struct FBBQLadderEnterTopCorrectionInfo
{ 
	FName                                              CharacterName;                                              // 0x0000   (0x0008)  
	bool                                               bAllMaleVictims;                                            // 0x0008   (0x0001)  
	bool                                               bAllFemaleVictims;                                          // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x000A   (0x0002)  MISSED
	float                                              ZOffsetCorrection;                                          // 0x000C   (0x0004)  
	float                                              TimeTaken;                                                  // 0x0010   (0x0004)  
};

/// Struct /Script/BBQGameSession.BBQLevelSequenceCollisionDataSample
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 4 MaxSize: 0x0018
struct FBBQLevelSequenceCollisionDataSample
{ 
	FVector                                            TraceStartPoint;                                            // 0x0000   (0x000C)  
	FVector                                            TraceEndPoint;                                              // 0x000C   (0x000C)  
};

/// Struct /Script/BBQGameSession.BBQLockLocations
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 MaxSize: 0x0018
struct FBBQLockLocations
{ 
	class USceneComponent*                             Front;                                                      // 0x0000   (0x0008)  
	class USceneComponent*                             Rear;                                                       // 0x0008   (0x0008)  
	class USceneComponent*                             Frame;                                                      // 0x0010   (0x0008)  
};

/// Struct /Script/BBQGameSession.MeleeHitReactionAnimSlotSet
/// Size: 0x0004 (4 bytes) (0x000000 - 0x000004) align 1 MaxSize: 0x0004
struct FMeleeHitReactionAnimSlotSet
{ 
	EBBQCombatAnimSlot                                 Default;                                                    // 0x0000   (0x0001)  
	EBBQCombatAnimSlot                                 Stationary;                                                 // 0x0001   (0x0001)  
	EBBQCombatAnimSlot                                 Crouched;                                                   // 0x0002   (0x0001)  
	EBBQCombatAnimSlot                                 Stationary_Crouched;                                        // 0x0003   (0x0001)  
};

/// Struct /Script/BBQGameSession.MeleeHitReaction
/// Size: 0x0090 (144 bytes) (0x000000 - 0x000090) align 8 MaxSize: 0x0090
struct FMeleeHitReaction
{ 
	FGameplayTagContainer                              DamageTypeTriggers;                                         // 0x0000   (0x0020)  
	TMap<EBBQHitReactionDirection, FMeleeHitReactionAnimSlotSet> HitReactionAnimSlotSets;                          // 0x0020   (0x0050)  
	float                                              MovingMontageSpeedThreshold;                                // 0x0070   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0074   (0x0004)  MISSED
	class UAkAudioEvent*                               OnHitAkEvent;                                               // 0x0078   (0x0008)  
	class UAkAudioEvent*                               OnHitAkEvent3P;                                             // 0x0080   (0x0008)  
	bool                                               bCanBreakOutOfStationary;                                   // 0x0088   (0x0001)  
	unsigned char                                      UnknownData01_7[0x7];                                       // 0x0089   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.BBQMovementOscillator
/// Size: 0x002C (44 bytes) (0x000000 - 0x00002C) align 4 MaxSize: 0x002C
struct FBBQMovementOscillator
{ 
	FFOscillator                                       ForwardMovementOscillator;                                  // 0x0000   (0x000C)  
	FFOscillator                                       SideMovementOscillator;                                     // 0x000C   (0x000C)  
	float                                              BlendInTime;                                                // 0x0018   (0x0004)  
	float                                              BlendOutTime;                                               // 0x001C   (0x0004)  
	float                                              DurationMin;                                                // 0x0020   (0x0004)  
	float                                              DurationMax;                                                // 0x0024   (0x0004)  
	bool                                               bChangeStance;                                              // 0x0028   (0x0001)  
	BBQStance                                          StanceOnBegin;                                              // 0x0029   (0x0001)  
	BBQStance                                          StanceOnEnd;                                                // 0x002A   (0x0001)  
	unsigned char                                      UnknownData00_7[0x1];                                       // 0x002B   (0x0001)  MISSED
};

/// Struct /Script/BBQGameSession.BBQMultiplayerMinigameInfo
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 4 MaxSize: 0x000C
struct FBBQMultiplayerMinigameInfo
{ 
	TWeakObjectPtr<class ABBQGameSessionCharacter*>    OpponentCharacter;                                          // 0x0000   (0x0008)  
	float                                              OpponentPoints;                                             // 0x0008   (0x0004)  
};

/// Struct /Script/BBQGameSession.NetSyncedDoorAnimation
/// Size: 0x0034 (52 bytes) (0x000000 - 0x000034) align 4 MaxSize: 0x0034
struct FNetSyncedDoorAnimation
{ 
	float                                              Duration;                                                   // 0x0000   (0x0004)  
	FRotator                                           StartRotator;                                               // 0x0004   (0x000C)  
	FRotator                                           EndRotator;                                                 // 0x0010   (0x000C)  
	FVector                                            StartOffset;                                                // 0x001C   (0x000C)  
	FVector                                            EndOffset;                                                  // 0x0028   (0x000C)  
};

/// Struct /Script/BBQGameSession.PlayerInNoiseMakerInfo
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FPlayerInNoiseMakerInfo
{ 
	class ABBQGameSessionCharacter*                    Character;                                                  // 0x0000   (0x0008)  
	char                                               TriggerReason;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.OutlineInstance
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 MaxSize: 0x0018
struct FOutlineInstance
{ 
	FName                                              InstanceName;                                               // 0x0000   (0x0008)  
	TArray<float>                                      TimeByColorIndex;                                           // 0x0008   (0x0010)  
};

/// Struct /Script/BBQGameSession.BBQPickupDispenserState
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 4 MaxSize: 0x000C
struct FBBQPickupDispenserState
{ 
	TWeakObjectPtr<class ABBQGameSessionCharacter*>    CurrentEventInstigator;                                     // 0x0000   (0x0008)  
	EBBQAnimSlot                                       GrabPickupAnimSlot;                                         // 0x0008   (0x0001)  
	EEndMinigameReason                                 MinigameEndReason;                                          // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_7[0x2];                                       // 0x000A   (0x0002)  MISSED
};

/// Struct /Script/BBQGameSession.PickupZoneSpawnData
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 4 MaxSize: 0x000C
struct FPickupZoneSpawnData
{ 
	FGameplayTag                                       PickupDispenserType;                                        // 0x0000   (0x0008)  
	int32_t                                            SpawnAmount;                                                // 0x0008   (0x0004)  
};

/// Struct /Script/BBQGameSession.PickupZoneData
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 MaxSize: 0x0018
struct FPickupZoneData
{ 
	FGameplayTag                                       Zone;                                                       // 0x0000   (0x0008)  
	TArray<FPickupZoneSpawnData>                       PickupSpawnData;                                            // 0x0008   (0x0010)  
};

/// Struct /Script/BBQGameSession.BBQPickupSpawnerData
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 4 MaxSize: 0x000C
struct FBBQPickupSpawnerData
{ 
	FGameplayTag                                       PickupZone;                                                 // 0x0000   (0x0008)  
	float                                              Probability;                                                // 0x0008   (0x0004)  
};

/// Struct /Script/BBQGameSession.PipeValveInteractionInfo
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FPipeValveInteractionInfo
{ 
	class ABBQGameSessionCharacterAnimated*            InteractingCharacter;                                       // 0x0000   (0x0008)  
	EPipeValveState                                    TargetState;                                                // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.PolicePhoneInteractionState
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FPolicePhoneInteractionState
{ 
	class ABBQGameSessionCharacterAnimated*            InteractingCharacter;                                       // 0x0000   (0x0008)  
	EPolicePhoneAction                                 Action;                                                     // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.QuadrantInfo
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 MaxSize: 0x0020
struct FQuadrantInfo
{ 
	float                                              StartAngle;                                                 // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	class USceneComponent*                             AnimationLocator;                                           // 0x0008   (0x0008)  
	bool                                               bIsActive;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	class UClass*                                      SneakAttackBehaviour;                                       // 0x0018   (0x0008)  
};

/// Struct /Script/BBQGameSession.SneakAttackInfo
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FSneakAttackInfo
{ 
	class ABBQGameSessionCharacterAnimated*            AttackingPlayer;                                            // 0x0000   (0x0008)  
	int32_t                                            QuadrantUsed;                                               // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/BBQGameSession.BBQSpyAbilityMontageData
/// Size: 0x00C0 (192 bytes) (0x000000 - 0x0000C0) align 8 MaxSize: 0x00C0
struct FBBQSpyAbilityMontageData
{ 
	EBBQAnimSlot                                       AnimSlot;                                                   // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	FGameplayVariableFloat                             Duration;                                                   // 0x0008   (0x0058)  
	FGameplayTagContainer                              RequiredTags;                                               // 0x0060   (0x0020)  
	FGameplayTagContainer                              ForbiddenTags;                                              // 0x0080   (0x0020)  
	FGameplayTagContainer                              MontageDurationTags;                                        // 0x00A0   (0x0020)  
};

/// Struct /Script/BBQGameSession.BBQStudyAndTamperKnowledgePoints
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 4 MaxSize: 0x000C
struct FBBQStudyAndTamperKnowledgePoints
{ 
	FName                                              Group;                                                      // 0x0000   (0x0008)  
	int32_t                                            Points;                                                     // 0x0008   (0x0004)  
};

/// Struct /Script/BBQGameSession.BBQStudyAndTamperInspection
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FBBQStudyAndTamperInspection : FTableRowBase
{ 
	FName                                              Group;                                                      // 0x0008   (0x0008)  
	int32_t                                            Points;                                                     // 0x0010   (0x0004)  
	bool                                               bCanBeTampered;                                             // 0x0014   (0x0001)  
	unsigned char                                      UnknownData00_7[0x3];                                       // 0x0015   (0x0003)  MISSED
};

/// Struct /Script/BBQGameSession.AttributeTrigger
/// Size: 0x0078 (120 bytes) (0x000000 - 0x000078) align 8 MaxSize: 0x0078
struct FAttributeTrigger
{ 
	FGameplayAttribute                                 TriggerAttribute;                                           // 0x0000   (0x0038)  
	FGameplayAttribute                                 TriggerAttributeMax;                                        // 0x0038   (0x0038)  
	float                                              AttributeTriggerValue;                                      // 0x0070   (0x0004)  
	EAttributeComparison                               Comparison;                                                 // 0x0074   (0x0001)  
	unsigned char                                      UnknownData00_7[0x3];                                       // 0x0075   (0x0003)  MISSED
};

/// Struct /Script/BBQGameSession.PlayerInTriggerAreaInfo
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FPlayerInTriggerAreaInfo
{ 
	class ABBQGameSessionCharacter*                    Character;                                                  // 0x0000   (0x0008)  
	bool                                               bTriggered;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.BBQFootprintTrail
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 MaxSize: 0x0020
struct FBBQFootprintTrail
{ 
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x0000   (0x0004)  MISSED
	TWeakObjectPtr<class ABBQGameSessionCharacter*>    OwnerCharacter;                                             // 0x0004   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<FBBQFootprint>                              Footprints;                                                 // 0x0010   (0x0010)  
};

/// Struct /Script/BBQGameSession.ActiveSpectatorState
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FActiveSpectatorState
{ 
	TWeakObjectPtr<class ABBQPlayerState*>             PlayerState;                                                // 0x0000   (0x0008)  
	class AActor*                                      ViewTarget;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/BBQGameSession.SpectatorLevelSequenceInfo
/// Size: 0x0028 (40 bytes) (0x000000 - 0x000028) align 8 MaxSize: 0x0028
struct FSpectatorLevelSequenceInfo
{ 
	class ABBQPlayerState*                             OwningPlayer;                                               // 0x0000   (0x0008)  
	class ULevelSequencePlayer*                        LevelSequencePlayer;                                        // 0x0008   (0x0008)  
	unsigned char                                      UnknownData00_7[0x18];                                      // 0x0010   (0x0018)  MISSED
};

/// Struct /Script/BBQGameSession.BBQWindowJumpData
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 4 MaxSize: 0x0018
struct FBBQWindowJumpData
{ 
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/BBQGameSession.ReplicatedOutlineInfo
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 MaxSize: 0x0020
struct FReplicatedOutlineInfo
{ 
	FOutlineInstance                                   OutlineInstance;                                            // 0x0000   (0x0018)  
	float                                              MatchTimeUpdated;                                           // 0x0018   (0x0004)  
	bool                                               bVisibleToSpectators;                                       // 0x001C   (0x0001)  
	unsigned char                                      UnknownData00_7[0x3];                                       // 0x001D   (0x0003)  MISSED
};

/// Struct /Script/BBQGameSession.ReplicatedActorOutlineInfo
/// Size: 0x0028 (40 bytes) (0x00000C - 0x000028) align 8 MaxSize: 0x0028
struct FReplicatedActorOutlineInfo : FFastArraySerializerItem
{ 
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x000C   (0x0004)  MISSED
	class AActor*                                      HighlightedActor;                                           // 0x0010   (0x0008)  
	TArray<FReplicatedOutlineInfo>                     OutlineInfo;                                                // 0x0018   (0x0010)  
};

/// Struct /Script/BBQGameSession.PlayerOutlineContainer
/// Size: 0x0120 (288 bytes) (0x000108 - 0x000120) align 8 MaxSize: 0x0120
struct FPlayerOutlineContainer : FFastArraySerializer
{ 
	TArray<FReplicatedActorOutlineInfo>                OutlineInfoArr;                                             // 0x0108   (0x0010)  
	class ABBQGameSessionPlayerState*                  OwnerPlayerState;                                           // 0x0118   (0x0008)  
};

/// Struct /Script/BBQGameSession.DecalSettingBase
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 8 MaxSize: 0x0050
struct FDecalSettingBase
{ 
	class UMaterialInterface*                          DecalMaterial;                                              // 0x0000   (0x0008)  
	FVector                                            DecalSize;                                                  // 0x0008   (0x000C)  
	float                                              DecalLifetime;                                              // 0x0014   (0x0004)  
	float                                              DecalFadeDuration;                                          // 0x0018   (0x0004)  
	FVector2D                                          RandomDeltaRoll;                                            // 0x001C   (0x0008)  
	FBox                                               DecalScaleRange;                                            // 0x0024   (0x001C)  
	FName                                              SubUVLimitsParam;                                           // 0x0040   (0x0008)  
	FName                                              SubUVSelectionParam;                                        // 0x0048   (0x0008)  
};

/// Struct /Script/BBQGameSession.BloodSplashDecalSettings
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 8 MaxSize: 0x0050
struct FBloodSplashDecalSettings
{ 
	TArray<class UMaterialInterface*>                  SplashDecalMaterialsFloor;                                  // 0x0000   (0x0010)  
	TArray<class UMaterialInterface*>                  SplashDecalMaterialsWall;                                   // 0x0010   (0x0010)  
	FVector                                            BaseDecalSizeFloor;                                         // 0x0020   (0x000C)  
	FVector                                            BaseDecalSizeWall;                                          // 0x002C   (0x000C)  
	float                                              FloorDecalLifetime;                                         // 0x0038   (0x0004)  
	float                                              FloorDecalFadeDuration;                                     // 0x003C   (0x0004)  
	float                                              WallDecalLifetime;                                          // 0x0040   (0x0004)  
	FVector2D                                          DecalScaleRange;                                            // 0x0044   (0x0008)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Struct /Script/BBQGameSession.PostHitSplashSettings
/// Size: 0x0068 (104 bytes) (0x000000 - 0x000068) align 8 MaxSize: 0x0068
struct FPostHitSplashSettings
{ 
	EBBQAttackType                                     AttackerSplashType;                                         // 0x0000   (0x0001)  
	EBBQAttackType                                     BystanderSplashType;                                        // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0002   (0x0006)  MISSED
	FBloodSplashDecalSettings                          EnvironmentBloodSplashSettings;                             // 0x0008   (0x0050)  
	FVector2D                                          SplashRandomPitchYawRange;                                  // 0x0058   (0x0008)  
	float                                              SplashDistance;                                             // 0x0060   (0x0004)  
	unsigned char                                      UnknownData01_7[0x4];                                       // 0x0064   (0x0004)  MISSED
};

/// Struct /Script/BBQGameSession.VisualDamageInteractionParam
/// Size: 0x00D8 (216 bytes) (0x000000 - 0x0000D8) align 8 MaxSize: 0x00D8
struct FVisualDamageInteractionParam
{ 
	EBBQAttackType                                     AttackType;                                                 // 0x0000   (0x0001)  
	TEnumAsByte<EPhysicalSurface>                      ObjectSurfaceType;                                          // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0002   (0x0006)  MISSED
	class UNiagaraSystem*                              ParticleEffect;                                             // 0x0008   (0x0008)  
	bool                                               bIsParticleAttached;                                        // 0x0010   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	FDecalSettingBase                                  DamageDecalSettings;                                        // 0x0018   (0x0050)  
	class UAkAudioEvent*                               ImpactSound;                                                // 0x0068   (0x0008)  
	FPostHitSplashSettings                             SplashSettings;                                             // 0x0070   (0x0068)  
};

/// Struct /Script/BBQGameSession.DyanmicMaterialContainer
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 MaxSize: 0x0020
struct FDyanmicMaterialContainer
{ 
	class UMaterialInstanceDynamic*                    DynamicMaterial;                                            // 0x0000   (0x0008)  
	class UMaterialInterface*                          OriginalMeshMaterial;                                       // 0x0008   (0x0008)  
	int32_t                                            StaticMaterialIndexOnMesh;                                  // 0x0010   (0x0004)  
	bool                                               bSupportsErode;                                             // 0x0014   (0x0001)  
	bool                                               bSupportsSwitchableHeadTrauma;                              // 0x0015   (0x0001)  
	bool                                               bIsInvisibleMat;                                            // 0x0016   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x0017   (0x0001)  MISSED
	int32_t                                            ErodeProgressParamIndex;                                    // 0x0018   (0x0004)  
	int32_t                                            HeadTraumaParamIndex;                                       // 0x001C   (0x0004)  
};

/// Struct /Script/BBQGameSession.BBQFamilyBondActivity
/// Size: 0x0080 (128 bytes) (0x000008 - 0x000080) align 8 MaxSize: 0x0080
struct FBBQFamilyBondActivity : FTableRowBase
{ 
	FText                                              Event_Name;                                                 // 0x0008   (0x0018)  
	int32_t                                            Points;                                                     // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	FGameplayVariable                                  OffsetGameplayVariable;                                     // 0x0028   (0x0050)  
	bool                                               bIsConsumeActivity;                                         // 0x0078   (0x0001)  
	bool                                               bCanEffectWhileGranpaInactive;                              // 0x0079   (0x0001)  
	unsigned char                                      UnknownData01_7[0x6];                                       // 0x007A   (0x0006)  MISSED
};

/// Struct /Script/BBQGameSession.BBQBloodTrailDefinition
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FBBQBloodTrailDefinition : FTableRowBase
{ 
	float                                              StartDelay;                                                 // 0x0008   (0x0004)  
	float                                              TrailDuration;                                              // 0x000C   (0x0004)  
	float                                              TrailSpawnInterval;                                         // 0x0010   (0x0004)  
	float                                              IncreaseInBleedoutMultiplier;                               // 0x0014   (0x0004)  
};

/// Struct /Script/BBQGameSession.CommEventData
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 MaxSize: 0x0020
struct FCommEventData
{ 
	FGameplayTag                                       EventTag;                                                   // 0x0000   (0x0008)  
	class AActor*                                      Instigator;                                                 // 0x0008   (0x0008)  
	class AActor*                                      Addressee;                                                  // 0x0010   (0x0008)  
	FName                                              EventId;                                                    // 0x0018   (0x0008)  
};

/// Struct /Script/BBQGameSession.MeleeAttackMontageSet
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 8 MaxSize: 0x0008
struct FMeleeAttackMontageSet
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/BBQGameSession.BBQPairedAnimationRole
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 16 MaxSize: 0x0050
struct FBBQPairedAnimationRole
{ 
	class UAnimMontage*                                AnimationMontage;                                           // 0x0000   (0x0008)  
	class ULevelSequence*                              LevelSequence;                                              // 0x0008   (0x0008)  
	EBBQPairedAnimRoleTransformRule                    AnimationTransformRule;                                     // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0011   (0x000F)  MISSED
	FTransform                                         AdditionalOffset;                                           // 0x0020   (0x0030)  
};

/// Struct /Script/BBQGameSession.BBQRotationSettings
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 4 MaxSize: 0x000C
struct FBBQRotationSettings
{ 
	BBQRotationMode                                    Mode;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              TargetInterpSpeed;                                          // 0x0004   (0x0004)  
	float                                              ActorInterpSpeed;                                           // 0x0008   (0x0004)  
};

/// Struct /Script/BBQGameSession.BBQCloseEncounterDialogDefinition
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 4 MaxSize: 0x0010
struct FBBQCloseEncounterDialogDefinition
{ 
	FGameplayTag                                       CommEventTag;                                               // 0x0000   (0x0008)  
	bool                                               bPlayOnBoth;                                                // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              PlayOnLeaderChance;                                         // 0x000C   (0x0004)  
};

/// Struct /Script/BBQGameSession.BBQCloseEncounterDefinition
/// Size: 0x01F0 (496 bytes) (0x000008 - 0x0001F0) align 8 MaxSize: 0x01F0
struct FBBQCloseEncounterDefinition : FTableRowBase
{ 
	TMap<ECloseEncounterState, EBBQPairedAnimSlot>     PairedAnimSlotMap;                                          // 0x0008   (0x0050)  
	TMap<ECloseEncounterState, FGameplayTag>           GameplayTagMap;                                             // 0x0058   (0x0050)  
	FGameplayTagContainer                              TagsWhilstAttacking;                                        // 0x00A8   (0x0020)  
	FGameplayTagContainer                              TagsWhilstDefending;                                        // 0x00C8   (0x0020)  
	FGameplayTagContainer                              CancelAbilitiesWithTag;                                     // 0x00E8   (0x0020)  
	class UClass*                                      AttackerWinEffect;                                          // 0x0108   (0x0008)  
	class UClass*                                      AttackerLoseEffect;                                         // 0x0110   (0x0008)  
	class UClass*                                      AttackerLoseDueToInterruptEffect;                           // 0x0118   (0x0008)  
	class UClass*                                      DefenderWinEffect;                                          // 0x0120   (0x0008)  
	class UClass*                                      DefenderLoseEffect;                                         // 0x0128   (0x0008)  
	class UClass*                                      DefenderAreaEffect;                                         // 0x0130   (0x0008)  
	float                                              DefenderAreaEffectRadius;                                   // 0x0138   (0x0004)  
	float                                              DefenderIgnoreCollisionTime;                                // 0x013C   (0x0004)  
	ECloseEncounterWinnerSelection                     WinnerSelection;                                            // 0x0140   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0141   (0x0007)  MISSED
	class UClass*                                      MinigameClass;                                              // 0x0148   (0x0008)  
	bool                                               bSpawnSinglePlayerMinigameForDefender;                      // 0x0150   (0x0001)  
	bool                                               bEndEarlyWhenDefenderDone;                                  // 0x0151   (0x0001)  
	bool                                               bAttemptExecution;                                          // 0x0152   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1];                                       // 0x0153   (0x0001)  MISSED
	float                                              AttackerDamage;                                             // 0x0154   (0x0004)  
	float                                              DefenderDamage;                                             // 0x0158   (0x0004)  
	float                                              ClearanceAreaSize;                                          // 0x015C   (0x0004)  
	bool                                               bAutoRotateAttacker;                                        // 0x0160   (0x0001)  
	bool                                               bAutoRotateDefender;                                        // 0x0161   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x0162   (0x0002)  MISSED
	FName                                              AttackerCameraState;                                        // 0x0164   (0x0008)  
	FName                                              MainDefenderCameraState;                                    // 0x016C   (0x0008)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0174   (0x0004)  MISSED
	class UAkAudioEvent*                               CloseEncounterActiveEvent;                                  // 0x0178   (0x0008)  
	class UAkAudioEvent*                               AttackerWinEvent;                                           // 0x0180   (0x0008)  
	class UAkAudioEvent*                               DefenderWinEvent;                                           // 0x0188   (0x0008)  
	class UAkRtpc*                                     MinigameActiveRTPC;                                         // 0x0190   (0x0008)  
	class UAkRtpc*                                     MinigameProgressRTPC;                                       // 0x0198   (0x0008)  
	TMap<ECloseEncounterState, FBBQCloseEncounterDialogDefinition> CloseEncounterStateDialogMap;                   // 0x01A0   (0x0050)  
};

/// Struct /Script/BBQGameSession.CommRuntimeState
/// Size: 0x0038 (56 bytes) (0x000000 - 0x000038) align 8 MaxSize: 0x0038
struct FCommRuntimeState
{ 
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x0000   (0x0038)  MISSED
};

/// Struct /Script/BBQGameSession.DialogRow
/// Size: 0x0050 (80 bytes) (0x000008 - 0x000050) align 8 MaxSize: 0x0050
struct FDialogRow : FTableRowBase
{ 
	FName                                              CommId;                                                     // 0x0008   (0x0008)  
	FString                                            TextLocKey;                                                 // 0x0010   (0x0010)  
	FString                                            CharacterName;                                              // 0x0020   (0x0010)  
	FString                                            AddresseeName;                                              // 0x0030   (0x0010)  
	EBBQEmotion                                        FacialAnim;                                                 // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0041   (0x0003)  MISSED
	float                                              DurationOverride;                                           // 0x0044   (0x0004)  
	float                                              BlendOverride;                                              // 0x0048   (0x0004)  
	unsigned char                                      UnknownData01_7[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Struct /Script/BBQGameSession.CommRow
/// Size: 0x0070 (112 bytes) (0x000008 - 0x000070) align 8 MaxSize: 0x0070
struct FCommRow : FTableRowBase
{ 
	FString                                            SubCommId;                                                  // 0x0008   (0x0010)  
	FGameplayTagContainer                              RequiredTags;                                               // 0x0018   (0x0020)  
	FGameplayTagContainer                              BlockedTags;                                                // 0x0038   (0x0020)  
	float                                              Probability;                                                // 0x0058   (0x0004)  
	ECommBroadcastRule                                 FamilyBroadcastRule;                                        // 0x005C   (0x0001)  
	ECommBroadcastRule                                 VictimBroadcastRule;                                        // 0x005D   (0x0001)  
	ECommVocalisationType                              VocalisationType;                                           // 0x005E   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x005F   (0x0001)  MISSED
	float                                              CharacterCooldown;                                          // 0x0060   (0x0004)  
	float                                              GlobalCooldown;                                             // 0x0064   (0x0004)  
	float                                              MaxRange;                                                   // 0x0068   (0x0004)  
	char                                               Priority;                                                   // 0x006C   (0x0001)  
	bool                                               AllowInDanger;                                              // 0x006D   (0x0001)  
	bool                                               AllowIfPoolExhausted;                                       // 0x006E   (0x0001)  
	bool                                               ShuffleLines;                                               // 0x006F   (0x0001)  
};

/// Struct /Script/BBQGameSession.FootstepData
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 4 MaxSize: 0x0008
struct FFootstepData
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/BBQGameSession.BBQGameplayAbilityTargetData_ClueInfo
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FBBQGameplayAbilityTargetData_ClueInfo : FGameplayAbilityTargetData
{ 
	TArray<FBBQGameplayAbilityTargetingClueInfo>       TargetClueArray;                                            // 0x0008   (0x0010)  
};

/// Struct /Script/BBQGameSession.BBQGameplayAbilityTargetData_SingleLocationInfo
/// Size: 0x0080 (128 bytes) (0x000008 - 0x000080) align 16 MaxSize: 0x0080
struct FBBQGameplayAbilityTargetData_SingleLocationInfo : FGameplayAbilityTargetData
{ 
	unsigned char                                      UnknownData00_8[0x8];                                       // 0x0008   (0x0008)  MISSED
	FGameplayAbilityTargetingLocationInfo              TargetLocation;                                             // 0x0010   (0x0070)  
};

/// Struct /Script/BBQGameSession.BBQGameplayAbilityTargetData_CookListen
/// Size: 0x0020 (32 bytes) (0x000008 - 0x000020) align 8 MaxSize: 0x0020
struct FBBQGameplayAbilityTargetData_CookListen : FGameplayAbilityTargetData
{ 
	float                                              DistanceToOwnerAvatar;                                      // 0x0008   (0x0004)  
	float                                              HoldTime;                                                   // 0x000C   (0x0004)  
	SDK_UNDEFINED(16,479) /* TArray<TWeakObjectPtr<AActor*>> */ __um(TargetActorArray);                            // 0x0010   (0x0010)  
};

/// Struct /Script/BBQGameSession.BBQGameplayActivityEvent
/// Size: 0x0098 (152 bytes) (0x000008 - 0x000098) align 8 MaxSize: 0x0098
struct FBBQGameplayActivityEvent : FTableRowBase
{ 
	FText                                              EventName;                                                  // 0x0008   (0x0018)  
	FText                                              HUDMessage;                                                 // 0x0020   (0x0018)  
	TWeakObjectPtr<class UTexture2D*>                  EventIcon;                                                  // 0x0038   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0040   (0x0020)  MISSED
	int64_t                                            ExperiencePoints;                                           // 0x0060   (0x0008)  
	EGameplayActivityEventReceiver                     ExperiencePointsBeneficiary;                                // 0x0068   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0069   (0x0003)  MISSED
	int32_t                                            TimesPointsCanBeReceived;                                   // 0x006C   (0x0004)  
	EGameplayActivityEventReceiver                     EventReceiver;                                              // 0x0070   (0x0001)  
	bool                                               bAllowSpectators;                                           // 0x0071   (0x0001)  
	EBBQNotificationType                               NotificationType;                                           // 0x0072   (0x0001)  
	unsigned char                                      UnknownData02_6[0x5];                                       // 0x0073   (0x0005)  MISSED
	class UClass*                                      NotificationWidget;                                         // 0x0078   (0x0008)  
	bool                                               bPlaySound;                                                 // 0x0080   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0081   (0x0007)  MISSED
	class UAkAudioEvent*                               NotificationSound;                                          // 0x0088   (0x0008)  
	int32_t                                            NotificationPriority;                                       // 0x0090   (0x0004)  
	unsigned char                                      UnknownData04_7[0x4];                                       // 0x0094   (0x0004)  MISSED
};

/// Struct /Script/BBQGameSession.BBQNotificationData
/// Size: 0x0038 (56 bytes) (0x000000 - 0x000038) align 8 MaxSize: 0x0038
struct FBBQNotificationData
{ 
	class ABBQPlayerState*                             PlayerState;                                                // 0x0000   (0x0008)  
	TArray<FText>                                      NotificationTexts;                                          // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,480) /* TArray<TWeakObjectPtr<UTexture2D*>> */ __um(NotificationIcons);                       // 0x0018   (0x0010)  
	TArray<EUserPlatform>                              NotificationDisplayedPlatforms;                             // 0x0028   (0x0010)  
};

/// Struct /Script/BBQGameSession.BBQDynamicMontageParams
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 MaxSize: 0x0018
struct FBBQDynamicMontageParams
{ 
	class UAnimSequenceBase*                           Animation;                                                  // 0x0000   (0x0008)  
	float                                              BlendInTime;                                                // 0x0008   (0x0004)  
	float                                              BlendOutTime;                                               // 0x000C   (0x0004)  
	float                                              PlayRate;                                                   // 0x0010   (0x0004)  
	float                                              StartTime;                                                  // 0x0014   (0x0004)  
};

/// Struct /Script/BBQGameSession.BBQLeanAmount
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 4 MaxSize: 0x0008
struct FBBQLeanAmount
{ 
	float                                              LR;                                                         // 0x0000   (0x0004)  
	float                                              FB;                                                         // 0x0004   (0x0004)  
};

/// Struct /Script/BBQGameSession.BBQVelocityBlend
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 4 MaxSize: 0x0010
struct FBBQVelocityBlend
{ 
	float                                              F;                                                          // 0x0000   (0x0004)  
	float                                              B;                                                          // 0x0004   (0x0004)  
	float                                              L;                                                          // 0x0008   (0x0004)  
	float                                              R;                                                          // 0x000C   (0x0004)  
};

/// Struct /Script/BBQGameSession.BBQComponentAndTransform
/// Size: 0x0040 (64 bytes) (0x000000 - 0x000040) align 16 MaxSize: 0x0040
struct FBBQComponentAndTransform
{ 
	FTransform                                         Transform;                                                  // 0x0000   (0x0030)  
	class UPrimitiveComponent*                         Component;                                                  // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Struct /Script/BBQGameSession.BBQHarvestAnimSections
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 8 MaxSize: 0x0050
struct FBBQHarvestAnimSections
{ 
	TMap<EHarvestOutcome, FName>                       SectionNames;                                               // 0x0000   (0x0050)  
};

/// Struct /Script/BBQGameSession.HidingPlayerInputState
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 4 MaxSize: 0x0010
struct FHidingPlayerInputState
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/BBQGameSession.InteractionEventTestFlags
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 4 MaxSize: 0x000C
struct FInteractionEventTestFlags
{ 
	unsigned char                                      UnknownData00_2[0xC];                                       // 0x0000   (0x000C)  MISSED
};

/// Struct /Script/BBQGameSession.BBQInteractionEventList
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 MaxSize: 0x0020
struct FBBQInteractionEventList
{ 
	TArray<class UBBQInteractionEventComponent*>       PressEvents;                                                // 0x0000   (0x0010)  
	TArray<class UBBQInteractionEventComponent*>       HoldEvents;                                                 // 0x0010   (0x0010)  
};

/// Struct /Script/BBQGameSession.BBQLockAnimInfo
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 MaxSize: 0x0018
struct FBBQLockAnimInfo
{ 
	class UAnimMontage*                                BeginMontage;                                               // 0x0000   (0x0008)  
	class UAnimMontage*                                LoopMontage;                                                // 0x0008   (0x0008)  
	class UAnimMontage*                                EndMontage;                                                 // 0x0010   (0x0008)  
};

/// Struct /Script/BBQGameSession.LockVisualState
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 MaxSize: 0x0010
struct FLockVisualState
{ 
	class UStaticMesh*                                 StaticMesh;                                                 // 0x0000   (0x0008)  
	class UMaterial*                                   Material;                                                   // 0x0008   (0x0008)  
};

/// Struct /Script/BBQGameSession.BBQMinigameInputState
/// Size: 0x0028 (40 bytes) (0x000000 - 0x000028) align 4 MaxSize: 0x0028
struct FBBQMinigameInputState
{ 
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x0000   (0x0008)  MISSED
	bool                                               bAction;                                                    // 0x0008   (0x0001)  
	bool                                               bActionHold;                                                // 0x0009   (0x0001)  
	bool                                               bGenericAction1;                                            // 0x000A   (0x0001)  
	bool                                               bCancelPressed;                                             // 0x000B   (0x0001)  
	bool                                               bPrimaryAbilityKeyPressed;                                  // 0x000C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x000D   (0x0003)  MISSED
	float                                              XAxisLeftInput;                                             // 0x0010   (0x0004)  
	float                                              YAxisLeftInput;                                             // 0x0014   (0x0004)  
	float                                              XAxisRightInput;                                            // 0x0018   (0x0004)  
	float                                              YAxisRightInput;                                            // 0x001C   (0x0004)  
	float                                              ActionTimestamp;                                            // 0x0020   (0x0004)  
	unsigned char                                      UnknownData02_7[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/BBQGameSession.BBQPickupSpawnerMarkerDescription
/// Size: 0x0040 (64 bytes) (0x000000 - 0x000040) align 16 MaxSize: 0x0040
struct FBBQPickupSpawnerMarkerDescription
{ 
	unsigned char                                      UnknownData00_2[0x40];                                      // 0x0000   (0x0040)  MISSED
};

/// Struct /Script/BBQGameSession.BBQPointOfInterestDefinition
/// Size: 0x0090 (144 bytes) (0x000008 - 0x000090) align 8 MaxSize: 0x0090
struct FBBQPointOfInterestDefinition : FTableRowBase
{ 
	FDataTableRowHandle                                Category;                                                   // 0x0008   (0x0010)  
	ETeamID                                            RequiredTeam;                                               // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
	FGameplayTagContainer                              RequiredAnyCharacterTags;                                   // 0x0020   (0x0020)  
	FGameplayTagContainer                              RequiredAllCharacterTags;                                   // 0x0040   (0x0020)  
	FGameplayTagContainer                              ForbiddenCharacterTags;                                     // 0x0060   (0x0020)  
	float                                              Proximity;                                                  // 0x0080   (0x0004)  
	float                                              LookAtDurationMin;                                          // 0x0084   (0x0004)  
	float                                              LookAtDurationMax;                                          // 0x0088   (0x0004)  
	bool                                               bInfiniteLookAtDuration;                                    // 0x008C   (0x0001)  
	bool                                               bCheckLineOfSight;                                          // 0x008D   (0x0001)  
	unsigned char                                      UnknownData01_7[0x2];                                       // 0x008E   (0x0002)  MISSED
};

/// Struct /Script/BBQGameSession.BBQPointOfInterestCategory
/// Size: 0x0018 (24 bytes) (0x000008 - 0x000018) align 8 MaxSize: 0x0018
struct FBBQPointOfInterestCategory : FTableRowBase
{ 
	int32_t                                            Priority;                                                   // 0x0008   (0x0004)  
	float                                              LookAtCooldownMin;                                          // 0x000C   (0x0004)  
	float                                              LookAtCooldownMax;                                          // 0x0010   (0x0004)  
	float                                              ProximityTolerance;                                         // 0x0014   (0x0004)  
};

/// Struct /Script/BBQGameSession.VisualDamageInstigatorSettings
/// Size: 0x0060 (96 bytes) (0x000000 - 0x000060) align 8 MaxSize: 0x0060
struct FVisualDamageInstigatorSettings
{ 
	EBBQAttackType                                     AttackTypeToUse;                                            // 0x0000   (0x0001)  
	bool                                               bInstigateOnOwningClient;                                   // 0x0001   (0x0001)  
	bool                                               bVectorsInLocalSpace;                                       // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x0003   (0x0001)  MISSED
	FVector_NetQuantize100                             HitLocation;                                                // 0x0004   (0x000C)  
	FVector_NetQuantizeNormal                          HitNormal;                                                  // 0x0010   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	class AActor*                                      HitActor;                                                   // 0x0020   (0x0008)  
	class AActor*                                      Attacker;                                                   // 0x0028   (0x0008)  
	class USkeletalMeshComponent*                      HitActorMesh;                                               // 0x0030   (0x0008)  
	class USkeletalMeshComponent*                      AttackerMesh;                                               // 0x0038   (0x0008)  
	EBBQAnimationAttackDirection                       AnimationAttackDirection;                                   // 0x0040   (0x0001)  
	bool                                               bManualOverrideSuppressVFX;                                 // 0x0041   (0x0001)  
	bool                                               bManualOverrideWoundSettings;                               // 0x0042   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1];                                       // 0x0043   (0x0001)  MISSED
	FRotator                                           OverrideWoundRotation;                                      // 0x0044   (0x000C)  
	FVector_NetQuantize                                OverrideActorWoundSize;                                     // 0x0050   (0x000C)  
	char                                               AttackVariation;                                            // 0x005C   (0x0001)  
	unsigned char                                      UnknownData03_7[0x3];                                       // 0x005D   (0x0003)  MISSED
};

/// Struct /Script/BBQGameSession.VisualDamageAttack
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 MaxSize: 0x0018
struct FVisualDamageAttack
{ 
	class ABBQGameSessionCharacter*                    ActorCausingDamage;                                         // 0x0000   (0x0008)  
	class ABBQGameSessionCharacter*                    ActorReceivingDamage;                                       // 0x0008   (0x0008)  
	EBBQAttackType                                     AttackType;                                                 // 0x0010   (0x0001)  
	EBBQAttackVisualTraceType                          AttackVisualTraceType;                                      // 0x0011   (0x0001)  
	char                                               AttackVariation;                                            // 0x0012   (0x0001)  
	unsigned char                                      UnknownData00_7[0x5];                                       // 0x0013   (0x0005)  MISSED
};

/// Struct /Script/BBQGameSession.FamilyBondLevelProgressRow
/// Size: 0x0010 (16 bytes) (0x000008 - 0x000010) align 8 MaxSize: 0x0010
struct FFamilyBondLevelProgressRow : FTableRowBase
{ 
	int32_t                                            level;                                                      // 0x0008   (0x0004)  
	int32_t                                            TotalFamilyBondPoints;                                      // 0x000C   (0x0004)  
};

/// Struct /Script/BBQGameSession.InteractionEventVisualParams
/// Size: 0x0030 (48 bytes) (0x000000 - 0x000030) align 8 MaxSize: 0x0030
struct FInteractionEventVisualParams
{ 
	FText                                              Text;                                                       // 0x0000   (0x0018)  
	EInteractionMethod                                 InteractButton;                                             // 0x0018   (0x0001)  
	bool                                               bInteractionWithHold;                                       // 0x0019   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x001A   (0x0002)  MISSED
	float                                              CurrentHoldRatio;                                           // 0x001C   (0x0004)  
	EInteractionEventPromptType                        PromptType;                                                 // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0021   (0x0003)  MISSED
	FName                                              UIAssetIdentifier;                                          // 0x0024   (0x0008)  
	unsigned char                                      UnknownData02_7[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/BBQGameSession.InteractionHint
/// Size: 0x0030 (48 bytes) (0x000000 - 0x000030) align 8 MaxSize: 0x0030
struct FInteractionHint
{ 
	int32_t                                            Priority;                                                   // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	FText                                              Content;                                                    // 0x0008   (0x0018)  
	FName                                              EventName;                                                  // 0x0020   (0x0008)  
	bool                                               bIsAlwaysVisible;                                           // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_7[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/BBQGameSession.InteractionVisualParams
/// Size: 0x0038 (56 bytes) (0x000000 - 0x000038) align 8 MaxSize: 0x0038
struct FInteractionVisualParams
{ 
	TArray<FInteractionEventVisualParams>              InteractionEventData;                                       // 0x0000   (0x0010)  
	class UTexture2D*                                  Icon;                                                       // 0x0010   (0x0008)  
	bool                                               bInteractionEnabled;                                        // 0x0018   (0x0001)  
	bool                                               bVisibility;                                                // 0x0019   (0x0001)  
	bool                                               bUsingHold;                                                 // 0x001A   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x001B   (0x0001)  MISSED
	float                                              CurrentHoldRatio;                                           // 0x001C   (0x0004)  
	int32_t                                            ChosenPriority;                                             // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	TArray<FInteractionHint>                           AdditionalHints;                                            // 0x0028   (0x0010)  
};

/// Struct /Script/BBQGameSession.MottoPerkClassBonusRow
/// Size: 0x0060 (96 bytes) (0x000008 - 0x000060) align 8 MaxSize: 0x0060
struct FMottoPerkClassBonusRow : FTableRowBase
{ 
	TMap<EMottoPerkCategory, int32_t>                  RequiredMottoPerks;                                         // 0x0008   (0x0050)  
	class UClass*                                      BonusPerks;                                                 // 0x0058   (0x0008)  
};

/// Struct /Script/BBQGameSession.NoiseEvent
/// Size: 0x0014 (20 bytes) (0x000000 - 0x000014) align 4 MaxSize: 0x0014
struct FNoiseEvent
{ 
	ENoiseType                                         NoiseEmitterType;                                           // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	FVector                                            WorldLocation;                                              // 0x0004   (0x000C)  
	float                                              TimeToRemove;                                               // 0x0010   (0x0004)  
};

/// Class /Script/BBQGameSession.ABBQDismembermentActor
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class AABBQDismembermentActor : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.AssetSelectionDebugActor
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class AAssetSelectionDebugActor : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQAbilityBarge
/// Size: 0x0738 (1848 bytes) (0x0004F0 - 0x000738) align 8 MaxSize: 0x0738
class UBBQAbilityBarge : public UBBQGameplayAbility
{ 
public:
	FGameplayVariableFloat                             ConeAngle;                                                  // 0x04F0   (0x0058)  
	FGameplayVariableFloat                             MaxDistance;                                                // 0x0548   (0x0058)  
	FGameplayVariableBool                              AffectVictimsOnly;                                          // 0x05A0   (0x0058)  
	TEnumAsByte<ECollisionChannel>                     LineTraceChannel;                                           // 0x05F8   (0x0001)  
	bool                                               bEnableLineTrace;                                           // 0x05F9   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x05FA   (0x0006)  MISSED
	FGameplayTagContainer                              BargeImmunityTags;                                          // 0x0600   (0x0020)  
	FGameplayTag                                       AreaOfEffectActivationTag;                                  // 0x0620   (0x0008)  
	FGameplayTag                                       AbilityActivationGameplayCueTag;                            // 0x0628   (0x0008)  
	class UClass*                                      ActivationEffect;                                           // 0x0630   (0x0008)  
	EBBQAnimSlot_AddOn1                                BargeAttackAnimSlot;                                        // 0x0638   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0639   (0x0007)  MISSED
	FDataTableRowHandle                                ActivityEventBargingPlayer;                                 // 0x0640   (0x0010)  
	FDataTableRowHandle                                ActivityEventBeingBarged;                                   // 0x0650   (0x0010)  
	class UBBQAbilityTask_BargeAimingAssistTask*       AimingAssistTask;                                           // 0x0660   (0x0008)  
	unsigned char                                      UnknownData02_6[0xC8];                                      // 0x0668   (0x00C8)  MISSED
	class UBBQAbilityTask_WaitBargeAreaOfEffectOverlap* OverlapTask;                                               // 0x0730   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityBarge.StartAimingAssist
	UBBQAbilityTask_BargeAimingAssistTask* StartAimingAssist(float AngleMargin, float DistanceMargin, float MaxRotationAngleDelta, float RotationInterpSpeed) // [0x1dfb990] Final|Native|Protected|BlueprintCallable 
	{
		typedef class UBBQAbilityTask_BargeAimingAssistTask* (*FuncPtr)(float, float, float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(AngleMargin, DistanceMargin, MaxRotationAngleDelta, RotationInterpSpeed);
	}
	// Function /Script/BBQGameSession.BBQAbilityBarge.OnCharacterBarged
	void OnCharacterBarged(ABBQGameSessionCharacterAnimated* BargeInstigator, ABBQGameSessionCharacterAnimated* BargedCharacter) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(BargeInstigator, BargedCharacter);
	}
	// Function /Script/BBQGameSession.BBQAbilityBarge.OnAnimInterrupted
	void OnAnimInterrupted() // [0x1dfb310] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityBarge.OnAnimCompleted
	void OnAnimCompleted() // [0x1dfb2f0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityBarge.OnAnimBlendOut
	void OnAnimBlendOut() // [0x1dfb2d0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityBarge.ExecuteBarge
	void ExecuteBarge() // [0x1dfb070] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityBarge.CanBargeCharacter
	bool CanBargeCharacter(ABBQGameSessionCharacterAnimated* BargingCharacter, ABBQGameSessionCharacterAnimated* BargedCharacter) // [0x1dfaf10] Native|Event|Public|BlueprintEvent 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacterAnimated*, ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(BargingCharacter, BargedCharacter);
	}
};

/// Class /Script/BBQGameSession.BBQAbilityTask_WaitGameplayTagWindow
/// Size: 0x00D0 (208 bytes) (0x0000A8 - 0x0000D0) align 8 MaxSize: 0x00D0
class UBBQAbilityTask_WaitGameplayTagWindow : public UAbilityTask_WaitGameplayTag
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x00A8   (0x0028)  MISSED
};

/// Class /Script/BBQGameSession.BBQAbilityTask_WaitBargeAreaOfEffectOverlap
/// Size: 0x00C0 (192 bytes) (0x000080 - 0x0000C0) align 8 MaxSize: 0x00C0
class UBBQAbilityTask_WaitBargeAreaOfEffectOverlap : public UAbilityTask
{ 
public:
	unsigned char                                      UnknownData00_8[0x10];                                      // 0x0080   (0x0010)  MISSED
	class ABBQGameSessionCharacterAnimated*            Instigator;                                                 // 0x0090   (0x0008)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0098   (0x0018)  MISSED
	TArray<class ABBQGameSessionCharacterAnimated*>    ObservedCharacters;                                         // 0x00B0   (0x0010)  
};

/// Class /Script/BBQGameSession.BBQAbilityTask_BargeAimingAssistTask
/// Size: 0x00D8 (216 bytes) (0x000080 - 0x0000D8) align 8 MaxSize: 0x00D8
class UBBQAbilityTask_BargeAimingAssistTask : public UAbilityTask
{ 
public:
	class UBBQAbilityBarge*                            OwningAbility;                                              // 0x0080   (0x0008)  
	class ABBQGameSessionCharacterAnimated*            Instigator;                                                 // 0x0088   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0090   (0x0020)  MISSED
	TArray<class ABBQGameSessionCharacterAnimated*>    ObservedCharacters;                                         // 0x00B0   (0x0010)  
	unsigned char                                      UnknownData01_7[0x18];                                      // 0x00C0   (0x0018)  MISSED
};

/// Class /Script/BBQGameSession.BBQAbilityBlowPowder
/// Size: 0x0500 (1280 bytes) (0x0004F0 - 0x000500) align 8 MaxSize: 0x0500
class UBBQAbilityBlowPowder : public UBBQGameplayAbility
{ 
public:
	FGameplayTag                                       PowderInventoryItemTag;                                     // 0x04F0   (0x0008)  
	FGameplayTag                                       NoPowderFailureReasonTag;                                   // 0x04F8   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityBlowPowder.UsePowderInventoryItem
	void UsePowderInventoryItem() // [0x1dfbb40] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityBlowPowder.CalculatePoisonCloudTransform
	// FTransform CalculatePoisonCloudTransform(AActor* AvatarActor, FVector& StartPointLocalOffset, FVector& WorldDirection, float DesiredDistance, float CloudSize, TEnumAsByte<ECollisionChannel> TraceChannel); // [0x1dfacc0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
};

/// Class /Script/BBQGameSession.BBQAbilityClothesline
/// Size: 0x05D8 (1496 bytes) (0x0004F0 - 0x0005D8) align 8 MaxSize: 0x05D8
class UBBQAbilityClothesline : public UBBQGameplayAbility
{ 
public:
	FGameplayTag                                       AbilityActivationGameplayCueTag;                            // 0x04F0   (0x0008)  
	class UClass*                                      ActivationEffect;                                           // 0x04F8   (0x0008)  
	FGameplayTag                                       MovementState;                                              // 0x0500   (0x0008)  
	bool                                               bCancelWhenMovementStateChanged;                            // 0x0508   (0x0001)  
	unsigned char                                      UnknownData00_7[0xCF];                                      // 0x0509   (0x00CF)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityClothesline.OnMovementStateChanged
	void OnMovementStateChanged() // [0x1dfb310] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityClothesline.EnableDebug
	void EnableDebug(bool bEnable) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(bEnable);
	}
};

/// Class /Script/BBQGameSession.HoldItemAnimNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UHoldItemAnimNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.BBQAbilityConsumeItem
/// Size: 0x05A0 (1440 bytes) (0x0004F0 - 0x0005A0) align 8 MaxSize: 0x05A0
class UBBQAbilityConsumeItem : public UBBQGameplayAbility
{ 
public:
	TMap<FGameplayTag, FConsumeItemEffects>            LookupEffectsToApply;                                       // 0x04F0   (0x0050)  
	class UAkAudioEvent*                               AudioEvent;                                                 // 0x0540   (0x0008)  
	class UClass*                                      ConsumingItemEffect;                                        // 0x0548   (0x0008)  
	FGameplayTagContainer                              PoisonedItemTypes;                                          // 0x0550   (0x0020)  
	class UClass*                                      ConsumeItemCharacterBehaviourClass;                         // 0x0570   (0x0008)  
	FActiveGameplayEffectHandle                        ConsumingItemEffectHandle;                                  // 0x0578   (0x0008)  
	FGameplayTag                                       InventoryTagWeAreApplying;                                  // 0x0580   (0x0008)  
	class AActor*                                      ConsumeItemEffectInstigator;                                // 0x0588   (0x0008)  
	unsigned char                                      UnknownData00_7[0x10];                                      // 0x0590   (0x0010)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityConsumeItem.OnTakeDamage
	void OnTakeDamage(AActor* DamagedActor, float Damage, UDamageType* DamageType, AController* InstigatedBy, AActor* DamageCauser) // [0x1dfb630] Final|Native|Private 
	{
		typedef void (*FuncPtr)(AActor*, float, UDamageType*, AController*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(DamagedActor, Damage, DamageType, InstigatedBy, DamageCauser);
	}
	// Function /Script/BBQGameSession.BBQAbilityConsumeItem.OnSyncEvent
	void OnSyncEvent() // [0x1dfb610] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityConsumeItem.OnConsumeItemEnded
	void OnConsumeItemEnded(FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo) // [0x1dfb350] Final|Native|Public|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayEffectRemovalInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(GameplayEffectRemovalInfo);
	}
	// Function /Script/BBQGameSession.BBQAbilityConsumeItem.GetDuration
	float GetDuration() // [0x1dfb0b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQAbilityConsumeItem.BP_AfterConsumeItem
	void BP_AfterConsumeItem() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQAbilityCookListen
/// Size: 0x0748 (1864 bytes) (0x0004F0 - 0x000748) align 8 MaxSize: 0x0748
class UBBQAbilityCookListen : public UBBQGameplayAbility
{ 
public:
	class UClass*                                      DepletionGE;                                                // 0x04F0   (0x0008)  
	FGameplayVariableFloat                             DepletionRate;                                              // 0x04F8   (0x0058)  
	class UClass*                                      BoostChargeGE;                                              // 0x0550   (0x0008)  
	FGameplayTag                                       BoostChargeEventTag;                                        // 0x0558   (0x0008)  
	FGameplayTag                                       BoostChargeMagnitudeTag;                                    // 0x0560   (0x0008)  
	FGameplayTag                                       CooldownTag;                                                // 0x0568   (0x0008)  
	class UDataTable*                                  AttributeSetInitDataTable;                                  // 0x0570   (0x0008)  
	FGameplayVariableFloat                             FocusDurationMin;                                           // 0x0578   (0x0058)  
	FGameplayVariableFloat                             FocusDurationMax;                                           // 0x05D0   (0x0058)  
	FGameplayVariableFloat                             FocusSilhouetteHighlightDuration;                           // 0x0628   (0x0058)  
	class UNiagaraSystem*                              VictimSilhouetteVFX;                                        // 0x0680   (0x0008)  
	class UClass*                                      GameplayAbilityTargetActorClass;                            // 0x0688   (0x0008)  
	class UClass*                                      SpottingCooldownEffect;                                     // 0x0690   (0x0008)  
	class UBBQAttributeSet_CookListen*                 GivenAttributeSet;                                          // 0x0698   (0x0008)  
	FTimerHandle                                       DepletionTimerHandle;                                       // 0x06A0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x06A8   (0x0010)  MISSED
	class UBBQAbilityTask_WaitAbilityBlocked*          TaskWaitAbilityBlocked;                                     // 0x06B8   (0x0008)  
	class UAbilityTask_WaitTargetData*                 TaskWaitTargetData;                                         // 0x06C0   (0x0008)  
	class AGameplayAbilityTargetActor*                 SpawnedTargetActor;                                         // 0x06C8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x06D0   (0x0018)  MISSED
	TMap<class AActor*, float>                         ActorsSpotted;                                              // 0x06E8   (0x0050)  
	class UAbilityTask_WaitDelay*                      TaskWaitFocusTime;                                          // 0x0738   (0x0008)  
	class UAkAudioEvent*                               AudioEventWhenTargetMarked;                                 // 0x0740   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityCookListen.StopTargeting
	void StopTargeting() // [0x1dfbb20] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityCookListen.StartTargeting
	void StartTargeting() // [0x1dfbb00] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityCookListen.OnValidTargetData
	void OnValidTargetData(FGameplayAbilityTargetDataHandle& Data) // [0x1dfb7e0] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayAbilityTargetDataHandle&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Data);
	}
	// Function /Script/BBQGameSession.BBQAbilityCookListen.OnFocusingTimeElapsed
	void OnFocusingTimeElapsed() // [0x1dfb510] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityCookListen.OnFocusingStarted
	void OnFocusingStarted(AActor* Actor) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Actor);
	}
	// Function /Script/BBQGameSession.BBQAbilityCookListen.OnFocusingEnded
	void OnFocusingEnded(AActor* Actor, bool bCancelled, float HighlightDuration) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(AActor*, bool, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Actor, bCancelled, HighlightDuration);
	}
	// Function /Script/BBQGameSession.BBQAbilityCookListen.OnAbilityUnblocked
	void OnAbilityUnblocked() // [0x1dfb090] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityCookListen.OnAbilityBlocked
	void OnAbilityBlocked() // [0x1dfb0e0] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQAbilityDetectGrandpa
/// Size: 0x0508 (1288 bytes) (0x0004F0 - 0x000508) align 8 MaxSize: 0x0508
class UBBQAbilityDetectGrandpa : public UBBQGameplayAbility
{ 
public:
	class UBBQGameplayEffect*                          DetectionEffectClass;                                       // 0x04F0   (0x0008)  
	float                                              ScremEventTime;                                             // 0x04F8   (0x0004)  
	unsigned char                                      UnknownData00_7[0xC];                                       // 0x04FC   (0x000C)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityDetectGrandpa.WaitDelayTaskFinished
	void WaitDelayTaskFinished() // [0x1dfbb60] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
};

/// Class /Script/BBQGameSession.UBBQAbilityDodge
/// Size: 0x0528 (1320 bytes) (0x0004F0 - 0x000528) align 8 MaxSize: 0x0528
class UUBBQAbilityDodge : public UBBQGameplayAbility
{ 
public:
	FGameplayTagContainer                              RequiredTags;                                               // 0x04F0   (0x0020)  
	class UClass*                                      SuccessfulDodgeEffect;                                      // 0x0510   (0x0008)  
	class UClass*                                      UnsuccessfulDodgeEffect;                                    // 0x0518   (0x0008)  
	EDodgeDirection                                    DefaultDirection;                                           // 0x0520   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0521   (0x0003)  MISSED
	float                                              AnimationPlayRate;                                          // 0x0524   (0x0004)  
};

/// Class /Script/BBQGameSession.BBQAbilityMeleeAttack
/// Size: 0x07A0 (1952 bytes) (0x0004F0 - 0x0007A0) align 16 MaxSize: 0x0798
class UBBQAbilityMeleeAttack : public UBBQGameplayAbility
{ 
public:
	EBBQCombatAnimSlot                                 DefaultAttackAnimSlot;                                      // 0x04F0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x04F1   (0x0007)  MISSED
	TArray<FMeleeAttackAnimSlotSet>                    MeleeAnimMontageList;                                       // 0x04F8   (0x0010)  
	EBBQAnimSelectionMethod                            AnimSelectionMethod;                                        // 0x0508   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0509   (0x0003)  MISSED
	float                                              AnimSelectionResetTime;                                     // 0x050C   (0x0004)  
	float                                              MovingMontageSpeedThreshold;                                // 0x0510   (0x0004)  
	float                                              MovingMontageTimeThreshold;                                 // 0x0514   (0x0004)  
	EBBQStationaryTransitionType                       StationaryTransitionType;                                   // 0x0518   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0519   (0x0003)  MISSED
	float                                              MeleeLineOfSightRadius;                                     // 0x051C   (0x0004)  
	float                                              MeleeLineOfSightHeightOffset;                               // 0x0520   (0x0004)  
	float                                              MeleeLineOfSightWidthOffset;                                // 0x0524   (0x0004)  
	FName                                              MeleeHitBoxTag;                                             // 0x0528   (0x0008)  
	FGameplayTag                                       MeleeHitTag;                                                // 0x0530   (0x0008)  
	FGameplayTag                                       MeleeCueTag;                                                // 0x0538   (0x0008)  
	FGameplayTagContainer                              MeleeImmunityTags;                                          // 0x0540   (0x0020)  
	FGameplayTagContainer                              CloseEncounterImmunityTags;                                 // 0x0560   (0x0020)  
	FGameplayVariableFloat                             DamageAmountToCauseVar;                                     // 0x0580   (0x0058)  
	float                                              DamageInterval;                                             // 0x05D8   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x05DC   (0x0004)  MISSED
	class UClass*                                      DamageTypeToInflictOnMeleeHit;                              // 0x05E0   (0x0008)  
	float                                              CloseEncounterDamageMargin;                                 // 0x05E8   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x05EC   (0x0004)  MISSED
	FDataTableRowHandle                                CloseEncounterDefinitionRow;                                // 0x05F0   (0x0010)  
	bool                                               bCanTriggerExecution;                                       // 0x0600   (0x0001)  
	unsigned char                                      UnknownData05_6[0x7];                                       // 0x0601   (0x0007)  MISSED
	class UClass*                                      MeleeAttackerEffect;                                        // 0x0608   (0x0008)  
	class UClass*                                      MeleeAttackerSuccessEffect;                                 // 0x0610   (0x0008)  
	EBBQComboType                                      ComboType;                                                  // 0x0618   (0x0001)  
	unsigned char                                      UnknownData06_6[0x7];                                       // 0x0619   (0x0007)  MISSED
	class UClass*                                      MeleeAttackerComboHitEffect;                                // 0x0620   (0x0008)  
	class UClass*                                      MeleeAttackerComboMissEffect;                               // 0x0628   (0x0008)  
	EBBQLockOnType                                     LockOnType;                                                 // 0x0630   (0x0001)  
	bool                                               bLockOnToCharacters;                                        // 0x0631   (0x0001)  
	unsigned char                                      UnknownData07_6[0x2];                                       // 0x0632   (0x0002)  MISSED
	float                                              LockOnRange;                                                // 0x0634   (0x0004)  
	float                                              LockOnAngle;                                                // 0x0638   (0x0004)  
	float                                              LockOnFocusAngle;                                           // 0x063C   (0x0004)  
	float                                              StationaryLockOnAngle;                                      // 0x0640   (0x0004)  
	float                                              CameraLockRange;                                            // 0x0644   (0x0004)  
	float                                              CameraLockDuration;                                         // 0x0648   (0x0004)  
	unsigned char                                      UnknownData08_6[0x4];                                       // 0x064C   (0x0004)  MISSED
	class AActor*                                      TargetedActor;                                              // 0x0650   (0x0008)  
	class AActor*                                      PrevTargetedActor;                                          // 0x0658   (0x0008)  
	bool                                               bCurrentlyLockedOn;                                         // 0x0660   (0x0001)  
	bool                                               bAttackerMoving;                                            // 0x0661   (0x0001)  
	bool                                               bWasInterrupted;                                            // 0x0662   (0x0001)  
	unsigned char                                      UnknownData09_6[0x1];                                       // 0x0663   (0x0001)  MISSED
	float                                              HoldTime;                                                   // 0x0664   (0x0004)  
	float                                              Priority;                                                   // 0x0668   (0x0004)  
	FName                                              AttackCameraStateName;                                      // 0x066C   (0x0008)  
	bool                                               bCanApplyCameraState;                                       // 0x0674   (0x0001)  
	EBBQAttackType                                     AttackType;                                                 // 0x0675   (0x0001)  
	EBBQAttackVisualTraceType                          AttackVisualTraceType;                                      // 0x0676   (0x0001)  
	unsigned char                                      UnknownData10_6[0x9];                                       // 0x0677   (0x0009)  MISSED
	TMap<class UBBQMeleeArcNotifyState*, bool>         MeleeArcs;                                                  // 0x0680   (0x0050)  
	unsigned char                                      UnknownData11_6[0x18];                                      // 0x06D0   (0x0018)  MISSED
	class UBBQAbilityTask_ExecuteMeleeAttack*          CurrentMeleeTask;                                           // 0x06E8   (0x0008)  
	TArray<class AActor*>                              MeleeHitActors;                                             // 0x06F0   (0x0010)  
	unsigned char                                      UnknownData12_6[0x10];                                      // 0x0700   (0x0010)  MISSED
	TArray<class AActor*>                              MeleeOverlappedActors;                                      // 0x0710   (0x0010)  
	unsigned char                                      UnknownData13_6[0x58];                                      // 0x0720   (0x0058)  MISSED
	TArray<class UPrimitiveComponent*>                 HitBoxes;                                                   // 0x0778   (0x0010)  
	class UBBQMeleeComponent*                          OwnerMeleeComponent;                                        // 0x0788   (0x0008)  
	class UVisualDamageInstigatorComponent*            OwnerVisualDamageInstigatorComponent;                       // 0x0790   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.Server_RequestStationaryToMovingBlend
	void Server_RequestStationaryToMovingBlend() // [0x1dfb090] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.Server_RequestMovementBreakout
	void Server_RequestMovementBreakout() // [0x1dfb0e0] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.Server_RequestHit
	void Server_RequestHit(AActor* Target) // [0x1dff8d0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Target);
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.Server_PreActivateSync
	void Server_PreActivateSync(bool bNewAttackerMoving, AActor* NewTargetActor) // [0x1dff800] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(bool, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(bNewAttackerMoving, NewTargetActor);
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.Server_MissCombo
	void Server_MissCombo() // [0x1dff7e0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.Server_ExecuteRepeat
	void Server_ExecuteRepeat(bool bNewAttackerMoving) // [0x1dff750] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(bNewAttackerMoving);
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.Server_ExecuteCombo
	void Server_ExecuteCombo(bool bNewAttackerMoving) // [0x1dff6c0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(bNewAttackerMoving);
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.OnMeleeAttackOverlapEnd
	void OnMeleeAttackOverlapEnd(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1dff330] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.OnMeleeAttackOverlapBegin
	void OnMeleeAttackOverlapBegin(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1dff1d0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.OnFrustratedReactionEnded
	void OnFrustratedReactionEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1dff100] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.OnFinishedMeleeAttack
	void OnFinishedMeleeAttack() // [0x1dff0e0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.NetMulticast_SetTarget
	void NetMulticast_SetTarget(AActor* TargetActor) // [0x1dff030] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(TargetActor);
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.Client_RejectHit
	void Client_RejectHit(AActor* Target) // [0x1dfeed0] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(Target);
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.Client_ConfirmAttackSuccessful
	void Client_ConfirmAttackSuccessful() // [0x1dfeeb0] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.Client_ConfirmAttackFailed
	void Client_ConfirmAttackFailed() // [0x1dfee90] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityMeleeAttack.BP_OnMeleeAttackStarted
	void BP_OnMeleeAttackStarted() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQAbilityEnvironmentalAttack
/// Size: 0x07C0 (1984 bytes) (0x000798 - 0x0007C0) align 16 MaxSize: 0x07C0
class UBBQAbilityEnvironmentalAttack : public UBBQAbilityMeleeAttack
{ 
public:
	TEnumAsByte<ECollisionChannel>                     EnvironmentAttackCollisionChannel;                          // 0x0798   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0799   (0x0003)  MISSED
	float                                              TargetingRange;                                             // 0x079C   (0x0004)  
	float                                              TargetingAngle;                                             // 0x07A0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x07A4   (0x0004)  MISSED
	TArray<class UClass*>                              TargetableClasses;                                          // 0x07A8   (0x0010)  
	class ABBQTraversalActor*                          CachedTraversalTarget;                                      // 0x07B8   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQAbilityFirstAid
/// Size: 0x0548 (1352 bytes) (0x0004F0 - 0x000548) align 8 MaxSize: 0x0548
class UBBQAbilityFirstAid : public UBBQGameplayAbility
{ 
public:
	class UClass*                                      FirstAidProgressEffect;                                     // 0x04F0   (0x0008)  
	class UClass*                                      FirstAidTargetProgressEffect;                               // 0x04F8   (0x0008)  
	TArray<class UClass*>                              AfterEffects;                                               // 0x0500   (0x0010)  
	class UAnimMontage*                                ApplyFirstAidAnim;                                          // 0x0510   (0x0008)  
	class UStaticMesh*                                 HandAttachment;                                             // 0x0518   (0x0008)  
	FGameplayTag                                       FirstAidProgressTag;                                        // 0x0520   (0x0008)  
	class UAbilityTask_WaitGameplayEffectRemoved*      ProgressEffectRemovedTask;                                  // 0x0528   (0x0008)  
	unsigned char                                      UnknownData00_7[0x18];                                      // 0x0530   (0x0018)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityFirstAid.SetFirstAidTarget
	void SetFirstAidTarget(AActor* NewTarget) // [0x1dfb900] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(NewTarget);
	}
	// Function /Script/BBQGameSession.BBQAbilityFirstAid.OnTakeDamage
	void OnTakeDamage(AActor* DamagedActor, float Damage, UDamageType* DamageType, AController* InstigatedBy, AActor* DamageCauser) // [0x1dfb630] Final|Native|Private 
	{
		typedef void (*FuncPtr)(AActor*, float, UDamageType*, AController*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(DamagedActor, Damage, DamageType, InstigatedBy, DamageCauser);
	}
	// Function /Script/BBQGameSession.BBQAbilityFirstAid.OnFirstAidProgressEnd
	void OnFirstAidProgressEnd(FGameplayEffectRemovalInfo& RemovalInfo) // [0x1dfb430] Final|Native|Private|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayEffectRemovalInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(RemovalInfo);
	}
};

/// Class /Script/BBQGameSession.BBQStarSignAbility
/// Size: 0x05E0 (1504 bytes) (0x0004F0 - 0x0005E0) align 8 MaxSize: 0x05E0
class UBBQStarSignAbility : public UBBQGameplayAbility
{ 
public:
	bool                                               bListenTakeDamageEvent;                                     // 0x04F0   (0x0001)  
	bool                                               bCancelOnTakeDamage;                                        // 0x04F1   (0x0001)  
	bool                                               bShouldApplyTakeDamageEffects;                              // 0x04F2   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x04F3   (0x0005)  MISSED
	class UClass*                                      DurationEffect;                                             // 0x04F8   (0x0008)  
	class UClass*                                      StartingCooldownEffect;                                     // 0x0500   (0x0008)  
	FName                                              LinkedPrimaryCharacterAttribute;                            // 0x0508   (0x0008)  
	TMap<ESSAGameplayCueState, FGameplayCueData>       GameplayCueDataMap;                                         // 0x0510   (0x0050)  
	class UAbilityTask_WaitGameplayEffectRemoved*      DurationEffectWaitTask;                                     // 0x0560   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0568   (0x0010)  MISSED
	TArray<class UClass*>                              OnTakeDamageEffects;                                        // 0x0578   (0x0010)  
	FGameplayTag                                       BuffDurationTag;                                            // 0x0588   (0x0008)  
	FGameplayTag                                       DebuffDurationTag;                                          // 0x0590   (0x0008)  
	FGameplayTagContainer                              ChargeTags;                                                 // 0x0598   (0x0020)  
	FGameplayTagContainer                              StartingCooldownBlockedTags;                                // 0x05B8   (0x0020)  
	bool                                               bApplyCooldownOnStart;                                      // 0x05D8   (0x0001)  
	bool                                               bTriggerSuccessDialogOnBuff;                                // 0x05D9   (0x0001)  
	bool                                               bIsSuccessDialogEnabled;                                    // 0x05DA   (0x0001)  
	unsigned char                                      UnknownData02_7[0x5];                                       // 0x05DB   (0x0005)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQStarSignAbility.TryTriggerAbilitySuccessDialog
	void TryTriggerAbilitySuccessDialog() // [0x1e7ed40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQStarSignAbility.OnTakeDamageInternal
	void OnTakeDamageInternal(AActor* DamagedActor, float Damage, UDamageType* DamageType, AController* InstigatedBy, AActor* DamageCauser) // [0x1e7ea00] Native|Protected     
	{
		typedef void (*FuncPtr)(AActor*, float, UDamageType*, AController*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(DamagedActor, Damage, DamageType, InstigatedBy, DamageCauser);
	}
	// Function /Script/BBQGameSession.BBQStarSignAbility.OnDurationEffectRemoved
	void OnDurationEffectRemoved(FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo) // [0x1e7e230] Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayEffectRemovalInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(GameplayEffectRemovalInfo);
	}
	// Function /Script/BBQGameSession.BBQStarSignAbility.OnCooldownEffectRemoved
	void OnCooldownEffectRemoved(FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo) // [0x1e7e150] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayEffectRemovalInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(GameplayEffectRemovalInfo);
	}
	// Function /Script/BBQGameSession.BBQStarSignAbility.GetDebuffDurationAndRemainingTime
	void GetDebuffDurationAndRemainingTime(UAbilitySystemComponent* ASC, float& OutDuration, float& OutRemainingTime) // [0x1e7dda0] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef void (*FuncPtr)(UAbilitySystemComponent*, float&, float&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(ASC, OutDuration, OutRemainingTime);
	}
	// Function /Script/BBQGameSession.BBQStarSignAbility.GetAbilityDurationAndRemainingTime
	void GetAbilityDurationAndRemainingTime(UAbilitySystemComponent* AbilitySystemComponent, float& OutDuration, float& OutRemainingTime) // [0x1e7dae0] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef void (*FuncPtr)(UAbilitySystemComponent*, float&, float&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(AbilitySystemComponent, OutDuration, OutRemainingTime);
	}
	// Function /Script/BBQGameSession.BBQStarSignAbility.GetAbilityChargeProgress
	float GetAbilityChargeProgress(ABBQBaseCharacter* Character) // [0x1e7da40] Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(ABBQBaseCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQStarSignAbility.CommitDurationEffect
	bool CommitDurationEffect() // [0x1e7da10] Final|Native|Protected|BlueprintCallable 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQStarSignAbility.BP_OnDurationEffectCommited
	void BP_OnDurationEffectCommited() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func();
	}
	// Function /Script/BBQGameSession.BBQStarSignAbility.BP_OnAbilityCooldownEnded
	void BP_OnAbilityCooldownEnded() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQAbilityFocusPerk
/// Size: 0x0620 (1568 bytes) (0x0005E0 - 0x000620) align 8 MaxSize: 0x0620
class UBBQAbilityFocusPerk : public UBBQStarSignAbility
{ 
public:
	TArray<class UClass*>                              OnActivationEffects;                                        // 0x05E0   (0x0010)  
	float                                              MinimumStaminaToActivate;                                   // 0x05F0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x05F4   (0x0004)  MISSED
	class UClass*                                      FocusActiveEffectClass;                                     // 0x05F8   (0x0008)  
	FGameplayTag                                       FocusedCooldownTag;                                         // 0x0600   (0x0008)  
	unsigned char                                      UnknownData01_7[0x18];                                      // 0x0608   (0x0018)  MISSED
};

/// Class /Script/BBQGameSession.BBQAbilityFullVial
/// Size: 0x05B8 (1464 bytes) (0x0004F0 - 0x0005B8) align 8 MaxSize: 0x05B8
class UBBQAbilityFullVial : public UBBQGameplayAbility
{ 
public:
	FBBQOutlineRendererConfig                          OutlineConfig;                                              // 0x04F0   (0x0098)  
	float                                              OutlineDurationAtMaxFamilyBond;                             // 0x0588   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x058C   (0x0004)  MISSED
	FDataTableRowHandle                                BloodVialFullNotificationRow;                               // 0x0590   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x05A0   (0x0008)  MISSED
	class ABBQGameSessionCharacter*                    OwnerCharacter;                                             // 0x05A8   (0x0008)  
	class ABBQGrandpa*                                 GrandpaActor;                                               // 0x05B0   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQAbilityGrandpaSonar
/// Size: 0x0670 (1648 bytes) (0x0004F0 - 0x000670) align 8 MaxSize: 0x0670
class UBBQAbilityGrandpaSonar : public UBBQGameplayAbility
{ 
public:
	float                                              SphereOverlapRadius;                                        // 0x04F0   (0x0004)  
	float                                              ScremEventTime;                                             // 0x04F4   (0x0004)  
	FGameplayTagContainer                              IgnoreDetectionTags;                                        // 0x04F8   (0x0020)  
	TArray<class AActor*>                              VictimsInRadius;                                            // 0x0518   (0x0010)  
	FBBQOutlineRendererConfig                          OutlineConfig;                                              // 0x0528   (0x0098)  
	FBBQOutlineRendererConfig                          OutlineConfigMarkedForDeath;                                // 0x05C0   (0x0098)  
	FGameplayTag                                       MarkedForDeathTag;                                          // 0x0658   (0x0008)  
	class UClass*                                      AffectedByGrandpasSonarEffect;                              // 0x0660   (0x0008)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x0668   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityGrandpaSonar.WaitDelayTaskFinished
	void WaitDelayTaskFinished() // [0x1dfbb80] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityGrandpaSonar.PopulateOverlappingActorsInSphere
	void PopulateOverlappingActorsInSphere(FVector GrandpaPos, float OverlapRadius) // [0x2438a30] Event|Protected|HasDefaults|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FVector, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(GrandpaPos, OverlapRadius);
	}
};

/// Class /Script/BBQGameSession.BBQAbilityHearing
/// Size: 0x04F8 (1272 bytes) (0x0004F0 - 0x0004F8) align 8 MaxSize: 0x04F8
class UBBQAbilityHearing : public UBBQGameplayAbility
{ 
public:
	class UClass*                                      EffectToApply;                                              // 0x04F0   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQAbilityHeightenedSense
/// Size: 0x06B8 (1720 bytes) (0x0005E0 - 0x0006B8) align 8 MaxSize: 0x06B8
class UBBQAbilityHeightenedSense : public UBBQStarSignAbility
{ 
public:
	TArray<class UClass*>                              ActivationEffects;                                          // 0x05E0   (0x0010)  
	class UClass*                                      PerkChargeReductionEffect;                                  // 0x05F0   (0x0008)  
	class UClass*                                      PerkChargeRechargeEffect;                                   // 0x05F8   (0x0008)  
	FGameplayAttribute                                 PerkChargeAttribute;                                        // 0x0600   (0x0038)  
	FGameplayAttribute                                 PerkChargeMaxAttribute;                                     // 0x0638   (0x0038)  
	FGameplayTag                                       AbilityRechargingTag;                                       // 0x0670   (0x0008)  
	bool                                               bCanActivateWhileRecharging;                                // 0x0678   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0679   (0x0007)  MISSED
	class UClass*                                      SpottingTargetActor;                                        // 0x0680   (0x0008)  
	FDataTableRowHandle                                ActivatedCameraState;                                       // 0x0688   (0x0010)  
	int32_t                                            CameraStateSlotIdx;                                         // 0x0698   (0x0004)  
	unsigned char                                      UnknownData01_7[0x1C];                                      // 0x069C   (0x001C)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityHeightenedSense.OnPerkChargeReductionRemoved
	void OnPerkChargeReductionRemoved(FGameplayEffectRemovalInfo& RemovalInfo) // [0x1dfb530] Final|Native|Private|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayEffectRemovalInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(RemovalInfo);
	}
	// Function /Script/BBQGameSession.BBQAbilityHeightenedSense.BP_OnAbilityActivated
	void BP_OnAbilityActivated() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQAbilityHuntMode
/// Size: 0x0808 (2056 bytes) (0x0004F0 - 0x000808) align 8 MaxSize: 0x0808
class UBBQAbilityHuntMode : public UBBQGameplayAbility
{ 
public:
	class UClass*                                      ActivationEffect;                                           // 0x04F0   (0x0008)  
	class UClass*                                      ChargeEffect;                                               // 0x04F8   (0x0008)  
	class UClass*                                      DischargeEffect;                                            // 0x0500   (0x0008)  
	float                                              RequiredAbilityCharge;                                      // 0x0508   (0x0004)  
	FName                                              OutlineInstanceName;                                        // 0x050C   (0x0008)  
	char                                               OutlineColorIndex;                                          // 0x0514   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0515   (0x0003)  MISSED
	FGameplayTag                                       LocalGameplayCue;                                           // 0x0518   (0x0008)  
	TArray<FBBQHuntModeDetectableObject>               DetectableObjects;                                          // 0x0520   (0x0010)  
	FGameplayVariableFloat                             ObjectsDetectionRange;                                      // 0x0530   (0x0058)  
	float                                              ObjectsDetectionUpdateRate;                                 // 0x0588   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x058C   (0x0004)  MISSED
	FGameplayVariableFloat                             BloodBucketDetectionRange;                                  // 0x0590   (0x0058)  
	FGameplayVariableFloat                             BloodBucketDetectionRangeHysteresis;                        // 0x05E8   (0x0058)  
	float                                              BloodBucketDetectionUpdateRate;                             // 0x0640   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0644   (0x0004)  MISSED
	FGameplayVariableBool                              HighlightObjectsDetectedWhileActive;                        // 0x0648   (0x0058)  
	FGameplayTag                                       OnCooldownFailureReasonTag;                                 // 0x06A0   (0x0008)  
	TMap<class AActor*, bool>                          DetectableObjectsState;                                     // 0x06A8   (0x0050)  
	TArray<class ABBQBloodBucket*>                     BloodBucketsInRange;                                        // 0x06F8   (0x0010)  
	TArray<class AActor*>                              ActorsWithActiveOutline;                                    // 0x0708   (0x0010)  
	FGameplayCueParameters                             GameplayCueParameters;                                      // 0x0718   (0x00C0)  
	unsigned char                                      UnknownData03_7[0x30];                                      // 0x07D8   (0x0030)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityHuntMode.OnChargeDepleted
	void OnChargeDepleted() // [0x1dfb330] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityHuntMode.OnActivationEffectRemoved
	void OnActivationEffectRemoved(FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo) // [0x1dfb1f0] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayEffectRemovalInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(GameplayEffectRemovalInfo);
	}
	// Function /Script/BBQGameSession.BBQAbilityHuntMode.HighlightDetectedObjects
	void HighlightDetectedObjects() // [0x1dfb1d0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityHuntMode.HighlightAllFamilyMembers
	void HighlightAllFamilyMembers(bool bIncludeOwner, bool bIncludeGrandpa) // [0x1dfb100] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(bIncludeOwner, bIncludeGrandpa);
	}
	// Function /Script/BBQGameSession.BBQAbilityHuntMode.HighlightAdditionalObjects
	void HighlightAdditionalObjects() // [0x1dfb0e0] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityHuntMode.GatherDetectableObjects
	void GatherDetectableObjects() // [0x1dfb090] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityHuntMode.EnableBloodBucketsHighlight
	void EnableBloodBucketsHighlight(bool bEnable) // [0x1dfafe0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(bEnable);
	}
	// Function /Script/BBQGameSession.BBQAbilityHuntMode.AddOutlineToActor
	void AddOutlineToActor(AActor* Actor) // [0x1dfac30] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(Actor);
	}
	// Function /Script/BBQGameSession.BBQAbilityHuntMode.AddDetectableObject
	void AddDetectableObject(AActor* Actor, bool bIsInitiallyDetected) // [0x1dfab60] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(Actor, bIsInitiallyDetected);
	}
};

/// Class /Script/BBQGameSession.BBQAbilityIncapacitatedRecover
/// Size: 0x0508 (1288 bytes) (0x0004F0 - 0x000508) align 8 MaxSize: 0x0508
class UBBQAbilityIncapacitatedRecover : public UBBQGameplayAbility
{ 
public:
	class UClass*                                      SpendWillToLiveEffect;                                      // 0x04F0   (0x0008)  
	float                                              RequiredAmountWillToLiveToExchange;                         // 0x04F8   (0x0004)  
	unsigned char                                      UnknownData00_7[0xC];                                       // 0x04FC   (0x000C)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityIncapacitatedRecover.OnSwapEffectFinished
	void OnSwapEffectFinished(FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo) // [0x1dfb350] Final|Native|Public|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayEffectRemovalInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(GameplayEffectRemovalInfo);
	}
};

/// Class /Script/BBQGameSession.BBQAbilityInvestigateFootsteps
/// Size: 0x04F0 (1264 bytes) (0x0004F0 - 0x0004F0) align 8 MaxSize: 0x04F0
class UBBQAbilityInvestigateFootsteps : public UBBQGameplayAbility
{ 
public:
};

/// Class /Script/BBQGameSession.BBQAbilityISeeYou
/// Size: 0x05B8 (1464 bytes) (0x0004F0 - 0x0005B8) align 8 MaxSize: 0x05B8
class UBBQAbilityISeeYou : public UBBQGameplayAbility
{ 
public:
	FGameplayTag                                       HiddenTag;                                                  // 0x04F0   (0x0008)  
	float                                              AreaOfEffectRadius;                                         // 0x04F8   (0x0004)  
	float                                              VictimDetectionFrequency;                                   // 0x04FC   (0x0004)  
	float                                              VictimHighlightTime;                                        // 0x0500   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0504   (0x0004)  MISSED
	class UAbilityTask_Repeat*                         DetectNewVictimsRepeatTask;                                 // 0x0508   (0x0008)  
	TMap<class ABBQGameSessionCharacter*, class UAbilityTask_WaitGameplayTagRemoved*> HideDoneRunningTasksMap;     // 0x0510   (0x0050)  
	TMap<class ABBQGameSessionCharacter*, class UAbilityTask_WaitGameplayTagAdded*> HideStartRunningTasksMap;      // 0x0560   (0x0050)  
	TWeakObjectPtr<class ABBQGameSessionCharacter*>    OwningCharacter;                                            // 0x05B0   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityISeeYou.HiddenTagRemoved
	void HiddenTagRemoved() // [0x1dff010] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityISeeYou.HiddenTagAdded
	void HiddenTagAdded() // [0x1dfeff0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityISeeYou.DetectVictimsInRadiusRepeat
	void DetectVictimsInRadiusRepeat(int32_t InActionNumber) // [0x1dfef60] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(InActionNumber);
	}
};

/// Class /Script/BBQGameSession.BBQAbilityJohnnyBloodlust
/// Size: 0x0520 (1312 bytes) (0x0004F0 - 0x000520) align 8 MaxSize: 0x0520
class UBBQAbilityJohnnyBloodlust : public UBBQGameplayAbility
{ 
public:
	class ABBQGameSessionCharacter*                    TempGameSessionPtr;                                         // 0x04F0   (0x0008)  
	TArray<class UClass*>                              ActivationEffect;                                           // 0x04F8   (0x0010)  
	FGameplayTag                                       CooldownTag;                                                // 0x0508   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0510   (0x0008)  MISSED
	int32_t                                            JohnnyKillcount;                                            // 0x0518   (0x0004)  
	unsigned char                                      UnknownData01_7[0x4];                                       // 0x051C   (0x0004)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityJohnnyBloodlust.ApplyBloodlustGameEffects
	void ApplyBloodlustGameEffects() // [0x1dfee70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQAbilityKnowWatch
/// Size: 0x05D0 (1488 bytes) (0x0004F0 - 0x0005D0) align 8 MaxSize: 0x05D0
class UBBQAbilityKnowWatch : public UBBQGameplayAbility
{ 
public:
	class UMaterialInstance*                           KnowYouWatchMaterial;                                       // 0x04F0   (0x0008)  
	FGameplayVariableFloat                             ProximityWarningZThresholdVar;                              // 0x04F8   (0x0058)  
	TEnumAsByte<ECollisionChannel>                     ProximityCollisionChannel;                                  // 0x0550   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0551   (0x0003)  MISSED
	float                                              RepeatInterval;                                             // 0x0554   (0x0004)  
	FGameplayVariableFloat                             AbilityRadius;                                              // 0x0558   (0x0058)  
	class UCurveFloat*                                 ProximityWarningCurve;                                      // 0x05B0   (0x0008)  
	class UAbilityTask_Repeat*                         WatchingRepeatTask;                                         // 0x05B8   (0x0008)  
	class UMaterialInstanceDynamic*                    KnowYouWatchDynamicMaterial;                                // 0x05C0   (0x0008)  
	unsigned char                                      UnknownData01_7[0x8];                                       // 0x05C8   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityKnowWatch.RepeatTask
	void RepeatTask(int32_t InActionNumber) // [0x1dff630] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(InActionNumber);
	}
};

/// Class /Script/BBQGameSession.BBQAbilityListenTagChange
/// Size: 0x0528 (1320 bytes) (0x0004F0 - 0x000528) align 8 MaxSize: 0x0528
class UBBQAbilityListenTagChange : public UBBQGameplayAbility
{ 
public:
	FGameplayTagContainer                              ListenTags;                                                 // 0x04F0   (0x0020)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0510   (0x0010)  MISSED
	class UAbilitySystemComponent*                     OwnerASC;                                                   // 0x0520   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityListenTagChange.OnTagRemoved
	void OnTagRemoved(FGameplayTag& Tag, int32_t Count) // [0x2438a30] Event|Protected|HasOutParms|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FGameplayTag&, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Tag, Count);
	}
	// Function /Script/BBQGameSession.BBQAbilityListenTagChange.OnTagAdded
	void OnTagAdded(FGameplayTag& Tag, int32_t Count) // [0x2438a30] Event|Protected|HasOutParms|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FGameplayTag&, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Tag, Count);
	}
};

/// Class /Script/BBQGameSession.BBQAbilityLocateGrandpa
/// Size: 0x05E0 (1504 bytes) (0x0005E0 - 0x0005E0) align 8 MaxSize: 0x05E0
class UBBQAbilityLocateGrandpa : public UBBQStarSignAbility
{ 
public:
};

/// Class /Script/BBQGameSession.BBQAbilityTask_ExecuteMeleeAttack
/// Size: 0x00D8 (216 bytes) (0x000080 - 0x0000D8) align 8 MaxSize: 0x00D8
class UBBQAbilityTask_ExecuteMeleeAttack : public UAbilityTask
{ 
public:
	unsigned char                                      UnknownData00_8[0x18];                                      // 0x0080   (0x0018)  MISSED
	class UAnimMontage*                                MyCurrentMontage;                                           // 0x0098   (0x0008)  
	unsigned char                                      UnknownData01_7[0x38];                                      // 0x00A0   (0x0038)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityTask_ExecuteMeleeAttack.OnMontageEnded
	void OnMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1dff560] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQAbilityTask_ExecuteMeleeAttack.OnMontageBlendingOut
	void OnMontageBlendingOut(UAnimMontage* Montage, bool bInterrupted) // [0x1dff490] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQAbilityTask_ExecuteMeleeAttack.OnAbilityCancelled
	void OnAbilityCancelled() // [0x1dff0c0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQMeleeHitFrameNotifyState
/// Size: 0x0038 (56 bytes) (0x000030 - 0x000038) align 8 MaxSize: 0x0038
class UBBQMeleeHitFrameNotifyState : public UAnimNotifyState
{ 
public:
	EBBQMeleeAttackHitFrameType                        HitFrameType;                                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/BBQGameSession.MeleeAttackVisualiserComponent
/// Size: 0x00B8 (184 bytes) (0x0000B0 - 0x0000B8) align 8 MaxSize: 0x00B8
class UMeleeAttackVisualiserComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00B0   (0x0008)  MISSED
};

/// Class /Script/BBQGameSession.BBQMeleeArcNotifyState
/// Size: 0x0050 (80 bytes) (0x000030 - 0x000050) align 8 MaxSize: 0x0050
class UBBQMeleeArcNotifyState : public UAnimNotifyState
{ 
public:
	float                                              StartAngle;                                                 // 0x0030   (0x0004)  
	float                                              EndAngle;                                                   // 0x0034   (0x0004)  
	float                                              Range;                                                      // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
	class UClass*                                      CameraShakeOnHit;                                           // 0x0040   (0x0008)  
	float                                              CameraShakeScale;                                           // 0x0048   (0x0004)  
	unsigned char                                      UnknownData01_7[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Class /Script/BBQGameSession.BBQAbilityMeleeChainsaw
/// Size: 0x07F0 (2032 bytes) (0x000798 - 0x0007F0) align 16 MaxSize: 0x07F0
class UBBQAbilityMeleeChainsaw : public UBBQAbilityMeleeAttack
{ 
public:
	FGameplayTagContainer                              ClientActivationRequiredTags;                               // 0x0798   (0x0020)  
	FGameplayTagContainer                              ClientActivationBlockedTags;                                // 0x07B8   (0x0020)  
	float                                              HeatLevelRequiredToUse;                                     // 0x07D8   (0x0004)  
	float                                              HeatLevelToAdd;                                             // 0x07DC   (0x0004)  
	bool                                               bOverheatPostAttackAnimEnd;                                 // 0x07E0   (0x0001)  
	bool                                               bStallPostAttackAnimEnd;                                    // 0x07E1   (0x0001)  
	bool                                               bIgnoreHeatIfStallDeferred;                                 // 0x07E2   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x07E3   (0x0005)  MISSED
	class UBBQChainsawComponent*                       CachedChainsawComponent;                                    // 0x07E8   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQAbilityMeleeChainsawSlam
/// Size: 0x0800 (2048 bytes) (0x0007F0 - 0x000800) align 16 MaxSize: 0x0800
class UBBQAbilityMeleeChainsawSlam : public UBBQAbilityMeleeChainsaw
{ 
public:
	EBBQCombatAnimSlot                                 NoTargetAnimSlot;                                           // 0x07F0   (0x0001)  
	unsigned char                                      UnknownData00_7[0xF];                                       // 0x07F1   (0x000F)  MISSED
};

/// Class /Script/BBQGameSession.BBQAbilityMeleeReaction
/// Size: 0x04F8 (1272 bytes) (0x0004F0 - 0x0004F8) align 8 MaxSize: 0x04F8
class UBBQAbilityMeleeReaction : public UBBQGameplayAbility
{ 
public:
	class UClass*                                      MeleeHitEffect;                                             // 0x04F0   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQAbilityPainIsNothing
/// Size: 0x06A0 (1696 bytes) (0x0005E0 - 0x0006A0) align 8 MaxSize: 0x06A0
class UBBQAbilityPainIsNothing : public UBBQStarSignAbility
{ 
public:
	FGameplayVariableInt                               MaxDamageEffectApplyCount;                                  // 0x05E0   (0x0058)  
	FGameplayVariableBool                              AlwaysApplyDamageEffects;                                   // 0x0638   (0x0058)  
	unsigned char                                      UnknownData00_7[0x10];                                      // 0x0690   (0x0010)  MISSED
};

/// Class /Script/BBQGameSession.BBQPerfumeBottleBreakNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UBBQPerfumeBottleBreakNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.BBQAbilityPerfume
/// Size: 0x05A0 (1440 bytes) (0x0005A0 - 0x0005A0) align 8 MaxSize: 0x05A0
class UBBQAbilityPerfume : public UBBQAbilityConsumeItem
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityPerfume.OnReachedNotify
	void OnReachedNotify() // [0x1dfb090] Native|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityPerfume.CalculatePoisonCloudTransform
	// FTransform CalculatePoisonCloudTransform(AActor* AvatarActor, FVector& StartPointLocalOffset, FVector& WorldDirection, float DesiredDistance, float CloudSize, TEnumAsByte<ECollisionChannel> TraceChannel); // [0x1dfacc0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
};

/// Class /Script/BBQGameSession.BBQAbilityPerkAdrenalineRush
/// Size: 0x0578 (1400 bytes) (0x0004F0 - 0x000578) align 8 MaxSize: 0x0578
class UBBQAbilityPerkAdrenalineRush : public UBBQGameplayAbility
{ 
public:
	unsigned char                                      UnknownData00_8[0x8];                                       // 0x04F0   (0x0008)  MISSED
	class UClass*                                      AdrenalineRushRestoreStaminaClass;                          // 0x04F8   (0x0008)  
	class UClass*                                      AdrenalineRushHasChargeEffectClass;                         // 0x0500   (0x0008)  
	class UGameplayVariableMod*                        PerkConsumptionVarMod;                                      // 0x0508   (0x0008)  
	FGameplayVariableInt                               AdrenalineRushChargesVar;                                   // 0x0510   (0x0058)  
	class ABBQGameSessionCharacter*                    OwnerCharacter;                                             // 0x0568   (0x0008)  
	unsigned char                                      UnknownData01_7[0x8];                                       // 0x0570   (0x0008)  MISSED
};

/// Class /Script/BBQGameSession.BBQAbilityPerkAttributePoints
/// Size: 0x0638 (1592 bytes) (0x0004F0 - 0x000638) align 8 MaxSize: 0x0638
class UBBQAbilityPerkAttributePoints : public UBBQGameplayAbility
{ 
public:
	FName                                              CharacterAttribute;                                         // 0x04F0   (0x0008)  
	FGameplayVariableInt                               AttributeLevelOffsetVariable;                               // 0x04F8   (0x0058)  
	FGameplayAttribute                                 PlayerCurrentAttribute;                                     // 0x0550   (0x0038)  
	FGameplayAttribute                                 PlayerMaxAttribute;                                         // 0x0588   (0x0038)  
	FGameplayVariableFloat                             AttributeThresholdPercentVariable;                          // 0x05C0   (0x0058)  
	class UClass*                                      AbilityActiveEffectClass;                                   // 0x0618   (0x0008)  
	class UAbilityTask_WaitAttributeChange*            AttributeChangeTask;                                        // 0x0620   (0x0008)  
	unsigned char                                      UnknownData00_7[0x10];                                      // 0x0628   (0x0010)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityPerkAttributePoints.OnAttributeChangedLessThan
	void OnAttributeChangedLessThan() // [0x1dfb090] Native|Protected     
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityPerkAttributePoints.OnAttributeChangedGreaterThan
	void OnAttributeChangedGreaterThan() // [0x1dfb0e0] Native|Protected     
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQAbilityPerkHelpMe
/// Size: 0x05A0 (1440 bytes) (0x0004F0 - 0x0005A0) align 8 MaxSize: 0x05A0
class UBBQAbilityPerkHelpMe : public UBBQGameplayAbility
{ 
public:
	FGameplayTag                                       PerkActiveTag;                                              // 0x04F0   (0x0008)  
	FGameplayVariableFloat                             PerkActivePercentage;                                       // 0x04F8   (0x0058)  
	FGameplayTagContainer                              RemoveHighlightTags;                                        // 0x0550   (0x0020)  
	class ABBQGameSessionCharacter*                    OwnerCharacter;                                             // 0x0570   (0x0008)  
	unsigned char                                      UnknownData00_7[0x28];                                      // 0x0578   (0x0028)  MISSED
};

/// Class /Script/BBQGameSession.BBQAbilityPerkNoStopping
/// Size: 0x0508 (1288 bytes) (0x0004F0 - 0x000508) align 8 MaxSize: 0x0508
class UBBQAbilityPerkNoStopping : public UBBQGameplayAbility
{ 
public:
	TArray<class UClass*>                              AbilityLifetimeEffects;                                     // 0x04F0   (0x0010)  
	class AActor*                                      CurrentInteractable;                                        // 0x0500   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQAbilityPerkSticksAndStones
/// Size: 0x05C0 (1472 bytes) (0x0004F0 - 0x0005C0) align 8 MaxSize: 0x05C0
class UBBQAbilityPerkSticksAndStones : public UBBQGameplayAbility
{ 
public:
	FGameplayTag                                       ShardItemTag;                                               // 0x04F0   (0x0008)  
	FGameplayVariableFloat                             RequiredHealth;                                             // 0x04F8   (0x0058)  
	FGameplayVariableInt                               SticksAndStonesCharges;                                     // 0x0550   (0x0058)  
	class UGameplayVariableMod*                        PerkConsumptionVarMod;                                      // 0x05A8   (0x0008)  
	class ABBQGameSessionCharacter*                    OwnerCharacter;                                             // 0x05B0   (0x0008)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x05B8   (0x0008)  MISSED
};

/// Class /Script/BBQGameSession.BBQAbilityPerkWellTrained
/// Size: 0x0570 (1392 bytes) (0x0004F0 - 0x000570) align 8 MaxSize: 0x0570
class UBBQAbilityPerkWellTrained : public UBBQGameplayAbility
{ 
public:
	float                                              HighlightRange;                                             // 0x04F0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x04F4   (0x0004)  MISSED
	FGameplayTagContainer                              PickupsToHighlight;                                         // 0x04F8   (0x0020)  
	FGameplayVariableFloat                             HighlightDuration;                                          // 0x0518   (0x0058)  
};

/// Class /Script/BBQGameSession.BBQAbilityPlaceTrap
/// Size: 0x05D0 (1488 bytes) (0x0004F0 - 0x0005D0) align 8 MaxSize: 0x05D0
class UBBQAbilityPlaceTrap : public UBBQGameplayAbility
{ 
public:
	class UClass*                                      TrapClass;                                                  // 0x04F0   (0x0008)  
	class UClass*                                      TrapPlacementTargetActorClass;                              // 0x04F8   (0x0008)  
	FGameplayVariableFloat                             TrapOriginOffset;                                           // 0x0500   (0x0058)  
	FGameplayVariableFloat                             PlacementHoldTime;                                          // 0x0558   (0x0058)  
	FGameplayTag                                       TrapInventoryItemTag;                                       // 0x05B0   (0x0008)  
	FGameplayTag                                       NoTrapsFailureReasonTag;                                    // 0x05B8   (0x0008)  
	TWeakObjectPtr<class ABBQGameSessionCharacterAnimated*> OwnerCharacter;                                        // 0x05C0   (0x0008)  
	bool                                               bPlacementAllowed;                                          // 0x05C8   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x05C9   (0x0007)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityPlaceTrap.SpawnTrap
	void SpawnTrap(FTransform& Transform) // [0x1e02d80] Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FTransform&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Transform);
	}
	// Function /Script/BBQGameSession.BBQAbilityPlaceTrap.GetHoldElapsedTimeInternal
	float GetHoldElapsedTimeInternal() // [0x1e021f0] Native|Event|Protected|BlueprintEvent|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQAbilityPlaceTrap.GetHoldElapsedTime
	float GetHoldElapsedTime() // [0x1e02190] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQAbilityPlaceTrap.GetHoldDuration
	float GetHoldDuration() // [0x1e02160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQAbilityRipstall
/// Size: 0x0508 (1288 bytes) (0x0004F0 - 0x000508) align 8 MaxSize: 0x0508
class UBBQAbilityRipstall : public UBBQGameplayAbility
{ 
public:
	FDataTableRowHandle                                ActivationMessageEvent;                                     // 0x04F0   (0x0010)  
	float                                              ActivationMessageCooldown;                                  // 0x0500   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x0504   (0x0004)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityRipstall.ShowActivationMessage
	void ShowActivationMessage() // [0x1e02d60] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQAbilitySneakAttack
/// Size: 0x07B0 (1968 bytes) (0x000798 - 0x0007B0) align 16 MaxSize: 0x07B0
class UBBQAbilitySneakAttack : public UBBQAbilityMeleeAttack
{ 
public:
	float                                              SneakAttackArc;                                             // 0x0798   (0x0004)  
	FGameplayTag                                       SneakAttackTag;                                             // 0x079C   (0x0008)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x07A4   (0x0004)  MISSED
	class UClass*                                      SneakAttackEffect;                                          // 0x07A8   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilitySneakAttack.BP_OnSneakAttackSuccessful
	void BP_OnSneakAttackSuccessful(AActor* Attacker, AActor* Target) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(AActor*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Attacker, Target);
	}
};

/// Class /Script/BBQGameSession.BBQAbilitySpyOnPlayer
/// Size: 0x0588 (1416 bytes) (0x0004F0 - 0x000588) align 8 MaxSize: 0x0588
class UBBQAbilitySpyOnPlayer : public UBBQGameplayAbility
{ 
public:
	FGameplayTag                                       PowderInventoryItemTag;                                     // 0x04F0   (0x0008)  
	bool                                               bRequireEquippedPowder;                                     // 0x04F8   (0x0001)  
	bool                                               bConsumesEquippedPowderOnActivate;                          // 0x04F9   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x04FA   (0x0002)  MISSED
	float                                              RequiredAbilityCharge;                                      // 0x04FC   (0x0004)  
	class UClass*                                      RechargeEffect;                                             // 0x0500   (0x0008)  
	FGameplayTagContainer                              VictimRequiredTags;                                         // 0x0508   (0x0020)  
	FGameplayTagContainer                              VictimForbiddenTags;                                        // 0x0528   (0x0020)  
	FDataTableRowHandle                                ActivityEventBeingSpied;                                    // 0x0548   (0x0010)  
	FDataTableRowHandle                                ActivityEventFinishedSpying;                                // 0x0558   (0x0010)  
	class ABBQGameSessionCharacter*                    CurrentVictim;                                              // 0x0568   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0570   (0x0008)  MISSED
	class UDataTable*                                  AttributeSetInitDataTable;                                  // 0x0578   (0x0008)  
	class UBBQAttributeSet_SpyAbility*                 GivenAttributeSet;                                          // 0x0580   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilitySpyOnPlayer.SelectVictim
	// ABBQGameSessionCharacter* SelectVictim(TArray<ABBQGameSessionCharacter*>& PotentialVictims);                             // [0x1e02ca0] Native|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/BBQGameSession.BBQAbilitySpyOnPlayer.SelectRandomVictim
	// ABBQGameSessionCharacter* SelectRandomVictim(TArray<ABBQGameSessionCharacter*>& PotentialVictims);                       // [0x1e02be0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/BBQGameSession.BBQAbilitySpyOnPlayer.SelectNearestVictim
	// ABBQGameSessionCharacter* SelectNearestVictim(TArray<ABBQGameSessionCharacter*>& PotentialVictims);                      // [0x1e02b20] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/BBQGameSession.BBQAbilitySpyOnPlayer.SelectFarthestVictim
	// ABBQGameSessionCharacter* SelectFarthestVictim(TArray<ABBQGameSessionCharacter*>& PotentialVictims);                     // [0x1e02a60] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/BBQGameSession.BBQAbilitySpyOnPlayer.OnChargeDepleted
	void OnChargeDepleted() // [0x1dfb330] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilitySpyOnPlayer.BP_OnAbilityAboutToActivate
	void BP_OnAbilityAboutToActivate(ABBQGameSessionCharacter* VictimWeWillSpyOn) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(VictimWeWillSpyOn);
	}
};

/// Class /Script/BBQGameSession.BBQAbilityStatusEffect
/// Size: 0x0508 (1288 bytes) (0x0004F0 - 0x000508) align 8 MaxSize: 0x0508
class UBBQAbilityStatusEffect : public UBBQGameplayAbility
{ 
public:
	class UClass*                                      GameplayEffectClass;                                        // 0x04F0   (0x0008)  
	class UAbilityTask_PlayMontageAndWait*             CurrentAnimTask;                                            // 0x04F8   (0x0008)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x0500   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityStatusEffect.OnGameplayEffectRemoved
	void OnGameplayEffectRemoved(FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo) // [0x1e02410] Final|Native|Public|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayEffectRemovalInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(GameplayEffectRemovalInfo);
	}
};

/// Class /Script/BBQGameSession.BBQAbilityTarget_SenseActors
/// Size: 0x04B0 (1200 bytes) (0x000338 - 0x0004B0) align 16 MaxSize: 0x04B0
class ABBQAbilityTarget_SenseActors : public AGameplayAbilityTargetActor
{ 
public:
	class UNiagaraSystem*                              ParticleSystem;                                             // 0x0338   (0x0008)  
	float                                              ParticleZOffset;                                            // 0x0340   (0x0004)  
	FLinearColor                                       ColorDefault;                                               // 0x0344   (0x0010)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0354   (0x0004)  MISSED
	class UBBQProximityCheckComponent*                 ProximityCheckComponent;                                    // 0x0358   (0x0008)  
	FGameplayVariableFloat                             VolumeSize;                                                 // 0x0360   (0x0058)  
	FGameplayVariableBool                              FilterEnvironmentNoise;                                     // 0x03B8   (0x0058)  
	class UCurveFloat*                                 DistanceScaleCurve;                                         // 0x0410   (0x0008)  
	class UCurveFloat*                                 DistanceFadeCurve;                                          // 0x0418   (0x0008)  
	FString                                            ColorVariableName;                                          // 0x0420   (0x0010)  
	FString                                            SizeVariableName;                                           // 0x0430   (0x0010)  
	bool                                               bReplicateToSpectators;                                     // 0x0440   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0441   (0x0007)  MISSED
	TArray<class AActor*>                              SensedActors;                                               // 0x0448   (0x0010)  
	TWeakObjectPtr<class AActor*>                      AbilityOwner;                                               // 0x0458   (0x0008)  
	TMap<class AActor*, FSenseInfo>                    SenseInfoMap;                                               // 0x0460   (0x0050)  


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityTarget_SenseActors.OnSenseVolumeOverlapEnd
	void OnSenseVolumeOverlapEnd(AActor* InstigatorActor, AActor* OtherActor) // [0x1e026e0] Final|Native|Private 
	{
		typedef void (*FuncPtr)(AActor*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(InstigatorActor, OtherActor);
	}
	// Function /Script/BBQGameSession.BBQAbilityTarget_SenseActors.OnSenseVolumeOverlapBegin
	void OnSenseVolumeOverlapBegin(AActor* InstigatorActor, AActor* OtherActor) // [0x1e02610] Final|Native|Private 
	{
		typedef void (*FuncPtr)(AActor*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(InstigatorActor, OtherActor);
	}
};

/// Class /Script/BBQGameSession.BBQAbilityTarget_HeightenedSense
/// Size: 0x0540 (1344 bytes) (0x0004B0 - 0x000540) align 16 MaxSize: 0x0540
class ABBQAbilityTarget_HeightenedSense : public ABBQAbilityTarget_SenseActors
{ 
public:
	FLinearColor                                       ColorVictim;                                                // 0x04B0   (0x0010)  
	FLinearColor                                       ColorFamily;                                                // 0x04C0   (0x0010)  
	FGameplayVariableBool                              UseTeamIdentification;                                      // 0x04D0   (0x0058)  
	class UAkAudioEvent*                               EnterVisibilityAudioEvent;                                  // 0x0528   (0x0008)  
	class UAkAudioEvent*                               ExitVisibilityAudioEvent;                                   // 0x0530   (0x0008)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x0538   (0x0008)  MISSED
};

/// Class /Script/BBQGameSession.BBQAbilityTarget_IKnowEngines
/// Size: 0x0570 (1392 bytes) (0x0004B0 - 0x000570) align 16 MaxSize: 0x0570
class ABBQAbilityTarget_IKnowEngines : public ABBQAbilityTarget_SenseActors
{ 
public:
	FGameplayTag                                       ChainsawActiveTag;                                          // 0x04B0   (0x0008)  
	FGameplayVariableFloat                             SenseDurationBeforeRemoval;                                 // 0x04B8   (0x0058)  
	FGameplayTag                                       PerkActiveTag;                                              // 0x0510   (0x0008)  
	TMap<class AActor*, FHandleInfo>                   ActorHandleMap;                                             // 0x0518   (0x0050)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x0568   (0x0008)  MISSED
};

/// Class /Script/BBQGameSession.BBQAbilityTarget_ThereTheyAre
/// Size: 0x05A0 (1440 bytes) (0x000338 - 0x0005A0) align 16 MaxSize: 0x05A0
class ABBQAbilityTarget_ThereTheyAre : public AGameplayAbilityTargetActor
{ 
public:
	FGameplayVariableFloat                             ProximityRadiusVar;                                         // 0x0338   (0x0058)  
	FGameplayVariableFloat                             HighlightWaitDurationVar;                                   // 0x0390   (0x0058)  
	FGameplayVariableFloat                             HighlightActiveDurationVar;                                 // 0x03E8   (0x0058)  
	FBBQOutlineRendererConfig                          OutlineRenderConfig;                                        // 0x0440   (0x0098)  
	TWeakObjectPtr<class AActor*>                      AbilityOwner;                                               // 0x04D8   (0x0008)  
	TArray<class AActor*>                              StudyAndTamperActors;                                       // 0x04E0   (0x0010)  
	TMap<class AActor*, FHighlightInfo>                ActorHighlightInfoMap;                                      // 0x04F0   (0x0050)  
	unsigned char                                      UnknownData00_7[0x60];                                      // 0x0540   (0x0060)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityTarget_ThereTheyAre.OnModApplied
	void OnModApplied(FGameplayVariableModHandle& ModHandle) // [0x1e02530] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayVariableModHandle&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(ModHandle);
	}
};

/// Class /Script/BBQGameSession.BBQAbilityTask_WaitAbilityBlocked
/// Size: 0x00D0 (208 bytes) (0x0000A8 - 0x0000D0) align 8 MaxSize: 0x00D0
class UBBQAbilityTask_WaitAbilityBlocked : public UAbilityTask_WaitGameplayTag
{ 
public:
	SDK_UNDEFINED(16,481) /* FMulticastInlineDelegate */ __um(bLocked);                                            // 0x00A8   (0x0010)  
	SDK_UNDEFINED(16,482) /* FMulticastInlineDelegate */ __um(Unblocked);                                          // 0x00B8   (0x0010)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x00C8   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityTask_WaitAbilityBlocked.WaitAbilityBlocked
	UBBQAbilityTask_WaitAbilityBlocked* WaitAbilityBlocked(UGameplayAbility* OwningAbility, FGameplayTag Tag, AActor* InOptionalExternalTarget, bool bCallDelegateOnActivation) // [0x1e02e60] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef class UBBQAbilityTask_WaitAbilityBlocked* (*FuncPtr)(UGameplayAbility*, FGameplayTag, AActor*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(OwningAbility, Tag, InOptionalExternalTarget, bCallDelegateOnActivation);
	}
	// Function /Script/BBQGameSession.BBQAbilityTask_WaitAbilityBlocked.IsAbilityBlocked
	bool IsAbilityBlocked() // [0x1e02360] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQAbilityTask_WaitInputHold
/// Size: 0x0110 (272 bytes) (0x000080 - 0x000110) align 8 MaxSize: 0x0110
class UBBQAbilityTask_WaitInputHold : public UAbilityTask
{ 
public:
	SDK_UNDEFINED(16,483) /* FMulticastInlineDelegate */ __um(OnPress);                                            // 0x0080   (0x0010)  
	SDK_UNDEFINED(16,484) /* FMulticastInlineDelegate */ __um(OnPressFailed);                                      // 0x0090   (0x0010)  
	SDK_UNDEFINED(16,485) /* FMulticastInlineDelegate */ __um(OnRelease);                                          // 0x00A0   (0x0010)  
	SDK_UNDEFINED(16,486) /* FMulticastInlineDelegate */ __um(OnHoldTimeElapsed);                                  // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,487) /* FMulticastInlineDelegate */ __um(OnHoldInterrupted);                                  // 0x00C0   (0x0010)  
	unsigned char                                      UnknownData00_7[0x40];                                      // 0x00D0   (0x0040)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityTask_WaitInputHold.WaitInputHold
	// UBBQAbilityTask_WaitInputHold* WaitInputHold(UGameplayAbility* OwningAbility, float InHoldTime, bool bInEndTaskOnHoldTimeElapsed, FDelegateProperty& InPressValidationDelegate, bool bUseSecondaryInput); // [0x1e02fb0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/BBQGameSession.BBQAbilityTask_WaitInputHold.Reset
	void Reset(float NewHoldTime) // [0x1e029e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(NewHoldTime);
	}
	// Function /Script/BBQGameSession.BBQAbilityTask_WaitInputHold.OnReleaseCallback
	void OnReleaseCallback() // [0x1e025f0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityTask_WaitInputHold.OnPressCallback
	void OnPressCallback() // [0x1e025d0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityTask_WaitInputHold.OnInputDisabledCallback
	void OnInputDisabledCallback() // [0x1e02510] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityTask_WaitInputHold.OnHoldTimeElapsedInternal
	void OnHoldTimeElapsedInternal() // [0x1e024f0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQAbilityTask_WaitInputHold.GetHoldElapsedTime
	float GetHoldElapsedTime() // [0x1e021c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQAbilityThickSkin
/// Size: 0x04F8 (1272 bytes) (0x0004F0 - 0x0004F8) align 8 MaxSize: 0x04F8
class UBBQAbilityThickSkin : public UBBQGameplayAbility
{ 
public:
	class UClass*                                      HealthEffectToApply;                                        // 0x04F0   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQAbilityTrackFootprints
/// Size: 0x06B0 (1712 bytes) (0x0004F0 - 0x0006B0) align 8 MaxSize: 0x06B0
class UBBQAbilityTrackFootprints : public UBBQGameplayAbility
{ 
public:
	FGameplayTag                                       CooldownTag;                                                // 0x04F0   (0x0008)  
	FGameplayVariableFloat                             ClueDetectionRadius;                                        // 0x04F8   (0x0058)  
	FGameplayVariableFloat                             ViewFootprintsRadius;                                       // 0x0550   (0x0058)  
	TSoftObjectPtr<class UClass*>                      FootprintClueAsset;                                         // 0x05A8   (0x0028)  
	TWeakObjectPtr<class UAkAudioEvent*>               ClueAnalyzedAudioPtr;                                       // 0x05D0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x05D8   (0x0020)  MISSED
	class UAkAudioEvent*                               ClueAnalyzedAudioEvent;                                     // 0x05F8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0600   (0x0010)  MISSED
	class UClass*                                      FootprintClueClass;                                         // 0x0610   (0x0008)  
	FGameplayTag                                       FollowingTrailTag;                                          // 0x0618   (0x0008)  
	int32_t                                            PreallocatedDecalsNum;                                      // 0x0620   (0x0004)  
	int32_t                                            PreallocatedFootprintClueActorsNum;                         // 0x0624   (0x0004)  
	TArray<class UDecalComponent*>                     DecalPool;                                                  // 0x0628   (0x0010)  
	TArray<class ABBQFootprintClue*>                   FootprintCluePool;                                          // 0x0638   (0x0010)  
	TMap<class ABBQGameSessionCharacter*, class ABBQFootprintClue*> FootprintClueMap;                              // 0x0648   (0x0050)  
	TArray<FBBQGameplayAbilityTargetingClueInfo>       CachedFootprintClues;                                       // 0x0698   (0x0010)  
	TWeakObjectPtr<class UWorld*>                      World;                                                      // 0x06A8   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQAbilityTrackFootprints.OnTargetDataReady
	void OnTargetDataReady(FGameplayAbilityTargetDataHandle TargetDataHandle) // [0x1e027b0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayAbilityTargetDataHandle);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(TargetDataHandle);
	}
	// Function /Script/BBQGameSession.BBQAbilityTrackFootprints.OnClueAnalysed
	void OnClueAnalysed(AActor* ActorBeingFollowed) // [0x1e02380] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(ActorBeingFollowed);
	}
};

/// Class /Script/BBQGameSession.BBQAbilityUltimateEscape
/// Size: 0x0608 (1544 bytes) (0x0005E0 - 0x000608) align 8 MaxSize: 0x0608
class UBBQAbilityUltimateEscape : public UBBQStarSignAbility
{ 
public:
	FGameplayTagContainer                              CostGEAssetTag;                                             // 0x05E0   (0x0020)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x0600   (0x0008)  MISSED
};

/// Class /Script/BBQGameSession.BBQAnimatedHoldCharacterBehaviourInterface
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQAnimatedHoldCharacterBehaviourInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQAnimatedHoldCharacterBehaviourInterface.GetAnimatedHoldTime
	float GetAnimatedHoldTime() // [0x1e02130] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQAnimInstance
/// Size: 0x0460 (1120 bytes) (0x0002B8 - 0x000460) align 16 MaxSize: 0x0460
class UBBQAnimInstance : public UAnimInstance
{ 
public:
	float                                              RotationScale;                                              // 0x02B8   (0x0004)  
	bool                                               bTurningInPlace;                                            // 0x02BC   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02BD   (0x0003)  MISSED
	class UPhysicsAsset*                               RagdollPhysicsAsset;                                        // 0x02C0   (0x0008)  
	float                                              Turn45MinThreshold;                                         // 0x02C8   (0x0004)  
	float                                              Turn90MinThreshold;                                         // 0x02CC   (0x0004)  
	float                                              Turn180MinThreshold;                                        // 0x02D0   (0x0004)  
	BBQStance                                          Stance;                                                     // 0x02D4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x02D5   (0x0003)  MISSED
	FBBQTurnInPlaceAsset                               StandingTurn45Left;                                         // 0x02D8   (0x0020)  
	FBBQTurnInPlaceAsset                               StandingTurn45Right;                                        // 0x02F8   (0x0020)  
	FBBQTurnInPlaceAsset                               StandingTurn90Left;                                         // 0x0318   (0x0020)  
	FBBQTurnInPlaceAsset                               StandingTurn90Right;                                        // 0x0338   (0x0020)  
	FBBQTurnInPlaceAsset                               StandingTurn180Left;                                        // 0x0358   (0x0020)  
	FBBQTurnInPlaceAsset                               StandingTurn180Right;                                       // 0x0378   (0x0020)  
	FBBQTurnInPlaceAsset                               CrouchingTurn45Left;                                        // 0x0398   (0x0020)  
	FBBQTurnInPlaceAsset                               CrouchingTurn45Right;                                       // 0x03B8   (0x0020)  
	FBBQTurnInPlaceAsset                               CrouchingTurn90Left;                                        // 0x03D8   (0x0020)  
	FBBQTurnInPlaceAsset                               CrouchingTurn90Right;                                       // 0x03F8   (0x0020)  
	FBBQTurnInPlaceAsset                               CrouchingTurn180Left;                                       // 0x0418   (0x0020)  
	FBBQTurnInPlaceAsset                               CrouchingTurn180Right;                                      // 0x0438   (0x0020)  
	float                                              HighFallingSpeed;                                           // 0x0458   (0x0004)  
	unsigned char                                      UnknownData02_7[0x4];                                       // 0x045C   (0x0004)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAnimInstance.PreUpdateAnimation
	void PreUpdateAnimation(float DeltaSeconds) // [0x1e02950] Native|Public        
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(DeltaSeconds);
	}
	// Function /Script/BBQGameSession.BBQAnimInstance.GetWalkSpeed
	float GetWalkSpeed() // [0x1e02330] Final|Native|Public|BlueprintCallable 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQAnimInstance.GetTurnAssetForAngle
	FBBQTurnInPlaceAsset GetTurnAssetForAngle(float TurnAngle) // [0x1e02290] Final|Native|Public|BlueprintCallable 
	{
		typedef FBBQTurnInPlaceAsset (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(TurnAngle);
	}
	// Function /Script/BBQGameSession.BBQAnimInstance.GetSprintSpeed
	float GetSprintSpeed() // [0x1e02260] Final|Native|Public|BlueprintCallable 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQAnimInstance.GetRunSpeed
	float GetRunSpeed() // [0x1e02230] Final|Native|Public|BlueprintCallable 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQAnimInstance.Debug_IsTurnInPlaceDisabled
	bool Debug_IsTurnInPlaceDisabled() // [0x1e02100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQAnimInstance.Debug_IsLookAtDisabled
	bool Debug_IsLookAtDisabled() // [0x1e02100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQAnimInstance.Debug_IsIdleBreakTransitionDisabled
	bool Debug_IsIdleBreakTransitionDisabled() // [0x1e02100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQAnimNotify_Comm
/// Size: 0x0040 (64 bytes) (0x000038 - 0x000040) align 8 MaxSize: 0x0040
class UBBQAnimNotify_Comm : public UAnimNotify
{ 
public:
	FGameplayTag                                       CommTag;                                                    // 0x0038   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQAnimNotify_DisablePlayerPlayerCollision
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UBBQAnimNotify_DisablePlayerPlayerCollision : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.BBQAnimNotify_Footsteps
/// Size: 0x0058 (88 bytes) (0x000038 - 0x000058) align 8 MaxSize: 0x0058
class UBBQAnimNotify_Footsteps : public UAnimNotify
{ 
public:
	bool                                               bFollow;                                                    // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
	FString                                            AttachName;                                                 // 0x0040   (0x0010)  
	class UAkAudioEvent*                               Event;                                                      // 0x0050   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQAnimNotify_Footsteps.Received_NotifyAudio
	bool Received_NotifyAudio(USkeletalMeshComponent* MeshComp, UAnimSequenceBase* Animation, UAkComponent* AkComponent) // [0x2438a30] Event|Public|BlueprintEvent|Const 
	{
		typedef bool (*FuncPtr)(USkeletalMeshComponent*, UAnimSequenceBase*, UAkComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(MeshComp, Animation, AkComponent);
	}
};

/// Class /Script/BBQGameSession.BBQAnimNotify_HingeDoorAkEvent
/// Size: 0x0040 (64 bytes) (0x000038 - 0x000040) align 8 MaxSize: 0x0040
class UBBQAnimNotify_HingeDoorAkEvent : public UAnimNotify
{ 
public:
	class UAkAudioEvent*                               AkEvent;                                                    // 0x0038   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQAnimNotifyState_HingeDoorAkEvent
/// Size: 0x0048 (72 bytes) (0x000030 - 0x000048) align 8 MaxSize: 0x0048
class UBBQAnimNotifyState_HingeDoorAkEvent : public UAnimNotifyState
{ 
public:
	class UAkAudioEvent*                               AkEvent;                                                    // 0x0030   (0x0008)  
	class ABBQDoorHinge*                               CachedDoor;                                                 // 0x0038   (0x0008)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x0040   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQAnimNotifyState_HingeDoorAkEvent.EndOfAkEventCallback
	void EndOfAkEventCallback(EAkCallbackType CallbackType, UAkCallbackInfo* CallbackInfo) // [0x1e06570] Final|Native|Public|Const 
	{
		typedef void (*FuncPtr)(EAkCallbackType, UAkCallbackInfo*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(CallbackType, CallbackInfo);
	}
};

/// Class /Script/BBQGameSession.BBQAnimNotify_RunForwards
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UBBQAnimNotify_RunForwards : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.BBQAssetManager
/// Size: 0x0478 (1144 bytes) (0x000478 - 0x000478) align 8 MaxSize: 0x0478
class UBBQAssetManager : public UAssetManager
{ 
public:
};

/// Class /Script/BBQGameSession.BBQAttributeSet_CookListen
/// Size: 0x0060 (96 bytes) (0x000030 - 0x000060) align 8 MaxSize: 0x0060
class UBBQAttributeSet_CookListen : public UAttributeSet
{ 
public:
	FGameplayAttributeData                             Charges;                                                    // 0x0030   (0x0010)  
	FGameplayAttributeData                             MaxCharges;                                                 // 0x0040   (0x0010)  
	FGameplayAttributeData                             ChargesDepletedPerPeriod;                                   // 0x0050   (0x0010)  


	/// Functions
	// Function /Script/BBQGameSession.BBQAttributeSet_CookListen.OnRep_MaxCharges
	void OnRep_MaxCharges(FGameplayAttributeData& OldValue) // [0x1e06bc0] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayAttributeData&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(OldValue);
	}
	// Function /Script/BBQGameSession.BBQAttributeSet_CookListen.OnRep_Charges
	void OnRep_Charges(FGameplayAttributeData& OldValue) // [0x1e06b00] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayAttributeData&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(OldValue);
	}
};

/// Class /Script/BBQGameSession.BBQAttributeSet_SpyAbility
/// Size: 0x0058 (88 bytes) (0x000038 - 0x000058) align 8 MaxSize: 0x0058
class UBBQAttributeSet_SpyAbility : public UBBQBaseAttributeSet
{ 
public:
	FGameplayAttributeData                             Charge;                                                     // 0x0038   (0x0010)  
	FGameplayAttributeData                             ChargeMax;                                                  // 0x0048   (0x0010)  
};

/// Class /Script/BBQGameSession.BBQAudioDebugSubsystem
/// Size: 0x0050 (80 bytes) (0x000040 - 0x000050) align 8 MaxSize: 0x0050
class UBBQAudioDebugSubsystem : public UTickableWorldSubsystem
{ 
public:
	class UAkComponent*                                VisualisedCharacter;                                        // 0x0040   (0x0008)  
	class UAkComponent*                                TestSpotAkComp;                                             // 0x0048   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQBarbedWire
/// Size: 0x0560 (1376 bytes) (0x000228 - 0x000560) align 8 MaxSize: 0x0560
class ABBQBarbedWire : public AActor
{ 
public:
	FGameplayTagContainer                              TriggerImmuneTags;                                          // 0x0228   (0x0020)  
	FGameplayTagContainer                              TriggerTags;                                                // 0x0248   (0x0020)  
	FGameplayTagContainer                              TangleImmuneTags;                                           // 0x0268   (0x0020)  
	ETeamID                                            TangleImmuneTeam;                                           // 0x0288   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0289   (0x0007)  MISSED
	class UClass*                                      TriggerEffectTangled;                                       // 0x0290   (0x0008)  
	class UClass*                                      TriggerEffectTrampled;                                      // 0x0298   (0x0008)  
	class UClass*                                      TangledEffect;                                              // 0x02A0   (0x0008)  
	FGameplayTag                                       TangledLocalGameplayCueTag;                                 // 0x02A8   (0x0008)  
	class UClass*                                      UntangleMinigameClass;                                      // 0x02B0   (0x0008)  
	bool                                               bUntangleWhenMinigameInterrupted;                           // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x02B9   (0x0007)  MISSED
	FDataTableRowHandle                                ActivityEventUntangle;                                      // 0x02C0   (0x0010)  
	FDataTableRowHandle                                ActivityEventUntangleFast;                                  // 0x02D0   (0x0010)  
	FDataTableRowHandle                                ActivityEventUntangleOther;                                 // 0x02E0   (0x0010)  
	FDataTableRowHandle                                ActivityEventCut;                                           // 0x02F0   (0x0010)  
	FDataTableRowHandle                                ActivityEventVictimCaught;                                  // 0x0300   (0x0010)  
	FDataTableRowHandle                                ActivityEventPlaced;                                        // 0x0310   (0x0010)  
	bool                                               bDisableNoiseWhileCrouching;                                // 0x0320   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0321   (0x0007)  MISSED
	FGameplayVariableFloat                             DetectableMovementSpeed;                                    // 0x0328   (0x0058)  
	EBarbedWireOutlineVisibility                       OutlineVisibility;                                          // 0x0380   (0x0001)  
	EBarbedWireOutlineVisibility                       InitialOutlineVisibility;                                   // 0x0381   (0x0001)  
	unsigned char                                      UnknownData03_6[0x6];                                       // 0x0382   (0x0006)  MISSED
	FGameplayVariableFloat                             OutlineDuration;                                            // 0x0388   (0x0058)  
	FGameplayVariableFloat                             InitialOutlineDuration;                                     // 0x03E0   (0x0058)  
	FGameplayVariableFloat                             OutlineRange;                                               // 0x0438   (0x0058)  
	char                                               HighlightColorIndex;                                        // 0x0490   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x0491   (0x0007)  MISSED
	class UAkAudioEvent*                               AudioEventActivated;                                        // 0x0498   (0x0008)  
	class UAkAudioEvent*                               AudioEventTrampled;                                         // 0x04A0   (0x0008)  
	class UAkAudioEvent*                               AudioEventNoiseStart;                                       // 0x04A8   (0x0008)  
	class UAkAudioEvent*                               AudioEventNoiseEnd;                                         // 0x04B0   (0x0008)  
	class UAkAudioEvent*                               AudioEventUntangleStart;                                    // 0x04B8   (0x0008)  
	class UAkAudioEvent*                               AudioEventUntangleEnd;                                      // 0x04C0   (0x0008)  
	class UAkAudioEvent*                               AudioEventUntangleSuccess;                                  // 0x04C8   (0x0008)  
	class UAkAudioEvent*                               AudioEventUntangleFail;                                     // 0x04D0   (0x0008)  
	EBBQAnimSlot                                       AnimSlotUntangleMinigame;                                   // 0x04D8   (0x0001)  
	EBBQAnimSlot                                       AnimSlotUntangleWithShard;                                  // 0x04D9   (0x0001)  
	unsigned char                                      UnknownData05_6[0x6];                                       // 0x04DA   (0x0006)  MISSED
	class UNiagaraSystem*                              VfxOnTrigger;                                               // 0x04E0   (0x0008)  
	class UNiagaraSystem*                              VfxOnMovement;                                              // 0x04E8   (0x0008)  
	float                                              VfxOnTriggerDuration;                                       // 0x04F0   (0x0004)  
	float                                              VfxOnMovementDuration;                                      // 0x04F4   (0x0004)  
	float                                              VfxOnMovementSpawnDelay;                                    // 0x04F8   (0x0004)  
	EBarbedWireOutlineVisibility                       VfxOnTriggerVisibility;                                     // 0x04FC   (0x0001)  
	EBarbedWireOutlineVisibility                       VfxOnMovementVisibility;                                    // 0x04FD   (0x0001)  
	unsigned char                                      UnknownData06_6[0x2];                                       // 0x04FE   (0x0002)  MISSED
	class ABBQGameSessionCharacter*                    BarbedWireOwner;                                            // 0x0500   (0x0008)  
	class UObject*                                     BarbedWireSlot;                                             // 0x0508   (0x0008)  
	EBarbedWireState                                   State;                                                      // 0x0510   (0x0001)  
	unsigned char                                      UnknownData07_6[0x7];                                       // 0x0511   (0x0007)  MISSED
	class UBBQInteractionComponent*                    InteractionComponent;                                       // 0x0518   (0x0008)  
	class ABBQMinigameV2*                              UntangleMinigame;                                           // 0x0520   (0x0008)  
	class UNiagaraComponent*                           VfxOnMovementComponent;                                     // 0x0528   (0x0008)  
	unsigned char                                      UnknownData08_7[0x30];                                      // 0x0530   (0x0030)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQBarbedWire.UntangleBarbedWire
	void UntangleBarbedWire(ABBQGameSessionCharacter* InInstigator, bool bSkipMinigame) // [0x1e07270] Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(InInstigator, bSkipMinigame);
	}
	// Function /Script/BBQGameSession.BBQBarbedWire.TriggerBarbedWire
	void TriggerBarbedWire(ABBQGameSessionCharacter* Character) // [0x1e071e0] Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQBarbedWire.SetupUntangleMinigame
	void SetupUntangleMinigame(ABBQMinigameV2* MinigameInstance) // [0x1e06fa0] Native|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(MinigameInstance);
	}
	// Function /Script/BBQGameSession.BBQBarbedWire.SetState
	void SetState(EBarbedWireState NewState) // [0x1e07050] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EBarbedWireState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(NewState);
	}
	// Function /Script/BBQGameSession.BBQBarbedWire.SetBarbedWireSlot
	void SetBarbedWireSlot(UObject* NewSlot) // [0x1e06f10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(NewSlot);
	}
	// Function /Script/BBQGameSession.BBQBarbedWire.OnUntangleMinigameEnded
	void OnUntangleMinigameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason EndReason) // [0x1e06ce0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Minigame, EndReason);
	}
	// Function /Script/BBQGameSession.BBQBarbedWire.OnRep_State
	void OnRep_State(EBarbedWireState PrevState) // [0x1e06c60] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(EBarbedWireState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(PrevState);
	}
	// Function /Script/BBQGameSession.BBQBarbedWire.GetTangledCharacter
	ABBQGameSessionCharacter* GetTangledCharacter() // [0x1e06890] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacter* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQBarbedWire.CutBarbedWire
	void CutBarbedWire(ABBQGameSessionCharacter* Character) // [0x1e06420] Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQBarbedWire.BP_OnStateChanged
	void BP_OnStateChanged(EBarbedWireState PrevState, EBarbedWireState NewState) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EBarbedWireState, EBarbedWireState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(PrevState, NewState);
	}
	// Function /Script/BBQGameSession.BBQBarbedWire.BP_OnCharacterUntangled
	void BP_OnCharacterUntangled(ABBQGameSessionCharacter* Character) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQBarbedWire.BP_OnCharacterTangled
	void BP_OnCharacterTangled(ABBQGameSessionCharacter* Character) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(Character);
	}
};

/// Class /Script/BBQGameSession.BBQBarbedWireOnDoorFrame
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQBarbedWireOnDoorFrame : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQBarbedWireSlot
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQBarbedWireSlot : public UInterface
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQBarbedWireSlot.SetupBarbedWire
	ABBQBarbedWire* SetupBarbedWire(ABBQGameSessionCharacter* BarbedWireOwner, EBarbedWireState InitialState, int32_t BarbedWireIndex) // [0x1e070d0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	{
		typedef class ABBQBarbedWire* (*FuncPtr)(ABBQGameSessionCharacter*, EBarbedWireState, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(BarbedWireOwner, InitialState, BarbedWireIndex);
	}
	// Function /Script/BBQGameSession.BBQBarbedWireSlot.RemoveBarbedWire
	void RemoveBarbedWire(int32_t BarbedWireIndex) // [0x1e06dd0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(BarbedWireIndex);
	}
	// Function /Script/BBQGameSession.BBQBarbedWireSlot.OnBarbedWireStateChanged
	void OnBarbedWireStateChanged(EBarbedWireState PrevState, EBarbedWireState NewState, ABBQBarbedWire* BarbedWire) // [0x1e069d0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EBarbedWireState, EBarbedWireState, ABBQBarbedWire*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(PrevState, NewState, BarbedWire);
	}
	// Function /Script/BBQGameSession.BBQBarbedWireSlot.GetBarbedWireInteractionLocator
	FTransform GetBarbedWireInteractionLocator(ABBQGameSessionCharacter* InInstigator, int32_t BarbedWireIndex) // [0x1e06780] Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	{
		typedef FTransform (*FuncPtr)(ABBQGameSessionCharacter*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(InInstigator, BarbedWireIndex);
	}
	// Function /Script/BBQGameSession.BBQBarbedWireSlot.GetBarbedWireIndex
	int32_t GetBarbedWireIndex(ABBQGameSessionCharacter* InInstigator) // [0x1e066e0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(InInstigator);
	}
	// Function /Script/BBQGameSession.BBQBarbedWireSlot.GetBarbedWire
	ABBQBarbedWire* GetBarbedWire(int32_t BarbedWireIndex) // [0x1e06640] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	{
		typedef class ABBQBarbedWire* (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(BarbedWireIndex);
	}
};

/// Class /Script/BBQGameSession.BBQBaseBleedoutData
/// Size: 0x0050 (80 bytes) (0x000030 - 0x000050) align 8 MaxSize: 0x0050
class UBBQBaseBleedoutData : public UDataAsset
{ 
public:
	TArray<FTimeBasedBleedoutInfo>                     TimeBasedBleedoutInfo;                                      // 0x0030   (0x0010)  
	TArray<FTagBasedBleedoutInfo>                      TagBasedBleedoutInfo;                                       // 0x0040   (0x0010)  
};

/// Class /Script/BBQGameSession.BBQBleedoutComponent
/// Size: 0x0128 (296 bytes) (0x0000B0 - 0x000128) align 8 MaxSize: 0x0128
class UBBQBleedoutComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_8[0x18];                                      // 0x00B0   (0x0018)  MISSED
	class UBBQBaseBleedoutData*                        BleedoutDataAsset;                                          // 0x00C8   (0x0008)  
	class UClass*                                      BaseBleedoutEffectClass;                                    // 0x00D0   (0x0008)  
	FActiveGameplayEffectHandle                        BaseBleedoutEffectHandle;                                   // 0x00D8   (0x0008)  
	TArray<FTimeBasedBleedoutInfo>                     TimeBasedBleedoutInfo;                                      // 0x00E0   (0x0010)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x00F0   (0x0028)  MISSED
	FBleedoutHandle                                    ActiveBleedoutHandle;                                       // 0x0118   (0x000C)  
	unsigned char                                      UnknownData02_7[0x4];                                       // 0x0124   (0x0004)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQBleedoutComponent.OnRep_ActiveBleedoutChanged
	void OnRep_ActiveBleedoutChanged() // [0x1e06ae0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBleedoutComponent.Debug_GetBleedoutInfoString
	FString Debug_GetBleedoutInfoString() // [0x1e064b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FString (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQBloodBucket
/// Size: 0x0320 (800 bytes) (0x000228 - 0x000320) align 8 MaxSize: 0x0320
class ABBQBloodBucket : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x10];                                      // 0x0228   (0x0010)  MISSED
	class USceneComponent*                             RootComp;                                                   // 0x0238   (0x0008)  
	class UStaticMeshComponent*                        StaticMeshComponent;                                        // 0x0240   (0x0008)  
	class UStaticMeshComponent*                        BloodMeshComponent;                                         // 0x0248   (0x0008)  
	class UBoxComponent*                               BoxComponent;                                               // 0x0250   (0x0008)  
	class UAkComponent*                                BloodBucketAudio;                                           // 0x0258   (0x0008)  
	class UBBQInteractionComponent*                    InteractionComponent;                                       // 0x0260   (0x0008)  
	class UBBQInteractionEventComponent*               CollectBloodVialInteraction;                                // 0x0268   (0x0008)  
	class UBBQInteractionEventComponent*               NotEnoughBloodVialInteraction;                              // 0x0270   (0x0008)  
	FName                                              CollectBloodInteractionEventName;                           // 0x0278   (0x0008)  
	bool                                               bStartFull;                                                 // 0x0280   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0281   (0x0003)  MISSED
	float                                              MaxBloodCount;                                              // 0x0284   (0x0004)  
	class UAkAudioEvent*                               BloodVialObtainedSFX;                                       // 0x0288   (0x0008)  
	bool                                               bAutoRefills;                                               // 0x0290   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0291   (0x0003)  MISSED
	float                                              RefillDuration;                                             // 0x0294   (0x0004)  
	float                                              RefillCooldown;                                             // 0x0298   (0x0004)  
	float                                              MinBloodRequiredForCollection;                              // 0x029C   (0x0004)  
	FGameplayVariableFloat                             BloodCollectionMultiplier;                                  // 0x02A0   (0x0058)  
	float                                              RefillLerpSpeed;                                            // 0x02F8   (0x0004)  
	unsigned char                                      UnknownData03_6[0xC];                                       // 0x02FC   (0x000C)  MISSED
	float                                              CurrentBloodVialCount;                                      // 0x0308   (0x0004)  
	unsigned char                                      UnknownData04_6[0xC];                                       // 0x030C   (0x000C)  MISSED
	class ABBQGameSessionCharacter*                    BloodCollectingActor;                                       // 0x0318   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQBloodBucket.SetBloodBucketFull
	void SetBloodBucketFull() // [0x1e07030] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBloodBucket.PickupCollectedBloodVialFromBucket
	void PickupCollectedBloodVialFromBucket() // [0x1e06db0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBloodBucket.OnRep_CurrentBloodVialCount
	void OnRep_CurrentBloodVialCount() // [0x1e06ba0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBloodBucket.IsBucketFull
	bool IsBucketFull() // [0x1e068f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQBloodBucket.IsBucketEmpty
	bool IsBucketEmpty() // [0x1e068c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQBloodBucket.BP_BloodVialCollected
	void BP_BloodVialCollected() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBloodBucket.BP_BloodVialAdded
	void BP_BloodVialAdded() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBloodBucket.BloodBucketInteractionEnded
	void BloodBucketInteractionEnded() // [0x1e06380] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBloodBucket.BloodBucketInteraction
	void BloodBucketInteraction(UBBQInteractionEventComponent* InteractionScenario, FName EventName, AActor* EventInstigator) // [0x1e06270] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UBBQInteractionEventComponent*, FName, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(InteractionScenario, EventName, EventInstigator);
	}
	// Function /Script/BBQGameSession.BBQBloodBucket.AddBloodVialToBucket
	bool AddBloodVialToBucket() // [0x1e06240] Final|Native|Public|BlueprintCallable 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQBloodPool
/// Size: 0x02F0 (752 bytes) (0x000228 - 0x0002F0) align 8 MaxSize: 0x02F0
class ABBQBloodPool : public AActor
{ 
public:
	class USceneComponent*                             RootComp;                                                   // 0x0228   (0x0008)  
	float                                              OverlapStartRadius;                                         // 0x0230   (0x0004)  
	float                                              OverlapMaxRadius;                                           // 0x0234   (0x0004)  
	float                                              BloodPoolCommTriggerRadius;                                 // 0x0238   (0x0004)  
	float                                              MinDotTolerance;                                            // 0x023C   (0x0004)  
	bool                                               bShouldPerformLOSCheckToTriggerComm;                        // 0x0240   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0241   (0x0007)  MISSED
	class UDecalComponent*                             DecalComponent;                                             // 0x0248   (0x0008)  
	class UTimelineComponent*                          PoolExpandTimeline;                                         // 0x0250   (0x0008)  
	class UCurveFloat*                                 SizeIncreaseCurve;                                          // 0x0258   (0x0008)  
	float                                              BloodPoolLifeTime;                                          // 0x0260   (0x0004)  
	float                                              DecalFadeOutTime;                                           // 0x0264   (0x0004)  
	class UMaterialInstanceDynamic*                    BloodPoolMat;                                               // 0x0268   (0x0008)  
	FName                                              MaterialAnimatableParamName;                                // 0x0270   (0x0008)  
	class ABBQGameSessionCharacter*                    BleedingActor;                                              // 0x0278   (0x0008)  
	bool                                               bIsBleeding;                                                // 0x0280   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0281   (0x0007)  MISSED
	TArray<class ABBQGameSessionCharacter*>            CharactersInPool;                                           // 0x0288   (0x0010)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0298   (0x0008)  MISSED
	SDK_UNDEFINED(80,488) /* TSet<ABBQGameSessionCharacter*> */ __um(CharactersTriggeredBloodPoolComm);            // 0x02A0   (0x0050)  


	/// Functions
	// Function /Script/BBQGameSession.BBQBloodPool.SetBleedingActor
	void SetBleedingActor(ABBQGameSessionCharacter* InBleedingActor) // [0x1e06fa0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(InBleedingActor);
	}
	// Function /Script/BBQGameSession.BBQBloodPool.BP_StartBloodTrail
	void BP_StartBloodTrail(ABBQGameSessionCharacter* Character) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQBloodPool.BloodPoolExpandUpdate
	void BloodPoolExpandUpdate(float InAlpha) // [0x1e063a0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(InAlpha);
	}
};

/// Class /Script/BBQGameSession.BBQBloodTrailComponent
/// Size: 0x0170 (368 bytes) (0x0000B0 - 0x000170) align 8 MaxSize: 0x0170
class UBBQBloodTrailComponent : public UActorComponent
{ 
public:
	TArray<class UMaterialInterface*>                  BloodTrailMats;                                             // 0x00B0   (0x0010)  
	TArray<FVector2D>                                  BloodTrailDecalSizes;                                       // 0x00C0   (0x0010)  
	class UCurveFloat*                                 BloodTrailIntervalCurve;                                    // 0x00D0   (0x0008)  
	class UCurveFloat*                                 BloodTrailRandomSeedCurve;                                  // 0x00D8   (0x0008)  
	class UClass*                                      BloodTrailGameplayEffectClass;                              // 0x00E0   (0x0008)  
	FGameplayTag                                       BleedOutMultiplierModifierTag;                              // 0x00E8   (0x0008)  
	float                                              BloodTrailLifeDuration;                                     // 0x00F0   (0x0004)  
	float                                              BloodTrailLifeFadeIn;                                       // 0x00F4   (0x0004)  
	float                                              BloodTrailLifeFadeOut;                                      // 0x00F8   (0x0004)  
	float                                              BloodTrailScaleMin;                                         // 0x00FC   (0x0004)  
	float                                              BloodTrailScaleMax;                                         // 0x0100   (0x0004)  
	float                                              BloodTrailMaxRaycastDistance;                               // 0x0104   (0x0004)  
	float                                              BloodTrailSplatterSquareRange;                              // 0x0108   (0x0004)  
	bool                                               bBloodTrailShowDebugRaycasts;                               // 0x010C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x010D   (0x0003)  MISSED
	float                                              BloodTrailMinHealth;                                        // 0x0110   (0x0004)  
	bool                                               bShouldAggregateModifiers;                                  // 0x0114   (0x0001)  
	TEnumAsByte<ECollisionChannel>                     BloodTrailRaycastCheckCollisionChannel;                     // 0x0115   (0x0001)  
	bool                                               EnableBloodPool;                                            // 0x0116   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1];                                       // 0x0117   (0x0001)  MISSED
	class UClass*                                      BloodPoolToSpawn;                                           // 0x0118   (0x0008)  
	float                                              IdleTimeBeforePoolStart;                                    // 0x0120   (0x0004)  
	float                                              BloodPoolMinHealth;                                         // 0x0124   (0x0004)  
	bool                                               bStartBloodPool;                                            // 0x0128   (0x0001)  
	unsigned char                                      UnknownData02_6[0x37];                                      // 0x0129   (0x0037)  MISSED
	TArray<class UBBQBloodTrailPooledDecalComponent*>  PooledBloodTrailDecalComponents;                            // 0x0160   (0x0010)  


	/// Functions
	// Function /Script/BBQGameSession.BBQBloodTrailComponent.Server_StartBloodPoolInstantly
	void Server_StartBloodPoolInstantly() // [0x1e06ef0] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBloodTrailComponent.Server_StartBloodPool
	void Server_StartBloodPool(bool InStart) // [0x1e06e60] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(InStart);
	}
	// Function /Script/BBQGameSession.BBQBloodTrailComponent.OnRep_IsBloodPoolStarted
	void OnRep_IsBloodPoolStarted() // [0xb888e0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBloodTrailComponent.Multicast_ActivateBloodTrailOnClient
	void Multicast_ActivateBloodTrailOnClient(FBBQBloodTrailDefinition InBloodTrailDefinition) // [0x1e06920] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(FBBQBloodTrailDefinition);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(InBloodTrailDefinition);
	}
	// Function /Script/BBQGameSession.BBQBloodTrailComponent.DelayedBloodTrailStart
	void DelayedBloodTrailStart() // [0x1e06550] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBloodTrailComponent.DelayedBloodPoolStart
	void DelayedBloodPoolStart() // [0x1e06530] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQBloodTrailPooledDecalComponent
/// Size: 0x0250 (592 bytes) (0x000240 - 0x000250) align 16 MaxSize: 0x0250
class UBBQBloodTrailPooledDecalComponent : public UDecalComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0240   (0x0010)  MISSED
};

/// Class /Script/BBQGameSession.BBQTraversalActor
/// Size: 0x02D8 (728 bytes) (0x000228 - 0x0002D8) align 8 MaxSize: 0x02D8
class ABBQTraversalActor : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x20];                                      // 0x0228   (0x0020)  MISSED
	class USceneComponent*                             Entry1;                                                     // 0x0248   (0x0008)  
	class USceneComponent*                             Entry2;                                                     // 0x0250   (0x0008)  
	class UNavLinkCustomComponent*                     SmartLink;                                                  // 0x0258   (0x0008)  
	class UBoxComponent*                               InteractionBox;                                             // 0x0260   (0x0008)  
	class UBBQInteractionComponent*                    Interaction;                                                // 0x0268   (0x0008)  
	class UBBQInteractionEventComponent*               InteractionEvent;                                           // 0x0270   (0x0008)  
	float                                              Cooldown;                                                   // 0x0278   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x027C   (0x0004)  MISSED
	TArray<class UClass*>                              InTraversalEffects;                                         // 0x0280   (0x0010)  
	class AActor*                                      BlockingActor;                                              // 0x0290   (0x0008)  
	class AActor*                                      FirstInteractingActor;                                      // 0x0298   (0x0008)  
	TArray<class AActor*>                              InteractingActors;                                          // 0x02A0   (0x0010)  
	FGameplayTagContainer                              GameplayTags;                                               // 0x02B0   (0x0020)  
	FTimerHandle                                       CooldownTimerHandle;                                        // 0x02D0   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQTraversalActor.RemoveGameplayTag
	void RemoveGameplayTag(FGameplayTag Tag) // [0x1e82be0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Tag);
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.OnRep_InteractingActors
	// void OnRep_InteractingActors(TArray<AActor*>& Old);                                                                      // [0x1e82860] Final|Native|Private|HasOutParms 
	// Function /Script/BBQGameSession.BBQTraversalActor.OnActorDestroyed
	void OnActorDestroyed() // [0x1e82390] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.NetMulticast_OnTraversalStarted
	void NetMulticast_OnTraversalStarted(AActor* TraversingActor) // [0x1e82300] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(TraversingActor);
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.NetMulticast_OnTraversalFinished
	void NetMulticast_OnTraversalFinished(AActor* TraversingActor) // [0x1e82270] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(TraversingActor);
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.HasMatchingGameplayTag
	bool HasMatchingGameplayTag(FGameplayTag TagToCheck) // [0x1e81f70] Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(TagToCheck);
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.HasAnyMatchingGameplayTags
	bool HasAnyMatchingGameplayTags(FGameplayTagContainer& TagContainer) // [0x1e81ea0] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTagContainer&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(TagContainer);
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.HasAllMatchingGameplayTags
	bool HasAllMatchingGameplayTags(FGameplayTagContainer& TagContainer) // [0x1e81dd0] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTagContainer&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func(TagContainer);
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.GetTraversingActorByIndex
	AActor* GetTraversingActorByIndex(int32_t Index) // [0x1e81d10] Final|Native|Public|BlueprintCallable 
	{
		typedef class AActor* (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func(Index);
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.GetTraversingActor
	AActor* GetTraversingActor() // [0x1e79f20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class AActor* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.GetOwnedGameplayTags
	void GetOwnedGameplayTags(FGameplayTagContainer& TagContainer) // [0x1e81b30] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef void (*FuncPtr)(FGameplayTagContainer&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(TagContainer);
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.GetNumTraversingActors
	int32_t GetNumTraversingActors() // [0x1e81b10] Final|Native|Public|BlueprintCallable 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.GetClosestEntryNode
	void GetClosestEntryNode(AActor* Target, FVector& Out_Location, FRotator& Out_Rotation, USceneComponent*& Out_ClosestNode) // [0x1e81650] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, FVector&, FRotator&, USceneComponent*&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(Target, Out_Location, Out_Rotation, Out_ClosestNode);
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.GetBlockingActor
	AActor* GetBlockingActor() // [0x1e81620] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class AActor* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.CooldownTimerEnded
	void CooldownTimerEnded() // [0x1e814f0] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func();
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.BP_GetInteractionPosition
	bool BP_GetInteractionPosition(FName InteractionEventName, int32_t Index, FVector& OutLocation) // [0x2438a30] Event|Public|HasOutParms|HasDefaults|BlueprintEvent|Const 
	{
		typedef bool (*FuncPtr)(FName, int32_t, FVector&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func(InteractionEventName, Index, OutLocation);
	}
	// Function /Script/BBQGameSession.BBQTraversalActor.AddGameplayTag
	void AddGameplayTag(FGameplayTag Tag) // [0x1e81310] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(Tag);
	}
};

/// Class /Script/BBQGameSession.BBQBoltholeBase
/// Size: 0x0480 (1152 bytes) (0x0002D8 - 0x000480) align 8 MaxSize: 0x0480
class ABBQBoltholeBase : public ABBQTraversalActor
{ 
public:
	float                                              ChanceforOpenState;                                         // 0x02D8   (0x0004)  
	float                                              ChanceforDestroyedState;                                    // 0x02DC   (0x0004)  
	class UBBQLevelSequencePlayer*                     SequencePlayer_Into;                                        // 0x02E0   (0x0008)  
	class UBBQLevelSequencePlayer*                     SequencePlayer_Success;                                     // 0x02E8   (0x0008)  
	EBoltholeState                                     StartingOverrideState;                                      // 0x02F0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02F1   (0x0003)  MISSED
	FGameplayTag                                       LFThrustMeleeTag;                                           // 0x02F4   (0x0008)  
	FGameplayTag                                       ImmunityTag;                                                // 0x02FC   (0x0008)  
	FGameplayTag                                       IsBarricadedTag;                                            // 0x0304   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x030C   (0x0004)  MISSED
	class UClass*                                      BoltholeOpeningMinigameClass;                               // 0x0310   (0x0008)  
	class UClass*                                      BarbedWireEffect;                                           // 0x0318   (0x0008)  
	TMap<EEndMinigameReason, FName>                    MontageSectionsForMinigameResult;                           // 0x0320   (0x0050)  
	float                                              BoltholeOpenFastPlayRate;                                   // 0x0370   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0374   (0x0004)  MISSED
	class UStaticMeshComponent*                        BoltHoleDoorMesh;                                           // 0x0378   (0x0008)  
	class UStaticMeshComponent*                        BoltHoleFrameMesh;                                          // 0x0380   (0x0008)  
	class UTimelineComponent*                          AnimTimeline;                                               // 0x0388   (0x0008)  
	class UCurveVector*                                OpenIntroCurve;                                             // 0x0390   (0x0008)  
	class UCurveVector*                                OpenLoopCurve;                                              // 0x0398   (0x0008)  
	class UCurveVector*                                OpenOutroCurve;                                             // 0x03A0   (0x0008)  
	class UCurveVector*                                OpenFailCurve;                                              // 0x03A8   (0x0008)  
	class UCurveVector*                                CloseIntroCurve;                                            // 0x03B0   (0x0008)  
	class UCurveVector*                                CloseOutroCurve;                                            // 0x03B8   (0x0008)  
	class UCurveVector*                                DestroyIntroCurve;                                          // 0x03C0   (0x0008)  
	class UCurveVector*                                DestroyOutroCurve;                                          // 0x03C8   (0x0008)  
	class UCurveVector*                                PoseOpenCurve;                                              // 0x03D0   (0x0008)  
	class UCurveVector*                                PoseClosedCurve;                                            // 0x03D8   (0x0008)  
	TMap<float, class UAkAudioEvent*>                  OpenFailAudioEvents;                                        // 0x03E0   (0x0050)  
	FTimerHandle                                       InterruptMontageEndTimer;                                   // 0x0430   (0x0008)  
	float                                              ClosingInterruptRevertBlend;                                // 0x0438   (0x0004)  
	float                                              OpeningInterruptRevertBlend;                                // 0x043C   (0x0004)  
	class UAkPortalComponent*                          AkPortalPtr;                                                // 0x0440   (0x0008)  
	char                                               BoltholeFlags;                                              // 0x0448   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0449   (0x0007)  MISSED
	class ABBQGameSessionCharacterAnimated*            MinigameInstigator;                                         // 0x0450   (0x0008)  
	class UCurveVector*                                NetworkAnimCurve;                                           // 0x0458   (0x0008)  
	EEndMinigameReason                                 MinigameEndReason;                                          // 0x0460   (0x0001)  
	bool                                               bIsSpamOpen;                                                // 0x0461   (0x0001)  
	unsigned char                                      UnknownData04_6[0x2];                                       // 0x0462   (0x0002)  MISSED
	float                                              NetworkAnimStart;                                           // 0x0464   (0x0004)  
	float                                              NetworkAnimPlayRate;                                        // 0x0468   (0x0004)  
	bool                                               NetworkAnimLooping;                                         // 0x046C   (0x0001)  
	bool                                               NetworkAnimReverse;                                         // 0x046D   (0x0001)  
	unsigned char                                      UnknownData05_6[0x2];                                       // 0x046E   (0x0002)  MISSED
	class ABBQMinigameV2*                              MinigameInst_Opening;                                       // 0x0470   (0x0008)  
	unsigned char                                      UnknownData06_7[0x8];                                       // 0x0478   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQBoltholeBase.UpdateBoltholeSpammedState
	void UpdateBoltholeSpammedState(bool bNewState) // [0x1e0b610] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(bNewState);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.ServerOnMinigameEnded
	void ServerOnMinigameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason Reason) // [0x1e0b140] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Minigame, Reason);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.ServerOnBoltholeOpened
	void ServerOnBoltholeOpened(bool WithNoise) // [0x1e0b0b0] Native|Event|Protected|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(WithNoise);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.ServerOnBoltholeDestroyingEnded
	void ServerOnBoltholeDestroyingEnded(bool successful, bool IsDestroyedByLeatherface) // [0x1e0afd0] Native|Event|Protected|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(successful, IsDestroyedByLeatherface);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.ServerOnBoltholeBlockingEnded
	void ServerOnBoltholeBlockingEnded(ABBQBaseCharacter* Character, bool successful) // [0x1e0af00] Native|Event|Protected|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQBaseCharacter*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Character, successful);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.PerfromBoltholeMelee
	void PerfromBoltholeMelee(ABBQBaseCharacter* BBQChar) // [0x1e0abf0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQBaseCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(BBQChar);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.OnSuccessAnimEnded
	void OnSuccessAnimEnded() // [0x1e0a8b0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.OnSlideInPlaceFinished
	void OnSlideInPlaceFinished(ABBQGameSessionCharacterAnimated* Character, bool bWasInterrupted) // [0x1e0ab20] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(Character, bWasInterrupted);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.OnRep_MinigameInstigator
	void OnRep_MinigameInstigator(ABBQGameSessionCharacterAnimated* InOld) // [0x1e0aa90] Final|Native|Private 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(InOld);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.OnRep_BoltholeFlags
	void OnRep_BoltholeFlags(char InOldFlags) // [0x1e0aa10] Final|Native|Private 
	{
		typedef void (*FuncPtr)(char);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(InOldFlags);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.OnRep_AnimCurve
	void OnRep_AnimCurve(UCurveVector* InOldCurve) // [0x1e0a980] Final|Native|Private 
	{
		typedef void (*FuncPtr)(UCurveVector*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(InOldCurve);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.OnOpeningMinigameStarted
	void OnOpeningMinigameStarted(ABBQBaseCharacter* BBQChar) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQBaseCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(BBQChar);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.OnOpeningMinigameEnded
	void OnOpeningMinigameEnded(EEndMinigameReason Reason) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(Reason);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.OnIntroCurveEnded
	void OnIntroCurveEnded() // [0x1e0a8d0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.OnInterruptAnimEnded
	void OnInterruptAnimEnded() // [0x1e0a8b0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.NetMulticast_PlaySFX
	void NetMulticast_PlaySFX(UAkAudioEvent* AkEvent) // [0x1e0a820] Net|Native|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(UAkAudioEvent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(AkEvent);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.MoveThroughHole
	void MoveThroughHole(ABBQGameSessionCharacterAnimated*& InCharacter) // [0x1e0a790] Final|BlueprintAuthorityOnly|Native|Protected|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(InCharacter);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.IsOpened
	bool IsOpened() // [0x1e0a690] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.IsDestroying
	bool IsDestroying() // [0x1e0a660] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.IsDestroyed
	bool IsDestroyed() // [0x1e0a630] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.IsClosed
	bool IsClosed() // [0x1e0a600] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.IsBeingOpened
	bool IsBeingOpened() // [0x1e0a5d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.IsBarricading
	bool IsBarricading() // [0x1e0a5a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.IsBarbWired
	bool IsBarbWired() // [0x1e0a570] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.InitializeDestroyStateVisuals
	void InitializeDestroyStateVisuals() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.HasActivePortal
	bool HasActivePortal() // [0x1e0a4a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.GetMinigameInstigator
	ABBQGameSessionCharacterAnimated* GetMinigameInstigator() // [0x1e0a270] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacterAnimated* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.BP_OnDestroyed
	void BP_OnDestroyed() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.Auth_StartBoltholeOpening
	void Auth_StartBoltholeOpening(ABBQGameSessionCharacterAnimated*& InCharacter) // [0x1e0a030] Final|BlueprintAuthorityOnly|Native|Protected|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		func(InCharacter);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.Auth_OnOpeningMinigameEnded
	void Auth_OnOpeningMinigameEnded(EEndMinigameReason Reason, bool bOpenedBySpam) // [0x1e09f60] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EEndMinigameReason, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		func(Reason, bOpenedBySpam);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.Auth_DestroyHole
	void Auth_DestroyHole() // [0x1e09f40] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.Auth_BlockHole
	void Auth_BlockHole() // [0x1e09f20] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		func();
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.AnimUpdate
	void AnimUpdate(FVector CurveVector) // [0x1e09e90] Final|Native|Protected|HasDefaults 
	{
		typedef void (*FuncPtr)(FVector);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		func(CurveVector);
	}
	// Function /Script/BBQGameSession.BBQBoltholeBase.AnimFinished
	void AnimFinished() // [0x1e09e70] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQBoxComponent
/// Size: 0x0490 (1168 bytes) (0x000490 - 0x000490) align 16 MaxSize: 0x0490
class UBBQBoxComponent : public UBoxComponent
{ 
public:
};

/// Class /Script/BBQGameSession.BBQCalculationBleedingOutRate
/// Size: 0x0088 (136 bytes) (0x000040 - 0x000088) align 8 MaxSize: 0x0088
class UBBQCalculationBleedingOutRate : public UBBQGameplayModMagnitudeCalc
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0040   (0x0048)  MISSED
};

/// Class /Script/BBQGameSession.BBQCalculationRestoreChunk
/// Size: 0x0088 (136 bytes) (0x000040 - 0x000088) align 8 MaxSize: 0x0088
class UBBQCalculationRestoreChunk : public UGameplayModMagnitudeCalculation
{ 
public:
	FGameplayAttribute                                 AttributeToRestore;                                         // 0x0040   (0x0038)  
	float                                              ChunkSize;                                                  // 0x0078   (0x0004)  
	char                                               NumberOfChunksToRestore;                                    // 0x007C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x007D   (0x0003)  MISSED
	float                                              MinAmountToRestore;                                         // 0x0080   (0x0004)  
	unsigned char                                      UnknownData01_7[0x4];                                       // 0x0084   (0x0004)  MISSED
};

/// Class /Script/BBQGameSession.BBQCalculationSSACooldown
/// Size: 0x0138 (312 bytes) (0x000040 - 0x000138) align 8 MaxSize: 0x0138
class UBBQCalculationSSACooldown : public UBBQGameplayModMagnitudeCalc
{ 
public:
	FGameplayVariableFloat                             StartingCooldownTime;                                       // 0x0040   (0x0058)  
	FGameplayVariableFloat                             AbilityCooldownTime;                                        // 0x0098   (0x0058)  
	unsigned char                                      UnknownData00_7[0x48];                                      // 0x00F0   (0x0048)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQCalculationSSACooldown.IsStartingCooldown
	bool IsStartingCooldown(FGameplayEffectSpec& Spec) // [0x1e0a6c0] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FGameplayEffectSpec&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(Spec);
	}
	// Function /Script/BBQGameSession.BBQCalculationSSACooldown.GetPerkCharges
	float GetPerkCharges(FGameplayEffectSpec& Spec) // [0x1e0a2d0] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(FGameplayEffectSpec&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(Spec);
	}
};

/// Class /Script/BBQGameSession.ResetCameraOverrideStateAnimNotify
/// Size: 0x0038 (56 bytes) (0x000038 - 0x000038) align 8 MaxSize: 0x0038
class UResetCameraOverrideStateAnimNotify : public UAnimNotify
{ 
public:
};

/// Class /Script/BBQGameSession.BBQCameraComponent
/// Size: 0x0AA0 (2720 bytes) (0x0007E0 - 0x000AA0) align 16 MaxSize: 0x0AA0
class UBBQCameraComponent : public UCameraComponent
{ 
public:
	class UBBQCameraFadingSubobject*                   FadingSubobject;                                            // 0x07E0   (0x0008)  
	class UBBQCameraTerrainFollowSubobject*            TerrainFollowSubobject;                                     // 0x07E8   (0x0008)  
	class UBBQCameraTargetLockSubobject*               TargetLockSubobject;                                        // 0x07F0   (0x0008)  
	class UBBQCameraSuggestedFramingSubobject*         SuggestedFramingSubobject;                                  // 0x07F8   (0x0008)  
	class UClass*                                      FadingSettingsClass;                                        // 0x0800   (0x0008)  
	class UClass*                                      TerrainFollowSettingsClass;                                 // 0x0808   (0x0008)  
	class UClass*                                      TargetLockSettingsClass;                                    // 0x0810   (0x0008)  
	class UClass*                                      DefaultFramingSettingsClass;                                // 0x0818   (0x0008)  
	bool                                               bTickOnlyWhenLocallyControlledOrSpectated;                  // 0x0820   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0821   (0x0007)  MISSED
	bool                                               bEnableAutoRotate;                                          // 0x0828   (0x0001)  
	bool                                               bEnableAutoRotateInIdle;                                    // 0x0829   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x082A   (0x0002)  MISSED
	int32_t                                            AutoRotateCameraRotationMode;                               // 0x082C   (0x0004)  
	int32_t                                            AutoRotateGait;                                             // 0x0830   (0x0004)  
	float                                              AutoRotateBaseSpeed;                                        // 0x0834   (0x0004)  
	class UCurveFloat*                                 AutoRotateSpeedMultFromMovementSpeedCurve;                  // 0x0838   (0x0008)  
	class UCurveFloat*                                 AutoRotateSpeedMultFromAngularDistanceCurve;                // 0x0840   (0x0008)  
	float                                              AutoRotateDelayAfterUserInput;                              // 0x0848   (0x0004)  
	float                                              AutoRotateDelayAfterStartMoving;                            // 0x084C   (0x0004)  
	float                                              AutoRotateInterpSpeed;                                      // 0x0850   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0854   (0x0004)  MISSED
	class UCurveFloat*                                 AutoRotateInterpSpeedMultFromAngleCurve;                    // 0x0858   (0x0008)  
	unsigned char                                      UnknownData03_6[0x20];                                      // 0x0860   (0x0020)  MISSED
	TMap<FName, FBBQ_Camera_State>                     CameraStates;                                               // 0x0880   (0x0050)  
	unsigned char                                      UnknownData04_6[0xE0];                                      // 0x08D0   (0x00E0)  MISSED
	TArray<FCameraStateBlendable>                      CameraStateBlendables;                                      // 0x09B0   (0x0010)  
	TArray<FCameraStateModifier>                       CameraStateModifiers;                                       // 0x09C0   (0x0010)  
	unsigned char                                      UnknownData05_6[0x70];                                      // 0x09D0   (0x0070)  MISSED
	class UCurveFloat*                                 CameraTransformTransitionCurve;                             // 0x0A40   (0x0008)  
	unsigned char                                      UnknownData06_6[0x4];                                       // 0x0A48   (0x0004)  MISSED
	float                                              TurnRateBase;                                               // 0x0A4C   (0x0004)  
	float                                              PitchRateBase;                                              // 0x0A50   (0x0004)  
	float                                              YawRateAccelerationInputThreshold;                          // 0x0A54   (0x0004)  
	class UCurveFloat*                                 YawRateAccelerationCurve;                                   // 0x0A58   (0x0008)  
	float                                              PitchRateAccelerationInputThreshold;                        // 0x0A60   (0x0004)  
	unsigned char                                      UnknownData07_6[0x4];                                       // 0x0A64   (0x0004)  MISSED
	class UCurveFloat*                                 PitchRateAccelerationCurve;                                 // 0x0A68   (0x0008)  
	float                                              PitchDirection;                                             // 0x0A70   (0x0004)  
	unsigned char                                      UnknownData08_6[0x8];                                       // 0x0A74   (0x0008)  MISSED
	float                                              SideTarget;                                                 // 0x0A7C   (0x0004)  
	float                                              SideMultiplier;                                             // 0x0A80   (0x0004)  
	float                                              SideMultiplierBlendSpeed;                                   // 0x0A84   (0x0004)  
	class UBBQCameraVolumeComponent*                   ControllingCameraVolume;                                    // 0x0A88   (0x0008)  
	unsigned char                                      UnknownData09_6[0x8];                                       // 0x0A90   (0x0008)  MISSED
	class UBBQCameraVolumeComponent*                   ReplicatedCameraVolume;                                     // 0x0A98   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQCameraComponent.SetDesiredCameraState
	void SetDesiredCameraState(FName& StateName, int32_t SlotIdx) // [0x1e0b540] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName&, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(StateName, SlotIdx);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.SetCameraStateOverride
	void SetCameraStateOverride(FName& StateName, bool bBlend, bool bForce) // [0x1e0b410] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName&, bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(StateName, bBlend, bForce);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.SetCameraState
	void SetCameraState(FName& StateName, bool bBlend) // [0x1e0b330] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName&, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(StateName, bBlend);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.Server_SetSideTarget
	void Server_SetSideTarget(float Value) // [0x1e0b2a0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(Value);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.Server_SetReplicatedCameraVolume
	void Server_SetReplicatedCameraVolume(UBBQCameraVolumeComponent* NewVolume) // [0x1e0b210] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)(UBBQCameraVolumeComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(NewVolume);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.RemoveCameraStateModifier
	void RemoveCameraStateModifier(FDataTableRowHandle CameraStateRowHandle, float BlendTime) // [0x1e0ae20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FDataTableRowHandle, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(CameraStateRowHandle, BlendTime);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.RemoveCameraState
	void RemoveCameraState(FName& StateName) // [0x1e0ad90] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(StateName);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.RegisterCameraState
	void RegisterCameraState(FName& StateName, FBBQ_Camera_State& State) // [0x1e0ac80] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName&, FBBQ_Camera_State&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(StateName, State);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.OnRep_ActiveCameraVolume
	void OnRep_ActiveCameraVolume(UBBQCameraVolumeComponent* PrevCameraVolume) // [0x1e0a8f0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UBBQCameraVolumeComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(PrevCameraVolume);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.InvertPitchDirection
	void InvertPitchDirection(bool Value) // [0x1e0a4d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(Value);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.GetTurnRate
	float GetTurnRate() // [0x1e0a470] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.GetTurnMultiplier
	float GetTurnMultiplier() // [0x1e0a450] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.GetTimeSinceUserRotationInput
	float GetTimeSinceUserRotationInput() // [0x1e0a430] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.GetSideTarget
	float GetSideTarget() // [0x1e0a410] Final|Native|Public|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.GetPitchRate
	float GetPitchRate() // [0x1e0a3e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.GetPitchMultiplier
	float GetPitchMultiplier() // [0x1e0a3c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.GetPitchDirection
	float GetPitchDirection() // [0x1e0a3a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.GetMouseTurnMultiplier
	float GetMouseTurnMultiplier() // [0x1e0a2b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.GetMousePitchMultiplier
	float GetMousePitchMultiplier() // [0x1e0a290] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.ClearDesiredCameraState
	void ClearDesiredCameraState(FName& StateName, int32_t SlotIdx) // [0x1e0a1a0] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName&, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(StateName, SlotIdx);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.ClearCameraStateOverride
	void ClearCameraStateOverride(FName& StateName, bool bBlend) // [0x1e0a0c0] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName&, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(StateName, bBlend);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.AddYawInputRate
	void AddYawInputRate(float Value) // [0x1e09df0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func(Value);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.AddYawInput
	void AddYawInput(float Value) // [0x1e09df0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func(Value);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.AddPitchInputRate
	void AddPitchInputRate(float Value) // [0x1e09d70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		func(Value);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.AddPitchInput
	void AddPitchInput(float Value) // [0x1e09cf0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		func(Value);
	}
	// Function /Script/BBQGameSession.BBQCameraComponent.AddCameraStateModifier
	void AddCameraStateModifier(FDataTableRowHandle CameraStateRowHandle, float BlendTime) // [0x1e09c10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FDataTableRowHandle, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		func(CameraStateRowHandle, BlendTime);
	}
};

/// Class /Script/BBQGameSession.BBQCameraFadingSettings
/// Size: 0x0080 (128 bytes) (0x000028 - 0x000080) align 8 MaxSize: 0x0080
class UBBQCameraFadingSettings : public UObject
{ 
public:
	float                                              FadeInTime;                                                 // 0x0028   (0x0004)  
	float                                              FadeOutTime;                                                // 0x002C   (0x0004)  
	FName                                              MaterialParamName;                                          // 0x0030   (0x0008)  
	class UCurveFloat*                                 MaterialParamValueCurve;                                    // 0x0038   (0x0008)  
	TEnumAsByte<ECollisionChannel>                     CollisionChannel;                                           // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0041   (0x0003)  MISSED
	FName                                              ObstructingActorsToFadeTag;                                 // 0x0044   (0x0008)  
	FName                                              CollidingActorsToFadeTag;                                   // 0x004C   (0x0008)  
	float                                              CameraCollisionRadius;                                      // 0x0054   (0x0004)  
	float                                              PlayerCapsuleRadiusScale;                                   // 0x0058   (0x0004)  
	float                                              MinCharacterDistance;                                       // 0x005C   (0x0004)  
	float                                              CharacterFadeInTime;                                        // 0x0060   (0x0004)  
	float                                              CharacterFadeOutTime;                                       // 0x0064   (0x0004)  
	FName                                              CharacterMaterialParamName;                                 // 0x0068   (0x0008)  
	class UCurveFloat*                                 CharacterMaterialParamValueCurve;                           // 0x0070   (0x0008)  
	float                                              CharacterHidingFadeValueThreshold;                          // 0x0078   (0x0004)  
	unsigned char                                      UnknownData01_7[0x4];                                       // 0x007C   (0x0004)  MISSED
};

/// Class /Script/BBQGameSession.BBQCameraFadingSubobject
/// Size: 0x0038 (56 bytes) (0x000028 - 0x000038) align 8 MaxSize: 0x0038
class UBBQCameraFadingSubobject : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/BBQGameSession.BBQCameraShake
/// Size: 0x01B0 (432 bytes) (0x0001B0 - 0x0001B0) align 16 MaxSize: 0x01B0
class UBBQCameraShake : public UMatineeCameraShake
{ 
public:
};

/// Class /Script/BBQGameSession.BBQAnimNotify_CameraShake
/// Size: 0x0058 (88 bytes) (0x000038 - 0x000058) align 8 MaxSize: 0x0058
class UBBQAnimNotify_CameraShake : public UAnimNotify
{ 
public:
	class UClass*                                      ShakeClass;                                                 // 0x0038   (0x0008)  
	float                                              Scale;                                                      // 0x0040   (0x0004)  
	ECameraShakePlaySpace                              PlaySpace;                                                  // 0x0044   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0045   (0x0003)  MISSED
	FRotator                                           UserPlaySpaceRot;                                           // 0x0048   (0x000C)  
	bool                                               bApplyToAllLocalPlayers;                                    // 0x0054   (0x0001)  
	unsigned char                                      UnknownData01_7[0x3];                                       // 0x0055   (0x0003)  MISSED
};

/// Class /Script/BBQGameSession.BBQCameraFramingSettings
/// Size: 0x0098 (152 bytes) (0x000028 - 0x000098) align 8 MaxSize: 0x0098
class UBBQCameraFramingSettings : public UObject
{ 
public:
	FName                                              Origin_PlayerCharacterSocketOrBone;                         // 0x0028   (0x0008)  
	FName                                              Origin_OtherCharacterSocketOrBone;                          // 0x0030   (0x0008)  
	float                                              Origin_PlayerToOtherRatio;                                  // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
	TArray<FBBQCameraFramingOffset>                    Origin_OffsetList;                                          // 0x0040   (0x0010)  
	FName                                              Target_PlayerCharacterSocketOrBone;                         // 0x0050   (0x0008)  
	FName                                              Target_OtherCharacterSocketOrBone;                          // 0x0058   (0x0008)  
	float                                              Target_PlayerToOtherRatio;                                  // 0x0060   (0x0004)  
	float                                              Target_HeightOffset;                                        // 0x0064   (0x0004)  
	float                                              BlendInTime;                                                // 0x0068   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x006C   (0x0004)  MISSED
	class UCurveFloat*                                 BlendInCurve;                                               // 0x0070   (0x0008)  
	float                                              BlendOutTime;                                               // 0x0078   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x007C   (0x0004)  MISSED
	class UCurveFloat*                                 BlendOutCurve;                                              // 0x0080   (0x0008)  
	float                                              Duration;                                                   // 0x0088   (0x0004)  
	FName                                              CameraState;                                                // 0x008C   (0x0008)  
	unsigned char                                      UnknownData03_7[0x4];                                       // 0x0094   (0x0004)  MISSED
};

/// Class /Script/BBQGameSession.BBQCameraSuggestedFramingSubobject
/// Size: 0x0088 (136 bytes) (0x000028 - 0x000088) align 8 MaxSize: 0x0088
class UBBQCameraSuggestedFramingSubobject : public UObject
{ 
public:
	class UBBQCameraComponent*                         OwningCamera;                                               // 0x0028   (0x0008)  
	class UBBQCameraFramingSettings*                   CurrentFramingSettings;                                     // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_6[0x40];                                      // 0x0038   (0x0040)  MISSED
	class ABBQGameSessionCharacter*                    PlayerCharacter;                                            // 0x0078   (0x0008)  
	class ABBQGameSessionCharacter*                    OtherCharacter;                                             // 0x0080   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQCameraTargetLockSettings
/// Size: 0x0040 (64 bytes) (0x000028 - 0x000040) align 8 MaxSize: 0x0040
class UBBQCameraTargetLockSettings : public UObject
{ 
public:
	float                                              CameraRotationInterpSpeed;                                  // 0x0028   (0x0004)  
	float                                              FieldOfViewPercentageHorizontal;                            // 0x002C   (0x0004)  
	float                                              FieldOfViewPercentageVertical;                              // 0x0030   (0x0004)  
	float                                              PlayerInputDeltaThreshold;                                  // 0x0034   (0x0004)  
	float                                              DelayAfterPlayerInput;                                      // 0x0038   (0x0004)  
	TEnumAsByte<ECollisionChannel>                     CheckVisibilityTraceChannel;                                // 0x003C   (0x0001)  
	unsigned char                                      UnknownData00_7[0x3];                                       // 0x003D   (0x0003)  MISSED
};

/// Class /Script/BBQGameSession.BBQCameraTargetLockSubobject
/// Size: 0x0050 (80 bytes) (0x000028 - 0x000050) align 8 MaxSize: 0x0050
class UBBQCameraTargetLockSubobject : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0028   (0x0028)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQCameraTargetLockSubobject.UnregisterTargetActor
	void UnregisterTargetActor(AActor* TargetActor) // [0x143c500] Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(TargetActor);
	}
	// Function /Script/BBQGameSession.BBQCameraTargetLockSubobject.UnregisterCameraTargetActor
	void UnregisterCameraTargetActor(UObject* WorldContextObject, AActor* TargetActor) // [0x1e10640] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UObject*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(WorldContextObject, TargetActor);
	}
	// Function /Script/BBQGameSession.BBQCameraTargetLockSubobject.RegisterTargetActor
	void RegisterTargetActor(AActor* TargetActor, int32_t Priority, float MaxDistance, float LockDuration, bool bStartTimerOnFirstActivation, bool bCheckVisibility) // [0x1e10370] Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, int32_t, float, float, bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(TargetActor, Priority, MaxDistance, LockDuration, bStartTimerOnFirstActivation, bCheckVisibility);
	}
	// Function /Script/BBQGameSession.BBQCameraTargetLockSubobject.RegisterCameraTargetActor
	void RegisterCameraTargetActor(UObject* WorldContextObject, AActor* TargetActor, int32_t Priority, float MaxDistance, float LockDuration, bool bStartTimerOnFirstActivation, bool bCheckVisibility) // [0x1e10160] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UObject*, AActor*, int32_t, float, float, bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(WorldContextObject, TargetActor, Priority, MaxDistance, LockDuration, bStartTimerOnFirstActivation, bCheckVisibility);
	}
	// Function /Script/BBQGameSession.BBQCameraTargetLockSubobject.GetCurrentTargetActor
	AActor* GetCurrentTargetActor() // [0x1e0fca0] Final|Native|Public|BlueprintCallable 
	{
		typedef class AActor* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQCameraTerrainFollowSettings
/// Size: 0x0068 (104 bytes) (0x000028 - 0x000068) align 8 MaxSize: 0x0068
class UBBQCameraTerrainFollowSettings : public UObject
{ 
public:
	class UCurveVector*                                PositionOffsetCurve;                                        // 0x0028   (0x0008)  
	float                                              PositionOffsetInterpSpeed;                                  // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
	class UCurveVector*                                TargetOffsetCurve;                                          // 0x0038   (0x0008)  
	float                                              TargetOffsetInterpSpeed;                                    // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
	class UCurveFloat*                                 PitchOffsetCurve;                                           // 0x0048   (0x0008)  
	float                                              PitchOffsetInterpSpeed;                                     // 0x0050   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0054   (0x0004)  MISSED
	class UCurveFloat*                                 TerrainTracePointOffsetCurve;                               // 0x0058   (0x0008)  
	float                                              AverageSlopeAngleSampleTime;                                // 0x0060   (0x0004)  
	float                                              TraceCircleRadius;                                          // 0x0064   (0x0004)  
};

/// Class /Script/BBQGameSession.BBQCameraTerrainFollowSubobject
/// Size: 0x0168 (360 bytes) (0x000028 - 0x000168) align 8 MaxSize: 0x0168
class UBBQCameraTerrainFollowSubobject : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x140];                                     // 0x0028   (0x0140)  MISSED
};

/// Class /Script/BBQGameSession.BBQCar
/// Size: 0x0240 (576 bytes) (0x000228 - 0x000240) align 8 MaxSize: 0x0240
class ABBQCar : public AActor
{ 
public:
	class UAnimSequence*                               HidingSpotEnterSlaveAnim;                                   // 0x0228   (0x0008)  
	class UAnimSequence*                               HidingSpotLeaveSlaveAnim;                                   // 0x0230   (0x0008)  
	class UAnimSequence*                               HidingSpotBurstOutSlaveAnim;                                // 0x0238   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQCattleGridJunction
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQCattleGridJunction : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQNotifyState_ChainsawPendingOverheat
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UBBQNotifyState_ChainsawPendingOverheat : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.BBQNotifyState_ChainsawRevvingDisabled
/// Size: 0x0040 (64 bytes) (0x000030 - 0x000040) align 8 MaxSize: 0x0040
class UBBQNotifyState_ChainsawRevvingDisabled : public UAnimNotifyState
{ 
public:
	float                                              RevvingCooldown;                                            // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
	class UBBQChainsawComponent*                       CachedChainsawComp;                                         // 0x0038   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQChainsawComponent
/// Size: 0x04D8 (1240 bytes) (0x0000B0 - 0x0004D8) align 8 MaxSize: 0x04D8
class UBBQChainsawComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_8[0x8];                                       // 0x00B0   (0x0008)  MISSED
	FGameplayVariableFloat                             RevHeatPerSecond;                                           // 0x00B8   (0x0058)  
	FGameplayVariableFloat                             HeatLostPerSecond;                                          // 0x0110   (0x0058)  
	FGameplayVariableFloat                             HeatGainPerSecond;                                          // 0x0168   (0x0058)  
	FGameplayVariableFloat                             HeatAttackMultiplier;                                       // 0x01C0   (0x0058)  
	FGameplayVariableFloat                             OverheatDuration;                                           // 0x0218   (0x0058)  
	FGameplayVariableFloat                             StallDuration;                                              // 0x0270   (0x0058)  
	float                                              NeutralHeat;                                                // 0x02C8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x02CC   (0x0004)  MISSED
	class UCurveFloat*                                 RevHeatCurve;                                               // 0x02D0   (0x0008)  
	float                                              RevGracePeriod;                                             // 0x02D8   (0x0004)  
	bool                                               bCanOverheat;                                               // 0x02DC   (0x0001)  
	bool                                               bCanStall;                                                  // 0x02DD   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x02DE   (0x0002)  MISSED
	class UClass*                                      ActivationMinigameClass;                                    // 0x02E0   (0x0008)  
	float                                              RPM_Max;                                                    // 0x02E8   (0x0004)  
	float                                              RPM_Idle;                                                   // 0x02EC   (0x0004)  
	float                                              RPM_Idle_Acceleration;                                      // 0x02F0   (0x0004)  
	float                                              RPM_Idle_Deceleration;                                      // 0x02F4   (0x0004)  
	float                                              RPM_Revving_Acceleration;                                   // 0x02F8   (0x0004)  
	float                                              RPM_Cutting_Max;                                            // 0x02FC   (0x0004)  
	float                                              RPM_Cutting_Deceleration;                                   // 0x0300   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0304   (0x0004)  MISSED
	class UCurveFloat*                                 RPM_AccelerationCurve;                                      // 0x0308   (0x0008)  
	class UCurveFloat*                                 RPM_DecelerationCurve;                                      // 0x0310   (0x0008)  
	class UAkAudioEvent*                               AkEvent_TurnOn;                                             // 0x0318   (0x0008)  
	class UAkAudioEvent*                               AkEvent_TurnOn3P;                                           // 0x0320   (0x0008)  
	class UAkAudioEvent*                               AkEvent_TurnOff;                                            // 0x0328   (0x0008)  
	class UAkAudioEvent*                               AkEvent_TurnOff3P;                                          // 0x0330   (0x0008)  
	class UAkAudioEvent*                               AkEvent_Stall_Manual;                                       // 0x0338   (0x0008)  
	class UAkAudioEvent*                               AkEvent_Stall_LowHeat;                                      // 0x0340   (0x0008)  
	class UAkAudioEvent*                               AkEvent_Overheat;                                           // 0x0348   (0x0008)  
	class UAkAudioEvent*                               AkEvent_Overheat_Loop;                                      // 0x0350   (0x0008)  
	class UAkAudioEvent*                               AkEvent_Overheat_End;                                       // 0x0358   (0x0008)  
	class UAkRtpc*                                     AkRtpc_EngineRPM;                                           // 0x0360   (0x0008)  
	class UAkRtpc*                                     AkRtpc_EngineOnloading;                                     // 0x0368   (0x0008)  
	class UAkRtpc*                                     AkRtpc_Heat;                                                // 0x0370   (0x0008)  
	class UAkRtpc*                                     AkRtpc_Stalling;                                            // 0x0378   (0x0008)  
	float                                              StallingRtpcStart;                                          // 0x0380   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x0384   (0x0004)  MISSED
	TArray<FChainsawHeatLevelTag>                      ChainsawHeatLevelTags;                                      // 0x0388   (0x0010)  
	FGameplayTag                                       ChainsawStateTags[5];                                       // 0x0398   (0x0028)  
	FGameplayTag                                       ChainsawRevvingTag;                                         // 0x03C0   (0x0008)  
	FGameplayTagContainer                              ChainsawDisabledTags;                                       // 0x03C8   (0x0020)  
	FGameplayTagContainer                              ChainsawTurnOffTags;                                        // 0x03E8   (0x0020)  
	bool                                               bUsePrimaryAbilityToggleBinding;                            // 0x0408   (0x0001)  
	unsigned char                                      UnknownData05_6[0x17];                                      // 0x0409   (0x0017)  MISSED
	SDK_UNDEFINED(16,489) /* FMulticastInlineDelegate */ __um(ChainsawStateChange);                                // 0x0420   (0x0010)  
	SDK_UNDEFINED(16,490) /* FMulticastInlineDelegate */ __um(ChainsawHeatThresholdReached);                       // 0x0430   (0x0010)  
	SDK_UNDEFINED(16,491) /* FMulticastInlineDelegate */ __um(ChainsawTurnOnAttemptedWhileOverheated);             // 0x0440   (0x0010)  
	EChainsawState                                     CurrentChainsawState;                                       // 0x0450   (0x0001)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x0451   (0x0003)  MISSED
	float                                              OverheatStartServerTime;                                    // 0x0454   (0x0004)  
	float                                              UnderheatStartServerTime;                                   // 0x0458   (0x0004)  
	unsigned char                                      UnknownData07_6[0x4];                                       // 0x045C   (0x0004)  MISSED
	float                                              CurrentHeatLevel;                                           // 0x0460   (0x0004)  
	float                                              CurrentHeatLevelFromServer;                                 // 0x0464   (0x0004)  
	unsigned char                                      UnknownData08_6[0xC];                                       // 0x0468   (0x000C)  MISSED
	float                                              CurrentRevLevelFromServer;                                  // 0x0474   (0x0004)  
	unsigned char                                      UnknownData09_6[0xC];                                       // 0x0478   (0x000C)  MISSED
	float                                              PendingHeatAmount;                                          // 0x0484   (0x0004)  
	unsigned char                                      UnknownData10_6[0x18];                                      // 0x0488   (0x0018)  MISSED
	class UAbilitySystemComponent*                     OwnerASC;                                                   // 0x04A0   (0x0008)  
	class ABBQMinigameV2*                              ActivationMinigameInstance;                                 // 0x04A8   (0x0008)  
	class UAkComponent*                                OwnerAkComponent;                                           // 0x04B0   (0x0008)  
	unsigned char                                      UnknownData11_7[0x20];                                      // 0x04B8   (0x0020)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQChainsawComponent.ShouldShowLegacyHUD
	bool ShouldShowLegacyHUD() // [0x1e02100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.Server_TurnOn
	void Server_TurnOn() // [0x1e10620] Final|Net|NetReliableNative|Event|Private|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.Server_TurnOff
	void Server_TurnOff() // [0x1e10600] Final|Net|NetReliableNative|Event|Private|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.Server_SetRevValue
	void Server_SetRevValue(float RevValue) // [0x1e10570] Final|Net|NetReliableNative|Event|Private|NetServer 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(RevValue);
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.ReplicateToSimulatedClientsOnly
	void ReplicateToSimulatedClientsOnly() // [0x1e10550] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.OnTurnOffTagCountChanged
	void OnTurnOffTagCountChanged(FGameplayTag Tag, int32_t Count) // [0x1e10090] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(FGameplayTag, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Tag, Count);
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.OnRep_CurrentRevLevelFromServer
	void OnRep_CurrentRevLevelFromServer() // [0x1e10070] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.OnRep_CurrentHeatLevelFromServer
	void OnRep_CurrentHeatLevelFromServer(float OldValue) // [0x1e0fff0] Final|Native|Private 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(OldValue);
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.OnRep_CurrentHeatLevel
	void OnRep_CurrentHeatLevel(float OldValue) // [0x1e0ff70] Final|Native|Private 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(OldValue);
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.OnRep_ChainsawState
	void OnRep_ChainsawState(EChainsawState PrevChainsawState) // [0x1e0fef0] Final|Native|Private 
	{
		typedef void (*FuncPtr)(EChainsawState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(PrevChainsawState);
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.OnActivationMinigameEnded
	void OnActivationMinigameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason Reason) // [0x1e0fe20] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(Minigame, Reason);
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.GetCurrentRPMPct
	float GetCurrentRPMPct() // [0x1e0fc40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.GetCurrentRPM
	float GetCurrentRPM() // [0x1e0fc10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.GetCurrentRevLevel
	float GetCurrentRevLevel() // [0x1e0fc70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.GetCurrentHeatLevel
	float GetCurrentHeatLevel() // [0x1e0fbe0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.GetCurrentChainsawState
	EChainsawState GetCurrentChainsawState() // [0x1e0fbb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef EChainsawState (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.BP_TurnOn
	void BP_TurnOn() // [0x1e0fb90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func();
	}
	// Function /Script/BBQGameSession.BBQChainsawComponent.BP_TurnOff
	void BP_TurnOff() // [0x1e0fb70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQChainsawProp
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQChainsawProp : public AActor
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQChainsawProp.SetWeaponSkin
	void SetWeaponSkin(UBBQChainsawSkin* WeaponSkin) // [0x2438a30] Event|Public|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UBBQChainsawSkin*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(WeaponSkin);
	}
	// Function /Script/BBQGameSession.BBQChainsawProp.LoadAndSetWeaponSkin
	void LoadAndSetWeaponSkin(UBBQChainsawSkin* WeaponSkin, bool bUseAsyncLoad) // [0x1e0fd50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UBBQChainsawSkin*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(WeaponSkin, bUseAsyncLoad);
	}
};

/// Class /Script/BBQGameSession.BBQExecutionSettings
/// Size: 0x0260 (608 bytes) (0x000030 - 0x000260) align 16 MaxSize: 0x0260
class UBBQExecutionSettings : public UDataAsset
{ 
public:
	FBBQCinematicCameraSetup                           CelebrationCameraSetup;                                     // 0x0030   (0x0048)  
	float                                              CelebrationTime;                                            // 0x0078   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x007C   (0x0004)  MISSED
	TArray<FBBQExecutionProperties>                    ExecutionSetups;                                            // 0x0080   (0x0010)  
	FBBQExecutionProperties                            BackupExecution;                                            // 0x0090   (0x01D0)  


	/// Functions
	// Function /Script/BBQGameSession.BBQExecutionSettings.ValidateExecutionSetups
	void ValidateExecutionSetups() // [0xb888e0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQCharacterAnimSettings
/// Size: 0x0ED0 (3792 bytes) (0x000030 - 0x000ED0) align 8 MaxSize: 0x0ED0
class UBBQCharacterAnimSettings : public UDataAsset
{ 
public:
	class UAnimMontage*                                AnimSlots[254];                                             // 0x0030   (0x07F0)  
	class UAnimMontage*                                AnimSlots_AddOn1[19];                                       // 0x0820   (0x0098)  
	class UAnimMontage*                                HidingSpotAnimSlots[42];                                    // 0x08B8   (0x0150)  
	class UAnimMontage*                                CombatAnimSlots[79];                                        // 0x0A08   (0x0278)  
	TMap<EBBQAnimSlot, class UAnimMontage*>            AnimSlotMap;                                                // 0x0C80   (0x0050)  
	TMap<EBBQAnimSlot_AddOn1, class UAnimMontage*>     AnimSlot_AddOn1_Map;                                        // 0x0CD0   (0x0050)  
	TMap<EBBQHidingSpotAnimSlot, class UAnimMontage*>  HidingSpotAnimSlotMap;                                      // 0x0D20   (0x0050)  
	TMap<EBBQCombatAnimSlot, class UAnimMontage*>      CombatAnimSlotMap;                                          // 0x0D70   (0x0050)  
	TMap<EBBQPairedAnimSlot, FBBQPairedAnimationSet>   PairedAnimSlotSetMap;                                       // 0x0DC0   (0x0050)  
	TWeakObjectPtr<class USkeletalMesh*>               SkeletalMeshPtr;                                            // 0x0E10   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0E18   (0x0020)  MISSED
	class UClass*                                      AnimationClass;                                             // 0x0E38   (0x0008)  
	class UCurveFloat*                                 MantleCurveFloat;                                           // 0x0E40   (0x0008)  
	class UCurveVector*                                Mantle2MPositionCorrectionCurve;                            // 0x0E48   (0x0008)  
	class UCurveVector*                                Mantle1MPositionCorrectionCurve;                            // 0x0E50   (0x0008)  
	class UCurveVector*                                Mantle1MLHPositionCorrectionCurve;                          // 0x0E58   (0x0008)  
	class UCurveVector*                                Mantle1MRHPositionCorrectionCurve;                          // 0x0E60   (0x0008)  
	class UCurveVector*                                Mantle1M2HPositionCorrectionCurve;                          // 0x0E68   (0x0008)  
	class UCurveVector*                                Mantle1MBoxPositionCorrectionCurve;                         // 0x0E70   (0x0008)  
	class UCurveVector*                                MantleWindowPositionCorrectionCurve;                        // 0x0E78   (0x0008)  
	class UCurveVector*                                MantleJumpOverPositionCorrectionCurve;                      // 0x0E80   (0x0008)  
	class UCurveFloat*                                 LadderAttachRotationCurveFloat;                             // 0x0E88   (0x0008)  
	class UCurveFloat*                                 LadderGroundToTopLocationCurveFloat;                        // 0x0E90   (0x0008)  
	class UCurveFloat*                                 LadderTopToGroundLocationCurveFloat;                        // 0x0E98   (0x0008)  
	class UCurveFloat*                                 LadderClimbUpCurveFloat;                                    // 0x0EA0   (0x0008)  
	class UCurveFloat*                                 LadderClimbDownCurveFloat;                                  // 0x0EA8   (0x0008)  
	class UCurveFloat*                                 FallRecoveryCurve;                                          // 0x0EB0   (0x0008)  
	class UCurveVector*                                JumpIntoWellCurveVector;                                    // 0x0EB8   (0x0008)  
	class UCurveVector*                                ClamberIntoWellCurveVector;                                 // 0x0EC0   (0x0008)  
	class UCurveVector*                                BeThrownIntoWellCurveVector;                                // 0x0EC8   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQCharacterAnimSettings.ValidatePairedAnimationSetups
	void ValidatePairedAnimationSetups() // [0xb888e0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCharacterAnimSettings.GetPairedAnimLeaderMontages
	// TArray<UAnimMontage*> GetPairedAnimLeaderMontages();                                                                     // [0x1e0fcd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/BBQGameSession.BBQCharacterAudioComponent
/// Size: 0x0138 (312 bytes) (0x0000B0 - 0x000138) align 8 MaxSize: 0x0138
class UBBQCharacterAudioComponent : public UActorComponent
{ 
public:
	float                                              SeeEnemyDistance;                                           // 0x00B0   (0x0004)  
	float                                              SeeEnemyTimeout;                                            // 0x00B4   (0x0004)  
	float                                              LoseEnemyTimeout;                                           // 0x00B8   (0x0004)  
	float                                              LoseEnemyLongTimeout;                                       // 0x00BC   (0x0004)  
	float                                              ChaseActivationRadius;                                      // 0x00C0   (0x0004)  
	float                                              ChaseActivationDelay;                                       // 0x00C4   (0x0004)  
	float                                              ChaseDeactivationDelay;                                     // 0x00C8   (0x0004)  
	float                                              IdleCommTimeout;                                            // 0x00CC   (0x0004)  
	float                                              IdleCommTickRate;                                           // 0x00D0   (0x0004)  
	float                                              SeeTeammateCommTickRate;                                    // 0x00D4   (0x0004)  
	float                                              SeeTeammateCommCooldown;                                    // 0x00D8   (0x0004)  
	float                                              SeeTeammateCommMaxTimeDifference;                           // 0x00DC   (0x0004)  
	float                                              SeeTeammateCommTriggerRadius;                               // 0x00E0   (0x0004)  
	float                                              SeeVictimEscapeMaxRadius;                                   // 0x00E4   (0x0004)  
	float                                              CommTickInitialDelay;                                       // 0x00E8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x1C];                                      // 0x00EC   (0x001C)  MISSED
	class ABBQGameSessionCharacterAnimated*            OwnerChar;                                                  // 0x0108   (0x0008)  
	class UBBQLineOfSightTrackerSubsystem*             LOSSys;                                                     // 0x0110   (0x0008)  
	unsigned char                                      UnknownData01_7[0x20];                                      // 0x0118   (0x0020)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQCharacterAudioComponent.Server_OnPlayerReceivedControls
	void Server_OnPlayerReceivedControls() // [0x1e10600] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCharacterAudioComponent.NetMulticast_SetDebugStateMachineInfo
	void NetMulticast_SetDebugStateMachineInfo(char SeeEnemyState, char ChasingState) // [0x1e14300] Final|Net|Native|Event|Private|NetClient 
	{
		typedef void (*FuncPtr)(char, char);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(SeeEnemyState, ChasingState);
	}
};

/// Class /Script/BBQGameSession.BBQCharacterBehaviour
/// Size: 0x02E8 (744 bytes) (0x000228 - 0x0002E8) align 8 MaxSize: 0x02E8
class ABBQCharacterBehaviour : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x10];                                      // 0x0228   (0x0010)  MISSED
	FGameplayTagContainer                              TagsWhilstInBehaviour;                                      // 0x0238   (0x0020)  
	FGameplayTagContainer                              TargetTagsWhilstInBehaviour;                                // 0x0258   (0x0020)  
	EBBQBehaviourDispatchType                          BehaviourDispatchType;                                      // 0x0278   (0x0001)  
	bool                                               bResetInputMappingContextOnExit;                            // 0x0279   (0x0001)  
	bool                                               bCancelOnTakeDamage;                                        // 0x027A   (0x0001)  
	bool                                               bCancelOnLosePlayerControl;                                 // 0x027B   (0x0001)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x027C   (0x0004)  MISSED
	FGameplayTagContainer                              CancelOnGainTags;                                           // 0x0280   (0x0020)  
	FGameplayTagContainer                              CancelOnRemoveTags;                                         // 0x02A0   (0x0020)  
	class AActor*                                      TargetActor;                                                // 0x02C0   (0x0008)  
	float                                              Progress;                                                   // 0x02C8   (0x0004)  
	unsigned char                                      UnknownData02_7[0x1C];                                      // 0x02CC   (0x001C)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQCharacterBehaviour.SetBehaviourProgress
	void SetBehaviourProgress(float NewProgress) // [0x1e14c10] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(NewProgress);
	}
	// Function /Script/BBQGameSession.BBQCharacterBehaviour.Server_SetBehaviourDone
	void Server_SetBehaviourDone() // [0x1e14940] Net|NetReliableNative|Event|Protected|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCharacterBehaviour.RequestCancel
	void RequestCancel() // [0x1e148e0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCharacterBehaviour.OnTakeDamage
	void OnTakeDamage(AActor* DamagedActor, float Damage, UDamageType* DamageType, AController* InstigatedBy, AActor* DamageCauser) // [0x1e146b0] Native|Protected     
	{
		typedef void (*FuncPtr)(AActor*, float, UDamageType*, AController*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(DamagedActor, Damage, DamageType, InstigatedBy, DamageCauser);
	}
	// Function /Script/BBQGameSession.BBQCharacterBehaviour.OnPawnControllerChanged
	void OnPawnControllerChanged(APawn* InPawn, AController* InController) // [0x1e143d0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(APawn*, AController*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(InPawn, InController);
	}
	// Function /Script/BBQGameSession.BBQCharacterBehaviour.GetBehaviourTarget
	AActor* GetBehaviourTarget() // [0x1e13ee0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class AActor* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCharacterBehaviour.GetBehaviourProgress
	float GetBehaviourProgress() // [0x1e13ec0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCharacterBehaviour.BP_OnExitBehaviour
	void BP_OnExitBehaviour(ABBQCharacterBehaviour* NewBehaviour) // [0x1e06fa0] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQCharacterBehaviour*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(NewBehaviour);
	}
	// Function /Script/BBQGameSession.BBQCharacterBehaviour.BP_OnEnterBehaviour
	void BP_OnEnterBehaviour(ABBQCharacterBehaviour* OldBehaviour) // [0x1e071e0] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQCharacterBehaviour*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(OldBehaviour);
	}
};

/// Class /Script/BBQGameSession.BBQCharacterBehaviourComponent
/// Size: 0x00C0 (192 bytes) (0x0000B0 - 0x0000C0) align 8 MaxSize: 0x00C0
class UBBQCharacterBehaviourComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_8[0x8];                                       // 0x00B0   (0x0008)  MISSED
	class ABBQCharacterBehaviour*                      CurrentBehaviour;                                           // 0x00B8   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQCharacterBehaviourComponent.Server_SetCurrentBehaviourDone
	void Server_SetCurrentBehaviourDone() // [0x1e06ef0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCharacterBehaviourComponent.Server_SetCharacterBehaviour
	void Server_SetCharacterBehaviour(UClass* NewBehaviourClass, AActor* TargetActor) // [0x1e14960] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(UClass*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(NewBehaviourClass, TargetActor);
	}
	// Function /Script/BBQGameSession.BBQCharacterBehaviourComponent.OnRep_CurrentBehaviour
	void OnRep_CurrentBehaviour(ABBQCharacterBehaviour* OldBehaviour) // [0x1e14570] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQCharacterBehaviour*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(OldBehaviour);
	}
	// Function /Script/BBQGameSession.BBQCharacterBehaviourComponent.GetCurrentBehaviourProgress
	float GetCurrentBehaviourProgress() // [0x1e13f10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
};

/// Class /Script/BBQGameSession.InventoryTagMapping
/// Size: 0x0080 (128 bytes) (0x000030 - 0x000080) align 8 MaxSize: 0x0080
class UInventoryTagMapping : public UDataAsset
{ 
public:
	TMap<FGameplayTag, class UClass*>                  TagToItemMapping;                                           // 0x0030   (0x0050)  
};

/// Class /Script/BBQGameSession.BBQCharacterInventoryComponent
/// Size: 0x0208 (520 bytes) (0x0000B0 - 0x000208) align 8 MaxSize: 0x0208
class UBBQCharacterInventoryComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_8[0x8];                                       // 0x00B0   (0x0008)  MISSED
	SDK_UNDEFINED(16,492) /* FMulticastInlineDelegate */ __um(OnInventoryChangedEvent);                            // 0x00B8   (0x0010)  
	SDK_UNDEFINED(16,493) /* FMulticastInlineDelegate */ __um(OnItemAddedEvent);                                   // 0x00C8   (0x0010)  
	SDK_UNDEFINED(16,494) /* FMulticastInlineDelegate */ __um(OnItemRemovedEvent);                                 // 0x00D8   (0x0010)  
	SDK_UNDEFINED(16,495) /* FMulticastInlineDelegate */ __um(OnItemEquippedEvent);                                // 0x00E8   (0x0010)  
	SDK_UNDEFINED(16,496) /* FMulticastInlineDelegate */ __um(OnItemDroppedEvent);                                 // 0x00F8   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0108   (0x0010)  MISSED
	class APlayerController*                           OwnerPlayerController;                                      // 0x0118   (0x0008)  
	FGameplayTag                                       InventoryTag;                                               // 0x0120   (0x0008)  
	TArray<FBBQInventoryItem>                          Items;                                                      // 0x0128   (0x0010)  
	FGameplayTag                                       HeldItemTag;                                                // 0x0138   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0140   (0x0008)  MISSED
	class UInventoryTagMapping*                        TagToItemMappingAsset;                                      // 0x0148   (0x0008)  
	TMap<FGameplayTag, EPlayerStatType>                ItemToStatMapping;                                          // 0x0150   (0x0050)  
	TMap<FGameplayTag, FDataTableRowHandle>            ItemToEventMapping;                                         // 0x01A0   (0x0050)  
	unsigned char                                      UnknownData03_6[0x10];                                      // 0x01F0   (0x0010)  MISSED
	class UClass*                                      ConsumeItemCharacterBehaviourClass;                         // 0x0200   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.StopConsumeItemAbility
	void StopConsumeItemAbility() // [0x1e14fa0] Final|Native|Private|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.StartConsumeItemAbility
	void StartConsumeItemAbility() // [0x1e14f80] Final|Native|Private|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.Server_StartConsumeItem
	void Server_StartConsumeItem() // [0x1e06ef0] Final|Net|NetReliableNative|Event|Private|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.Server_SelectRightInventorySlot
	void Server_SelectRightInventorySlot() // [0x1e14920] Final|Net|NetReliableNative|Event|Private|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.Server_SelectLeftInventorySlot
	void Server_SelectLeftInventorySlot() // [0x1e14900] Final|Net|NetReliableNative|Event|Private|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.Server_EquipFirstConsumable
	void Server_EquipFirstConsumable() // [0x1e10600] Final|Net|NetReliableNative|Event|Private|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.Server_DropEquippedItem
	void Server_DropEquippedItem() // [0x1e10620] Final|Net|NetReliableNative|Event|Private|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.RemoveInventoryItem
	void RemoveInventoryItem(FGameplayTag& Tag) // [0x1e14850] Final|Native|Public|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayTag&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(Tag);
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.OnRep_Inventory
	// void OnRep_Inventory(TArray<FBBQInventoryItem>& PreviousItems);                                                          // [0x1e14600] Final|Native|Public|HasOutParms 
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.OnPawnControllerChanged
	void OnPawnControllerChanged(APawn* InPawn, AController* InController) // [0x1e144a0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(APawn*, AController*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(InPawn, InController);
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.OnItemRemoved__DelegateSignature
	void OnItemRemoved__DelegateSignature(FBBQInventoryItem Item) // [0x2438a30] MulticastDelegate|Public|Delegate 
	{
		typedef void (*FuncPtr)(FBBQInventoryItem);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(Item);
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.OnItemEquipped__DelegateSignature
	void OnItemEquipped__DelegateSignature(FBBQInventoryItem& Item) // [0x2438a30] MulticastDelegate|Public|Delegate|HasOutParms 
	{
		typedef void (*FuncPtr)(FBBQInventoryItem&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(Item);
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.OnItemDropped__DelegateSignature
	void OnItemDropped__DelegateSignature(FBBQInventoryItem Item) // [0x2438a30] MulticastDelegate|Public|Delegate 
	{
		typedef void (*FuncPtr)(FBBQInventoryItem);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(Item);
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.OnItemAdded__DelegateSignature
	void OnItemAdded__DelegateSignature(FBBQInventoryItem& Item) // [0x2438a30] MulticastDelegate|Public|Delegate|HasOutParms 
	{
		typedef void (*FuncPtr)(FBBQInventoryItem&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(Item);
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.OnInventoryChanged__DelegateSignature
	// void OnInventoryChanged__DelegateSignature(TArray<FBBQInventoryItem>& Items);                                            // [0x2438a30] MulticastDelegate|Public|Delegate|HasOutParms 
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.IsInventoryFull
	bool IsInventoryFull() // [0x1e14240] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.GetLastDroppedItem
	AActor* GetLastDroppedItem() // [0x1e14100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class AActor* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.GetItems
	// TArray<FBBQInventoryItem> GetItems();                                                                                    // [0x1e140c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.GetInventoryItemCount
	int32_t GetInventoryItemCount(FGameplayTag ItemTag) // [0x1e14020] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		return func(ItemTag);
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.GetHeldItemTag
	FGameplayTag GetHeldItemTag() // [0x1e14000] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FGameplayTag (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.GetEquippedItem
	bool GetEquippedItem(FBBQInventoryItem& FoundItem) // [0x1e13f40] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef bool (*FuncPtr)(FBBQInventoryItem&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		return func(FoundItem);
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.EquipInventoryItem
	void EquipInventoryItem(FGameplayTag& Tag) // [0x1e13da0] Final|Native|Public|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayTag&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func(Tag);
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.DropEquippedItem
	void DropEquippedItem() // [0x1e13c50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCharacterInventoryComponent.AddInventoryItem
	void AddInventoryItem(FGameplayTag& Tag, AActor* ItemEffectInstigator, bool bShouldUpdateInventoryStat) // [0x1e139d0] Final|Native|Public|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayTag&, AActor*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		func(Tag, ItemEffectInstigator, bShouldUpdateInventoryStat);
	}
};

/// Class /Script/BBQGameSession.BBQCharacterMovementComponent
/// Size: 0x1210 (4624 bytes) (0x000AF0 - 0x001210) align 16 MaxSize: 0x1210
class UBBQCharacterMovementComponent : public UCharacterMovementComponent
{ 
public:
	unsigned char                                      UnknownData00_8[0x648];                                     // 0x0AF0   (0x0648)  MISSED
	class UObject*                                     LockOnTarget;                                               // 0x1138   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x1140   (0x0010)  MISSED
	FBBQLockOnTargetInfo                               PotentialLockOnTargets[2];                                  // 0x1150   (0x0020)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x1170   (0x0004)  MISSED
	float                                              PredictFutureTime;                                          // 0x1174   (0x0004)  
	unsigned char                                      UnknownData03_6[0x10];                                      // 0x1178   (0x0010)  MISSED
	TMap<class UPrimitiveComponent*, float>            PredictedOverlaps;                                          // 0x1188   (0x0050)  
	unsigned char                                      UnknownData04_7[0x38];                                      // 0x11D8   (0x0038)  MISSED
};

/// Class /Script/BBQGameSession.BBQCheatManager
/// Size: 0x0228 (552 bytes) (0x0000E0 - 0x000228) align 8 MaxSize: 0x0228
class UBBQCheatManager : public UBBQCoreCheatManager
{ 
public:
	bool                                               bShowPlayerData;                                            // 0x00E0   (0x0001)  
	bool                                               bShowAudioData;                                             // 0x00E1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x00E2   (0x0006)  MISSED
	TArray<FName>                                      GlobalRtpcs;                                                // 0x00E8   (0x0010)  
	FGameplayTag                                       SissyCharacterTag;                                          // 0x00F8   (0x0008)  
	FGameplayTag                                       DELTACharacterTag;                                          // 0x0100   (0x0008)  
	class UClass*                                      PoisonImmuneGE;                                             // 0x0108   (0x0008)  
	class UClass*                                      PowderImmuneGE;                                             // 0x0110   (0x0008)  
	class UClass*                                      PoisonEffectGE;                                             // 0x0118   (0x0008)  
	class UClass*                                      PowderCloudClass;                                           // 0x0120   (0x0008)  
	class UClass*                                      DebugCharacterWidgetClass;                                  // 0x0128   (0x0008)  
	class UUserWidget*                                 DebugCharacterWidget;                                       // 0x0130   (0x0008)  
	bool                                               bIsAssetSelectionActive;                                    // 0x0138   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0139   (0x0007)  MISSED
	TMap<FString, FBBQMapPosition>                     CurrentMapPositions;                                        // 0x0140   (0x0050)  
	FString                                            CurrentMapName;                                             // 0x0190   (0x0010)  
	TArray<FString>                                    SaveAllSequence;                                            // 0x01A0   (0x0010)  
	FTimerHandle                                       StatsDelayTimer;                                            // 0x01B0   (0x0008)  
	int32_t                                            StatsFrameCount;                                            // 0x01B8   (0x0004)  
	int32_t                                            StatsTakeScreenshot;                                        // 0x01BC   (0x0004)  
	FBBQMapPosition                                    OriginalPosition;                                           // 0x01C0   (0x0020)  
	float                                              BBQDebugCameraMovementSpeedScale;                           // 0x01E0   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x01E4   (0x0004)  MISSED
	class AActor*                                      LastActor;                                                  // 0x01E8   (0x0008)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x01F0   (0x0008)  MISSED
	class UClass*                                      EscapeZoneClass;                                            // 0x01F8   (0x0008)  
	FActiveGameplayEffectHandle                        PoisonImmuneGEHandle;                                       // 0x0200   (0x0008)  
	FActiveGameplayEffectHandle                        PowderImmuneGEHandle;                                       // 0x0208   (0x0008)  
	class UBBQGameplayEffect*                          PoisonEffectGECopy;                                         // 0x0210   (0x0008)  
	class ABBQPowderCloud*                             PowderCloudActorInstance;                                   // 0x0218   (0x0008)  
	class AAssetSelectionDebugActor*                   AssetSelectionActor;                                        // 0x0220   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQCheatManager.WinMiniGame
	void WinMiniGame() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.WinGame
	void WinGame(FString Team) // [0x1e13820] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Team);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.WakeUpGrandpa
	void WakeUpGrandpa() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.UpdateMottoPerk
	void UpdateMottoPerk(UClass*& FamilyMottoPerkClass, bool bAddPerk) // [0x1e15070] Final|Exec|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UClass*&, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(FamilyMottoPerkClass, bAddPerk);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.UnlockDoor
	void UnlockDoor() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.UnlimitedWillToLive
	void UnlimitedWillToLive() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.UnlimitedStamina
	void UnlimitedStamina() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.TrySaveLoadoutInGame
	void TrySaveLoadoutInGame(ABBQPlayerState* PlayerState) // [0x19a6a50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQPlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(PlayerState);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleVitalPool
	void ToggleVitalPool(bool bSetToggle) // [0x1e13bc0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(bSetToggle);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.BBQ.EnvironmentDamage.ToggleUseSweepDirectionForDecals
	void BBQ_EnvironmentDamage_ToggleUseSweepDirectionForDecals() // [0xb888e0] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleUnlimitedAbilities
	void ToggleUnlimitedAbilities() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleSneakAttackQuadrants
	void ToggleSneakAttackQuadrants() // [0xb888e0] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleShowStunTime
	void ToggleShowStunTime(bool bIsChecked) // [0x1e13bc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(bIsChecked);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleScreenLogCategory
	void ToggleScreenLogCategory(FName& CategoryName) // [0x1e14fe0] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(CategoryName);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.TogglePlayerData
	void TogglePlayerData() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleLobbyCountdown
	void ToggleLobbyCountdown() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleIsHiddenIconDebug
	void ToggleIsHiddenIconDebug() // [0xb888e0] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleInteractionDebug
	void ToggleInteractionDebug() // [0xb888e0] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleHighlightObjects
	void ToggleHighlightObjects(FString ObjectToHighlight) // [0x1e13820] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(ObjectToHighlight);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleGrandpaDebug
	void ToggleGrandpaDebug() // [0xb888e0] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleEscapeZoneNames
	void ToggleEscapeZoneNames(bool bIsChecked) // [0x1e13bc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(bIsChecked);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleEndlessMode
	void ToggleEndlessMode() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleDebugCharacterName
	void ToggleDebugCharacterName() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleCanSpectateFamily
	void ToggleCanSpectateFamily() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleBloodTrail
	void ToggleBloodTrail() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleBloodPool
	void ToggleBloodPool() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleBBQDebugCamera
	void ToggleBBQDebugCamera() // [0xb888e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.BBQ.Audio.ToggleData
	void BBQ_Audio_ToggleData() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleAssetSelection
	void ToggleAssetSelection(bool bSet) // [0x1e13bc0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		func(bSet);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleAllVictimBleedout
	void ToggleAllVictimBleedout() // [0xb888e0] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleAllInteractionUI
	void ToggleAllInteractionUI(bool bVisibility) // [0x1e13bc0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		func(bVisibility);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleAllDebugAndHUD
	void ToggleAllDebugAndHUD(bool bIsChecked) // [0x1e13bc0] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		func(bIsChecked);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ToggleAllBlendables
	void ToggleAllBlendables(bool bVisibility) // [0x1e13bc0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		func(bVisibility);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SwitchToRayTracingMode
	void SwitchToRayTracingMode() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SwitchToPerformanceMode
	void SwitchToPerformanceMode() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SwitchToNextOutfit
	void SwitchToNextOutfit(bool Forward) // [0x1e13bc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		func(Forward);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SwitchToFidelityMode
	void SwitchToFidelityMode() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SwitchOutfit
	void SwitchOutfit(FName OutfitId) // [0x1e14270] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		func(OutfitId);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SwitchNextOutfit
	void SwitchNextOutfit() // [0x1e14fc0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.StopAllSequences
	void StopAllSequences() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[39]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.StartSpawnFootstepTrail
	void StartSpawnFootstepTrail() // [0xb888e0] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[40]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.StartBloodTrailWithDefination
	void StartBloodTrailWithDefination(FBBQBloodTrailDefinition TrailDef) // [0x1e14ed0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FBBQBloodTrailDefinition);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[41]);
		func(TrailDef);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.StartBloodTrail
	void StartBloodTrail(float StartDelay, float TrailDuration, float SpawnInterval) // [0x1e14120] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float, float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		func(StartDelay, TrailDuration, SpawnInterval);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SpawnObstacles
	void SpawnObstacles(FString ObstacleType) // [0xc5f270] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		func(ObstacleType);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SpawnMultiplayerMinigameV2
	void SpawnMultiplayerMinigameV2(FString MinigameClassPath) // [0xc5f270] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		func(MinigameClassPath);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SpawnMinigameV2
	void SpawnMinigameV2(FString MinigameClassPath) // [0xc5f270] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		func(MinigameClassPath);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ShowFamilyBondPoints
	void ShowFamilyBondPoints(bool InShowFamilyBondPoints) // [0x1e13bc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		func(InShowFamilyBondPoints);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ShowDebugWidget
	void ShowDebugWidget(bool bShow) // [0x1e13bc0] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		func(bShow);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ShowDebugCharacterHUD
	void ShowDebugCharacterHUD(bool bShow) // [0x1e13bc0] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		func(bShow);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetUnlimitedItems
	void SetUnlimitedItems(bool bAreUnlimited) // [0x1e13bc0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		func(bAreUnlimited);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetTimeDilation
	void SetTimeDilation(float NewTimeDilation) // [0x1e13950] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		func(NewTimeDilation);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetTimeBasedBleedout
	void SetTimeBasedBleedout(int32_t Index) // [0x1e138c0] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		func(Index);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetStamina
	void SetStamina(float NewStamina) // [0x1e13950] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		func(NewStamina);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetPowderState
	void SetPowderState(char PowderState) // [0x1e14e50] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(char);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		func(PowderState);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetPoisonState
	void SetPoisonState(char PoisonState) // [0x1e14e50] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(char);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		func(PoisonState);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetMovementSpeed
	void SetMovementSpeed(FString Mode, float NewSpeed) // [0x1e14d60] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[55]);
		func(Mode, NewSpeed);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetMercuryFearRatio
	void SetMercuryFearRatio(float FearRatio) // [0x1e13950] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[56]);
		func(FearRatio);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetMaxAttributePoints
	void SetMaxAttributePoints(ABBQPlayerState* PlayerState, int32_t Points) // [0x1e14a30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQPlayerState*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[57]);
		func(PlayerState, Points);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetLookDirection
	void SetLookDirection(float Yaw) // [0x1e13950] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[58]);
		func(Yaw);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetLobbyCountdown
	void SetLobbyCountdown(float InCountdown) // [0x1e13950] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[59]);
		func(InCountdown);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetHealth
	void SetHealth(float NewHealth) // [0x1e13950] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[60]);
		func(NewHealth);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetGeneratorState
	void SetGeneratorState(bool bIsActive, bool bShouldActivateCooldown) // [0x1e14c90] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[61]);
		func(bIsActive, bShouldActivateCooldown);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetFuseBoxState
	void SetFuseBoxState(bool bIsOpen) // [0x1e13bc0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[62]);
		func(bIsOpen);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetForcedPerkLevel
	void SetForcedPerkLevel(int32_t level) // [0x1e138c0] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[63]);
		func(level);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetFamilyBondPoints
	void SetFamilyBondPoints(int32_t NewPoints) // [0x1e138c0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[64]);
		func(NewPoints);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetCameraStateOverride
	void SetCameraStateOverride(FString CameraState) // [0xc5f270] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[65]);
		func(CameraState);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetBrightness
	void SetBrightness(float Setting) // [0x1e13950] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[66]);
		func(Setting);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetBleedoutActive
	void SetBleedoutActive(bool bActive) // [0x1e13bc0] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[67]);
		func(bActive);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetAttributeToLevel
	void SetAttributeToLevel(ABBQPlayerState* PlayerState, FName Attribute, int32_t FinalLevel) // [0x1e14b00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQPlayerState*, FName, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[68]);
		func(PlayerState, Attribute, FinalLevel);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.SetAllAttributesToLevel
	void SetAllAttributesToLevel(ABBQPlayerState* PlayerState, int32_t FinalLevel) // [0x1e14a30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQPlayerState*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[69]);
		func(PlayerState, FinalLevel);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.RevivePlayer
	void RevivePlayer() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[70]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.RestoreAllLocksAndClose
	void RestoreAllLocksAndClose(ABBQGameSessionCharacter* Character, UBBQInteractorComponent* InteractorComponent) // [0x1e13af0] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, UBBQInteractorComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[71]);
		func(Character, InteractorComponent);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.RespecAttributePointsInGame
	void RespecAttributePointsInGame(ABBQPlayerState* PlayerState) // [0x19a6a50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQPlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[72]);
		func(PlayerState);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ResetStarSignPerkLevel
	void ResetStarSignPerkLevel(int32_t level) // [0x1e138c0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[73]);
		func(level);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.RenderQualitySubsystemSuspend
	void RenderQualitySubsystemSuspend() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[74]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.RenderQualitySubsystemResume
	void RenderQualitySubsystemResume() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[75]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.RenderQualitySubsystemReset
	void RenderQualitySubsystemReset() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[76]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ReloadCameraStates
	void ReloadCameraStates() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[77]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.OverrideSonarPingInterval
	void OverrideSonarPingInterval(float Interval) // [0x1e13950] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[78]);
		func(Interval);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.OverrideMaxAssignableMottoPerks
	void OverrideMaxAssignableMottoPerks(int32_t MaxPerksAssignable) // [0x1e138c0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[79]);
		func(MaxPerksAssignable);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.NextPredefinedCameraStats
	void NextPredefinedCameraStats() // [0xb888e0] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[80]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.LoseMiniGame
	void LoseMiniGame() // [0xb888e0] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[81]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.LogSessionInfo
	void LogSessionInfo() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[82]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.LogGrandpaCollision
	void LogGrandpaCollision() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[83]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.LockDoor
	void LockDoor() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[84]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.KillPlayer
	void KillPlayer(FName CharacterName) // [0x1e14270] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[85]);
		func(CharacterName);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.GoToNext
	void GoToNext(FString Object) // [0x1e13820] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[86]);
		func(Object);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.GoToLocation
	void GoToLocation(float X, float Y, float Z) // [0x1e14120] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(float, float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[87]);
		func(X, Y, Z);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.GodMode
	void GodMode() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[88]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.GiveItem
	void GiveItem(FString ItemToGive) // [0x1e13820] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[89]);
		func(ItemToGive);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.GiveBlood
	void GiveBlood(float Amount) // [0x1e13950] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[90]);
		func(Amount);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.GetAllScreenLogCategories
	// TArray<FScreenLogCategory> GetAllScreenLogCategories();                                                                  // [0x1e13e30] Final|Native|Public|BlueprintCallable 
	// Function /Script/BBQGameSession.BBQCheatManager.FrameUnFreeze
	void FrameUnFreeze() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[92]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.FrameFreeze
	void FrameFreeze() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[93]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ForceUpdateMercuryFearHighlightLocal
	void ForceUpdateMercuryFearHighlightLocal() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[94]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ForceSaveAchievements
	void ForceSaveAchievements() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[95]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ExecuteGrandpaAbility
	void ExecuteGrandpaAbility() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[96]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.BBQ.FamilyBond.SetLevel
	void BBQ_FamilyBond_SetLevel(int32_t NewBondLevel) // [0x1e138c0] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[97]);
		func(NewBondLevel);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.BBQ.FamilyBond.SetBankEnabled
	void BBQ_FamilyBond_SetBankEnabled(bool InNewBankState) // [0x1e13bc0] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[98]);
		func(InNewBankState);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.EndActiveMinigameV2
	void EndActiveMinigameV2(FString Reason) // [0xc5f270] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[99]);
		func(Reason);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.EnableVariablesDebug
	void EnableVariablesDebug(bool bEnable, FString Filter) // [0x1e13c70] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool, FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[100]);
		func(bEnable, Filter);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.EnableDebugControls
	void EnableDebugControls() // [0xb888e0] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[101]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.EnableBBQDebugCamera
	void EnableBBQDebugCamera() // [0xb888e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[102]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.DisableBBQDebugCamera
	void DisableBBQDebugCamera() // [0xb888e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[103]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.DestroyObstacles
	void DestroyObstacles() // [0xb888e0] Final|BlueprintAuthorityOnly|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[104]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.DebugUpdateFamilyBondLevel
	void DebugUpdateFamilyBondLevel(int32_t NewBondLevel) // [0x1e138c0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[105]);
		func(NewBondLevel);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.DebugSetfamilyBondBankState
	void DebugSetfamilyBondBankState(bool InNewBankState) // [0x1e13bc0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[106]);
		func(InNewBankState);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ClearCameraStateOverride
	void ClearCameraStateOverride(FString CameraState) // [0xc5f270] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[107]);
		func(CameraState);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.ClearAllScreenLogs
	void ClearAllScreenLogs() // [0xb888e0] Final|Native|Public|BlueprintCallable|Const 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[108]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCheatManager.BreakAllLocksAndOpen
	void BreakAllLocksAndOpen(ABBQGameSessionCharacter* Character, UBBQInteractorComponent* InteractorComponent) // [0x1e13af0] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, UBBQInteractorComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[109]);
		func(Character, InteractorComponent);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.BP_SpawnObstacles
	void BP_SpawnObstacles(FString ObstacleType) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[110]);
		func(ObstacleType);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.BP_OverrideSonarPingInterval
	void BP_OverrideSonarPingInterval(float Interval, ABBQGrandpa* Grandpa) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(float, ABBQGrandpa*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[111]);
		func(Interval, Grandpa);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.BP_OnTryDoorUnlock
	void BP_OnTryDoorUnlock(ABBQGameSessionCharacter* Character) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[112]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.BP_OnTryDoorLock
	void BP_OnTryDoorLock(ABBQGameSessionCharacter* Character) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[113]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.BP_OnPlayerDataToggled
	void BP_OnPlayerDataToggled(bool bIsVisible) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[114]);
		func(bIsVisible);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.BP_OnAudioDataToggled
	void BP_OnAudioDataToggled(bool bIsVisible) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[115]);
		func(bIsVisible);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.AddWillToLive
	void AddWillToLive(float Amount) // [0x1e13950] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[116]);
		func(Amount);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.AddHealth
	void AddHealth(float Amount) // [0x1e13950] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[117]);
		func(Amount);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.AddGainedXp
	void AddGainedXp(int32_t ExperiencePointsDelta) // [0x1e138c0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[118]);
		func(ExperiencePointsDelta);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.AddFamilyBondPoints
	void AddFamilyBondPoints(int32_t Points) // [0x1e138c0] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[119]);
		func(Points);
	}
	// Function /Script/BBQGameSession.BBQCheatManager.AddBleedout
	void AddBleedout(FString TagName) // [0x1e13820] Final|BlueprintAuthorityOnly|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[120]);
		func(TagName);
	}
};

/// Class /Script/BBQGameSession.BBQCinematicCameraModifier
/// Size: 0x0058 (88 bytes) (0x000048 - 0x000058) align 8 MaxSize: 0x0058
class UBBQCinematicCameraModifier : public UCameraModifier
{ 
public:
	unsigned char                                      UnknownData00_8[0x8];                                       // 0x0048   (0x0008)  MISSED
	class ALevelSequenceActor*                         CurrentLevelSequence;                                       // 0x0050   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQCinematicCameraPlayerComponent
/// Size: 0x00F0 (240 bytes) (0x0000B0 - 0x0000F0) align 8 MaxSize: 0x00F0
class UBBQCinematicCameraPlayerComponent : public UActorComponent
{ 
public:
	class ABBQGameSessionCharacter*                    CharacterOwner;                                             // 0x00B0   (0x0008)  
	class ABBQGameSessionCharacter*                    CurrentSecondCharacter;                                     // 0x00B8   (0x0008)  
	class USkeletalMeshComponent*                      CurrentSequenceRootMesh;                                    // 0x00C0   (0x0008)  
	class USkeletalMeshComponent*                      CurrentSequenceOtherMesh;                                   // 0x00C8   (0x0008)  
	class UAnimMontage*                                CurrentSequenceTrackedMontage;                              // 0x00D0   (0x0008)  
	class UBBQLevelSequencePlayer*                     SequencePlayer;                                             // 0x00D8   (0x0008)  
	class ALevelSequenceActor*                         SequenceActor;                                              // 0x00E0   (0x0008)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x00E8   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQCinematicCameraPlayerComponent.OnFinishedSequence
	void OnFinishedSequence() // [0x1e18740] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQCloseEncounterHitFrameState
/// Size: 0x0038 (56 bytes) (0x000030 - 0x000038) align 8 MaxSize: 0x0038
class UBBQCloseEncounterHitFrameState : public UAnimNotifyState
{ 
public:
	EBBQCloseEncounterHitFrameType                     HitFrameType;                                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/BBQGameSession.BBQCloseEncounterComponent
/// Size: 0x02F0 (752 bytes) (0x0000B0 - 0x0002F0) align 16 MaxSize: 0x02F0
class UBBQCloseEncounterComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,497) /* FMulticastInlineDelegate */ __um(OnCloseEncounterResult);                             // 0x00B0   (0x0010)  
	float                                              AreaEffectLineTraceHeight;                                  // 0x00C0   (0x0004)  
	TEnumAsByte<ECollisionChannel>                     AreaEffectLineTraceChannel;                                 // 0x00C4   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x00C5   (0x0003)  MISSED
	class UClass*                                      CloseEncounterDamageType;                                   // 0x00C8   (0x0008)  
	FBBQOutlineRendererConfig                          CloseEncounterParticipantsOutlineConfig;                    // 0x00D0   (0x0098)  
	FNoiseOutlineConfig                                CloseEncounterSpectatorsOutlineConfig;                      // 0x0168   (0x0048)  
	float                                              LineOfSight_NearDistance;                                   // 0x01B0   (0x0004)  
	float                                              LineOfSight_FarDistance;                                    // 0x01B4   (0x0004)  
	float                                              LineOfSight_NearScale;                                      // 0x01B8   (0x0004)  
	float                                              LineOfSight_FarScale;                                       // 0x01BC   (0x0004)  
	float                                              LineOfSight_RadiusScale;                                    // 0x01C0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x1C];                                      // 0x01C4   (0x001C)  MISSED
	class UBBQPairedAnimationComponent*                MyPairedAnimationComponent;                                 // 0x01E0   (0x0008)  
	class UBBQExecutionComponent*                      MyExecutionComponent;                                       // 0x01E8   (0x0008)  
	class UBBQCloseEncounterComponent*                 HostCloseEncounter;                                         // 0x01F0   (0x0008)  
	bool                                               bIsCornered;                                                // 0x01F8   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x01F9   (0x0007)  MISSED
	FBBQCloseEncounterStateRepInfo                     CloseEncounterStateRepInfo;                                 // 0x0200   (0x0080)  
	FCloseEncounterParticipant                         Partner;                                                    // 0x0280   (0x0028)  
	unsigned char                                      UnknownData03_6[0x18];                                      // 0x02A8   (0x0018)  MISSED
	class ABBQMinigameV2*                              MinigameInstance;                                           // 0x02C0   (0x0008)  
	unsigned char                                      UnknownData04_7[0x28];                                      // 0x02C8   (0x0028)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.StartCloseEncounterAsAttacker
	void StartCloseEncounterAsAttacker(FDataTableRowHandle CloseEncounterDefinition, AActor* InDefender) // [0x1e18ae0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FDataTableRowHandle, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(CloseEncounterDefinition, InDefender);
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.Server_BailOutOfCloseEncounter
	void Server_BailOutOfCloseEncounter() // [0x1e10600] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.RegisterMultiplayerMinigameInstance
	void RegisterMultiplayerMinigameInstance(ABBQMultiplayerMinigameV2* InMinigameInstance) // [0x1e18a50] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQMultiplayerMinigameV2*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(InMinigameInstance);
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.RegisterMinigameInstance
	void RegisterMinigameInstance(ABBQMinigameV2* InMinigameInstance) // [0x1e189c0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(InMinigameInstance);
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.ParticipantNonPairedAnimEnded
	void ParticipantNonPairedAnimEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e188f0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.OnRep_CloseEncounterStateRepInfo
	void OnRep_CloseEncounterStateRepInfo() // [0x1e188b0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.OnMinigameSuccess
	void OnMinigameSuccess() // [0x1e18890] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.OnMinigameFail
	void OnMinigameFail() // [0x1e18870] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.OnMinigameEnded
	void OnMinigameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason EndMinigameReason) // [0x1e187a0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(Minigame, EndMinigameReason);
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.OnMinigameCancelOrInterupt
	void OnMinigameCancelOrInterupt() // [0x1e18780] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.OnAttackerStartWinningMinigame
	void OnAttackerStartWinningMinigame() // [0x1e18580] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.NetMulticast_BailOutOfCloseEncounter
	void NetMulticast_BailOutOfCloseEncounter() // [0x1e06ef0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func();
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.IsCurrentlyInCloseEncounter
	bool IsCurrentlyInCloseEncounter() // [0x1e18480] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.IsCurrentCloseEncounter
	bool IsCurrentCloseEncounter(FDataTableRowHandle CloseEncounterDefinition) // [0x1e183d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FDataTableRowHandle);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func(CloseEncounterDefinition);
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.IsCornered
	bool IsCornered() // [0xb71930] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.IsCloseEncounterDebugMode
	bool IsCloseEncounterDebugMode() // [0xd654e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.IsBlockedByCollsion
	bool IsBlockedByCollsion(ABBQGameSessionCharacterAnimated* InitiatingCharacter) // [0x1e18330] Final|Native|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		return func(InitiatingCharacter);
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.InterruptCloseEncounter
	void InterruptCloseEncounter(AActor* Interrupter, ECloseEncounterState InCloseEncounterState, ECERole Winner) // [0x1e181f0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, ECloseEncounterState, ECERole);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(Interrupter, InCloseEncounterState, Winner);
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.ExecutionStarted
	void ExecutionStarted(ABBQGameSessionCharacterAnimated* VictimCharacter) // [0x1e18160] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(VictimCharacter);
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.Auth_SetCloseEncounterStateAndWinner
	void Auth_SetCloseEncounterStateAndWinner(ECloseEncounterState InCloseEncounterState, ECERole InOverrideWinner) // [0x1e18000] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ECloseEncounterState, ECERole);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(InCloseEncounterState, InOverrideWinner);
	}
	// Function /Script/BBQGameSession.BBQCloseEncounterComponent.Auth_SetCloseEncounterState
	void Auth_SetCloseEncounterState(ECloseEncounterState InCloseEncounterState) // [0x1e17f80] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ECloseEncounterState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(InCloseEncounterState);
	}
};

/// Class /Script/BBQGameSession.BBQCollectable
/// Size: 0x0230 (560 bytes) (0x000228 - 0x000230) align 8 MaxSize: 0x0230
class ABBQCollectable : public AActor
{ 
public:
	FGameplayTag                                       InventoryType;                                              // 0x0228   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQDamageType
/// Size: 0x0170 (368 bytes) (0x000040 - 0x000170) align 8 MaxSize: 0x0170
class UBBQDamageType : public UDamageType
{ 
public:
	bool                                               bIncapacitate;                                              // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0041   (0x0003)  MISSED
	FGameplayTag                                       DamageTypeTag;                                              // 0x0044   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x004C   (0x0004)  MISSED
	FGameplayVariableFloat                             BloodToCollect;                                             // 0x0050   (0x0058)  
	FGameplayVariableFloat                             CollectBloodMultiplier;                                     // 0x00A8   (0x0058)  
	FGameplayVariableFloat                             DamageMultiplier;                                           // 0x0100   (0x0058)  
	bool                                               bTriggerEnemyHitDialog;                                     // 0x0158   (0x0001)  
	bool                                               bDealAbsoluteDamage;                                        // 0x0159   (0x0001)  
	unsigned char                                      UnknownData02_6[0x6];                                       // 0x015A   (0x0006)  MISSED
	FDataTableRowHandle                                BloodTrailDefinition;                                       // 0x0160   (0x0010)  
};

/// Class /Script/BBQGameSession.BBQDamageType_DisconnectionTimeout
/// Size: 0x0170 (368 bytes) (0x000170 - 0x000170) align 8 MaxSize: 0x0170
class UBBQDamageType_DisconnectionTimeout : public UBBQDamageType
{ 
public:
};

/// Class /Script/BBQGameSession.BBQInteractionEventComponent
/// Size: 0x02C8 (712 bytes) (0x0000B0 - 0x0002C8) align 8 MaxSize: 0x02C8
class UBBQInteractionEventComponent : public UActorComponent
{ 
public:
	FName                                              EventName;                                                  // 0x00B0   (0x0008)  
	bool                                               bStartEnabled;                                              // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00B9   (0x0007)  MISSED
	class UClass*                                      CharacterBehaviourClass;                                    // 0x00C0   (0x0008)  
	EInteractionEventNotifyType                        NotifyType;                                                 // 0x00C8   (0x0001)  
	EInteractionMethod                                 InteractionMethod;                                          // 0x00C9   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x00CA   (0x0002)  MISSED
	int32_t                                            Priority;                                                   // 0x00CC   (0x0004)  
	bool                                               bIsHoldEvent;                                               // 0x00D0   (0x0001)  
	bool                                               bCanPreHoldButton;                                          // 0x00D1   (0x0001)  
	bool                                               bShouldPerformAttackRangeCheck;                             // 0x00D2   (0x0001)  
	bool                                               bIsHintAlwaysVisible;                                       // 0x00D3   (0x0001)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x00D4   (0x0004)  MISSED
	FText                                              PromptText;                                                 // 0x00D8   (0x0018)  
	EInteractionEventPromptType                        PromptType;                                                 // 0x00F0   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x00F1   (0x0003)  MISSED
	FName                                              UIAssetIdentifier;                                          // 0x00F4   (0x0008)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x00FC   (0x0004)  MISSED
	class UClass*                                      GameplayEffect;                                             // 0x0100   (0x0008)  
	FName                                              CustomConditionsFunction;                                   // 0x0108   (0x0008)  
	ETeamID                                            RequiredTeam;                                               // 0x0110   (0x0001)  
	bool                                               bUserMustBeAligned;                                         // 0x0111   (0x0001)  
	unsigned char                                      UnknownData05_6[0x2];                                       // 0x0112   (0x0002)  MISSED
	FGameplayTag                                       RequiredItemTag;                                            // 0x0114   (0x0008)  
	int32_t                                            RequiredItemCount;                                          // 0x011C   (0x0004)  
	bool                                               bConsumeItem;                                               // 0x0120   (0x0001)  
	unsigned char                                      UnknownData06_6[0x7];                                       // 0x0121   (0x0007)  MISSED
	FText                                              ItemRequiredHint;                                           // 0x0128   (0x0018)  
	class UClass*                                      InteractionType;                                            // 0x0140   (0x0008)  
	FGameplayTagContainer                              RequiredTagsContainer;                                      // 0x0148   (0x0020)  
	FGameplayTagContainer                              ForbiddenTagsContainer;                                     // 0x0168   (0x0020)  
	FGameplayTagContainer                              OwnerRequiredTagsContainer;                                 // 0x0188   (0x0020)  
	FGameplayTagContainer                              OwnerForbiddenTagsContainer;                                // 0x01A8   (0x0020)  
	FGameplayTagContainer                              CombinedRequiredTags;                                       // 0x01C8   (0x0020)  
	FGameplayTagContainer                              CombinedForbiddenTags;                                      // 0x01E8   (0x0020)  
	FGameplayTagContainer                              CombinedOwnerRequiredTags;                                  // 0x0208   (0x0020)  
	FGameplayTagContainer                              CombinedOwnerForbiddenTags;                                 // 0x0228   (0x0020)  
	FText                                              RequiredTagsHint;                                           // 0x0248   (0x0018)  
	FText                                              ForbiddenTagsHint;                                          // 0x0260   (0x0018)  
	bool                                               bPerformInUseCheck;                                         // 0x0278   (0x0001)  
	unsigned char                                      UnknownData07_6[0x7];                                       // 0x0279   (0x0007)  MISSED
	FText                                              InUseHint;                                                  // 0x0280   (0x0018)  
	class UBBQInteractionComponent*                    OwningInteractionComponent;                                 // 0x0298   (0x0008)  
	bool                                               bInteractionEventEnabled;                                   // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData08_7[0x27];                                      // 0x02A1   (0x0027)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQInteractionEventComponent.SetPromptType
	void SetPromptType(EInteractionEventPromptType InPromptType) // [0x1e5a000] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EInteractionEventPromptType);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(InPromptType);
	}
	// Function /Script/BBQGameSession.BBQInteractionEventComponent.SetPromptText
	void SetPromptText(FText& InPromptText) // [0x1e59f30] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FText&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(InPromptText);
	}
	// Function /Script/BBQGameSession.BBQInteractionEventComponent.SetInteractionEventEnabled
	void SetInteractionEventEnabled(bool bInEnabled) // [0x1e59d10] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(bInEnabled);
	}
	// Function /Script/BBQGameSession.BBQInteractionEventComponent.NetMulticast_OnTriggered
	void NetMulticast_OnTriggered(AActor* Instigator) // [0x1e59760] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(Instigator);
	}
	// Function /Script/BBQGameSession.BBQInteractionEventComponent.IsInteractionEventEnabled
	bool IsInteractionEventEnabled() // [0x1e59530] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQInteractionEventComponent.GetPriority
	int32_t GetPriority() // [0x1e59360] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQCombatInteractionEvent
/// Size: 0x02D8 (728 bytes) (0x0002C8 - 0x0002D8) align 8 MaxSize: 0x02D8
class UBBQCombatInteractionEvent : public UBBQInteractionEventComponent
{ 
public:
	float                                              CombatInteractionRangeHorizontal;                           // 0x02C8   (0x0004)  
	float                                              CombatInteractionRangeVertical;                             // 0x02CC   (0x0004)  
	float                                              CombatInteractionArc;                                       // 0x02D0   (0x0004)  
	bool                                               bIsBackstabInteraction;                                     // 0x02D4   (0x0001)  
	unsigned char                                      UnknownData00_7[0x3];                                       // 0x02D5   (0x0003)  MISSED
};

/// Class /Script/BBQGameSession.BBQCommTriggerBox
/// Size: 0x0248 (584 bytes) (0x000230 - 0x000248) align 8 MaxSize: 0x0248
class ABBQCommTriggerBox : public ATriggerBox
{ 
public:
	FGameplayTag                                       CommTag;                                                    // 0x0230   (0x0008)  
	EBBQComm_TriggeredBy                               TriggeredBy;                                                // 0x0238   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0239   (0x0003)  MISSED
	float                                              TriggerCooldown;                                            // 0x023C   (0x0004)  
	unsigned char                                      UnknownData01_7[0x8];                                       // 0x0240   (0x0008)  MISSED
};

/// Class /Script/BBQGameSession.BBQComponentInputInterface
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQComponentInputInterface : public UInterface
{ 
public:
};

/// Class /Script/BBQGameSession.BBQContextualKillLocation
/// Size: 0x02F8 (760 bytes) (0x000228 - 0x0002F8) align 8 MaxSize: 0x02F8
class ABBQContextualKillLocation : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x10];                                      // 0x0228   (0x0010)  MISSED
	class USceneComponent*                             FamilyLocator;                                              // 0x0238   (0x0008)  
	class USceneComponent*                             CameraOffsetRoot;                                           // 0x0240   (0x0008)  
	class UBBQNoiseOutlineComponent*                   OutlineComponent;                                           // 0x0248   (0x0008)  
	class UStaticMeshComponent*                        ContextualKillLocationMesh;                                 // 0x0250   (0x0008)  
	class UStaticMeshComponent*                        PropMesh;                                                   // 0x0258   (0x0008)  
	class UBoxComponent*                               InteractionBox;                                             // 0x0260   (0x0008)  
	class UBBQInteractionComponent*                    Interaction;                                                // 0x0268   (0x0008)  
	class UBBQInteractionEventComponent*               ExecuteVictimInteractionEvent;                              // 0x0270   (0x0008)  
	class UAnimMontage*                                FamilyAnim;                                                 // 0x0278   (0x0008)  
	class UAnimMontage*                                MaleVictimAnim;                                             // 0x0280   (0x0008)  
	class UAnimMontage*                                FemaleVictimAnim;                                           // 0x0288   (0x0008)  
	class UAnimMontage*                                MaleVictimDeathAnim;                                        // 0x0290   (0x0008)  
	class UAnimMontage*                                FemaleVictimDeathAnim;                                      // 0x0298   (0x0008)  
	class ULevelSequence*                              CameraSequenceExecuteVictim;                                // 0x02A0   (0x0008)  
	class ULevelSequence*                              AssetSequenceVictimMale;                                    // 0x02A8   (0x0008)  
	class ULevelSequence*                              AssetSequenceVictimFemale;                                  // 0x02B0   (0x0008)  
	bool                                               bEnableCameraSequences;                                     // 0x02B8   (0x0001)  
	bool                                               bUseDefaultPropMesh;                                        // 0x02B9   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x02BA   (0x0006)  MISSED
	class ABBQGameSessionCharacterAnimated*            Family;                                                     // 0x02C0   (0x0008)  
	class ABBQGameSessionCharacterAnimated*            Victim;                                                     // 0x02C8   (0x0008)  
	unsigned char                                      UnknownData02_7[0x28];                                      // 0x02D0   (0x0028)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQContextualKillLocation.OnStartExecution
	void OnStartExecution() // [0x1e188d0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQContextualKillLocation.OnExecutionVictimEnded
	void OnExecutionVictimEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e18670] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQContextualKillLocation.OnExecutionFamilyEnded
	void OnExecutionFamilyEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e185a0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQContextualKillLocation.Local_StartExecuteVictim
	void Local_StartExecuteVictim(ABBQGameSessionCharacterAnimated* NewFamily, float ProgressTimer) // [0x1e184b0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(NewFamily, ProgressTimer);
	}
	// Function /Script/BBQGameSession.BBQContextualKillLocation.IsAvailable
	bool IsAvailable() // [0x1e18300] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQContextualKillLocation.BP_OnExecutionVictimEnded
	void BP_OnExecutionVictimEnded(ABBQGameSessionCharacterAnimated* VictimPlayer, ABBQGameSessionCharacterAnimated* FamilyPlayer) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(VictimPlayer, FamilyPlayer);
	}
	// Function /Script/BBQGameSession.BBQContextualKillLocation.BP_OnExecutionStarted
	void BP_OnExecutionStarted(ABBQGameSessionCharacterAnimated* VictimPlayer, ABBQGameSessionCharacterAnimated* FamilyPlayer) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(VictimPlayer, FamilyPlayer);
	}
	// Function /Script/BBQGameSession.BBQContextualKillLocation.BP_OnExecutionFamilyEnded
	void BP_OnExecutionFamilyEnded(ABBQGameSessionCharacterAnimated* VictimPlayer, ABBQGameSessionCharacterAnimated* FamilyPlayer) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(VictimPlayer, FamilyPlayer);
	}
	// Function /Script/BBQGameSession.BBQContextualKillLocation.Auth_StartExecuteVictim
	void Auth_StartExecuteVictim(ABBQGameSessionCharacterAnimated* NewFamily) // [0x1e180d0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(NewFamily);
	}
};

/// Class /Script/BBQGameSession.BBQDeathBloodApplicationActor
/// Size: 0x0240 (576 bytes) (0x000228 - 0x000240) align 8 MaxSize: 0x0240
class ABBQDeathBloodApplicationActor : public AActor
{ 
public:
	FGameplayTag                                       TargetTag;                                                  // 0x0228   (0x0008)  
	class USceneComponent*                             SceneComponent;                                             // 0x0230   (0x0008)  
	class ABBQGameSessionCharacter*                    TargetActor;                                                // 0x0238   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQDeathBloodApplicationActor.AddDeathBloodToTarget
	void AddDeathBloodToTarget(FName BoneName, UClass* BloodPoolToSpawn) // [0x1e17eb0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName, UClass*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(BoneName, BloodPoolToSpawn);
	}
};

/// Class /Script/BBQGameSession.BBQDeathBloodComponent
/// Size: 0x00F8 (248 bytes) (0x0000B0 - 0x0000F8) align 8 MaxSize: 0x00F8
class UBBQDeathBloodComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_8[0x20];                                      // 0x00B0   (0x0020)  MISSED
	FName                                              AttachBoneName;                                             // 0x00D0   (0x0008)  
	class UClass*                                      BloodPoolToSpawn;                                           // 0x00D8   (0x0008)  
	class ABBQBloodPool*                               CurrentBloodPool;                                           // 0x00E0   (0x0008)  
	class ABBQGameSessionCharacter*                    CharacterOwner;                                             // 0x00E8   (0x0008)  
	class USkeletalMeshComponent*                      CachedOwnerMesh;                                            // 0x00F0   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQDeathBloodComponent.OnLifetimeOver
	void OnLifetimeOver() // [0x1e18760] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQDebugAchievementComponent
/// Size: 0x00B0 (176 bytes) (0x0000B0 - 0x0000B0) align 8 MaxSize: 0x00B0
class UBBQDebugAchievementComponent : public UActorComponent
{ 
public:
};

/// Class /Script/BBQGameSession.BBQDebugDrawComponent
/// Size: 0x00B0 (176 bytes) (0x0000B0 - 0x0000B0) align 8 MaxSize: 0x00B0
class UBBQDebugDrawComponent : public UActorComponent
{ 
public:
};

/// Class /Script/BBQGameSession.BBQDestructibleActor
/// Size: 0x0268 (616 bytes) (0x000228 - 0x000268) align 8 MaxSize: 0x0268
class ABBQDestructibleActor : public AActor
{ 
public:
	bool                                               bSpawnVFXOnHit;                                             // 0x0228   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0229   (0x0003)  MISSED
	float                                              ManualCullDistance;                                         // 0x022C   (0x0004)  
	bool                                               bUseManualCull;                                             // 0x0230   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0231   (0x0003)  MISSED
	float                                              AngularImpulseScale;                                        // 0x0234   (0x0004)  
	float                                              LifetimeAfterExplode;                                       // 0x0238   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x023C   (0x0004)  MISSED
	class UNiagaraSystem*                              HitParticles;                                               // 0x0240   (0x0008)  
	FName                                              SmashableTag;                                               // 0x0248   (0x0008)  
	unsigned char                                      UnknownData03_7[0x18];                                      // 0x0250   (0x0018)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQDestructibleActor.SpawnHitVFX
	void SpawnHitVFX(UPrimitiveComponent* HitComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, FVector NormalImpulse, FHitResult& Hit) // [0x1e1dcd0] Final|Native|Protected|HasOutParms|HasDefaults 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, FVector, FHitResult&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(HitComponent, OtherActor, OtherComp, NormalImpulse, Hit);
	}
	// Function /Script/BBQGameSession.BBQDestructibleActor.DestroyAndExplode
	void DestroyAndExplode(FVector Origin, FVector Direction, float Force, bool bAddAdditionalForce) // [0x1e1c1b0] Final|Native|Public|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FVector, FVector, float, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Origin, Direction, Force, bAddAdditionalForce);
	}
};

/// Class /Script/BBQGameSession.BBQDialogComponent
/// Size: 0x01A0 (416 bytes) (0x0000B0 - 0x0001A0) align 8 MaxSize: 0x01A0
class UBBQDialogComponent : public UActorComponent
{ 
public:
	class UDataTable*                                  CommDataTable;                                              // 0x00B0   (0x0008)  
	class UDataTable*                                  DialogDataTable;                                            // 0x00B8   (0x0008)  
	class UStringTable*                                DialogStringTable;                                          // 0x00C0   (0x0008)  
	float                                              MinSubtitleDuration;                                        // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00CC   (0x0004)  MISSED
	class UAkAudioEvent*                               AkEvent_MutteredFP;                                         // 0x00D0   (0x0008)  
	class UAkAudioEvent*                               AkEvent_SpokenFP;                                           // 0x00D8   (0x0008)  
	class UAkAudioEvent*                               AkEvent_ShoutedFP;                                          // 0x00E0   (0x0008)  
	class UAkAudioEvent*                               AkEvent_ScreamedFP;                                         // 0x00E8   (0x0008)  
	class UAkAudioEvent*                               AkEvent_Muttered3P;                                         // 0x00F0   (0x0008)  
	class UAkAudioEvent*                               AkEvent_Spoken3P;                                           // 0x00F8   (0x0008)  
	class UAkAudioEvent*                               AkEvent_Shouted3P;                                          // 0x0100   (0x0008)  
	class UAkAudioEvent*                               AkEvent_Screamed3P;                                         // 0x0108   (0x0008)  
	FGameplayTag                                       CanHearAllCommsTag;                                         // 0x0110   (0x0008)  
	SDK_UNDEFINED(16,498) /* FMulticastInlineDelegate */ __um(OnExecuteCommDelegate);                              // 0x0118   (0x0010)  
	SDK_UNDEFINED(16,499) /* FMulticastInlineDelegate */ __um(OnCommStoppedDelegate);                              // 0x0128   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0138   (0x0010)  MISSED
	class ABBQGameSessionCharacterAnimated*            OwnerCharacter;                                             // 0x0148   (0x0008)  
	class UAkComponent*                                OwnerAkComponent;                                           // 0x0150   (0x0008)  
	unsigned char                                      UnknownData02_7[0x48];                                      // 0x0158   (0x0048)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQDialogComponent.Server_HandleComm
	void Server_HandleComm(FCommEventData CommEventData) // [0x1e1d4c0] Net|Native|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)(FCommEventData);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(CommEventData);
	}
	// Function /Script/BBQGameSession.BBQDialogComponent.OnDialogueAudioEnded
	void OnDialogueAudioEnded(char CallbackType, UAkCallbackInfo* CallbackInfo) // [0x1e1cf20] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(char, UAkCallbackInfo*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(CallbackType, CallbackInfo);
	}
	// Function /Script/BBQGameSession.BBQDialogComponent.GetAvailableCommIds
	// TArray<FName> GetAvailableCommIds();                                                                                     // [0x1e1c470] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/BBQGameSession.BBQDialogComponent.ExecuteTestComm
	void ExecuteTestComm(FName CommId) // [0x1e14270] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(CommId);
	}
	// Function /Script/BBQGameSession.BBQDialogComponent.Debug_ExecuteDialogOnClient
	void Debug_ExecuteDialogOnClient(FName& RowName, FName& CommId, bool bExecuteByRow) // [0x1e1c080] Final|Native|Protected|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName&, FName&, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(RowName, CommId, bExecuteByRow);
	}
	// Function /Script/BBQGameSession.BBQDialogComponent.Client_FailToExecComm
	void Client_FailToExecComm(FName CommId, ECommExecFailReason FailReason) // [0x1e1bfb0] Net|NetReliableNative|Event|Protected|NetClient 
	{
		typedef void (*FuncPtr)(FName, ECommExecFailReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(CommId, FailReason);
	}
	// Function /Script/BBQGameSession.BBQDialogComponent.Client_ExecuteComm
	void Client_ExecuteComm(FName CommId, FName LineId) // [0x1e1bee0] Net|Native|Event|Protected|NetClient 
	{
		typedef void (*FuncPtr)(FName, FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(CommId, LineId);
	}
};

/// Class /Script/BBQGameSession.BBQDismembermentActor
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQDismembermentActor : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQDismembermentComponent
/// Size: 0x00B0 (176 bytes) (0x0000B0 - 0x0000B0) align 8 MaxSize: 0x00B0
class UBBQDismembermentComponent : public UActorComponent
{ 
public:
};

/// Class /Script/BBQGameSession.BBQDismembermentMorphTargetLerper
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQDismembermentMorphTargetLerper : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQDoorBase
/// Size: 0x0430 (1072 bytes) (0x000228 - 0x000430) align 8 MaxSize: 0x0430
class ABBQDoorBase : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x18];                                      // 0x0228   (0x0018)  MISSED
	float                                              DefaultAnimMultiplier;                                      // 0x0240   (0x0004)  
	float                                              BargeAnimMultiplier;                                        // 0x0244   (0x0004)  
	float                                              SlamAnimMultiplier;                                         // 0x0248   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x024C   (0x0004)  MISSED
	class UClass*                                      DestroyDoorInterruptDamageType;                             // 0x0250   (0x0008)  
	FGameplayVariableFloat                             DestroyDoorInterruptDamageVar;                              // 0x0258   (0x0058)  
	EBBQCombatAnimSlot                                 DestroyDoorInterruptReactAnimSlot;                          // 0x02B0   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x02B1   (0x0003)  MISSED
	float                                              HitPoints;                                                  // 0x02B4   (0x0004)  
	class USceneComponent*                             HandleLocator;                                              // 0x02B8   (0x0008)  
	class USceneComponent*                             FrontOpenLocator;                                           // 0x02C0   (0x0008)  
	class USceneComponent*                             FrontCloseLocator;                                          // 0x02C8   (0x0008)  
	class USceneComponent*                             BackOpenLocator;                                            // 0x02D0   (0x0008)  
	class USceneComponent*                             BackCloseLocator;                                           // 0x02D8   (0x0008)  
	class USceneComponent*                             FrontSprintingLocator;                                      // 0x02E0   (0x0008)  
	class USceneComponent*                             BackSprintingLocator;                                       // 0x02E8   (0x0008)  
	class USceneComponent*                             FrontDamageLocator;                                         // 0x02F0   (0x0008)  
	class USceneComponent*                             BackDamageLocator;                                          // 0x02F8   (0x0008)  
	class USceneComponent*                             FrontDestroyLocator;                                        // 0x0300   (0x0008)  
	class USceneComponent*                             BackDestroyLocator;                                         // 0x0308   (0x0008)  
	class USceneComponent*                             FrontRetrieveLockAfterBargeLocator;                         // 0x0310   (0x0008)  
	class USceneComponent*                             BackRetrieveLockAfterBargeLocator;                          // 0x0318   (0x0008)  
	class USceneComponent*                             FrontBargeLocator;                                          // 0x0320   (0x0008)  
	class USceneComponent*                             BackBargeLocator;                                           // 0x0328   (0x0008)  
	class UNavLinkCustomComponent*                     SmartLink;                                                  // 0x0330   (0x0008)  
	class UBBQNoiseOutlineComponent*                   NoiseComponent;                                             // 0x0338   (0x0008)  
	TArray<class USceneComponent*>                     LockLocators;                                               // 0x0340   (0x0010)  
	TArray<class USceneComponent*>                     FrameLockLocators;                                          // 0x0350   (0x0010)  
	class UStaticMeshComponent*                        Door;                                                       // 0x0360   (0x0008)  
	float                                              DoorTriggerStartDistance;                                   // 0x0368   (0x0004)  
	float                                              DoorTriggerEndDistance;                                     // 0x036C   (0x0004)  
	class UBoxComponent*                               DoorOverlap;                                                // 0x0370   (0x0008)  
	class UAkPortalComponent*                          AkPortalPtr;                                                // 0x0378   (0x0008)  
	float                                              PortalSmoothingTime;                                        // 0x0380   (0x0004)  
	float                                              PortalAmountTime;                                           // 0x0384   (0x0004)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x0388   (0x0008)  MISSED
	class UBBQInteractionComponent*                    InteractionComponent;                                       // 0x0390   (0x0008)  
	class UBBQLockComponent*                           LockComponent;                                              // 0x0398   (0x0008)  
	class UBBQLockComponentV2*                         LockComponentV2;                                            // 0x03A0   (0x0008)  
	float                                              OpenCloseCooldown;                                          // 0x03A8   (0x0004)  
	unsigned char                                      UnknownData04_6[0xC];                                       // 0x03AC   (0x000C)  MISSED
	FGameplayTagContainer                              GameplayTags;                                               // 0x03B8   (0x0020)  
	class ABBQGameSessionCharacterAnimated*            LatchActor;                                                 // 0x03D8   (0x0008)  
	unsigned char                                      UnknownData05_6[0x8];                                       // 0x03E0   (0x0008)  MISSED
	bool                                               LatchInProgress;                                            // 0x03E8   (0x0001)  
	bool                                               BeingUnlocked;                                              // 0x03E9   (0x0001)  
	EDoorDirection                                     OpenDirection;                                              // 0x03EA   (0x0001)  
	char                                               DoorState;                                                  // 0x03EB   (0x0001)  
	float                                              DestructionAnimationLength;                                 // 0x03EC   (0x0004)  
	float                                              LocalDestructionProgress;                                   // 0x03F0   (0x0004)  
	float                                              NetworkDestructionProgress;                                 // 0x03F4   (0x0004)  
	float                                              AnimationMultiplier;                                        // 0x03F8   (0x0004)  
	bool                                               bWasSlammed;                                                // 0x03FC   (0x0001)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x03FD   (0x0003)  MISSED
	TWeakObjectPtr<class ABBQGameSessionCharacterAnimated*> RearInteractingPlayer;                                 // 0x0400   (0x0008)  
	EDoorAction                                        RearAction;                                                 // 0x0408   (0x0001)  
	unsigned char                                      UnknownData07_6[0x7];                                       // 0x0409   (0x0007)  MISSED
	class ABBQMinigameV2*                              RearMiniGame;                                               // 0x0410   (0x0008)  
	TWeakObjectPtr<class ABBQGameSessionCharacterAnimated*> FrontInteractingPlayer;                                // 0x0418   (0x0008)  
	EDoorAction                                        FrontAction;                                                // 0x0420   (0x0001)  
	unsigned char                                      UnknownData08_6[0x7];                                       // 0x0421   (0x0007)  MISSED
	class ABBQMinigameV2*                              FrontMiniGame;                                              // 0x0428   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQDoorBase.WasSlammed
	bool WasSlammed() // [0x1e1deb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.Server_UnlatchDoor
	void Server_UnlatchDoor(ABBQGameSessionCharacterAnimated* InActor, FVector InLocation, FRotator InRotation) // [0x1e1db90] Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(InActor, InLocation, InRotation);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.Server_TempChangeInteractingPlayer
	void Server_TempChangeInteractingPlayer(ABBQGameSessionCharacterAnimated* InCharacter, EDoorAction InAction) // [0x1e1dac0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, EDoorAction);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(InCharacter, InAction);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.Server_RestoreAllStages
	void Server_RestoreAllStages(bool bFront) // [0x1e1da30] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(bFront);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.Server_RemoveInteractingPlayer
	void Server_RemoveInteractingPlayer(ABBQGameSessionCharacterAnimated* InCharacter) // [0x1e1d9a0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(InCharacter);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.Server_OpenDoor
	void Server_OpenDoor(AActor* DoorUser, bool bUnlockFirst, FVector OverrideLocation, FRotator OverrideRotation) // [0x1e1d800] Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, bool, FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(DoorUser, bUnlockFirst, OverrideLocation, OverrideRotation);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.Server_LockUpDoor
	void Server_LockUpDoor(AActor* DoorUser, FVector OverrideLocation, FRotator OverrideRotation) // [0x1e1d6c0] Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(DoorUser, OverrideLocation, OverrideRotation);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.Server_LatchDoor
	void Server_LatchDoor(ABBQGameSessionCharacterAnimated* InActor, FVector InLocation, FRotator InRotation) // [0x1e1d580] Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(InActor, InLocation, InRotation);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.Server_CompleteAllStages
	void Server_CompleteAllStages() // [0xe640b0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.Server_CloseDoor
	void Server_CloseDoor(AActor* DoorUser, FVector OverrideLocation, FRotator OverrideRotation) // [0x1e1d380] Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(DoorUser, OverrideLocation, OverrideRotation);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.RemoveGameplayTag
	void RemoveGameplayTag(FGameplayTag Tag) // [0x1e1d2e0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(Tag);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.RecoverLock
	void RecoverLock(ABBQGameSessionCharacterAnimated*& InCharacter) // [0x1e1d250] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(InCharacter);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.OnUnlockMiniGameEnded
	void OnUnlockMiniGameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason Reason) // [0x1e1d180] Final|Native|Private 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(Minigame, Reason);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.OnRep_RearInteractingPlayer
	void OnRep_RearInteractingPlayer() // [0x1e1d160] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.OnRep_FrontInteractingPlayer
	void OnRep_FrontInteractingPlayer() // [0x1e1d160] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.OnRep_DoorState
	void OnRep_DoorState(char Old) // [0x1e1d0e0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(char);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(Old);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.OnRep_DestructionProgress
	void OnRep_DestructionProgress() // [0x1e1d0c0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.OnLatchTargetDestroyed
	void OnLatchTargetDestroyed(AActor* InActor) // [0x1e1d030] Final|Native|Private 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(InActor);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.OnDoorStateChanged
	void OnDoorStateChanged(bool bOpen) // [0x1266c00] Native|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(bOpen);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.OnDoorActuallyOpened
	void OnDoorActuallyOpened() // [0x1e1d010] Native|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.OnDoorActuallyClosed
	void OnDoorActuallyClosed() // [0x1e1cff0] Native|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.IsOpen
	bool IsOpen() // [0x1e1cef0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.IsLocked
	bool IsLocked(AActor* DoorUser) // [0x1e1ce50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		return func(DoorUser);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.IsLatchInProgress
	bool IsLatchInProgress() // [0x1e1ce00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.IsLatched
	bool IsLatched() // [0x1e1ce20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.IsInFrontOfTheDoor
	bool IsInFrontOfTheDoor(AActor* Actor) // [0x1e1cd60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		return func(Actor);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.IsFrozen
	bool IsFrozen() // [0x1e1cd30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.IsFrontLocation
	bool IsFrontLocation(FVector InLocation) // [0x1e1cc90] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FVector);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		return func(InLocation);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.IsDestructible
	bool IsDestructible() // [0x1e1cc60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.IsDestroyed
	bool IsDestroyed() // [0x1e1cc30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.IsBeingUnlocked
	bool IsBeingUnlocked() // [0x1e1cc10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.IsBeingDestroyed
	bool IsBeingDestroyed() // [0x1e1cbe0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.IsBarged
	bool IsBarged() // [0x1e1cbb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.HasTag
	bool HasTag(FGameplayTag Tag) // [0x1e1caa0] Final|Native|Public|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		return func(Tag);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.HasMatchingGameplayTag
	bool HasMatchingGameplayTag(FGameplayTag TagToCheck) // [0x1e1ca00] Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		return func(TagToCheck);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.HasAnyMatchingGameplayTags
	bool HasAnyMatchingGameplayTags(FGameplayTagContainer& TagContainer) // [0x1e1c930] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTagContainer&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		return func(TagContainer);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.HasAllMatchingGameplayTags
	bool HasAllMatchingGameplayTags(FGameplayTagContainer& TagContainer) // [0x1e1c860] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTagContainer&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		return func(TagContainer);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.GetSignedDestructionProgress
	float GetSignedDestructionProgress() // [0x1e1c840] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.GetRecoverableLockCount
	int32_t GetRecoverableLockCount() // [0x1e1c810] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.GetRearInteractingPlayer
	ABBQGameSessionCharacterAnimated* GetRearInteractingPlayer() // [0x1e1c7d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacterAnimated* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[39]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.GetOwnedGameplayTags
	void GetOwnedGameplayTags(FGameplayTagContainer& TagContainer) // [0x1e1c710] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef void (*FuncPtr)(FGameplayTagContainer&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[40]);
		func(TagContainer);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.GetOpenDirection
	EDoorDirection GetOpenDirection() // [0x1e1c6f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef EDoorDirection (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[41]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.GetOpenAnimationMultiplier
	float GetOpenAnimationMultiplier(ABBQGameSessionCharacterAnimated* InCharacter) // [0x1e1c650] Final|Native|Public|Const 
	{
		typedef float (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		return func(InCharacter);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.GetLockComponent
	UBBQLockComponentV2* GetLockComponent() // [0x1e1c630] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UBBQLockComponentV2* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.GetLocationOpenDirection
	EDoorDirection GetLocationOpenDirection(FVector InLocation) // [0x1e1c590] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	{
		typedef EDoorDirection (*FuncPtr)(FVector);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		return func(InLocation);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.GetFrontInteractingPlayer
	ABBQGameSessionCharacterAnimated* GetFrontInteractingPlayer() // [0x1e1c550] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacterAnimated* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.GetDestructionProgress
	float GetDestructionProgress() // [0x1e1c520] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.GetDeactivatedLockCount
	int32_t GetDeactivatedLockCount() // [0x1e1c4f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.GetAnimationMultiplier
	float GetAnimationMultiplier() // [0x1e1c450] Final|Native|Public|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.GetActiveLockCount
	int32_t GetActiveLockCount() // [0x1e1c420] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.EndOppositeSideUnlatchDoorInteration
	void EndOppositeSideUnlatchDoorInteration(ABBQGameSessionCharacterAnimated* User, bool bWasCancelled) // [0x1e1c350] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		func(User, bWasCancelled);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.CanInteract
	bool CanInteract(AActor* Actor, EDoorAction InAction, bool InCheckSight) // [0x1e1bda0] Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(AActor*, EDoorAction, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		return func(Actor, InAction, InCheckSight);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.CancelAllMiniGames
	void CancelAllMiniGames() // [0x1e1bec0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.CanBeUnlocked
	bool CanBeUnlocked() // [0x1e1bcd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.CanBeLocked
	bool CanBeLocked() // [0x1e1bca0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.CanBeginLockUp
	bool CanBeginLockUp(ABBQGameSessionCharacterAnimated* Character) // [0x1e1bd00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[55]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.CacheCharacterActionProperties
	void CacheCharacterActionProperties(ABBQGameSessionCharacterAnimated* InCharacter) // [0x1e1bc10] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[56]);
		func(InCharacter);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BP_OnUnlockMinigameEnded
	void BP_OnUnlockMinigameEnded(bool bResult, bool bShouldConsumeInventoryItem) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[57]);
		func(bResult, bShouldConsumeInventoryItem);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BP_OnUnlockAndOpen
	void BP_OnUnlockAndOpen() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[58]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BP_OnUnlatched
	void BP_OnUnlatched() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[59]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BP_OnLockUp
	void BP_OnLockUp() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[60]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BP_OnLocksInitialized
	void BP_OnLocksInitialized() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[61]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BP_OnLockRemoved
	void BP_OnLockRemoved() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[62]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BP_OnLockMinigameEnded
	void BP_OnLockMinigameEnded(bool bResult) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[63]);
		func(bResult);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BP_OnLockAdded
	void BP_OnLockAdded() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[64]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BP_OnLatched
	void BP_OnLatched() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[65]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BP_OnDestroyed
	void BP_OnDestroyed() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[66]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BP_OnBeginUnlatch
	void BP_OnBeginUnlatch(ABBQGameSessionCharacterAnimated* InCharacter, float InTime) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[67]);
		func(InCharacter, InTime);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BP_OnBeginLatch
	void BP_OnBeginLatch(ABBQGameSessionCharacterAnimated* InCharacter, float InTime) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[68]);
		func(InCharacter, InTime);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BP_OnBeginDestruction
	void BP_OnBeginDestruction(ABBQGameSessionCharacterAnimated* InActor) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[69]);
		func(InActor);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BP_OnAllLocksRemoved
	void BP_OnAllLocksRemoved() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[70]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.BeginUnlockMiniGame
	void BeginUnlockMiniGame(ABBQGameSessionCharacterAnimated* InCharacter) // [0x1e1bb80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[71]);
		func(InCharacter);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.Auth_FlushAllInteractingPlayers
	void Auth_FlushAllInteractingPlayers() // [0x1e1bb60] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[72]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorBase.Auth_EndLatching
	bool Auth_EndLatching(bool InLatched) // [0x1e1bac0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef bool (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[73]);
		return func(InLatched);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.Auth_DestroyDoor
	bool Auth_DestroyDoor(ABBQGameSessionCharacterAnimated* InActor) // [0x1e1ba20] BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[74]);
		return func(InActor);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.Auth_CancelLatching
	void Auth_CancelLatching(ABBQGameSessionCharacterAnimated* InActor) // [0x1e1b990] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[75]);
		func(InActor);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.Auth_BeginLatching
	bool Auth_BeginLatching(ABBQGameSessionCharacterAnimated*& InActor) // [0x1e1b8f0] Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacterAnimated*&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[76]);
		return func(InActor);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.AddGameplayTag
	void AddGameplayTag(FGameplayTag Tag) // [0x1e1b850] Final|Native|Public  
	{
		typedef void (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[77]);
		func(Tag);
	}
	// Function /Script/BBQGameSession.BBQDoorBase.ActivateNextLockStage
	bool ActivateNextLockStage(ABBQGameSessionCharacterAnimated* InCharacter) // [0x1e1b7b0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[78]);
		return func(InCharacter);
	}
};

/// Class /Script/BBQGameSession.BBQDoorHinge
/// Size: 0x0550 (1360 bytes) (0x000430 - 0x000550) align 8 MaxSize: 0x0550
class ABBQDoorHinge : public ABBQDoorBase
{ 
public:
	float                                              BlockedDoorReopenDelay;                                     // 0x0430   (0x0004)  
	float                                              ReverseAnimationLimit;                                      // 0x0434   (0x0004)  
	float                                              PauseAnimationLimit;                                        // 0x0438   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x043C   (0x0004)  MISSED
	class UStaticMeshComponent*                        DoubleDoor;                                                 // 0x0440   (0x0008)  
	class UBoxComponent*                               DoubleDoorOverlap;                                          // 0x0448   (0x0008)  
	class USceneComponent*                             DoubleHandleLocator;                                        // 0x0450   (0x0008)  
	bool                                               bUseDoubleDoor;                                             // 0x0458   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0459   (0x0003)  MISSED
	float                                              DoorSwing;                                                  // 0x045C   (0x0004)  
	bool                                               bCanBeBarged;                                               // 0x0460   (0x0001)  
	bool                                               bShatterOnBargeIfPreviouslyCut;                             // 0x0461   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x0462   (0x0002)  MISSED
	float                                              ShatterOnBargeAtCutProgress;                                // 0x0464   (0x0004)  
	class UAkAudioEvent*                               BargeFinalAkEvent;                                          // 0x0468   (0x0008)  
	class UBBQDoorSlicerComponent*                     DoorSlicerComponent;                                        // 0x0470   (0x0008)  
	class UClass*                                      BargeMinigameClass;                                         // 0x0478   (0x0008)  
	class UClass*                                      BargeDoorWinEffect;                                         // 0x0480   (0x0008)  
	FGameplayTag                                       BargeDoorWinEffectDuration;                                 // 0x0488   (0x0008)  
	float                                              BargeFailDoorDamage;                                        // 0x0490   (0x0004)  
	float                                              BargeFailPlayerDamage;                                      // 0x0494   (0x0004)  
	float                                              MinimumBargeDuration;                                       // 0x0498   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x049C   (0x0004)  MISSED
	class UClass*                                      DoorSlamStunEffectClass;                                    // 0x04A0   (0x0008)  
	FHingeDoorAnimation                                AnimationInfo;                                              // 0x04A8   (0x0010)  
	float                                              AnimationTimer;                                             // 0x04B8   (0x0004)  
	bool                                               bSwingsFreelyAfterBarge;                                    // 0x04BC   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x04BD   (0x0003)  MISSED
	float                                              BurstSlamCapsuleRadius;                                     // 0x04C0   (0x0004)  
	float                                              BurstSlamCapsuleHeight;                                     // 0x04C4   (0x0004)  
	FTimerHandle                                       DelayTimer;                                                 // 0x04C8   (0x0008)  
	FHingeDoorSoundState                               SoundState;                                                 // 0x04D0   (0x0040)  
	float                                              DoorBargingProgress;                                        // 0x0510   (0x0004)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x0514   (0x0004)  MISSED
	FDateTime                                          MiniGameStart;                                              // 0x0518   (0x0008)  
	TArray<class AActor*>                              OverlappingActors;                                          // 0x0520   (0x0010)  
	EDoorDirection                                     BargeDirection;                                             // 0x0530   (0x0001)  
	unsigned char                                      UnknownData06_6[0x7];                                       // 0x0531   (0x0007)  MISSED
	class ABBQGameSessionCharacterAnimated*            DestroyingActor;                                            // 0x0538   (0x0008)  
	class ABBQGameSessionCharacterAnimated*            BargingCharacter;                                           // 0x0540   (0x0008)  
	unsigned char                                      UnknownData07_7[0x8];                                       // 0x0548   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQDoorHinge.Server_BargeDoor
	void Server_BargeDoor(ABBQGameSessionCharacterAnimated* InActor, bool bSkipMinigame) // [0x1e217a0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(InActor, bSkipMinigame);
	}
	// Function /Script/BBQGameSession.BBQDoorHinge.PostDoorAkEvent
	void PostDoorAkEvent(UAkAudioEvent* AkEvent, float PortalOffsetX, UAkRtpc* IsLocalRtpc, bool bIsPostedByLocalPlayer) // [0x1e21570] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UAkAudioEvent*, float, UAkRtpc*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(AkEvent, PortalOffsetX, IsLocalRtpc, bIsPostedByLocalPlayer);
	}
	// Function /Script/BBQGameSession.BBQDoorHinge.OnRep_AnimationInfo
	void OnRep_AnimationInfo(FHingeDoorAnimation& Old) // [0x1e21450] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FHingeDoorAnimation&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Old);
	}
	// Function /Script/BBQGameSession.BBQDoorHinge.OnOverlapEnd
	void OnOverlapEnd(UPrimitiveComponent* LocalComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e212f0] Final|Native|Private 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(LocalComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQDoorHinge.OnOverlapBegin
	void OnOverlapBegin(UPrimitiveComponent* LocalComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e21190] Final|Native|Private 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(LocalComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQDoorHinge.OnBargeTimerEnded
	void OnBargeTimerEnded() // [0x1e21170] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorHinge.OnBargeMiniGameEnded
	void OnBargeMiniGameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason Reason) // [0x1e210a0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(Minigame, Reason);
	}
	// Function /Script/BBQGameSession.BBQDoorHinge.GetDestructionDuration
	float GetDestructionDuration(ABBQGameSessionCharacter* InActor) // [0x1e20c30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func(InActor);
	}
	// Function /Script/BBQGameSession.BBQDoorHinge.GetBargingProgress
	float GetBargingProgress() // [0x1e20c10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQDoorHinge.BP_OnDoorDamaged
	void BP_OnDoorDamaged() // [0xc5a730] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorHinge.BP_OnDoorBargedInDirection
	void BP_OnDoorBargedInDirection(EDoorDirection Direction) // [0x1e205c0] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EDoorDirection);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(Direction);
	}
	// Function /Script/BBQGameSession.BBQDoorHinge.Auth_OnDoorDestroyed
	void Auth_OnDoorDestroyed(ABBQGameSessionCharacterAnimated* InActor) // [0x1e20530] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(InActor);
	}
	// Function /Script/BBQGameSession.BBQDoorHinge.ActuallyDestroyDoor
	void ActuallyDestroyDoor() // [0x1e20400] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorHinge.ActuallyBargeDoor
	void ActuallyBargeDoor(ABBQGameSessionCharacterAnimated* InActor) // [0x1e20370] Final|Native|Private 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(InActor);
	}
};

/// Class /Script/BBQGameSession.BBQDoorSlicerComponent
/// Size: 0x0140 (320 bytes) (0x0000B0 - 0x000140) align 8 MaxSize: 0x0140
class UBBQDoorSlicerComponent : public UActorComponent
{ 
public:
	class UNiagaraSystem*                              WoodchipParticles;                                          // 0x00B0   (0x0008)  
	class UNiagaraSystem*                              DoorDestructionParticles;                                   // 0x00B8   (0x0008)  
	EBBQDoorSlicerDefaultVFXDir                        VFXDefaultFacingDirection;                                  // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x00C1   (0x0003)  MISSED
	float                                              VFXOffsetFromDoorSurface;                                   // 0x00C4   (0x0004)  
	float                                              VFXDeactivateAfterUpdateTimer;                              // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00CC   (0x0004)  MISSED
	class UNiagaraComponent*                           WoodchipParticleComponent;                                  // 0x00D0   (0x0008)  
	TArray<FDoorSlicerParts>                           DoorSlices;                                                 // 0x00D8   (0x0010)  
	TArray<int32_t>                                    SliceSequence;                                              // 0x00E8   (0x0010)  
	TArray<int32_t>                                    FinishedDoorSlices;                                         // 0x00F8   (0x0010)  
	TArray<FDoorSlicerSmashable>                       DoorSmashables;                                             // 0x0108   (0x0010)  
	class UClass*                                      DoorFinalDestructibleActorTemplate;                         // 0x0118   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0120   (0x0008)  MISSED
	FVector                                            FinalBreakVfxPivotOffset;                                   // 0x0128   (0x000C)  
	unsigned char                                      UnknownData03_7[0xC];                                       // 0x0134   (0x000C)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQDoorSlicerComponent.UpdateDoorSlicerOverallProgress
	float UpdateDoorSlicerOverallProgress(float Progress, bool bUpdateVFX, bool bFlipVFXDirection) // [0x1e21d70] Final|Native|Public  
	{
		typedef float (*FuncPtr)(float, bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(Progress, bUpdateVFX, bFlipVFXDirection);
	}
	// Function /Script/BBQGameSession.BBQDoorSlicerComponent.UpdateDoorSliceProgress
	void UpdateDoorSliceProgress(int32_t SliceID, float Progress, bool bUpdateVFX, bool bFlipVFXDirection) // [0x1e21c10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t, float, bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(SliceID, Progress, bUpdateVFX, bFlipVFXDirection);
	}
	// Function /Script/BBQGameSession.BBQDoorSlicerComponent.SetVisibilityDoorSmashables
	void SetVisibilityDoorSmashables(bool bSetVisibilityTo, bool bPropagateToChildren) // [0x1e21ab0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(bSetVisibilityTo, bPropagateToChildren);
	}
	// Function /Script/BBQGameSession.BBQDoorSlicerComponent.SetVisibilityDoorSlices
	void SetVisibilityDoorSlices(bool bSetVisibilityTo, bool bPropagateToChildren) // [0x1e219e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(bSetVisibilityTo, bPropagateToChildren);
	}
	// Function /Script/BBQGameSession.BBQDoorSlicerComponent.SetSliceSequence
	void SetSliceSequence() // [0x1e21940] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQDoorSlicerComponent.SetSliceMaxTime
	void SetSliceMaxTime(int32_t Slice, float MaxTime) // [0x1e21870] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Slice, MaxTime);
	}
	// Function /Script/BBQGameSession.BBQDoorSlicerComponent.IsValidDoorSliceID
	bool IsValidDoorSliceID(int32_t SliceID) // [0x1e21000] Final|Native|Public|BlueprintCallable 
	{
		typedef bool (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(SliceID);
	}
	// Function /Script/BBQGameSession.BBQDoorSlicerComponent.InitializeDoorSlice
	void InitializeDoorSlice(int32_t SliceID, bool& bInitSucceeded, bool bRemoveIfBroken) // [0x1e20eb0] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t, bool&, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(SliceID, bInitSucceeded, bRemoveIfBroken);
	}
	// Function /Script/BBQGameSession.BBQDoorSlicerComponent.DestroySlicedDoor
	void DestroySlicedDoor(bool bCheckIfCanDestroy, bool bFlipVFXDirection) // [0x1e20a20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(bCheckIfCanDestroy, bFlipVFXDirection);
	}
	// Function /Script/BBQGameSession.BBQDoorSlicerComponent.DestroyAndExplodeDoor
	void DestroyAndExplodeDoor(float Force, FVector ForceOrigin, FVector ForceDirection) // [0x1e208f0] Final|Native|Protected|HasDefaults 
	{
		typedef void (*FuncPtr)(float, FVector, FVector);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(Force, ForceOrigin, ForceDirection);
	}
	// Function /Script/BBQGameSession.BBQDoorSlicerComponent.CanDoorBeFullyDestroyed
	bool CanDoorBeFullyDestroyed() // [0x1e20780] Final|Native|Public|BlueprintCallable 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQDoorSliding
/// Size: 0x04C0 (1216 bytes) (0x000430 - 0x0004C0) align 8 MaxSize: 0x04C0
class ABBQDoorSliding : public ABBQDoorBase
{ 
public:
	unsigned char                                      UnknownData00_8[0x10];                                      // 0x0430   (0x0010)  MISSED
	class UTimelineComponent*                          AnimTimeline;                                               // 0x0440   (0x0008)  
	class UCurveFloat*                                 LeatherfaceOpenRightCurve;                                  // 0x0448   (0x0008)  
	class UCurveFloat*                                 LeatherfaceCloseRightCurve;                                 // 0x0450   (0x0008)  
	class UCurveFloat*                                 LeatherfaceOpenLeftCurve;                                   // 0x0458   (0x0008)  
	class UCurveFloat*                                 LeatherfaceCloseLeftCurve;                                  // 0x0460   (0x0008)  
	class UCurveFloat*                                 FamilyOpenRightCurve;                                       // 0x0468   (0x0008)  
	class UCurveFloat*                                 FamilyCloseRightCurve;                                      // 0x0470   (0x0008)  
	class UCurveFloat*                                 FamilyOpenLeftCurve;                                        // 0x0478   (0x0008)  
	class UCurveFloat*                                 FamilyCloseLeftCurve;                                       // 0x0480   (0x0008)  
	class UCurveFloat*                                 VictimOpenRightCurve;                                       // 0x0488   (0x0008)  
	class UCurveFloat*                                 VictimCloseRightCurve;                                      // 0x0490   (0x0008)  
	class UCurveFloat*                                 VictimOpenLeftCurve;                                        // 0x0498   (0x0008)  
	class UCurveFloat*                                 VictimCloseLeftCurve;                                       // 0x04A0   (0x0008)  
	float                                              ReverseAnimationLimit;                                      // 0x04A8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x04AC   (0x0004)  MISSED
	FBBQ_SlidingAnimationRepInfo                       SlidingAnimationRepInfo;                                    // 0x04B0   (0x0010)  


	/// Functions
	// Function /Script/BBQGameSession.BBQDoorSliding.AnimUpdate
	void AnimUpdate(float BlendIn) // [0x1e204b0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(BlendIn);
	}
};

/// Class /Script/BBQGameSession.BBQElectroTrapComponent
/// Size: 0x0130 (304 bytes) (0x0000B0 - 0x000130) align 8 MaxSize: 0x0130
class UBBQElectroTrapComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,500) /* FMulticastInlineDelegate */ __um(EventOnStateChanged);                                // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,501) /* FMulticastInlineDelegate */ __um(EventOnTrapTriggered);                               // 0x00C0   (0x0010)  
	FBBQElectroTrapInteractionSettings                 InteractionSettings[4];                                     // 0x00D0   (0x0040)  
	FGameplayTag                                       BatteryInventoryItem;                                       // 0x0110   (0x0008)  
	FGameplayTag                                       DisableBatteryInventoryItem;                                // 0x0118   (0x0008)  
	class ABBQGameSessionCharacter*                    TrapOwner;                                                  // 0x0120   (0x0008)  
	EBBQElectroTrapState                               TrapState;                                                  // 0x0128   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0129   (0x0007)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.TriggerTrap
	void TriggerTrap(ABBQGameSessionCharacter* TriggeringCharacter) // [0x1e21b80] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(TriggeringCharacter);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.SetTrapState
	void SetTrapState(EBBQElectroTrapState NewState) // [0x1e21960] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EBBQElectroTrapState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(NewState);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.RemoveBattery
	void RemoveBattery(ABBQGameSessionCharacter* Character, bool bRecoverBattery) // [0x1e216d0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Character, bRecoverBattery);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.OnTrapTriggered
	void OnTrapTriggered(ABBQGameSessionCharacterAnimated* TriggeringCharacter, ABBQGameSessionCharacterAnimated* TrapOwnerCharacter) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(TriggeringCharacter, TrapOwnerCharacter);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.OnStateChanged
	void OnStateChanged(EBBQElectroTrapState OldState, EBBQElectroTrapState NewState) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EBBQElectroTrapState, EBBQElectroTrapState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(OldState, NewState);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.OnRep_TrapState
	void OnRep_TrapState(EBBQElectroTrapState OldState) // [0x1e214f0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(EBBQElectroTrapState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(OldState);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.IsTrapEnabled
	bool IsTrapEnabled() // [0x1e20fd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.HasBattery
	bool HasBattery() // [0x1e20e80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.GetTrapState
	EBBQElectroTrapState GetTrapState() // [0x1e20e60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef EBBQElectroTrapState (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.GetInteractionSettings
	void GetInteractionSettings(EBBQElectroTrapInteraction Interaction, EInteractionMethod& OutInteractionMethod, EBBQAnimSlot_AddOn1& OutAnimSlot, UAnimMontage*& OutMontageToPlay) // [0x1e20cd0] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EBBQElectroTrapInteraction, EInteractionMethod&, EBBQAnimSlot_AddOn1&, UAnimMontage*&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(Interaction, OutInteractionMethod, OutAnimSlot, OutMontageToPlay);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.EnableBattery
	void EnableBattery(ABBQGameSessionCharacter* Character) // [0x1e20b80] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.DisableBattery
	void DisableBattery(ABBQGameSessionCharacter* Character) // [0x1e20af0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.CanRemoveBattery
	bool CanRemoveBattery(ABBQGameSessionCharacter* Character) // [0x1e20850] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.CanEnableBattery
	bool CanEnableBattery(ABBQGameSessionCharacter* Character) // [0x1e207b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.CanDisableBattery
	bool CanDisableBattery(ABBQGameSessionCharacter* Character) // [0x1e206e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.CanAddBattery
	bool CanAddBattery(ABBQGameSessionCharacter* Character) // [0x1e20640] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.BBQElectroTrapTriggeredDelegate__DelegateSignature
	void BBQElectroTrapTriggeredDelegate__DelegateSignature(ABBQGameSessionCharacterAnimated* TriggeringCharacter, ABBQGameSessionCharacterAnimated* TrapOwnerCharacter) // [0x2438a30] MulticastDelegate|Public|Delegate 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(TriggeringCharacter, TrapOwnerCharacter);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.BBQElectroTrapStateChangedDelegate__DelegateSignature
	void BBQElectroTrapStateChangedDelegate__DelegateSignature(EBBQElectroTrapState OldState, EBBQElectroTrapState NewState) // [0x2438a30] MulticastDelegate|Public|Delegate 
	{
		typedef void (*FuncPtr)(EBBQElectroTrapState, EBBQElectroTrapState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(OldState, NewState);
	}
	// Function /Script/BBQGameSession.BBQElectroTrapComponent.AddBattery
	void AddBattery(ABBQGameSessionCharacter* Character) // [0x1e20420] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(Character);
	}
};

/// Class /Script/BBQGameSession.BBQEnvHitReceiverSubObject
/// Size: 0x0040 (64 bytes) (0x000028 - 0x000040) align 8 MaxSize: 0x0040
class UBBQEnvHitReceiverSubObject : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0028   (0x0018)  MISSED
};

/// Class /Script/BBQGameSession.BBQEnvironmentDamageSettings
/// Size: 0x0040 (64 bytes) (0x000030 - 0x000040) align 8 MaxSize: 0x0040
class UBBQEnvironmentDamageSettings : public UDataAsset
{ 
public:
	TArray<FEnvironmentDamageSettings>                 EnvironmentAttackSettings;                                  // 0x0030   (0x0010)  
};

/// Class /Script/BBQGameSession.BBQEnvironmentHitReceiver
/// Size: 0x00D0 (208 bytes) (0x0000B0 - 0x0000D0) align 8 MaxSize: 0x00D0
class UBBQEnvironmentHitReceiver : public UActorComponent
{ 
public:
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                                // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_7[0x1F];                                      // 0x00B1   (0x001F)  MISSED
};

/// Class /Script/BBQGameSession.BBQCalculationFamilySlowdown
/// Size: 0x0040 (64 bytes) (0x000040 - 0x000040) align 8 MaxSize: 0x0040
class UBBQCalculationFamilySlowdown : public UBBQGameplayModMagnitudeCalc
{ 
public:
};

/// Class /Script/BBQGameSession.BBQEscapeZone
/// Size: 0x0438 (1080 bytes) (0x000228 - 0x000438) align 8 MaxSize: 0x0438
class ABBQEscapeZone : public AActor
{ 
public:
	class UBoxComponent*                               MainCollisionArea;                                          // 0x0228   (0x0008)  
	class UBoxComponent*                               FamilyDeadzoneCollisionArea;                                // 0x0230   (0x0008)  
	class UArrowComponent*                             FamilyRotationDirection;                                    // 0x0238   (0x0008)  
	class USceneComponent*                             VictimRunDestination;                                       // 0x0240   (0x0008)  
	class USceneComponent*                             FamilyWalkBackDestination;                                  // 0x0248   (0x0008)  
	class UClass*                                      FamilySlowdownClass;                                        // 0x0250   (0x0008)  
	float                                              MinimumFamilyRunSpeed;                                      // 0x0258   (0x0004)  
	float                                              FamilyRunAngleDegrees;                                      // 0x025C   (0x0004)  
	float                                              FamilyForceWalkBackDuration;                                // 0x0260   (0x0004)  
	bool                                               bSprintOnReachEscapeZone;                                   // 0x0264   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0265   (0x0003)  MISSED
	TArray<class ABBQGameSessionCharacterAnimated*>    EscapedVictims;                                             // 0x0268   (0x0010)  
	EEscapeZoneType                                    EscapeZoneType;                                             // 0x0278   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0279   (0x0007)  MISSED
	TArray<FLockOnTargetVolumeInfo>                    LockOnOverrideVolumes;                                      // 0x0280   (0x0010)  
	FText                                              EscapeZoneName;                                             // 0x0290   (0x0018)  
	FActorInstanceID                                   EscapeZoneID;                                               // 0x02A8   (0x0020)  
	TArray<class ABBQGameSessionCharacterAnimated*>    FamilyInsideVolume;                                         // 0x02C8   (0x0010)  
	FGameplayEffectQuery                               SlowdownEffectQuery;                                        // 0x02D8   (0x0150)  
	TArray<class ABBQGameSessionCharacterAnimated*>    PendingEscapeVictims;                                       // 0x0428   (0x0010)  


	/// Functions
	// Function /Script/BBQGameSession.BBQEscapeZone.OnZoneNameRenderVisibilityChanged
	void OnZoneNameRenderVisibilityChanged(bool bIsVisible) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(bIsVisible);
	}
	// Function /Script/BBQGameSession.BBQEscapeZone.OnOverlapEnd
	void OnOverlapEnd(UPrimitiveComponent* LocalComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e25420] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(LocalComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQEscapeZone.OnOverlapBegin
	void OnOverlapBegin(UPrimitiveComponent* LocalComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e252c0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(LocalComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQEscapeZone.OnFamilyDeadzoneOverlapBegin
	void OnFamilyDeadzoneOverlapBegin(UPrimitiveComponent* LocalComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e24fe0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(LocalComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQEscapeZone.OnEnterEscapeZone
	void OnEnterEscapeZone(ABBQGameSessionCharacterAnimated* EscapedVictim) // [0x1e24f50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(EscapedVictim);
	}
	// Function /Script/BBQGameSession.BBQEscapeZone.GetEscapeZoneType
	EEscapeZoneType GetEscapeZoneType() // [0x1e24c50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef EEscapeZoneType (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQEscapeZone.GetEscapePointId
	FActorInstanceID GetEscapePointId() // [0x1e24c00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FActorInstanceID (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQEscapeZone.BP_OnVictimReachedEscapeZone
	void BP_OnVictimReachedEscapeZone(ABBQGameSessionCharacter* EscapedVictim) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(EscapedVictim);
	}
	// Function /Script/BBQGameSession.BBQEscapeZone.BP_OnLinkedFuseboxDoorOpened
	void BP_OnLinkedFuseboxDoorOpened() // [0x2438a30] Event|Public|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func();
	}
	// Function /Script/BBQGameSession.BBQEscapeZone.BP_OnLinkedFuseboxDoorClosed
	void BP_OnLinkedFuseboxDoorClosed() // [0x2438a30] Event|Public|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func();
	}
	// Function /Script/BBQGameSession.BBQEscapeZone.BP_OnFamilyReachedDeadZone
	void BP_OnFamilyReachedDeadZone(ABBQGameSessionCharacter* FamilyMember) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(FamilyMember);
	}
	// Function /Script/BBQGameSession.BBQEscapeZone.BeginPlay
	void BeginPlay() // [0x1e249b0] Native|Public        
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQExecutionComponent
/// Size: 0x0150 (336 bytes) (0x0000B0 - 0x000150) align 8 MaxSize: 0x0150
class UBBQExecutionComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(1,502) /* FMulticastSparseDelegate */ __um(OnBeginExecution);                                    // 0x00B0   (0x0001)  
	SDK_UNDEFINED(1,503) /* FMulticastSparseDelegate */ __um(OnExecutionComplete);                                 // 0x00B1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x00B2   (0x0002)  MISSED
	SDK_UNDEFINED(16,504) /* FDelegateProperty */      __um(CanExecuteDelegate);                                   // 0x00B4   (0x0010)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00C4   (0x0004)  MISSED
	class UClass*                                      VictimEffect;                                               // 0x00C8   (0x0008)  
	class UClass*                                      ExecutionDamageType;                                        // 0x00D0   (0x0008)  
	FGameplayTagContainer                              ExecutionImmunityTags;                                      // 0x00D8   (0x0020)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x00F8   (0x0004)  MISSED
	uint32_t                                           CachedExecutionIndex;                                       // 0x00FC   (0x0004)  
	class ABBQGameSessionCharacterAnimated*            CachedVictim;                                               // 0x0100   (0x0008)  
	unsigned char                                      UnknownData03_7[0x48];                                      // 0x0108   (0x0048)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQExecutionComponent.IsExecutionDebugMode
	bool IsExecutionDebugMode() // [0xd654e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQExecutionComponent.AttemptOnSpotExecution
	bool AttemptOnSpotExecution(ABBQGameSessionCharacterAnimated* OtherActorAsBBQCharacter, float ActualDamageToCause) // [0x1e248e0] Final|Native|Public  
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacterAnimated*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(OtherActorAsBBQCharacter, ActualDamageToCause);
	}
};

/// Class /Script/BBQGameSession.BBQFlickeringLight
/// Size: 0x0270 (624 bytes) (0x000228 - 0x000270) align 8 MaxSize: 0x0270
class ABBQFlickeringLight : public AActor
{ 
public:
	class UStaticMesh*                                 LightMesh;                                                  // 0x0228   (0x0008)  
	float                                              MinLightIntensity;                                          // 0x0230   (0x0004)  
	float                                              MaxLightIntensity;                                          // 0x0234   (0x0004)  
	float                                              MinEmissiveIntensity;                                       // 0x0238   (0x0004)  
	float                                              MaxEmissiveIntensity;                                       // 0x023C   (0x0004)  
	float                                              Speed;                                                      // 0x0240   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0244   (0x0004)  MISSED
	class UBBQFlickeringLightAudioComponent*           AudioComponent;                                             // 0x0248   (0x0008)  
	class UMaterialInstanceDynamic*                    DynamicEmissiveMaterial;                                    // 0x0250   (0x0008)  
	class UPointLightComponent*                        LightComponent;                                             // 0x0258   (0x0008)  
	class UStaticMeshComponent*                        MeshComponent;                                              // 0x0260   (0x0008)  
	unsigned char                                      UnknownData01_7[0x8];                                       // 0x0268   (0x0008)  MISSED
};

/// Class /Script/BBQGameSession.BBQFootprintClue
/// Size: 0x0258 (600 bytes) (0x000228 - 0x000258) align 8 MaxSize: 0x0258
class ABBQFootprintClue : public AActor
{ 
public:
	class USceneComponent*                             Root;                                                       // 0x0228   (0x0008)  
	class UBoxComponent*                               InteractionBox;                                             // 0x0230   (0x0008)  
	class UBBQInteractionComponent*                    InteractionComponent;                                       // 0x0238   (0x0008)  
	FBBQGameplayAbilityTargetingClueInfo               ClueInfo;                                                   // 0x0240   (0x0018)  


	/// Functions
	// Function /Script/BBQGameSession.BBQFootprintClue.OnRep_ClueInfo
	void OnRep_ClueInfo() // [0x1e25580] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQFootprintClue.OnClueInfoSet
	void OnClueInfoSet() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQFootprintClue.OnClueInfoReset
	void OnClueInfoReset() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQFootprintClue.HasValidClueInfo
	bool HasValidClueInfo() // [0x1e24c70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQFootstepTrail
/// Size: 0x0138 (312 bytes) (0x0000B0 - 0x000138) align 8 MaxSize: 0x0138
class UBBQFootstepTrail : public UActorComponent
{ 
public:
	class UMaterialInterface*                          FootstepMaterial;                                           // 0x00B0   (0x0008)  
	class UMaterialInstanceDynamic*                    FootstepMaterialDynamic;                                    // 0x00B8   (0x0008)  
	FVector                                            FootstepSize;                                               // 0x00C0   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00CC   (0x0004)  MISSED
	FGameplayTagContainer                              ForbiddenTags;                                              // 0x00D0   (0x0020)  
	float                                              Duration;                                                   // 0x00F0   (0x0004)  
	float                                              FootstepsLifetime;                                          // 0x00F4   (0x0004)  
	float                                              FadeOutDuration;                                            // 0x00F8   (0x0004)  
	float                                              FootstepSpawnDistance;                                      // 0x00FC   (0x0004)  
	float                                              OpacityReductionOnFootsteps;                                // 0x0100   (0x0004)  
	int32_t                                            NumFootstepToReduceOpacity;                                 // 0x0104   (0x0004)  
	float                                              MinimumOpacityFromReduction;                                // 0x0108   (0x0004)  
	bool                                               bSeparateOpacityForEachFoot;                                // 0x010C   (0x0001)  
	bool                                               bStopSpawnOnReachingMinumumOpacity;                         // 0x010D   (0x0001)  
	unsigned char                                      UnknownData01_7[0x2A];                                      // 0x010E   (0x002A)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQFootstepTrail.OnFootstep
	void OnFootstep() // [0x1e25140] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQFootstepTrail.FootstepSpawnStop
	void FootstepSpawnStop() // [0x1e24bc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQFuseBoxBase
/// Size: 0x02F8 (760 bytes) (0x000228 - 0x0002F8) align 8 MaxSize: 0x02F8
class ABBQFuseBoxBase : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x18];                                      // 0x0228   (0x0018)  MISSED
	int32_t                                            TotalFusesNum;                                              // 0x0240   (0x0004)  
	int32_t                                            FuseSlotsNum;                                               // 0x0244   (0x0004)  
	int32_t                                            FuseColorNum;                                               // 0x0248   (0x0004)  
	FVector2D                                          FuseAmpValueRange;                                          // 0x024C   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0254   (0x0004)  MISSED
	TArray<FFuse>                                      FuseDataArray;                                              // 0x0258   (0x0010)  
	TArray<int32_t>                                    AMPValues;                                                  // 0x0268   (0x0010)  
	TArray<int32_t>                                    SolutionColorIndexes;                                       // 0x0278   (0x0010)  
	uint32_t                                           InitialSeed;                                                // 0x0288   (0x0004)  
	float                                              MinigameStartDelay;                                         // 0x028C   (0x0004)  
	FGameplayTagContainer                              MinigameStartForbiddenTags;                                 // 0x0290   (0x0020)  
	class UClass*                                      MinigameClass;                                              // 0x02B0   (0x0008)  
	class ABBQMinigameV2*                              MinigameInstance;                                           // 0x02B8   (0x0008)  
	class USceneComponent*                             RootSceneComponent;                                         // 0x02C0   (0x0008)  
	class UCameraComponent*                            CameraComponent;                                            // 0x02C8   (0x0008)  
	class USceneComponent*                             FuseboxInteractionLocator;                                  // 0x02D0   (0x0008)  
	bool                                               bRequiresMinigameToFix;                                     // 0x02D8   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x02D9   (0x0007)  MISSED
	FFuseboxInteractionState                           InteractionState;                                           // 0x02E0   (0x0010)  
	char                                               CurrentFuseboxState;                                        // 0x02F0   (0x0001)  
	unsigned char                                      UnknownData03_7[0x7];                                       // 0x02F1   (0x0007)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQFuseBoxBase.UnsetFuseboxStateFlag
	void UnsetFuseboxStateFlag(EFuseBoxState Flag) // [0x1e25c20] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EFuseBoxState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Flag);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.TakeOverPlayersCamera
	void TakeOverPlayersCamera(ABBQGameSessionCharacter* PlayingCharacter) // [0x1e25b90] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(PlayingCharacter);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.StartMinigame
	void StartMinigame(ABBQGameSessionCharacter* PlayingCharacter) // [0x1e25b00] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(PlayingCharacter);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.SetInteractionState
	void SetInteractionState(ABBQGameSessionCharacter* Character, EFuseboxAction InteractionToPerform) // [0x1e25a30] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, EFuseboxAction);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(Character, InteractionToPerform);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.SetFuseboxStateFlag
	void SetFuseboxStateFlag(EFuseBoxState Flag) // [0x1e258e0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EFuseBoxState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Flag);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.RestorePlayersCamera
	void RestorePlayersCamera(ABBQGameSessionCharacter* PlayingCharacter) // [0x1e257c0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(PlayingCharacter);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.OnUpdateStateFromMinigame
	void OnUpdateStateFromMinigame(FBBQMinigameNetState_FuseBox& FuseBoxState) // [0x2438a30] Event|Protected|HasOutParms|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FBBQMinigameNetState_FuseBox&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(FuseBoxState);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.OnStartMinigameDelayEnded
	void OnStartMinigameDelayEnded() // [0x1e257a0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.OnRep_InitialSeed
	void OnRep_InitialSeed() // [0x1e25780] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func();
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.OnRep_FuseboxState
	void OnRep_FuseboxState(char PrevState) // [0x1e25700] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(char);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(PrevState);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.OnRep_FuseboxInteractionState
	void OnRep_FuseboxInteractionState(FFuseboxInteractionState& PrevState) // [0x1e25660] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FFuseboxInteractionState&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(PrevState);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.OnMinigameSpawned
	void OnMinigameSpawned() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func();
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.OnMinigameEnded
	void OnMinigameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason Reason) // [0x1e251f0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(Minigame, Reason);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.OnFuseboxPuzzleSetupComplete
	void OnFuseboxPuzzleSetupComplete() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func();
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.OnFuseboxDoorOpened
	void OnFuseboxDoorOpened(ABBQGameSessionCharacter* Player) // [0x1e25160] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(Player);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.IsFuseboxStateMaskSet
	bool IsFuseboxStateMaskSet(int32_t InFuseboxState) // [0x1e24e80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func(InFuseboxState);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.IsFuseboxStateFlagSet
	bool IsFuseboxStateFlagSet(EFuseBoxState FlagToCheck) // [0x1e24df0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(EFuseBoxState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		return func(FlagToCheck);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.IsFuseboxStateEqual
	bool IsFuseboxStateEqual(int32_t InFuseboxState) // [0x1e24d50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func(InFuseboxState);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.GenerateFuseboxPuzzle
	void GenerateFuseboxPuzzle() // [0x1e24be0] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func();
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.ClearInteractingCharacter
	void ClearInteractingCharacter(ABBQGameSessionCharacter* Character) // [0x1e24b30] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.BP_StartInteraction_PlaceFuse
	void BP_StartInteraction_PlaceFuse(ABBQGameSessionCharacter* InteractingCharacter) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(InteractingCharacter);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.BP_OnMinigameStarted
	void BP_OnMinigameStarted(ABBQGameSessionCharacter* PlayingCharacter) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func(PlayingCharacter);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.BP_OnFuseboxFlagChanged
	void BP_OnFuseboxFlagChanged(EFuseBoxState Flag, bool bValue) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EFuseBoxState, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func(Flag, bValue);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxBase.BP_OnFixFuseboxMinigameEnded
	void BP_OnFixFuseboxMinigameEnded(EEndMinigameReason EndReason) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		func(EndReason);
	}
};

/// Class /Script/BBQGameSession.BBQFuseBoxDoorBase
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQFuseBoxDoorBase : public AActor
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQFuseBoxDoorBase.IsOpen
	bool IsOpen() // [0x1e24f20] Native|Event|Public|BlueprintEvent|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQFuseboxDoorDressing
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQFuseboxDoorDressing : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQFuseBoxLocator
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQFuseBoxLocator : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQMinigameV2
/// Size: 0x0580 (1408 bytes) (0x000228 - 0x000580) align 8 MaxSize: 0x0580
class ABBQMinigameV2 : public AActor
{ 
public:
	SDK_UNDEFINED(16,505) /* FMulticastInlineDelegate */ __um(OnMinigameEnded);                                    // 0x0228   (0x0010)  
	SDK_UNDEFINED(16,506) /* FMulticastInlineDelegate */ __um(OnMinigameSucceeded);                                // 0x0238   (0x0010)  
	SDK_UNDEFINED(16,507) /* FMulticastInlineDelegate */ __um(OnMinigameFailed);                                   // 0x0248   (0x0010)  
	SDK_UNDEFINED(16,508) /* FMulticastInlineDelegate */ __um(OnMinigameCanceled);                                 // 0x0258   (0x0010)  
	SDK_UNDEFINED(16,509) /* FMulticastInlineDelegate */ __um(OnMinigameInterrupted);                              // 0x0268   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0278   (0x0018)  MISSED
	bool                                               bCanUsePrimaryAbility;                                      // 0x0290   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0291   (0x0003)  MISSED
	FName                                              PlayingCharacterCameraState;                                // 0x0294   (0x0008)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x029C   (0x0004)  MISSED
	FGameplayTagRequirements                           PrimaryAbilityActivationTags;                               // 0x02A0   (0x0040)  
	class UClass*                                      GameplayComponentClass;                                     // 0x02E0   (0x0008)  
	FName                                              MinigameInstigatorActorSkMeshComponentTag;                  // 0x02E8   (0x0008)  
	class UBBQMinigameSettingsV2*                      MinigameSettings;                                           // 0x02F0   (0x0008)  
	EMinigameActionValidationType                      ActionToValidate;                                           // 0x02F8   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x02F9   (0x0003)  MISSED
	float                                              MinActionDelay;                                             // 0x02FC   (0x0004)  
	bool                                               bShouldFailOnMinPoints;                                     // 0x0300   (0x0001)  
	bool                                               bShouldInterruptOnCharacterDamange;                         // 0x0301   (0x0001)  
	bool                                               bCanBeSaved;                                                // 0x0302   (0x0001)  
	bool                                               bSaveStateOnAnyEndReason;                                   // 0x0303   (0x0001)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x0304   (0x0004)  MISSED
	SDK_UNDEFINED(80,510) /* TSet<UClass*> */          __um(InterruptingDamageTypes);                              // 0x0308   (0x0050)  
	EEndMinigameReason                                 TimeoutEndReason;                                           // 0x0358   (0x0001)  
	unsigned char                                      UnknownData05_6[0x7];                                       // 0x0359   (0x0007)  MISSED
	TArray<class UClass*>                              EffectsToApply;                                             // 0x0360   (0x0010)  
	bool                                               bClientAuthoritative;                                       // 0x0370   (0x0001)  
	bool                                               bCanBeCanceled;                                             // 0x0371   (0x0001)  
	unsigned char                                      UnknownData06_6[0x6];                                       // 0x0372   (0x0006)  MISSED
	TMap<FName, FInputActionContainer>                 InputActionOverrideMap;                                     // 0x0378   (0x0050)  
	bool                                               bBindAnalogInputs;                                          // 0x03C8   (0x0001)  
	bool                                               bDisablePlayingCharacterInput;                              // 0x03C9   (0x0001)  
	bool                                               bDisableCameraInput;                                        // 0x03CA   (0x0001)  
	unsigned char                                      UnknownData07_6[0x5];                                       // 0x03CB   (0x0005)  MISSED
	class UBBQInteractionMinigameAudioDataAsset*       AudioConfig;                                                // 0x03D0   (0x0008)  
	class UBBQInteractionMinigameAudioPlayer*          AudioPlayer;                                                // 0x03D8   (0x0008)  
	class AActor*                                      MinigameInstigatorActor;                                    // 0x03E0   (0x0008)  
	class USkeletalMeshComponent*                      MinigameInstigatoSkMeshComponent;                           // 0x03E8   (0x0008)  
	class UBBQMinigameGameplayComponent*               GameplayComponent;                                          // 0x03F0   (0x0008)  
	FRandomStream                                      RandomStream;                                               // 0x03F8   (0x0008)  
	FBBQMinigameInitialState                           InitialState;                                               // 0x0400   (0x0088)  
	FBBQMinigameState                                  State;                                                      // 0x0488   (0x0010)  
	EEndMinigameReason                                 EndReason;                                                  // 0x0498   (0x0001)  
	bool                                               bIsReconciliating;                                          // 0x0499   (0x0001)  
	unsigned char                                      UnknownData08_6[0xA6];                                      // 0x049A   (0x00A6)  MISSED
	class UAnimMontage*                                ActiveMontage;                                              // 0x0540   (0x0008)  
	unsigned char                                      UnknownData09_7[0x38];                                      // 0x0548   (0x0038)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQMinigameV2.StopMontageReplicated
	void StopMontageReplicated(UAnimMontage* AnimMontage) // [0x1e67a90] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(AnimMontage);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.StartTimer
	void StartTimer(float Time, EMinigameTimerId TimerId) // [0x1e679c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float, EMinigameTimerId);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Time, TimerId);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.ShouldInterruptOnCharacterDamage
	bool ShouldInterruptOnCharacterDamage(UClass* DamageType) // [0x1e678c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(UClass*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(DamageType);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.ServerStopMontage
	void ServerStopMontage(UAnimMontage* AnimMontage) // [0x1e06420] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(AnimMontage);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.ServerPlayMontageOnInstigatorActor
	void ServerPlayMontageOnInstigatorActor(UAnimMontage* AnimMontage, FName StartSectionName) // [0x1e677d0] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)(UAnimMontage*, FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(AnimMontage, StartSectionName);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.ServerPlayMontage
	void ServerPlayMontage(UAnimMontage* AnimMontage, float InPlayRate, FName StartSectionName, float StartTimeSeconds) // [0x1e67680] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)(UAnimMontage*, float, FName, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(AnimMontage, InPlayRate, StartSectionName, StartTimeSeconds);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.ServerPlayAkEvent
	void ServerPlayAkEvent(UAkAudioEvent* AudioEvent) // [0x1e06fa0] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)(UAkAudioEvent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(AudioEvent);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.Server_DestroyMinigame
	void Server_DestroyMinigame() // [0x1e678a0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.PlayMontageReplicated
	float PlayMontageReplicated(UAnimMontage* AnimMontage, float InPlayRate, FName StartSectionName, float StartTimeSeconds) // [0x1e67520] Final|Native|Protected|BlueprintCallable 
	{
		typedef float (*FuncPtr)(UAnimMontage*, float, FName, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func(AnimMontage, InPlayRate, StartSectionName, StartTimeSeconds);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.PlayMontageOnInstigatorActorReplicated
	void PlayMontageOnInstigatorActorReplicated(UAnimMontage* AnimMontage, FName StartSectionName) // [0x1e67450] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UAnimMontage*, FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(AnimMontage, StartSectionName);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.PlayAkEventReplicated
	void PlayAkEventReplicated(UAkAudioEvent* AudioEvent) // [0x1e673c0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UAkAudioEvent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(AudioEvent);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.OnRep_State
	void OnRep_State(FBBQMinigameState& LastState) // [0x1e67310] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FBBQMinigameState&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(LastState);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.OnRep_InitialState
	void OnRep_InitialState() // [0x1e672f0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.OnRep_EndReason
	void OnRep_EndReason() // [0x1e672d0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.OnPlayingCharacterDestroyed
	void OnPlayingCharacterDestroyed(AActor* DestroyedActor) // [0x1e67240] Native|Protected     
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(DestroyedActor);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.OnInputEnabled
	void OnInputEnabled() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.IsNetSimulating
	bool IsNetSimulating() // [0x1e67210] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.IsBeingSpectatedLocally
	bool IsBeingSpectatedLocally() // [0x1e671e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.IsActive
	bool IsActive() // [0x1e671b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.HasStarted
	bool HasStarted() // [0x1e67190] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.GetStartPoints
	float GetStartPoints() // [0x1e67160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.GetPlayingCharacter
	ABBQGameSessionCharacter* GetPlayingCharacter() // [0x1e67130] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacter* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.GetMinPoints
	float GetMinPoints() // [0x1e67100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.GetMaxPoints
	float GetMaxPoints() // [0x1e670d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.GetLastInputValidationResult
	EInputValidationResult GetLastInputValidationResult() // [0x1e670b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef EInputValidationResult (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.GetInputAction
	UInputAction* GetInputAction(FName& InputActionName) // [0x1e67010] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UInputAction* (*FuncPtr)(FName&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		return func(InputActionName);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.GetCurrentState
	FBBQMinigameState GetCurrentState() // [0x1e66fe0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FBBQMinigameState (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.GetCurrentPoints
	float GetCurrentPoints() // [0x1e66fc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventPerformUpdate
	EInputValidationResult EventPerformUpdate(float DeltaTime, FBBQMinigameInputState& InputState) // [0x2438a30] Event|Protected|HasOutParms|BlueprintEvent 
	{
		typedef EInputValidationResult (*FuncPtr)(float, FBBQMinigameInputState&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		return func(DeltaTime, InputState);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventPerformSimulatedUpdate
	void EventPerformSimulatedUpdate(FBBQMinigameState& LastState) // [0x2438a30] Event|Protected|HasOutParms|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FBBQMinigameState&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		func(LastState);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnTimerEnded
	void EventOnTimerEnded(EMinigameTimerId TimerId) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EMinigameTimerId);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		func(TimerId);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnPostPerformUpdate
	void EventOnPostPerformUpdate() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnPostClientCorrection
	void EventOnPostClientCorrection() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnPointsChanged
	void EventOnPointsChanged(float PrevioutsPoints) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		func(PrevioutsPoints);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnMinigameWidgetCreated
	void EventOnMinigameWidgetCreated() // [0xc761f0] Native|Event|Protected|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnMinigameSucceeded
	void EventOnMinigameSucceeded() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnMinigameStarted
	void EventOnMinigameStarted() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnMinigameStartDelayEnded
	void EventOnMinigameStartDelayEnded() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnMinigameInterrupted
	void EventOnMinigameInterrupted() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnMinigameFailed
	void EventOnMinigameFailed() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[39]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnMinigameEnded
	void EventOnMinigameEnded(EEndMinigameReason Reason) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[40]);
		func(Reason);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnMinigameCanceled
	void EventOnMinigameCanceled() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[41]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnDecayTick
	void EventOnDecayTick() // [0xe640b0] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnClientCorrection
	void EventOnClientCorrection(FBBQMinigameNetState& PreCorrectionNetState) // [0x2438a30] Event|Protected|HasOutParms|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FBBQMinigameNetState&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		func(PreCorrectionNetState);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventOnClientAckedInputValidationResult
	void EventOnClientAckedInputValidationResult(EInputValidationResult ValidationResult) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EInputValidationResult);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		func(ValidationResult);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventInitializeDefaultSettings
	void EventInitializeDefaultSettings() // [0x1e4e8f0] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventGetInputDelayTime
	float EventGetInputDelayTime(EInputValidationResult InputValidationResult) // [0x1e66f30] Native|Event|Protected|BlueprintEvent|Const 
	{
		typedef float (*FuncPtr)(EInputValidationResult);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		return func(InputValidationResult);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventEvaluateSuccessCondition
	bool EventEvaluateSuccessCondition() // [0x1e66f00] Native|Event|Protected|BlueprintEvent|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventCheckClientError
	bool EventCheckClientError(FBBQMinigameNetState& ClientNetState) // [0x1e66df0] Native|Event|Protected|HasOutParms|BlueprintEvent 
	{
		typedef bool (*FuncPtr)(FBBQMinigameNetState&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		return func(ClientNetState);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventCanBeCanceled
	bool EventCanBeCanceled() // [0x1e66dc0] Native|Event|Protected|BlueprintEvent 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EventApplyModifiersToInitialSettings
	void EventApplyModifiersToInitialSettings() // [0x1e4e910] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.EndMinigame
	void EndMinigame(EEndMinigameReason Reason) // [0x1e66d40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		func(Reason);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.ClientAckInputValidationResult
	void ClientAckInputValidationResult(EInputValidationResult ValidationResult) // [0x1e66cc0] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(EInputValidationResult);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		func(ValidationResult);
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.CheckPrimaryAbilityTagRequirement
	bool CheckPrimaryAbilityTagRequirement() // [0x1e66c90] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.CanSpawnWidget
	bool CanSpawnWidget() // [0x1e66c60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMinigameV2.AddPoints
	void AddPoints(float Points) // [0x1e66bd0] Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[55]);
		func(Points);
	}
};

/// Class /Script/BBQGameSession.BBQFuseBoxMinigame
/// Size: 0x0658 (1624 bytes) (0x000580 - 0x000658) align 8 MaxSize: 0x0658
class ABBQFuseBoxMinigame : public ABBQMinigameV2
{ 
public:
	int32_t                                            TotalFusesNum;                                              // 0x0580   (0x0004)  
	int32_t                                            FuseSlotsNum;                                               // 0x0584   (0x0004)  
	int32_t                                            FuseColorNum;                                               // 0x0588   (0x0004)  
	FVector2D                                          FuseAmpValueRange;                                          // 0x058C   (0x0008)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0594   (0x0004)  MISSED
	TArray<FFuse>                                      FuseDataArray;                                              // 0x0598   (0x0010)  
	TArray<int32_t>                                    AMPValues;                                                  // 0x05A8   (0x0010)  
	TArray<int32_t>                                    SolutionColorIndexes;                                       // 0x05B8   (0x0010)  
	FBBQMinigameNetState_FuseBox                       FuseBoxState;                                               // 0x05C8   (0x0030)  
	FBBQMinigameNetState_FuseBox                       AuxFuseState;                                               // 0x05F8   (0x0030)  
	unsigned char                                      UnknownData01_7[0x30];                                      // 0x0628   (0x0030)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQFuseBoxMinigame.SetHoveredState
	void SetHoveredState(int32_t HoveredFuseButtonIndex, bool bIsHoveredFuseButtonASlot) // [0x1e25960] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(HoveredFuseButtonIndex, bIsHoveredFuseButtonASlot);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxMinigame.SetFloatingFuse
	void SetFloatingFuse(int32_t AvailableFuseIndex) // [0x1e25850] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(AvailableFuseIndex);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxMinigame.OnRep_FuseboxState
	void OnRep_FuseboxState(FBBQMinigameNetState_FuseBox& LastRepFuseBoxState) // [0x1e255a0] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FBBQMinigameNetState_FuseBox&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(LastRepFuseBoxState);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxMinigame.IsFuseSlotSolutionRowValid
	bool IsFuseSlotSolutionRowValid(int32_t RowIndex) // [0x1e24cb0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(RowIndex);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxMinigame.EventPerformSimulatedUpdate_FuseBox
	void EventPerformSimulatedUpdate_FuseBox(FBBQMinigameNetState_FuseBox& LastRepFuseBoxState) // [0x2438a30] Event|Protected|HasOutParms|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FBBQMinigameNetState_FuseBox&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(LastRepFuseBoxState);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxMinigame.ClearHoveredState
	void ClearHoveredState() // [0x1e24b10] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQFuseBoxMinigame.ClearFuseSlot
	void ClearFuseSlot(int32_t SlotIndex) // [0x1e24a80] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(SlotIndex);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxMinigame.ClearFreeFuse
	void ClearFreeFuse(int32_t FreeFuseIndex) // [0x1e249f0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(FreeFuseIndex);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxMinigame.ClearFloatingFuse
	void ClearFloatingFuse() // [0x1e249d0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func();
	}
	// Function /Script/BBQGameSession.BBQFuseBoxMinigame.AssignFuseToSlot
	void AssignFuseToSlot(int32_t SlotIndex, int32_t FuseIndex) // [0x1e24810] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(SlotIndex, FuseIndex);
	}
	// Function /Script/BBQGameSession.BBQFuseBoxMinigame.AssignFuseToFreeFuse
	void AssignFuseToFreeFuse(int32_t FreeFuseIndex, int32_t FuseIndex) // [0x1e24740] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(FreeFuseIndex, FuseIndex);
	}
};

/// Class /Script/BBQGameSession.BBQGameplayAbilityTargetActor_CookListen
/// Size: 0x06A0 (1696 bytes) (0x000338 - 0x0006A0) align 16 MaxSize: 0x06A0
class ABBQGameplayAbilityTargetActor_CookListen : public AGameplayAbilityTargetActor
{ 
public:
	bool                                               bFilterEnvironmentalNoises;                                 // 0x0338   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0339   (0x0007)  MISSED
	class UNiagaraSystem*                              NoiseTargetVFXTemplate;                                     // 0x0340   (0x0008)  
	FLinearColor                                       NoiseTargetDefaultColor;                                    // 0x0348   (0x0010)  
	FLinearColor                                       NoiseTargetSpottedColor;                                    // 0x0358   (0x0010)  
	FString                                            ColorVariableName;                                          // 0x0368   (0x0010)  
	FString                                            SizeVariableName;                                           // 0x0378   (0x0010)  
	class UCurveFloat*                                 DistanceScaleCurve;                                         // 0x0388   (0x0008)  
	FSpottingVFXProperties                             SpottingVFX;                                                // 0x0390   (0x0070)  
	FCookListenPostProcessProperties                   SpottingPostProcess;                                        // 0x0400   (0x0050)  
	FGameplayVariableFloat                             TargetingThreshold;                                         // 0x0450   (0x0058)  
	FGameplayVariableFloat                             TargetingThresholdFocusing;                                 // 0x04A8   (0x0058)  
	FGameplayVariableFloat                             TargetingRange;                                             // 0x0500   (0x0058)  
	float                                              NoiseSpottingGracePeriod;                                   // 0x0558   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x055C   (0x0004)  MISSED
	class UAkRtpc*                                     HearingIntensityRTPC;                                       // 0x0560   (0x0008)  
	class UAkRtpc*                                     HearingHorizontalDirectionRTPC;                             // 0x0568   (0x0008)  
	class UAkRtpc*                                     HearingVerticalDirectionRTPC;                               // 0x0570   (0x0008)  
	int32_t                                            HearingIntensityInterpolationTimeMs;                        // 0x0578   (0x0004)  
	float                                              AutoAimSpeed;                                               // 0x057C   (0x0004)  
	class USceneComponent*                             Root;                                                       // 0x0580   (0x0008)  
	TMap<class AActor*, FBBQNoiseTargetInfo>           NoiseTargetInfoMap;                                         // 0x0588   (0x0050)  
	class AActor*                                      SpottedActor;                                               // 0x05D8   (0x0008)  
	class AActor*                                      LastFocusActor;                                             // 0x05E0   (0x0008)  
	FGameplayAbilityTargetDataHandle                   TargetDataHandle;                                           // 0x05E8   (0x0028)  
	class UNiagaraComponent*                           VFX_Idle;                                                   // 0x0610   (0x0008)  
	class UNiagaraComponent*                           VFX_NoiseDetected;                                          // 0x0618   (0x0008)  
	class UNiagaraComponent*                           VFX_Focusing;                                               // 0x0620   (0x0008)  
	class UMaterialInstanceDynamic*                    PPMaterial;                                                 // 0x0628   (0x0008)  
	unsigned char                                      UnknownData02_7[0x70];                                      // 0x0630   (0x0070)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQGameplayAbilityTargetActor_CookListen.GetDataFromTargetDataHandle
	void GetDataFromTargetDataHandle(FGameplayAbilityTargetDataHandle& Handle, AActor*& OutTargetActor, float& OutHoldTime) // [0x1e29870] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayAbilityTargetDataHandle&, AActor*&, float&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Handle, OutTargetActor, OutHoldTime);
	}
};

/// Class /Script/BBQGameSession.BBQGameplayAbilityTargetActor_Footprints
/// Size: 0x04D0 (1232 bytes) (0x000338 - 0x0004D0) align 16 MaxSize: 0x04D0
class ABBQGameplayAbilityTargetActor_Footprints : public AGameplayAbilityTargetActor
{ 
public:
	bool                                               bShowDebugTrail;                                            // 0x0338   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0339   (0x0007)  MISSED
	class USceneComponent*                             Root;                                                       // 0x0340   (0x0008)  
	FGameplayTag                                       ClueAnalysedTag;                                            // 0x0348   (0x0008)  
	FGameplayTag                                       ColouredTrailTag;                                           // 0x0350   (0x0008)  
	class UMaterialInstance*                           DecalMaterialMale;                                          // 0x0358   (0x0008)  
	class UMaterialInstance*                           DecalMaterialFemale;                                        // 0x0360   (0x0008)  
	FVector                                            DecalSize;                                                  // 0x0368   (0x000C)  
	float                                              DecalRightOffset;                                           // 0x0374   (0x0004)  
	class UNiagaraSystem*                              FootprintVfxSystemTemplate;                                 // 0x0378   (0x0008)  
	FVector                                            FootprintVfxScale;                                          // 0x0380   (0x000C)  
	float                                              FootprintFadeOutDuration;                                   // 0x038C   (0x0004)  
	float                                              FootprintFadeInDuration;                                    // 0x0390   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0394   (0x0004)  MISSED
	class UAkAudioEvent*                               ClueAnalysedAudioEvent;                                     // 0x0398   (0x0008)  
	class UAkAudioEvent*                               PlayFollowingTrailLoopAudioEvent;                           // 0x03A0   (0x0008)  
	class UAkAudioEvent*                               StopFollowingTrailLoopAudioEvent;                           // 0x03A8   (0x0008)  
	class UClass*                                      LockOnFootprintActorClass;                                  // 0x03B0   (0x0008)  
	float                                              LockOnFootprintTime;                                        // 0x03B8   (0x0004)  
	float                                              LockOnFootprintDistance;                                    // 0x03BC   (0x0004)  
	int32_t                                            LockOnTargetFootprintIndex;                                 // 0x03C0   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x03C4   (0x0004)  MISSED
	class AActor*                                      LockOnFootprintActor;                                       // 0x03C8   (0x0008)  
	class UBBQAbilityTrackFootprints*                  OwningAbilityCasted;                                        // 0x03D0   (0x0008)  
	class ABBQGameSessionCharacter*                    SourceCharacter;                                            // 0x03D8   (0x0008)  
	TMap<class ABBQGameSessionCharacter*, FBBQFootprint> ClueMap;                                                  // 0x03E0   (0x0050)  
	TArray<FBBQFootprintVisualData>                    FootprintVisualDataArray;                                   // 0x0430   (0x0010)  
	unsigned char                                      UnknownData03_7[0x90];                                      // 0x0440   (0x0090)  MISSED
};

/// Class /Script/BBQGameSession.BBQGameplayAbilityTargetActor_PlaceTrap
/// Size: 0x04B0 (1200 bytes) (0x000338 - 0x0004B0) align 16 MaxSize: 0x04B0
class ABBQGameplayAbilityTargetActor_PlaceTrap : public AGameplayAbilityTargetActor
{ 
public:
	FLinearColor                                       PlaceNotAllowedColor;                                       // 0x0338   (0x0010)  
	FLinearColor                                       PlaceAllowedColor;                                          // 0x0348   (0x0010)  
	class USceneComponent*                             Root;                                                       // 0x0358   (0x0008)  
	class UBoxComponent*                               TrapCollision;                                              // 0x0360   (0x0008)  
	class UStaticMeshComponent*                        TrapMesh;                                                   // 0x0368   (0x0008)  
	float                                              MaxRelativeHeight;                                          // 0x0370   (0x0004)  
	float                                              MaxPlacementMargin;                                         // 0x0374   (0x0004)  
	float                                              MaxDistanceToGroundAtCorners;                               // 0x0378   (0x0004)  
	FName                                              MaterialColorName;                                          // 0x037C   (0x0008)  
	TEnumAsByte<ECollisionChannel>                     FloorTraceChannel;                                          // 0x0384   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0385   (0x0003)  MISSED
	FName                                              PlacementProfileName;                                       // 0x0388   (0x0008)  
	FName                                              PlacementAllowedTag;                                        // 0x0390   (0x0008)  
	FBBQTargetActorMeshState                           PlacementAllowedState;                                      // 0x0398   (0x0048)  
	FBBQTargetActorMeshState                           PlacementNotAllowedState;                                   // 0x03E0   (0x0048)  
	class UBBQAbilityPlaceTrap*                        OwningAbilityPlaceTrap;                                     // 0x0428   (0x0008)  
	bool                                               bPlacementAllowed;                                          // 0x0430   (0x0001)  
	unsigned char                                      UnknownData01_7[0x7F];                                      // 0x0431   (0x007F)  MISSED
};

/// Class /Script/BBQGameSession.BBQGameplayCueNotify_Actor
/// Size: 0x0288 (648 bytes) (0x000288 - 0x000288) align 8 MaxSize: 0x0288
class ABBQGameplayCueNotify_Actor : public AGameplayCueNotify_Actor
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQGameplayCueNotify_Actor.OnReusedAfterRecycled
	void OnReusedAfterRecycled() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameplayCueNotify_Actor.OnRecycled
	void OnRecycled() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameplayCueNotify_Actor.OnGameplayCueFinished
	void OnGameplayCueFinished() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQGameplayLight
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQGameplayLight : public AActor
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQGameplayLight.TurnOff
	void TurnOff() // [0x2438a30] Event|Public|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQGameSessionBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.UpdatePlayerStat
	void UpdatePlayerStat(ABBQBaseCharacter* Player, EPlayerStatType Stat, int32_t DELTA, EStatUpdateOp Op) // [0x1e2bf20] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQBaseCharacter*, EPlayerStatType, int32_t, EStatUpdateOp);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Player, Stat, DELTA, Op);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.UpdateFamilyBondByActivityRow
	void UpdateFamilyBondByActivityRow(UObject* WorldContextObject, FDataTableRowHandle FamilyBondActivityRow) // [0x1e2be50] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UObject*, FDataTableRowHandle);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(WorldContextObject, FamilyBondActivityRow);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.UpdateFamilyBond
	void UpdateFamilyBond(UObject* WorldContextObject, FBBQFamilyBondActivity FamilyBondActivity) // [0x1e2bcf0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UObject*, FBBQFamilyBondActivity);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(WorldContextObject, FamilyBondActivity);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.TrySaveLoadout
	void TrySaveLoadout(ABBQPlayerState* PlayerState) // [0x1e2bc70] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQPlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(PlayerState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.TryConsumeFamilyBondPoints
	bool TryConsumeFamilyBondPoints(FBBQFamilyBondActivity FamilyBondActivity, AActor* InPlayerCharacter) // [0x1e2bb00] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef bool (*FuncPtr)(FBBQFamilyBondActivity, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(FamilyBondActivity, InPlayerCharacter);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.TriggerGameplayActivityEventWithPlayerState
	void TriggerGameplayActivityEventWithPlayerState(UObject* WorldContextObject, FDataTableRowHandle ActivityEvent, AActor* EventInstigator, ABBQPlayerState* BBQPlayerState) // [0x1e2b9a0] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UObject*, FDataTableRowHandle, AActor*, ABBQPlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(WorldContextObject, ActivityEvent, EventInstigator, BBQPlayerState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.TriggerGameplayActivityEvent
	void TriggerGameplayActivityEvent(UObject* WorldContextObject, FDataTableRowHandle ActivityEvent, AActor* EventInstigator) // [0x1e2b890] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UObject*, FDataTableRowHandle, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(WorldContextObject, ActivityEvent, EventInstigator);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.StopLevelSequence
	void StopLevelSequence(ULevelSequencePlayer* LevelSequencePlayer, APawn* TriggeringPlayer) // [0x1e2b7d0] Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ULevelSequencePlayer*, APawn*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(LevelSequencePlayer, TriggeringPlayer);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.SpawnNoiseOutlineComponentAttached
	void SpawnNoiseOutlineComponentAttached(AActor* Actor, FNoiseOutlineConfig Config) // [0x1e2b630] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, FNoiseOutlineConfig);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(Actor, Config);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.SpawnBBQOutlineRendererComponentAttached
	void SpawnBBQOutlineRendererComponentAttached(AActor* Actor, FBBQOutlineRendererConfig Config, bool bAllowSpectators) // [0x1e2b420] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, FBBQOutlineRendererConfig, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(Actor, Config, bAllowSpectators);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.ShowNotification
	void ShowNotification(FDataTableRowHandle ActivityEvent, APlayerController* PlayerController) // [0x1e2b350] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FDataTableRowHandle, APlayerController*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(ActivityEvent, PlayerController);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.SetStarSignPerk
	void SetStarSignPerk(ABBQPlayerState* PlayerState, UClass* PerkClass) // [0x1e2b290] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQPlayerState*, UClass*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(PlayerState, PerkClass);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.RespecAttributePoints
	void RespecAttributePoints(ABBQPlayerState* PlayerState) // [0x1e2b210] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQPlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(PlayerState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.RemoveOutlineRendererInstanceForPlayer
	void RemoveOutlineRendererInstanceForPlayer(AActor* Actor, ABBQGameSessionCharacter* Player, FName& InstanceName, float SecsTillDestroy) // [0x1e2b0b0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, ABBQGameSessionCharacter*, FName&, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(Actor, Player, InstanceName, SecsTillDestroy);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.RemoveOutlineRendererInstanceForAll
	void RemoveOutlineRendererInstanceForAll(AActor* Actor, FName& InstanceName, float SecsTillDestroy) // [0x1e2af90] Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, FName&, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(Actor, InstanceName, SecsTillDestroy);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.RemoveOutlineRendererComponent
	void RemoveOutlineRendererComponent(AActor* Actor, float Duration) // [0x1e2aed0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(Actor, Duration);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.RemoveOutlineRendererByInstanceName
	void RemoveOutlineRendererByInstanceName(AActor* Actor, FName& InstanceName, float SecsTillDestroy) // [0x1e2adb0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, FName&, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(Actor, InstanceName, SecsTillDestroy);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.RemoveBBQOutlineRendererForPlayerState
	void RemoveBBQOutlineRendererForPlayerState(AActor* HighlightPlayer, APlayerState* RemoveFor, float Duration) // [0x1e2aca0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, APlayerState*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(HighlightPlayer, RemoveFor, Duration);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.RemoveBBQOutlineRendererForPlayer
	void RemoveBBQOutlineRendererForPlayer(AActor* Actor, ABBQGameSessionCharacter* Player, float Duration) // [0x1e2ab90] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, ABBQGameSessionCharacter*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(Actor, Player, Duration);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.RemoveAttributePoint
	void RemoveAttributePoint(ABBQPlayerState* PlayerState, FName AttributeName) // [0x1e2aad0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQPlayerState*, FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(PlayerState, AttributeName);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.PlayLevelSequenceWithBlend
	void PlayLevelSequenceWithBlend(ULevelSequencePlayer* LevelSequencePlayer, APawn* TriggeringPlayer, bool bReverse, float BlendInTime, EMovieSceneBuiltInEasing BlendInType, bool bPlayAfterBlendIn, float BlendOutTime, EMovieSceneBuiltInEasing BlendOutType, bool bSetAsCameraModifier, bool bResetCameraWhenFinished, bool bLockPreviousCamera) // [0x1e2a780] Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ULevelSequencePlayer*, APawn*, bool, float, EMovieSceneBuiltInEasing, bool, float, EMovieSceneBuiltInEasing, bool, bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(LevelSequencePlayer, TriggeringPlayer, bReverse, BlendInTime, BlendInType, bPlayAfterBlendIn, BlendOutTime, BlendOutType, bSetAsCameraModifier, bResetCameraWhenFinished, bLockPreviousCamera);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.MakeEffectContext
	FGameplayEffectContextHandle MakeEffectContext(ABBQBaseCharacter* Character, AActor* InEffectCauser) // [0x1e2a610] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef FGameplayEffectContextHandle (*FuncPtr)(ABBQBaseCharacter*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		return func(Character, InEffectCauser);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.IsPlayableActor
	bool IsPlayableActor(AActor* InActor) // [0x1e2a580] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		return func(InActor);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.IsLocalPlayableActor
	bool IsLocalPlayableActor(AActor* InActor) // [0x1e2a4f0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		return func(InActor);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.IsJoiningServer
	bool IsJoiningServer() // [0x1e2a4c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.IsInMuseumMode
	bool IsInMuseumMode(UObject* WorldContextObject) // [0x1e2a430] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)(UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		return func(WorldContextObject);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.IsInLobbyLevel
	bool IsInLobbyLevel(UObject* WorldContextObject) // [0x1e2a3a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)(UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		return func(WorldContextObject);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.IsCustomSession
	bool IsCustomSession(UObject* WorldContextObject) // [0x1e2a310] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)(UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		return func(WorldContextObject);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.IsClientLoggedIn
	bool IsClientLoggedIn(UObject* WorldContextObject) // [0x1e2a280] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)(UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		return func(WorldContextObject);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.HasPlayerReceivedXPFromEvent
	bool HasPlayerReceivedXPFromEvent(ABBQGameSessionCharacter* Player, FDataTableRowHandle ActivityEvent) // [0x1e2a1a0] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacter*, FDataTableRowHandle);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		return func(Player, ActivityEvent);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetRemainingAttributePoints
	int32_t GetRemainingAttributePoints(ABBQPlayerState* PlayerState) // [0x1e2a110] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef int32_t (*FuncPtr)(ABBQPlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		return func(PlayerState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetPlayerOrPlayerBeingSpectated
	ABBQGameSessionCharacter* GetPlayerOrPlayerBeingSpectated(UObject* WorldContextObject) // [0x1e2a080] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef class ABBQGameSessionCharacter* (*FuncPtr)(UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		return func(WorldContextObject);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetPingSeconds
	float GetPingSeconds(APlayerState* PlayerState) // [0x1e29ff0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef float (*FuncPtr)(APlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		return func(PlayerState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetPingMilliseconds
	float GetPingMilliseconds(APlayerState* PlayerState) // [0x1e29f60] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef float (*FuncPtr)(APlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		return func(PlayerState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetObjectLocation
	FVector GetObjectLocation(UObject* Object) // [0x1e29ec0] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	{
		typedef FVector (*FuncPtr)(UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		return func(Object);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetMaxAttributePoints
	int32_t GetMaxAttributePoints(ABBQPlayerState* PlayerState) // [0x1e29e30] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef int32_t (*FuncPtr)(ABBQPlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		return func(PlayerState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetMatchInProgressTime
	float GetMatchInProgressTime(UObject* WorldContextObject) // [0x1e29da0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef float (*FuncPtr)(UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		return func(WorldContextObject);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetIntValueForAttributeVariable
	int32_t GetIntValueForAttributeVariable(ABBQPlayerState* PlayerState, FName AttributeName) // [0x1e29cd0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef int32_t (*FuncPtr)(ABBQPlayerState*, FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		return func(PlayerState, AttributeName);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetIntValueForAttributeFinalVariable
	int32_t GetIntValueForAttributeFinalVariable(ABBQPlayerState* PlayerState, FName& AttributeName) // [0x1e29bf0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	{
		typedef int32_t (*FuncPtr)(ABBQPlayerState*, FName&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		return func(PlayerState, AttributeName);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetFilteredPlayerControllers
	// TArray<ABBQPlayerController*> GetFilteredPlayerControllers(AActor* RelativeActor, ETeamID Team, float MaxDistance, bool bAllowSpectators); // [0x1e29a40] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetBaseAttributeDetails
	UBBQBasePlayerAttributeAsset* GetBaseAttributeDetails(ABBQPlayerState* PlayerState) // [0x1e297e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef class UBBQBasePlayerAttributeAsset* (*FuncPtr)(ABBQPlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[40]);
		return func(PlayerState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetAttributeSet
	UAttributeSet* GetAttributeSet(UAbilitySystemComponent* AbilitySystemComponent, UClass* AttributeSetClass) // [0x1e29710] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef class UAttributeSet* (*FuncPtr)(UAbilitySystemComponent*, UClass*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[41]);
		return func(AbilitySystemComponent, AttributeSetClass);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetAttributeOffset
	int32_t GetAttributeOffset(ABBQPlayerState* PlayerState, FName AttributeName) // [0x1e29640] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef int32_t (*FuncPtr)(ABBQPlayerState*, FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		return func(PlayerState, AttributeName);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetActiveGameplayEffectPeriod
	float GetActiveGameplayEffectPeriod(FActiveGameplayEffectHandle ActiveHandle) // [0x1e295b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef float (*FuncPtr)(FActiveGameplayEffectHandle);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		return func(ActiveHandle);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.GetActiveGameplayEffectModifierMagnitude
	float GetActiveGameplayEffectModifierMagnitude(FActiveGameplayEffectHandle ActiveHandle, FGameplayAttribute Attribute) // [0x1e29390] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef float (*FuncPtr)(FActiveGameplayEffectHandle, FGameplayAttribute);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		return func(ActiveHandle, Attribute);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.AddOrUpdatePlayerStatsFromAchievement
	void AddOrUpdatePlayerStatsFromAchievement(AActor* Player, FDataTableRowHandle& AchievementRow, int32_t DELTA, EStatUpdateOp Op) // [0x1e29230] Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, FDataTableRowHandle&, int32_t, EStatUpdateOp);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		func(Player, AchievementRow, DELTA, Op);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.AddOrUpdatePlayerStats
	void AddOrUpdatePlayerStats(AActor* Player, EPlayerStatType Stat, int32_t DELTA, EStatUpdateOp Op) // [0x1e290e0] Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, EPlayerStatType, int32_t, EStatUpdateOp);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		func(Player, Stat, DELTA, Op);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.AddBBQOutlineRendererOnClient
	void AddBBQOutlineRendererOnClient(AActor* Actor, FBBQOutlineRendererConfig Config) // [0x1e28f30] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, FBBQOutlineRendererConfig);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		func(Actor, Config);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.AddBBQOutlineRendererForPlayerState
	void AddBBQOutlineRendererForPlayerState(AActor* HighlightPlayer, APlayerState* HighlightFor, FBBQOutlineRendererConfig Config, bool bAllowSpectators) // [0x1e28ce0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, APlayerState*, FBBQOutlineRendererConfig, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		func(HighlightPlayer, HighlightFor, Config, bAllowSpectators);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.AddBBQOutlineRendererForPlayer
	void AddBBQOutlineRendererForPlayer(AActor* Actor, ABBQGameSessionCharacter* Player, FBBQOutlineRendererConfig Config) // [0x1e28ae0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, ABBQGameSessionCharacter*, FBBQOutlineRendererConfig);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		func(Actor, Player, Config);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.AddAttributePoint
	void AddAttributePoint(ABBQPlayerState* PlayerState, FName AttributeName) // [0x1e28a20] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQPlayerState*, FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		func(PlayerState, AttributeName);
	}
	// Function /Script/BBQGameSession.BBQGameSessionBlueprintFunctionLibrary.AddAttributeLevel
	void AddAttributeLevel(ABBQPlayerState* PlayerState, FName AttributeName, int32_t LevelIncrease) // [0x1e28920] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQPlayerState*, FName, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		func(PlayerState, AttributeName, LevelIncrease);
	}
};

/// Class /Script/BBQGameSession.BBQLabelNotify
/// Size: 0x0040 (64 bytes) (0x000038 - 0x000040) align 8 MaxSize: 0x0040
class UBBQLabelNotify : public UAnimNotify
{ 
public:
	FName                                              Label;                                                      // 0x0038   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQLabelNotify.GetNotifyLabelTime
	float GetNotifyLabelTime(UAnimMontage* Montage, FName LabelName) // [0x1e32520] Final|Native|Static|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(UAnimMontage*, FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(Montage, LabelName);
	}
};

/// Class /Script/BBQGameSession.BBQGenericNotifyState
/// Size: 0x0038 (56 bytes) (0x000030 - 0x000038) align 8 MaxSize: 0x0038
class UBBQGenericNotifyState : public UAnimNotifyState
{ 
public:
	FName                                              EventName;                                                  // 0x0030   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQGameSessionCharacter
/// Size: 0x16D0 (5840 bytes) (0x0005F0 - 0x0016D0) align 16 MaxSize: 0x16D0
class ABBQGameSessionCharacter : public ABBQBaseCharacter
{ 
public:
	unsigned char                                      UnknownData00_8[0x18];                                      // 0x05F0   (0x0018)  MISSED
	SDK_UNDEFINED(16,511) /* FMulticastInlineDelegate */ __um(OnGenericNotifyStateBeginDelegate);                  // 0x0608   (0x0010)  
	SDK_UNDEFINED(16,512) /* FMulticastInlineDelegate */ __um(OnGenericNotifyStateEndDelegate);                    // 0x0618   (0x0010)  
	class UBBQSpringArmComponent*                      CameraBoom;                                                 // 0x0628   (0x0008)  
	class UBBQCameraComponent*                         FollowCamera;                                               // 0x0630   (0x0008)  
	bool                                               bAttachCameraToMesh;                                        // 0x0638   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0639   (0x0007)  MISSED
	class UCharacterCameraShakesConfig*                DefaultCameraShakesConfig;                                  // 0x0640   (0x0008)  
	SDK_UNDEFINED(16,513) /* FMulticastInlineDelegate */ __um(PlayerIncapacitatedDelegate);                        // 0x0648   (0x0010)  
	SDK_UNDEFINED(16,514) /* FMulticastInlineDelegate */ __um(OnPawnClientRestart);                                // 0x0658   (0x0010)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x0668   (0x0018)  MISSED
	SDK_UNDEFINED(16,515) /* FMulticastInlineDelegate */ __um(OnCharacterHidden);                                  // 0x0680   (0x0010)  
	class UAkComponent*                                AkComponent;                                                // 0x0690   (0x0008)  
	FDataTableRowHandle                                VictimExecuteFamilyBondActivityRow;                         // 0x0698   (0x0010)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x06A8   (0x0008)  MISSED
	TArray<class ABBQGameSessionCharacter*>            TeammatesSeen;                                              // 0x06B0   (0x0010)  
	TArray<class ABBQGameSessionCharacter*>            DeadVictimsSeen;                                            // 0x06C0   (0x0010)  
	class UBBQBleedoutComponent*                       BleedoutComponent;                                          // 0x06D0   (0x0008)  
	class USkeletalMeshComponent*                      DepthRenderingMeshComponent;                                // 0x06D8   (0x0008)  
	FGameplayTag                                       DraggingTag;                                                // 0x06E0   (0x0008)  
	FGameplayTag                                       DraggedTag;                                                 // 0x06E8   (0x0008)  
	float                                              TeamBoostCharacterRadius;                                   // 0x06F0   (0x0004)  
	FGameplayTag                                       InteractionPreventedTag;                                    // 0x06F4   (0x0008)  
	float                                              DelayBeforeAutoIncapacitatedRecovery;                       // 0x06FC   (0x0004)  
	unsigned char                                      UnknownData04_6[0x8];                                       // 0x0700   (0x0008)  MISSED
	FGameplayTag                                       IncapacitatedRecoverAbilityTag;                             // 0x0708   (0x0008)  
	FGameplayTag                                       TrapAbilityActivationTag;                                   // 0x0710   (0x0008)  
	FGameplayTag                                       ExhaustedTag;                                               // 0x0718   (0x0008)  
	FGameplayTag                                       StuckInTrapTag;                                             // 0x0720   (0x0008)  
	FGameplayTag                                       TrackingLookingForClues;                                    // 0x0728   (0x0008)  
	class UClass*                                      ExhaustedEffectClass;                                       // 0x0730   (0x0008)  
	class UClass*                                      PoisonedHitEffectClass;                                     // 0x0738   (0x0008)  
	FGameplayTag                                       EscapedTag;                                                 // 0x0740   (0x0008)  
	FGameplayTag                                       Mercury_TrackingTag;                                        // 0x0748   (0x0008)  
	FGameplayTag                                       Mercury_BloodlustTag;                                       // 0x0750   (0x0008)  
	FDataTableRowHandle                                ActivityEventVictimLevel1;                                  // 0x0758   (0x0010)  
	FDataTableRowHandle                                ActivityEventVictimLevel2;                                  // 0x0768   (0x0010)  
	FDataTableRowHandle                                ActivityEventVictimLevel3;                                  // 0x0778   (0x0010)  
	FDataTableRowHandle                                ActivityEventVictimLevel4;                                  // 0x0788   (0x0010)  
	FDataTableRowHandle                                ActivityEventVictimLevel5;                                  // 0x0798   (0x0010)  
	FDataTableRowHandle                                ActivityEventJohnnyLevel1;                                  // 0x07A8   (0x0010)  
	FDataTableRowHandle                                ActivityEventJohnnyLevel2;                                  // 0x07B8   (0x0010)  
	FDataTableRowHandle                                ActivityEventJohnnyLevel4;                                  // 0x07C8   (0x0010)  
	FGameplayTag                                       HarvestTag;                                                 // 0x07D8   (0x0008)  
	FGameplayTag                                       PoisonedTag;                                                // 0x07E0   (0x0008)  
	FGameplayTag                                       PoisonImmuneTag;                                            // 0x07E8   (0x0008)  
	FGameplayTag                                       ConsumingItemTag;                                           // 0x07F0   (0x0008)  
	FGameplayTag                                       StunnedTag;                                                 // 0x07F8   (0x0008)  
	FGameplayTag                                       StunnedLargeTag;                                            // 0x0800   (0x0008)  
	class UCurveFloat*                                 StunEffectCurve;                                            // 0x0808   (0x0008)  
	float                                              StunPostProcessLerpTime;                                    // 0x0810   (0x0004)  
	float                                              RegularStunRadius;                                          // 0x0814   (0x0004)  
	float                                              LargeStunRadius;                                            // 0x0818   (0x0004)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x081C   (0x0004)  MISSED
	class UAkRtpc*                                     StunRTPC;                                                   // 0x0820   (0x0008)  
	float                                              StunLargeRTPCValue;                                         // 0x0828   (0x0004)  
	float                                              StunRegularRTPCValue;                                       // 0x082C   (0x0004)  
	unsigned char                                      UnknownData06_6[0x10];                                      // 0x0830   (0x0010)  MISSED
	class UTimelineComponent*                          StunPostProcessTimelineComponent;                           // 0x0840   (0x0008)  
	class UBBQCharacterBehaviourComponent*             CharacterBehaviourComponent;                                // 0x0848   (0x0008)  
	class UBBQCinematicCameraPlayerComponent*          CinematicCameraPlayerComponent;                             // 0x0850   (0x0008)  
	class UBBQSpyAbilityHandlerComponent*              SpyHandlerComponent;                                        // 0x0858   (0x0008)  
	FDataTableRowHandle                                MeleeBloodTrailDefinition;                                  // 0x0860   (0x0010)  
	unsigned char                                      UnknownData07_6[0x10];                                      // 0x0870   (0x0010)  MISSED
	class UBBQControlScheme*                           ControlScheme;                                              // 0x0880   (0x0008)  
	bool                                               bAllowCameraControl;                                        // 0x0888   (0x0001)  
	bool                                               bCanSpectate;                                               // 0x0889   (0x0001)  
	unsigned char                                      UnknownData08_6[0x2];                                       // 0x088A   (0x0002)  MISSED
	float                                              SpectateStartDelay;                                         // 0x088C   (0x0004)  
	float                                              AbilityFailedDialogCooldown;                                // 0x0890   (0x0004)  
	unsigned char                                      UnknownData09_6[0x50];                                      // 0x0894   (0x0050)  MISSED
	EMoveMode                                          MoveMode;                                                   // 0x08E4   (0x0001)  
	unsigned char                                      UnknownData10_6[0x3];                                       // 0x08E5   (0x0003)  MISSED
	int32_t                                            NumTimesRecoveredFromIncapacitation;                        // 0x08E8   (0x0004)  
	int32_t                                            NumTimesToIncapacitateBeforeMarkedForDeath;                 // 0x08EC   (0x0004)  
	unsigned char                                      UnknownData11_6[0x1];                                       // 0x08F0   (0x0001)  MISSED
	bool                                               bDebugDumpOutLocalPlayersTags;                              // 0x08F1   (0x0001)  
	unsigned char                                      UnknownData12_6[0x6];                                       // 0x08F2   (0x0006)  MISSED
	class UBBQPairedAnimationComponent*                PairedAnimationComponent;                                   // 0x08F8   (0x0008)  
	class USphereComponent*                            ProximityAreaComponent;                                     // 0x0900   (0x0008)  
	class UBBQBloodTrailComponent*                     BloodTrailComponent;                                        // 0x0908   (0x0008)  
	class UBBQCharacterAudioComponent*                 AudioComp;                                                  // 0x0910   (0x0008)  
	class UBBQDialogComponent*                         DialogComponent;                                            // 0x0918   (0x0008)  
	class UAkRtpc*                                     IsLocalRtpc;                                                // 0x0920   (0x0008)  
	class UAkRtpc*                                     DamageTakenRtpc;                                            // 0x0928   (0x0008)  
	class UAkAudioEvent*                               HitMarkFP;                                                  // 0x0930   (0x0008)  
	class UAkAudioEvent*                               HitMarkTP;                                                  // 0x0938   (0x0008)  
	class UAkAudioEvent*                               HitMarkChainsawFP;                                          // 0x0940   (0x0008)  
	class UAkAudioEvent*                               HitMarkChainsawTP;                                          // 0x0948   (0x0008)  
	class UAkAudioEvent*                               HitMarkHapticsFP;                                           // 0x0950   (0x0008)  
	class UAkAudioEvent*                               MercuryFearAkEvent;                                         // 0x0958   (0x0008)  
	class UAkTrigger*                                  FirstHitByLeatherfaceMusicSting;                            // 0x0960   (0x0008)  
	class UAkRtpc*                                     VelocityRtpc;                                               // 0x0968   (0x0008)  
	class UAkRtpc*                                     HeartRateRtpc;                                              // 0x0970   (0x0008)  
	class UAkRtpc*                                     StaminaRtpc;                                                // 0x0978   (0x0008)  
	class UAkRtpc*                                     HealthRtpc;                                                 // 0x0980   (0x0008)  
	class UAkRtpc*                                     PlayerHealthPercentageRtpc;                                 // 0x0988   (0x0008)  
	class UAkAudioEvent*                               HeartrateAudioEvent;                                        // 0x0990   (0x0008)  
	class UAkAudioEvent*                               BreathingAudioEvent;                                        // 0x0998   (0x0008)  
	class UAkAudioEvent*                               OnSneakAttackedEvent;                                       // 0x09A0   (0x0008)  
	float                                              SpottedBySonarEventCooldown;                                // 0x09A8   (0x0004)  
	unsigned char                                      UnknownData13_6[0x4];                                       // 0x09AC   (0x0004)  MISSED
	class UAkAudioEvent*                               SpottedBySonarEvent;                                        // 0x09B0   (0x0008)  
	class UAkSwitchValue*                              CharacterAudioSwitch;                                       // 0x09B8   (0x0008)  
	SDK_UNDEFINED(80,516) /* TMap<TEnumAsByte<EPhysicalSurface>, class UAkSwitchValue*> */ __um(PhysicsMaterialAudioSwitches); // 0x09C0   (0x0050)  
	TEnumAsByte<EPhysicalSurface>                      CurrentSurfaceType;                                         // 0x0A10   (0x0001)  
	unsigned char                                      UnknownData14_6[0x7];                                       // 0x0A11   (0x0007)  MISSED
	FGameplayTagContainer                              CommUseAbilityBlocked_RequiredTags;                         // 0x0A18   (0x0020)  
	float                                              EscapeAnimDuration;                                         // 0x0A38   (0x0004)  
	unsigned char                                      UnknownData15_6[0x4];                                       // 0x0A3C   (0x0004)  MISSED
	SDK_UNDEFINED(80,517) /* TMap<TEnumAsByte<EPhysicalSurface>, class UNiagaraSystem*> */ __um(SurfaceKickup);    // 0x0A40   (0x0050)  
	bool                                               bSpawnKickupParticlesOnForwardFoot;                         // 0x0A90   (0x0001)  
	unsigned char                                      UnknownData16_6[0x3];                                       // 0x0A91   (0x0003)  MISSED
	FVector                                            KickupSpawnOffset;                                          // 0x0A94   (0x000C)  
	FRotator                                           KickupSpawnRotation;                                        // 0x0AA0   (0x000C)  
	unsigned char                                      UnknownData17_6[0x4];                                       // 0x0AAC   (0x0004)  MISSED
	FBBQCharacterCosmeticsInfo                         StartingCosmeticsInfo;                                      // 0x0AB0   (0x0010)  
	FBBQCharacterCosmeticsInfo                         AppliedCosmeticsInfo;                                       // 0x0AC0   (0x0010)  
	class UVisualDamageInstigatorComponent*            VisualDmgInstigatorComp;                                    // 0x0AD0   (0x0008)  
	class UVisualDamageReceiverComponent*              VisualDmgReceiverComp;                                      // 0x0AD8   (0x0008)  
	class UBBQFootstepTrail*                           FootstepTrailComponent;                                     // 0x0AE0   (0x0008)  
	bool                                               bShowStunTimeDuration;                                      // 0x0AE8   (0x0001)  
	bool                                               bDebugEnableFamilyBondBank;                                 // 0x0AE9   (0x0001)  
	unsigned char                                      UnknownData18_6[0x6];                                       // 0x0AEA   (0x0006)  MISSED
	class UDataTable*                                  CameraStatesTable;                                          // 0x0AF0   (0x0008)  
	float                                              OutlineActivateTime;                                        // 0x0AF8   (0x0004)  
	FGameplayTag                                       InventoryTag;                                               // 0x0AFC   (0x0008)  
	FGameplayTag                                       PlayerConsideredMovingTag;                                  // 0x0B04   (0x0008)  
	bool                                               bShowIsHiddenIcon;                                          // 0x0B0C   (0x0001)  
	unsigned char                                      UnknownData19_6[0x3];                                       // 0x0B0D   (0x0003)  MISSED
	class UCurveFloat*                                 LandingDamage;                                              // 0x0B10   (0x0008)  
	bool                                               bIgnoreLandingDamage;                                       // 0x0B18   (0x0001)  
	unsigned char                                      UnknownData20_6[0x7];                                       // 0x0B19   (0x0007)  MISSED
	class UTextRenderComponent*                        DebugName;                                                  // 0x0B20   (0x0008)  
	class UMaterialInstanceDynamic*                    MercuryFearDynamicMaterial;                                 // 0x0B28   (0x0008)  
	float                                              MinTimeForIdleDialogue;                                     // 0x0B30   (0x0004)  
	unsigned char                                      UnknownData21_6[0x34];                                      // 0x0B34   (0x0034)  MISSED
	class UMaterialInstance*                           HidingMaterial;                                             // 0x0B68   (0x0008)  
	class UMaterialInstance*                           MercuryFearMaterial;                                        // 0x0B70   (0x0008)  
	class UMaterialInstanceDynamic*                    HidingDynamicMaterial;                                      // 0x0B78   (0x0008)  
	TArray<class UMaterialInterface*>                  DefaultMeshMaterials;                                       // 0x0B80   (0x0010)  
	unsigned char                                      UnknownData22_6[0x8];                                       // 0x0B90   (0x0008)  MISSED
	float                                              FadeInHidingVolumeDelay;                                    // 0x0B98   (0x0004)  
	float                                              FadeOutHidingVolumeDelay;                                   // 0x0B9C   (0x0004)  
	FGameplayTagContainer                              HidingTriggerTags;                                          // 0x0BA0   (0x0020)  
	class ABBQHidingSpot*                              CurrentHidingSpot;                                          // 0x0BC0   (0x0008)  
	bool                                               bFullyHiddenInHidingSpot;                                   // 0x0BC8   (0x0001)  
	unsigned char                                      UnknownData23_6[0x7];                                       // 0x0BC9   (0x0007)  MISSED
	class ABBQHidingSpot*                              CurrentlySearchedHidingSpot;                                // 0x0BD0   (0x0008)  
	class ABBQPickupDispenser*                         CurrentPickupDispenser;                                     // 0x0BD8   (0x0008)  
	class ABBQMinigameV2*                              ActiveMinigameV2;                                           // 0x0BE0   (0x0008)  
	class ABBQMinigameV2*                              LastActiveMinigameV2;                                       // 0x0BE8   (0x0008)  
	unsigned char                                      UnknownData24_6[0x4];                                       // 0x0BF0   (0x0004)  MISSED
	float                                              MinVelocityToBeConsideredStill;                             // 0x0BF4   (0x0004)  
	bool                                               bShowFamilyBondPoints;                                      // 0x0BF8   (0x0001)  
	unsigned char                                      UnknownData25_6[0x7];                                       // 0x0BF9   (0x0007)  MISSED
	class UMaterialInstanceDynamic*                    ProximityDynamicMaterial;                                   // 0x0C00   (0x0008)  
	class UMaterialInstanceDynamic*                    StunDynamicMaterial;                                        // 0x0C08   (0x0008)  
	FGameplayTagContainer                              DisallowPlayerMovementTags;                                 // 0x0C10   (0x0020)  
	FGameplayTagContainer                              DisallowCrouchTags;                                         // 0x0C30   (0x0020)  
	FGameplayTagContainer                              NoiseSpottingImmuneTags;                                    // 0x0C50   (0x0020)  
	FGameplayTagContainer                              HitCharacterIgnoreTunnelThrough;                            // 0x0C70   (0x0020)  
	bool                                               bEnableBloodTrail;                                          // 0x0C90   (0x0001)  
	unsigned char                                      UnknownData26_6[0x7];                                       // 0x0C91   (0x0007)  MISSED
	TArray<class UMaterialInterface*>                  FootprintMats;                                              // 0x0C98   (0x0010)  
	unsigned char                                      UnknownData27_6[0x10];                                      // 0x0CA8   (0x0010)  MISSED
	bool                                               bCanUsePrimaryAbility;                                      // 0x0CB8   (0x0001)  
	unsigned char                                      UnknownData28_6[0x3];                                       // 0x0CB9   (0x0003)  MISSED
	FGameplayTag                                       FollowingTrailTag;                                          // 0x0CBC   (0x0008)  
	FGameplayTag                                       CastHiddenShadowsTag;                                       // 0x0CC4   (0x0008)  
	unsigned char                                      UnknownData29_6[0x4];                                       // 0x0CCC   (0x0004)  MISSED
	FGameplayTag                                       EnableProximityWarningForFamilyTag;                         // 0x0CD0   (0x0008)  
	unsigned char                                      UnknownData30_6[0x4];                                       // 0x0CD8   (0x0004)  MISSED
	float                                              ProximityDragDistance;                                      // 0x0CDC   (0x0004)  
	float                                              ProximityCheckTickRate;                                     // 0x0CE0   (0x0004)  
	float                                              ProximityWarningZThreshold;                                 // 0x0CE4   (0x0004)  
	float                                              LineDistanceToNavMeshRatio;                                 // 0x0CE8   (0x0004)  
	float                                              ProximityInnerRadiusPercentage;                             // 0x0CEC   (0x0004)  
	class UCurveFloat*                                 ProximityWarningCurve;                                      // 0x0CF0   (0x0008)  
	bool                                               bForceUseDirectionalMask;                                   // 0x0CF8   (0x0001)  
	unsigned char                                      UnknownData31_6[0x7];                                       // 0x0CF9   (0x0007)  MISSED
	class UMaterialInstance*                           ProximityMaterial;                                          // 0x0D00   (0x0008)  
	class UMaterialInstance*                           StunMaterial;                                               // 0x0D08   (0x0008)  
	float                                              ProximityMaterialMaxValue;                                  // 0x0D10   (0x0004)  
	float                                              ProximityInterpSpeed;                                       // 0x0D14   (0x0004)  
	class UAkAudioEvent*                               ProximityAudioEvent;                                        // 0x0D18   (0x0008)  
	float                                              ProximityAudioStopFadeTime;                                 // 0x0D20   (0x0004)  
	unsigned char                                      UnknownData32_6[0x4];                                       // 0x0D24   (0x0004)  MISSED
	class UAkAudioEvent*                               ProximityStingerAudioEvent;                                 // 0x0D28   (0x0008)  
	class UAkRtpc*                                     ProximityRtpc;                                              // 0x0D30   (0x0008)  
	class UBBQCharacterAnimSettings*                   AnimationSettingsAsset;                                     // 0x0D38   (0x0008)  
	class UBBQExecutionSettings*                       ExecutionSettingsAsset;                                     // 0x0D40   (0x0008)  
	class UAnimInstance*                               MainAnimInstance;                                           // 0x0D48   (0x0008)  
	FName                                              FullBodyAnimSlotName;                                       // 0x0D50   (0x0008)  
	FName                                              UpperBodyAnimSlotName;                                      // 0x0D58   (0x0008)  
	bool                                               bCharacterAndAttachedActorsHidden;                          // 0x0D60   (0x0001)  
	unsigned char                                      UnknownData33_6[0x1];                                       // 0x0D61   (0x0001)  MISSED
	bool                                               bForceDeathByBleedout;                                      // 0x0D62   (0x0001)  
	unsigned char                                      UnknownData34_6[0x5];                                       // 0x0D63   (0x0005)  MISSED
	SDK_UNDEFINED(16,518) /* FMulticastInlineDelegate */ __um(OnProximityValueUpdated);                            // 0x0D68   (0x0010)  
	unsigned char                                      UnknownData35_6[0x1C];                                      // 0x0D78   (0x001C)  MISSED
	float                                              ProximityTargetValue;                                       // 0x0D94   (0x0004)  
	unsigned char                                      UnknownData36_6[0x28];                                      // 0x0D98   (0x0028)  MISSED
	float                                              VictimMaxTimeInDanger;                                      // 0x0DC0   (0x0004)  
	float                                              VictimMaxTimeOutOfDanger;                                   // 0x0DC4   (0x0004)  
	float                                              VictimLowHealthLoopPlayThreshold;                           // 0x0DC8   (0x0004)  
	float                                              VictimLowHealthLoopStopThreshold;                           // 0x0DCC   (0x0004)  
	float                                              MercuryFearVisualMax;                                       // 0x0DD0   (0x0004)  
	float                                              MercuryFearStartPercent;                                    // 0x0DD4   (0x0004)  
	float                                              MercuryFearPerSecond;                                       // 0x0DD8   (0x0004)  
	float                                              MercuryInitialFear;                                         // 0x0DDC   (0x0004)  
	FGameplayTagContainer                              MercuryDecreaseFearItems;                                   // 0x0DE0   (0x0020)  
	float                                              MercuryFearFirstItemPickup;                                 // 0x0E00   (0x0004)  
	float                                              MercuryFearNextItemPickup;                                  // 0x0E04   (0x0004)  
	class UAkAudioEvent*                               VictimLowHealthLoop;                                        // 0x0E08   (0x0008)  
	class UAkAudioEvent*                               VictimLowHealthLoopStop;                                    // 0x0E10   (0x0008)  
	unsigned char                                      UnknownData37_6[0x8];                                       // 0x0E18   (0x0008)  MISSED
	class UAkAudioEvent*                               VictimHealthNotify75;                                       // 0x0E20   (0x0008)  
	class UAkAudioEvent*                               VictimHealthNotify50;                                       // 0x0E28   (0x0008)  
	class UAkAudioEvent*                               VictimHealthNotify25;                                       // 0x0E30   (0x0008)  
	class UAkAudioEvent*                               VictimHealthNotifyDeath;                                    // 0x0E38   (0x0008)  
	class UAkAudioEvent*                               VictimWillToLive;                                           // 0x0E40   (0x0008)  
	class UAkAudioEvent*                               VictimIncapacitatedLoop;                                    // 0x0E48   (0x0008)  
	FName                                              HidingRTPCName;                                             // 0x0E50   (0x0008)  
	float                                              MaxTimeInDanger;                                            // 0x0E58   (0x0004)  
	bool                                               bIsInDanger;                                                // 0x0E5C   (0x0001)  
	bool                                               bIsDisconnected;                                            // 0x0E5D   (0x0001)  
	unsigned char                                      UnknownData38_6[0x2];                                       // 0x0E5E   (0x0002)  MISSED
	float                                              AttackerResetTime;                                          // 0x0E60   (0x0004)  
	unsigned char                                      UnknownData39_6[0x14];                                      // 0x0E64   (0x0014)  MISSED
	class ABBQBaseCharacter*                           LastKnownAttacker;                                          // 0x0E78   (0x0008)  
	class UClass*                                      LastKnownDamageType;                                        // 0x0E80   (0x0008)  
	unsigned char                                      UnknownData40_6[0x40];                                      // 0x0E88   (0x0040)  MISSED
	float                                              LastDamageTaken;                                            // 0x0EC8   (0x0004)  
	float                                              LastHealthChanged;                                          // 0x0ECC   (0x0004)  
	float                                              LastStaminaChanged;                                         // 0x0ED0   (0x0004)  
	bool                                               bPendingKillOrIncapacitate;                                 // 0x0ED4   (0x0001)  
	unsigned char                                      UnknownData41_6[0x3];                                       // 0x0ED5   (0x0003)  MISSED
	TMap<class AActor*, float>                         ResumeCollisionWhenNotTouchingList;                         // 0x0ED8   (0x0050)  
	TMap<FName, class AActor*>                         ContextSpecificCollisionIgnoreActorList;                    // 0x0F28   (0x0050)  
	SDK_UNDEFINED(80,519) /* TSet<AActor*> */          __um(SoftCollideWithActors);                                // 0x0F78   (0x0050)  
	FDataTableRowHandle                                BeingTrackedActivityEvent;                                  // 0x0FC8   (0x0010)  
	TArray<class ABBQGameSessionCharacter*>            CurrentTeamNearbyCharacters;                                // 0x0FD8   (0x0010)  
	TArray<class ABBQGameSessionCharacter*>            OpponentTeamNearbyCharacters;                               // 0x0FE8   (0x0010)  
	TArray<class ABBQGameSessionCharacter*>            TeamBoostNearbyCharacters;                                  // 0x0FF8   (0x0010)  
	class ABBQGameSessionCharacter*                    ProximityClosestCharacter;                                  // 0x1008   (0x0008)  
	class ABBQGameSessionCharacter*                    CharacterBeingFollowed;                                     // 0x1010   (0x0008)  
	float                                              TrackEnemyTickRate;                                         // 0x1018   (0x0004)  
	float                                              LoseLOSTriggerTime;                                         // 0x101C   (0x0004)  
	float                                              EnemyLostTriggerTimeLong;                                   // 0x1020   (0x0004)  
	float                                              DialogTriggerObjectRadius;                                  // 0x1024   (0x0004)  
	float                                              DialogTriggerTeammateSeenRadius;                            // 0x1028   (0x0004)  
	float                                              DialogTriggerCorpseRadius;                                  // 0x102C   (0x0004)  
	float                                              DialogTriggerEscapedRadius;                                 // 0x1030   (0x0004)  
	float                                              DialogEventTickCooldown;                                    // 0x1034   (0x0004)  
	TEnumAsByte<ECollisionChannel>                     LineOfSightChannel;                                         // 0x1038   (0x0001)  
	unsigned char                                      UnknownData42_6[0x7];                                       // 0x1039   (0x0007)  MISSED
	FGameplayTagContainer                              EnemyLOSTriggerPreventionTags;                              // 0x1040   (0x0020)  
	class ABBQEscapeZone*                              CurrentAssociatedEscapeZone;                                // 0x1060   (0x0008)  
	TArray<class ABBQGameSessionCharacter*>            OverlappingPlayers;                                         // 0x1068   (0x0010)  
	SDK_UNDEFINED(16,520) /* FMulticastInlineDelegate */ __um(OnEnterCloseEncounter);                              // 0x1078   (0x0010)  
	SDK_UNDEFINED(16,521) /* FMulticastInlineDelegate */ __um(OnSneakAttacked);                                    // 0x1088   (0x0010)  
	TMap<class ABBQGameSessionCharacter*, float>       TimeBehindFamilyMembers;                                    // 0x1098   (0x0050)  
	float                                              TimeBehindFamilyRequiredForSneakAttack;                     // 0x10E8   (0x0004)  
	float                                              SecsTilIncapacitationRecovery;                              // 0x10EC   (0x0004)  
	float                                              SecsTilIncapacitationBleedoutDeath;                         // 0x10F0   (0x0004)  
	float                                              SecsTilTrapBleedoutDeath;                                   // 0x10F4   (0x0004)  
	float                                              TimeLeftTilIncapacitationRecovery;                          // 0x10F8   (0x0004)  
	float                                              TimeLeftTilIncapacitationBleedoutDeath;                     // 0x10FC   (0x0004)  
	char                                               bRecentlyTraversed;                                         // 0x1100   (0x0001)  
	unsigned char                                      UnknownData43_6[0x67];                                      // 0x1101   (0x0067)  MISSED
	SDK_UNDEFINED(16,522) /* FMulticastInlineDelegate */ __um(OnBloodLustFinished);                                // 0x1168   (0x0010)  
	unsigned char                                      UnknownData44_6[0x60];                                      // 0x1178   (0x0060)  MISSED
	bool                                               bIsBloodlustActive;                                         // 0x11D8   (0x0001)  
	unsigned char                                      UnknownData45_6[0x7];                                       // 0x11D9   (0x0007)  MISSED
	bool                                               IsMercuryAuraSupressedByJohnny;                             // 0x11E0   (0x0001)  
	unsigned char                                      UnknownData46_6[0x3];                                       // 0x11E1   (0x0003)  MISSED
	int32_t                                            JohnnyLevel;                                                // 0x11E4   (0x0004)  
	bool                                               IsLevelUpBonus;                                             // 0x11E8   (0x0001)  
	unsigned char                                      UnknownData47_6[0x7];                                       // 0x11E9   (0x0007)  MISSED
	class UMaterialInstanceDynamic*                    BloodlustVFXDynamicMaterial;                                // 0x11F0   (0x0008)  
	class UMaterialInstance*                           BloodlustVFXMaterial;                                       // 0x11F8   (0x0008)  
	unsigned char                                      UnknownData48_6[0x8];                                       // 0x1200   (0x0008)  MISSED
	class UClass*                                      CarryingFullBloodVialEffect;                                // 0x1208   (0x0008)  
	class UClass*                                      MeleeImmunityEffectClass;                                   // 0x1210   (0x0008)  
	class UClass*                                      IncapacitatedBehaviourClass;                                // 0x1218   (0x0008)  
	class UClass*                                      WrenchAttackBehaviourClass;                                 // 0x1220   (0x0008)  
	int32_t                                            CaughtInTrapCount;                                          // 0x1228   (0x0004)  
	unsigned char                                      UnknownData49_6[0x4];                                       // 0x122C   (0x0004)  MISSED
	class ABBQTrap*                                    TrapCurrentlyBeingCaughtIn;                                 // 0x1230   (0x0008)  
	class ABBQDoorHinge*                               DoorThatStaggeredMe;                                        // 0x1238   (0x0008)  
	EBloodCollectionSource                             LastBloodCollectionSource;                                  // 0x1240   (0x0001)  
	unsigned char                                      UnknownData50_6[0x3];                                       // 0x1241   (0x0003)  MISSED
	FName                                              ReplicatedCameraState;                                      // 0x1244   (0x0008)  
	unsigned char                                      UnknownData51_6[0x1C];                                      // 0x124C   (0x001C)  MISSED
	FGameplayTag                                       PerkAbilityInRangeTag;                                      // 0x1268   (0x0008)  
	FName                                              LifeSaverPerkTag;                                           // 0x1270   (0x0008)  
	FName                                              FocusedPerkTag;                                             // 0x1278   (0x0008)  
	FName                                              DoorUnlockMinigameActiveTag;                                // 0x1280   (0x0008)  
	FName                                              StudyAndTamperPerkTag;                                      // 0x1288   (0x0008)  
	FName                                              MinigameActiveTag;                                          // 0x1290   (0x0008)  
	FGameplayTagContainer                              AbilityActiveTags;                                          // 0x1298   (0x0020)  
	float                                              AbilityOnCooldownNotificationCooldown;                      // 0x12B8   (0x0004)  
	float                                              AbilityAlreadyActiveNotificationCooldown;                   // 0x12BC   (0x0004)  
	float                                              AbilityBlockedFromActivationNotificationCooldown;           // 0x12C0   (0x0004)  
	float                                              LifeSaverNotificationCooldown;                              // 0x12C4   (0x0004)  
	float                                              FocusedNotificationCooldown;                                // 0x12C8   (0x0004)  
	float                                              StudyAndTamperNotificationCooldown;                         // 0x12CC   (0x0004)  
	float                                              SpyNotEnoughChargeNotificationCooldown;                     // 0x12D0   (0x0004)  
	unsigned char                                      UnknownData52_6[0x4];                                       // 0x12D4   (0x0004)  MISSED
	class UClass*                                      RestoreSmallHealth;                                         // 0x12D8   (0x0008)  
	class UClass*                                      RestoreLargeHealth;                                         // 0x12E0   (0x0008)  
	unsigned char                                      UnknownData53_6[0x1];                                       // 0x12E8   (0x0001)  MISSED
	BBQStance                                          Stance;                                                     // 0x12E9   (0x0001)  
	unsigned char                                      UnknownData54_6[0x2];                                       // 0x12EA   (0x0002)  MISSED
	FGameplayTag                                       MovementState;                                              // 0x12EC   (0x0008)  
	FGameplayTag                                       PrevMovementState;                                          // 0x12F4   (0x0008)  
	BBQMovementAction                                  MovementAction;                                             // 0x12FC   (0x0001)  
	unsigned char                                      UnknownData55_6[0x3];                                       // 0x12FD   (0x0003)  MISSED
	FRotator                                           TargetRotation;                                             // 0x1300   (0x000C)  
	unsigned char                                      UnknownData56_6[0x1];                                       // 0x130C   (0x0001)  MISSED
	bool                                               bAddMeleeImmunityTagWhenPerformingTraversal;                // 0x130D   (0x0001)  
	unsigned char                                      UnknownData57_6[0x2];                                       // 0x130E   (0x0002)  MISSED
	float                                              BloodInVial;                                                // 0x1310   (0x0004)  
	unsigned char                                      UnknownData58_6[0x4];                                       // 0x1314   (0x0004)  MISSED
	FGameplayVariableFloat                             BloodVialSize;                                              // 0x1318   (0x0058)  
	FGameplayVariableFloat                             BloodCollectedFromMeleeHit;                                 // 0x1370   (0x0058)  
	FGameplayVariableFloat                             BloodCollectedFromCloseEncounter;                           // 0x13C8   (0x0058)  
	FGameplayVariableFloat                             BloodCollectedFromExecutionMultiplier;                      // 0x1420   (0x0058)  
	FGameplayVariableFloat                             BloodCollectedFromLeatherfaceBarge;                         // 0x1478   (0x0058)  
	FGameplayVariableFloat                             SidleSpeedPerkMultiplier;                                   // 0x14D0   (0x0058)  
	FGameplayVariableFloat                             BoltholeSpeedPerkMultiplier;                                // 0x1528   (0x0058)  
	FGameplayVariableFloat                             SneakAttackStunDuration;                                    // 0x1580   (0x0058)  
	FGameplayVariableFloat                             DoorStaggerStunDuration;                                    // 0x15D8   (0x0058)  
	FGameplayVariableFloat                             CattleGridStunDuration;                                     // 0x1630   (0x0058)  
	FGameplayTag                                       CurrentRoomTag;                                             // 0x1688   (0x0008)  
	EHealthState                                       HealthState;                                                // 0x1690   (0x0001)  
	unsigned char                                      UnknownData59_6[0x7];                                       // 0x1691   (0x0007)  MISSED
	class UCurveVector*                                PoisonedMovementCurve;                                      // 0x1698   (0x0008)  
	class UBBQCharacterInventoryComponent*             CachedInventoryComponent;                                   // 0x16A0   (0x0008)  
	unsigned char                                      UnknownData60_7[0x28];                                      // 0x16A8   (0x0028)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.UpdateVictimTrackerInternal
	void UpdateVictimTrackerInternal() // [0x1e35b30] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.UpdateStunPostProcess
	void UpdateStunPostProcess(float ALPHA) // [0x1e35ab0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(ALPHA);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.UpdateProximityRadius
	void UpdateProximityRadius() // [0x1e35a90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.UpdateHUDScreens
	void UpdateHUDScreens(ETeamID TeamId) // [0x1e35a10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ETeamID);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(TeamId);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.UpdateHeldObject
	void UpdateHeldObject() // [0xb888e0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.UnhideBloodlustAbility
	void UnhideBloodlustAbility() // [0x1e359f0] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.TriggerDialogEventFromClient
	void TriggerDialogEventFromClient(FCommEventData CommEventData) // [0x1e35930] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FCommEventData);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(CommEventData);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.TriggerDialogEvent
	void TriggerDialogEvent(FCommEventData CommEventData) // [0x1e35870] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FCommEventData);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(CommEventData);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.TestCalls
	void TestCalls() // [0xb888e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SuppressMercuryModeAura
	void SuppressMercuryModeAura() // [0x1e35850] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.StunPostProcessTimelineFinsshed
	void StunPostProcessTimelineFinsshed() // [0x1e35830] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.StopDialogEvent
	void StopDialogEvent() // [0x1e35810] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.StopAkEvent
	void StopAkEvent(UAkAudioEvent* PlayEvent) // [0x1e35780] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UAkAudioEvent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(PlayEvent);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.StartDraining
	void StartDraining() // [0x1e35760] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.StartBloodTrail
	void StartBloodTrail(FBBQBloodTrailDefinition InBloodTrailDefinition) // [0x1e356b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FBBQBloodTrailDefinition);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(InBloodTrailDefinition);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.ShouldPlayLocalAudioEvents
	bool ShouldPlayLocalAudioEvents() // [0x1e35680] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SetupMercuryFear
	void SetupMercuryFear() // [0x1e35660] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SetRTPCValue
	void SetRTPCValue(UAkRtpc* Rtpc, float NewValue) // [0x1e35590] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UAkRtpc*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(Rtpc, NewValue);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SetProximityTargetValue
	void SetProximityTargetValue(float Value, bool bRaw) // [0x1e354b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(Value, bRaw);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SetProcessMovementInput
	void SetProcessMovementInput(bool bProcessInput) // [0x1e35420] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(bProcessInput);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SetMoveMode
	void SetMoveMode(EMoveMode NewMoveMode) // [0x1e353a0] Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EMoveMode);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(NewMoveMode);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SetHeldObject
	void SetHeldObject(UStaticMesh* HeldObject, FVector PositionOffset, FRotator RotationOffset) // [0x1e35270] Final|Native|Public|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UStaticMesh*, FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func(HeldObject, PositionOffset, RotationOffset);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SetHeldItem
	void SetHeldItem(FGameplayTag& ItemTag) // [0x1e351e0] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayTag&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func(ItemTag);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SetFullyHiddenInHidingSpot
	void SetFullyHiddenInHidingSpot(bool bInFullyHidden) // [0x1e35150] Final|Native|Public  
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		func(bInFullyHidden);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SetCurrentlySearchedHidingSpot
	void SetCurrentlySearchedHidingSpot(ABBQHidingSpot* HidingSpot) // [0x1e350c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQHidingSpot*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		func(HidingSpot);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SetCurrentHidingSpot
	void SetCurrentHidingSpot(ABBQHidingSpot* HidingSpot) // [0x1e35030] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQHidingSpot*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		func(HidingSpot);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SetCollisionWithDoors
	void SetCollisionWithDoors(bool bEnabled) // [0x1e34fa0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		func(bEnabled);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SetCharacterAndAttachedActorsHidden
	void SetCharacterAndAttachedActorsHidden(bool bInHidden) // [0x1e34f10] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		func(bInHidden);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.ServerSetMoveMode
	void ServerSetMoveMode(EMoveMode NewMoveMode) // [0x1e34950] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	{
		typedef void (*FuncPtr)(EMoveMode);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		func(NewMoveMode);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Server_SetReplicatedMovementMode
	void Server_SetReplicatedMovementMode() // [0x1e34ef0] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Server_SetMercuryFearRatio
	void Server_SetMercuryFearRatio(float FearRatio) // [0x1e34e60] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		func(FearRatio);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Server_SetDebugNameVisibility
	void Server_SetDebugNameVisibility(bool bVisible) // [0x1e34dd0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		func(bVisible);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Server_OnMovementStateChanged
	void Server_OnMovementStateChanged(FGameplayTag NewMovementState) // [0x1e34d40] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		func(NewMovementState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Server_ConsumeFamilyBondPoints
	void Server_ConsumeFamilyBondPoints(FBBQFamilyBondActivity FamilyBondActivity) // [0x1e34c20] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(FBBQFamilyBondActivity);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		func(FamilyBondActivity);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Server_ClearHeldObject
	void Server_ClearHeldObject() // [0x1e34c00] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Server_CancelActivePerkAbility
	void Server_CancelActivePerkAbility() // [0x1e34be0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Server_AttachToHand
	void Server_AttachToHand(UStaticMesh* NewStaticMesh, USkeletalMesh* NewSkeletalMesh, UClass* NewAnimClass, bool LeftHand, FVector PositionOffset, FRotator RotationOffset) // [0x1e349f0] Net|NetReliableNative|Event|Public|NetServer|HasDefaults 
	{
		typedef void (*FuncPtr)(UStaticMesh*, USkeletalMesh*, UClass*, bool, FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		func(NewStaticMesh, NewSkeletalMesh, NewAnimClass, LeftHand, PositionOffset, RotationOffset);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Server_AddOutlineRendererComponent
	void Server_AddOutlineRendererComponent() // [0x1e349d0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SendPlayerHealedEvent
	void SendPlayerHealedEvent() // [0x1e34930] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SendGeneratorUsedEvent
	void SendGeneratorUsedEvent(AActor* Actor, FString Action) // [0x1e34850] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[39]);
		func(Actor, Action);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SendDoorUsageEvent
	void SendDoorUsageEvent(FString DoorAction) // [0x1e347b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[40]);
		func(DoorAction);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SendDoorUnlockMinigameEndEvent
	void SendDoorUnlockMinigameEndEvent(FString Outcome) // [0x1e34710] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[41]);
		func(Outcome);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.SendCarBatteryUsedEvent
	void SendCarBatteryUsedEvent(AActor* BatteryActor, FString Action) // [0x1e34630] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		func(BatteryActor, Action);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.ResetLastKnownAttacker
	void ResetLastKnownAttacker() // [0x1e34610] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.RemoveWillToLive
	void RemoveWillToLive(float Value) // [0x1e34590] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		func(Value);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.RemoveInventoryItem
	void RemoveInventoryItem(FGameplayTag& ItemTag) // [0x1e34500] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayTag&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		func(ItemTag);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.RefreshHUDArea
	void RefreshHUDArea(EHUDArea HUDAreaToRefresh) // [0x1e34480] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EHUDArea);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		func(HUDAreaToRefresh);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.ProximityCheckTick
	void ProximityCheckTick() // [0x1e34460] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.PlayMontageOnSkeletalMesh
	float PlayMontageOnSkeletalMesh(USkeletalMeshComponent* SkeletalMeshComponent, UAnimMontage* AnimMontage, FName Section) // [0x1e34350] Final|Native|Public|BlueprintCallable 
	{
		typedef float (*FuncPtr)(USkeletalMeshComponent*, UAnimMontage*, FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		return func(SkeletalMeshComponent, AnimMontage, Section);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.PlayDamageTakenAudio
	void PlayDamageTakenAudio(float DamageTaken, AActor* Attacker) // [0x1e34280] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		func(DamageTaken, Attacker);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.PlayAkEvent
	void PlayAkEvent(UAkAudioEvent* PlayEvent) // [0x1e341f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UAkAudioEvent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		func(PlayEvent);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnUnPossessedKillTimerComplete
	void OnUnPossessedKillTimerComplete() // [0x1e341d0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnTrackingLookingForCluesTagChange
	void OnTrackingLookingForCluesTagChange(FGameplayTag Tag, int32_t Count) // [0x1e34100] Final|Native|Public  
	{
		typedef void (*FuncPtr)(FGameplayTag, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		func(Tag, Count);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnRep_StartingCosmeticsInfo
	void OnRep_StartingCosmeticsInfo() // [0x1e340e0] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnRep_ReplicatedCameraState
	void OnRep_ReplicatedCameraState(FName& PreviousValue) // [0x1e34050] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FName&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		func(PreviousValue);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnRep_OnBloodInVialValueChanged
	void OnRep_OnBloodInVialValueChanged() // [0x1e34030] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[55]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnRep_MovementState
	void OnRep_MovementState(FGameplayTag& OldValue) // [0x1e33fa0] Final|Native|Public|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayTag&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[56]);
		func(OldValue);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnRep_IsInDanger
	void OnRep_IsInDanger(bool& PreviousValue) // [0x1e33f10] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(bool&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[57]);
		func(PreviousValue);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnRep_IsDisconnected
	void OnRep_IsDisconnected() // [0x1e33ef0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[58]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnRep_CurrentHidingSpot
	void OnRep_CurrentHidingSpot(ABBQHidingSpot* OldHidingSpot) // [0x1e33e60] Final|Native|Private 
	{
		typedef void (*FuncPtr)(ABBQHidingSpot*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[59]);
		func(OldHidingSpot);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnRep_CharacterAndAttachedActorsHidden
	void OnRep_CharacterAndAttachedActorsHidden() // [0x1e33e40] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[60]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnRep_ActiveMiniGameV2
	void OnRep_ActiveMiniGameV2(ABBQMinigameV2* PreviousMinigameV2) // [0x1e33db0] Final|Native|Private 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[61]);
		func(PreviousMinigameV2);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnProximityValueUpdated__DelegateSignature
	void OnProximityValueUpdated__DelegateSignature(float ProximityValue) // [0x2438a30] MulticastDelegate|Public|Delegate 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[62]);
		func(ProximityValue);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnNoiseMade
	void OnNoiseMade() // [0x1e33d90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[63]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnMovementStateChanged
	void OnMovementStateChanged(FGameplayTag NewMovementState) // [0x1e33d00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[64]);
		func(NewMovementState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnIsBeingTrackedEnd
	void OnIsBeingTrackedEnd() // [0x1e33ce0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[65]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnIsBeingTracked
	void OnIsBeingTracked(ABBQGameSessionCharacter* TrackerPlayer) // [0x1e33c50] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[66]);
		func(TrackerPlayer);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnIncapacitatedBehaviourEnded
	void OnIncapacitatedBehaviourEnded(ABBQCharacterBehaviour* CharacterBehaviour) // [0x1e33bc0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQCharacterBehaviour*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[67]);
		func(CharacterBehaviour);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnHealingPerformed
	void OnHealingPerformed(ABBQGameSessionCharacter* Healer, ABBQGameSessionCharacter* Healee) // [0x1e33af0] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[68]);
		func(Healer, Healee);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnGameplayEffectAppliedToSelf
	void OnGameplayEffectAppliedToSelf(UAbilitySystemComponent* AbilitySystemComp, FGameplayEffectSpec& EffectSpec, FActiveGameplayEffectHandle EffectHandle) // [0x1e33990] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(UAbilitySystemComponent*, FGameplayEffectSpec&, FActiveGameplayEffectHandle);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[69]);
		func(AbilitySystemComp, EffectSpec, EffectHandle);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnExhaustedTagChange
	void OnExhaustedTagChange(FGameplayTag Tag, int32_t Count) // [0x1e338c0] Native|Public        
	{
		typedef void (*FuncPtr)(FGameplayTag, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[70]);
		func(Tag, Count);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnEscapeAnimComplete
	void OnEscapeAnimComplete() // [0x1e338a0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[71]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnDestroyedObject
	void OnDestroyedObject(AActor* DestroyedObject) // [0x1e33810] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[72]);
		func(DestroyedObject);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnConsumingItemTagChange
	void OnConsumingItemTagChange(FGameplayTag Tag, int32_t Count) // [0x1e33740] Native|Public        
	{
		typedef void (*FuncPtr)(FGameplayTag, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[73]);
		func(Tag, Count);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnAbilityFailed
	void OnAbilityFailed(UGameplayAbility* Ability, FGameplayTagContainer& FailureReason) // [0x1e33640] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(UGameplayAbility*, FGameplayTagContainer&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[74]);
		func(Ability, FailureReason);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnAbilityEnded
	void OnAbilityEnded(FAbilityEndedData& EndedData) // [0x1e335a0] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FAbilityEndedData&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[75]);
		func(EndedData);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnAbilityCommitted
	void OnAbilityCommitted(UGameplayAbility* GameplayAbility) // [0x1e33510] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UGameplayAbility*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[76]);
		func(GameplayAbility);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.OnAbilityActivated
	void OnAbilityActivated(UGameplayAbility* Ability) // [0x1e33480] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UGameplayAbility*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[77]);
		func(Ability);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.NetMulticast_SetReplicatedMovementMode
	void NetMulticast_SetReplicatedMovementMode(char PackedMovementMode) // [0x1e33400] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(char);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[78]);
		func(PackedMovementMode);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.NetMulticast_PlayMontageOnSkeletalMesh_Unreliable
	void NetMulticast_PlayMontageOnSkeletalMesh_Unreliable(USkeletalMeshComponent* SkeletalMeshComponent, UAnimMontage* AnimMontage, FName Section, bool bPlayLocally) // [0x1e332b0] Net|Native|Event|NetMulticast|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(USkeletalMeshComponent*, UAnimMontage*, FName, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[79]);
		func(SkeletalMeshComponent, AnimMontage, Section, bPlayLocally);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.NetMulticast_PlayAkEvent_Unreliable
	void NetMulticast_PlayAkEvent_Unreliable(UAkAudioEvent* PlayEvent, bool bPlayLocally) // [0x1e331e0] Net|Native|Event|NetMulticast|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UAkAudioEvent*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[80]);
		func(PlayEvent, bPlayLocally);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.NetMulticast_PlayAkEvent
	void NetMulticast_PlayAkEvent(UAkAudioEvent* PlayEvent) // [0x1e33150] Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UAkAudioEvent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[81]);
		func(PlayEvent);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.NetMulticast_OnHitByMelee
	void NetMulticast_OnHitByMelee(ABBQBaseCharacter* Aggressor) // [0x1e330c0] Net|NetReliableNative|Event|NetMulticast|Public|NetValidate 
	{
		typedef void (*FuncPtr)(ABBQBaseCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[82]);
		func(Aggressor);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.MercuryJohnnyLevelUp
	void MercuryJohnnyLevelUp() // [0x1e330a0] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[83]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Local_StartPerkAbility
	void Local_StartPerkAbility() // [0x1e33080] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[84]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsStuckInTrap
	bool IsStuckInTrap() // [0x1e33050] Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[85]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsSearchingHidingSpot
	bool IsSearchingHidingSpot() // [0x1e33020] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[86]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsPoisoned
	bool IsPoisoned() // [0x1e32fe0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[87]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsNonPlayableCharacter
	bool IsNonPlayableCharacter() // [0x1e32fb0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[88]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsMercuryAuraAlreadySuppressed
	bool IsMercuryAuraAlreadySuppressed() // [0x1e32f90] Final|Native|Public|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[89]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsMeleeImmune
	bool IsMeleeImmune() // [0x1e32f60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[90]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsItemEquipped
	bool IsItemEquipped(FGameplayTag ItemTag) // [0x1e32ec0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[91]);
		return func(ItemTag);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsInventoryFull
	bool IsInventoryFull() // [0x1e32e90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[92]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsHidingInsideHidingSpot
	bool IsHidingInsideHidingSpot() // [0x1e32e60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[93]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsHiddenFullyInsideHidingSpot
	bool IsHiddenFullyInsideHidingSpot() // [0x1e32e30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[94]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsEscaped
	bool IsEscaped() // [0x1e32df0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[95]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsEffectOngoingActive
	bool IsEffectOngoingActive(FActiveGameplayEffectHandle ActiveHandle) // [0x1e32d50] Final|Native|Public|BlueprintCallable 
	{
		typedef bool (*FuncPtr)(FActiveGameplayEffectHandle);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[96]);
		return func(ActiveHandle);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsDraggingAVictim
	bool IsDraggingAVictim() // [0x1e32d20] Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[97]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsConsideredMoving
	bool IsConsideredMoving() // [0x1e32cf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[98]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsBeingHarvestRestrained
	bool IsBeingHarvestRestrained() // [0x1e32c90] Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[99]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsBeingHarvested
	bool IsBeingHarvested() // [0x1e32cc0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[100]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsBeingExecuted
	bool IsBeingExecuted() // [0x1e32c60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[101]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsBeingDragged
	bool IsBeingDragged() // [0x1e32c30] Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[102]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsAutonomousOrBeingSpectated
	bool IsAutonomousOrBeingSpectated() // [0x1e32c00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[103]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IsAbleToGetBackUpFromIncapacitation
	bool IsAbleToGetBackUpFromIncapacitation() // [0x1e32bd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[104]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.InterruptCurrentMinigameDueToDamage
	void InterruptCurrentMinigameDueToDamage(UClass* DamageType) // [0x1e32b40] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UClass*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[105]);
		func(DamageType);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.IgnoreCollisionWithActorUntilNotTouching
	void IgnoreCollisionWithActorUntilNotTouching(AActor* IgnoreCollisionWithThis, float MinimumIgnoreTime) // [0x1e32a70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[106]);
		func(IgnoreCollisionWithThis, MinimumIgnoreTime);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.HasExitedIdle
	void HasExitedIdle() // [0x1e32a50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[107]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.HasEnteredIdle
	void HasEnteredIdle() // [0x1e32a30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[108]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.HandleFootstep
	void HandleFootstep() // [0x1e32a10] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[109]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetTimeBehindFamilyMember
	float GetTimeBehindFamilyMember(ABBQGameSessionCharacter* FamilyMember) // [0x1e32970] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[110]);
		return func(FamilyMember);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetProximityTargetValues
	void GetProximityTargetValues(float& OutDistanceRaw, float& OutNormValueRaw, float& OutNormValueFinal) // [0x1e32830] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef void (*FuncPtr)(float&, float&, float&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[111]);
		func(OutDistanceRaw, OutNormValueRaw, OutNormValueFinal);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetPairedAnimationFromAnimSlot
	void GetPairedAnimationFromAnimSlot(EBBQPairedAnimSlot InAnimSlot, AActor* Follower, FBBQPairedAnimation& OutPairedAnimation, bool& bOutIsValid) // [0x1e325f0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef void (*FuncPtr)(EBBQPairedAnimSlot, AActor*, FBBQPairedAnimation&, bool&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[112]);
		func(InAnimSlot, Follower, OutPairedAnimation, bOutIsValid);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetNearbyCharactersOfOpponentTeam
	// TArray<ABBQGameSessionCharacter*> GetNearbyCharactersOfOpponentTeam(float InDistance);                                   // [0x1e32440] Final|Native|Public|BlueprintCallable 
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetMoveMode
	EMoveMode GetMoveMode() // [0x1e32420] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef EMoveMode (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[114]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetMontageSectionLengthFromAnimSlot
	float GetMontageSectionLengthFromAnimSlot(EBBQAnimSlot InAnimSlot, int32_t Section) // [0x1e32350] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(EBBQAnimSlot, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[115]);
		return func(InAnimSlot, Section);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetMontageSectionLength
	float GetMontageSectionLength(UAnimMontage* InMontage, int32_t InSection) // [0x1e32280] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef float (*FuncPtr)(UAnimMontage*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[116]);
		return func(InMontage, InSection);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetMontageFromHidingSpotAnimSlot
	UAnimMontage* GetMontageFromHidingSpotAnimSlot(EBBQHidingSpotAnimSlot InAnimSlot) // [0x1e321f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UAnimMontage* (*FuncPtr)(EBBQHidingSpotAnimSlot);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[117]);
		return func(InAnimSlot);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetMontageFromCombatAnimSlot
	UAnimMontage* GetMontageFromCombatAnimSlot(EBBQCombatAnimSlot InAnimSlot) // [0x1e32160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UAnimMontage* (*FuncPtr)(EBBQCombatAnimSlot);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[118]);
		return func(InAnimSlot);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetMontageFromAnimSlot_AddOn1
	UAnimMontage* GetMontageFromAnimSlot_AddOn1(EBBQAnimSlot_AddOn1 InAnimSlot) // [0x1e320d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UAnimMontage* (*FuncPtr)(EBBQAnimSlot_AddOn1);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[119]);
		return func(InAnimSlot);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetMontageFromAnimSlot
	UAnimMontage* GetMontageFromAnimSlot(EBBQAnimSlot InAnimSlot) // [0x1e32040] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UAnimMontage* (*FuncPtr)(EBBQAnimSlot);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[120]);
		return func(InAnimSlot);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetKillOrIncapacitateDamageEffectTags
	FGameplayTagContainer GetKillOrIncapacitateDamageEffectTags() // [0x1e32010] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FGameplayTagContainer (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[121]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetIsHidingInsideHidingVolume
	bool GetIsHidingInsideHidingVolume() // [0x1e31ff0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[122]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetIsHidden
	bool GetIsHidden() // [0x1e31f90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[123]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetIsAnyMinigameActive
	bool GetIsAnyMinigameActive() // [0x1e31f60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[124]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetInventoryItemCount
	int32_t GetInventoryItemCount(FGameplayTag ItemTag) // [0x1e31ec0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[125]);
		return func(ItemTag);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetInventoryComponent
	UBBQCharacterInventoryComponent* GetInventoryComponent() // [0x1e31e90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UBBQCharacterInventoryComponent* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[126]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetHeldObject
	UStaticMesh* GetHeldObject() // [0x1e31e60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UStaticMesh* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[127]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetHeldItemTag
	FGameplayTag GetHeldItemTag() // [0x1e31e20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FGameplayTag (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[128]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetEquippedItem
	bool GetEquippedItem(FBBQInventoryItem& FoundItem) // [0x1e31d60] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef bool (*FuncPtr)(FBBQInventoryItem&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[129]);
		return func(FoundItem);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetEffectDurationRemainingAsPct
	float GetEffectDurationRemainingAsPct(FGameplayTagContainer EffectOwningTags) // [0x1e31c70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(FGameplayTagContainer);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[130]);
		return func(EffectOwningTags);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetEffectDurationRemaining
	float GetEffectDurationRemaining(FGameplayTagContainer EffectOwningTags) // [0x1e31b80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(FGameplayTagContainer);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[131]);
		return func(EffectOwningTags);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetDestructionStart
	float GetDestructionStart(UAnimMontage* InMontage) // [0x1e31af0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef float (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[132]);
		return func(InMontage);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetDestructionDuration
	float GetDestructionDuration(UAnimMontage* InMontage) // [0x1e31a60] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef float (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[133]);
		return func(InMontage);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetCurrentlySearchedHidingSpot
	ABBQHidingSpot* GetCurrentlySearchedHidingSpot() // [0x1e31a30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQHidingSpot* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[134]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetCurrentHidingSpot
	ABBQHidingSpot* GetCurrentHidingSpot() // [0x1e31a00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQHidingSpot* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[135]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetCurrentHealthState
	EHealthState GetCurrentHealthState() // [0x1e319d0] Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	{
		typedef EHealthState (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[136]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetCharactersAndAttachedActorsHidden
	bool GetCharactersAndAttachedActorsHidden() // [0x1e319b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[137]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetBloodVialSizeDisplayValue
	int32_t GetBloodVialSizeDisplayValue() // [0x1e31950] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[138]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetBloodInVialDisplayValue
	int32_t GetBloodInVialDisplayValue() // [0x1e31910] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[139]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.GetBloodAmountDisplayValue
	int32_t GetBloodAmountDisplayValue(float BloodAmount) // [0x1e31870] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[140]);
		return func(BloodAmount);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.FinishBloodlustBoost
	void FinishBloodlustBoost() // [0x1e31850] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[141]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.FindAbilityPrimaryInstanceByTag
	UBBQGameplayAbility* FindAbilityPrimaryInstanceByTag(FGameplayTag RequiredTag) // [0x1e317b0] Final|Native|Public|BlueprintCallable 
	{
		typedef class UBBQGameplayAbility* (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[142]);
		return func(RequiredTag);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.EquipInventoryItem
	void EquipInventoryItem(FGameplayTag& ItemTag) // [0x1e31720] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayTag&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[143]);
		func(ItemTag);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.CollectBlood
	void CollectBlood(float BloodAmount, EBloodCollectionSource CollectedFrom) // [0x1e31650] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float, EBloodCollectionSource);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[144]);
		func(BloodAmount, CollectedFrom);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Client_UpdateFamilyMottoPerkUI
	void Client_UpdateFamilyMottoPerkUI(int32_t MottoIndex, bool bActivated) // [0x1e31580] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(int32_t, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[145]);
		func(MottoIndex, bActivated);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Client_TakeDamage
	void Client_TakeDamage(float Damage, AActor* DamageCauser) // [0x1e314a0] Net|NetReliableNative|Event|Protected|NetClient 
	{
		typedef void (*FuncPtr)(float, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[146]);
		func(Damage, DamageCauser);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Client_ShowStunTimeUI
	void Client_ShowStunTimeUI(float InStunDuration) // [0x1e31410] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[147]);
		func(InStunDuration);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Client_ShowSpectatorModeText
	void Client_ShowSpectatorModeText(bool bForceActivate) // [0x1e31380] Net|NetReliableNative|Event|Protected|NetClient 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[148]);
		func(bForceActivate);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Client_ShowNotEnoughFamilyBondUI
	void Client_ShowNotEnoughFamilyBondUI() // [0x1e31360] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[149]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Client_SendSonarUsedEvent
	void Client_SendSonarUsedEvent(bool bDetected) // [0x1e312d0] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[150]);
		func(bDetected);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Client_PlayAkEvent
	void Client_PlayAkEvent(UAkAudioEvent* PlayEvent) // [0x1e31240] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UAkAudioEvent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[151]);
		func(PlayEvent);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Client_OnNoiseOccurred
	void Client_OnNoiseOccurred(FVector Pos, ENoiseType Type) // [0x1e31180] Net|NetReliableNative|Event|Public|HasDefaults|NetClient|NetValidate 
	{
		typedef void (*FuncPtr)(FVector, ENoiseType);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[152]);
		func(Pos, Type);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Client_OnNoiseMakerDisabled
	void Client_OnNoiseMakerDisabled(ABBQNoiseMaker* NoiseMaker, FString NoiseType) // [0x1e31090] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQNoiseMaker*, FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[153]);
		func(NoiseMaker, NoiseType);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Client_OnLocationTriggered
	void Client_OnLocationTriggered(FName Event) // [0x1e31000] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[154]);
		func(Event);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Client_OnFuseboxSwitchedOff
	void Client_OnFuseboxSwitchedOff(ABBQFuseBoxBase* Fusebox) // [0x1e30f70] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQFuseBoxBase*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[155]);
		func(Fusebox);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.Client_FamilyMottoLevelChanged
	void Client_FamilyMottoLevelChanged(float OldLevel, float NewLevel) // [0x1e30ea0] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[156]);
		func(OldLevel, NewLevel);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.ClearHeldObject
	void ClearHeldObject() // [0x1e30e80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[157]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.ClearHeldItem
	void ClearHeldItem() // [0x1e30e60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[158]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.CharacterStartSpectating
	void CharacterStartSpectating(bool bForceActivate, float StartDelay) // [0x1e30d90] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[159]);
		func(bForceActivate, StartDelay);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.CanUseShard
	bool CanUseShard() // [0x1e30ce0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[160]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.CanProcessMovementInput
	bool CanProcessMovementInput() // [0x1e30cb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[161]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.CanLeaveFootprintsForTracking
	bool CanLeaveFootprintsForTracking() // [0x1e30c80] Native|Event|Public|BlueprintEvent|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[162]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.CancelCurrentMinigame
	void CancelCurrentMinigame(EEndMinigameReason Reason) // [0x1e30d10] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[163]);
		func(Reason);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_UnhideCharacter
	void BP_UnhideCharacter() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[164]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_Server_FamilyMottoLevelChanged
	void BP_Server_FamilyMottoLevelChanged(float OldLevel, float NewLevel) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[165]);
		func(OldLevel, NewLevel);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_ProximityWarningOverlapEnd
	void BP_ProximityWarningOverlapEnd() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[166]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_ProximityWarningOverlapBegin
	void BP_ProximityWarningOverlapBegin() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[167]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnTrackingLookingForClues
	void BP_OnTrackingLookingForClues(bool bNewlyActive) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[168]);
		func(bNewlyActive);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnTeamBoostCharacterProximityChanged
	void BP_OnTeamBoostCharacterProximityChanged(ABBQGameSessionCharacter* Character, bool IsInRadius) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[169]);
		func(Character, IsInRadius);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnStudyAndTamperNoTarget
	void BP_OnStudyAndTamperNoTarget() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[170]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnSpyNotEnoughCharge
	void BP_OnSpyNotEnoughCharge() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[171]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnSneakAttackStarted
	void BP_OnSneakAttackStarted(ABBQGameSessionCharacter* Attacker, ABBQGameSessionCharacter* Target) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[172]);
		func(Attacker, Target);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnPoisonImmuneTagRemoved
	void BP_OnPoisonImmuneTagRemoved() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[173]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnPoisonImmuneTagAdded
	void BP_OnPoisonImmuneTagAdded() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[174]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnNoLifeSaverTarget
	void BP_OnNoLifeSaverTarget() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[175]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnMeshSetup
	void BP_OnMeshSetup() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[176]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnMercuryCharacterFearEnded
	void BP_OnMercuryCharacterFearEnded() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[177]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnMercuryCharacterFear
	void BP_OnMercuryCharacterFear() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[178]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnIsBeingTrackedEnd
	void BP_OnIsBeingTrackedEnd() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[179]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnIsBeingTracked
	void BP_OnIsBeingTracked(ABBQGameSessionCharacter* TrackerPlayer) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[180]);
		func(TrackerPlayer);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnHealVictimPairedAnimEnded
	void BP_OnHealVictimPairedAnimEnded(AActor* Actor, bool bInterrupted) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(AActor*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[181]);
		func(Actor, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnHealingCompleted
	void BP_OnHealingCompleted(ABBQGameSessionCharacter* Healer, ABBQGameSessionCharacter* Healee) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[182]);
		func(Healer, Healee);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnFocusedCannotBeUsed
	void BP_OnFocusedCannotBeUsed() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[183]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnExhausted
	void BP_OnExhausted(bool bIsNewlyExhausted) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[184]);
		func(bIsNewlyExhausted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnCharacterPoisoned
	void BP_OnCharacterPoisoned(ABBQGameSessionCharacter* Causer) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[185]);
		func(Causer);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnBecomeIncapacitated
	void BP_OnBecomeIncapacitated() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[186]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnAbilityOnCooldown
	void BP_OnAbilityOnCooldown() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[187]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnAbilityBlockedFromActivation
	void BP_OnAbilityBlockedFromActivation() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[188]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_OnAbilityAlreadyActive
	void BP_OnAbilityAlreadyActive() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[189]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_HideCharacter
	void BP_HideCharacter() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[190]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_ForceStartSpectating
	void BP_ForceStartSpectating() // [0x1e30c60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[191]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_FindAbilityByTag
	UBBQGameplayAbility* BP_FindAbilityByTag(FGameplayTag& RequiredTag, FGameplayAbilitySpec& SpecOut) // [0x1e30a00] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef class UBBQGameplayAbility* (*FuncPtr)(FGameplayTag&, FGameplayAbilitySpec&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[192]);
		return func(RequiredTag, SpecOut);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_FamilyMottoLevelChanged
	void BP_FamilyMottoLevelChanged(float OldLevel, float NewLevel) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[193]);
		func(OldLevel, NewLevel);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_Client_OnNoiseOccurred
	void BP_Client_OnNoiseOccurred(FVector& Pos, ENoiseType Type) // [0x2438a30] BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FVector&, ENoiseType);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[194]);
		func(Pos, Type);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_Client_OnHitByMelee
	void BP_Client_OnHitByMelee(ABBQBaseCharacter* Aggressor) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQBaseCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[195]);
		func(Aggressor);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_CanUseTrapAbility
	void BP_CanUseTrapAbility(bool& bCanUseTrapAbility) // [0x1e30960] Native|Event|Public|HasOutParms|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[196]);
		func(bCanUseTrapAbility);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.BP_BloodCollected
	void BP_BloodCollected() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[197]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.AttachToHand
	void AttachToHand(UStaticMesh* NewStaticMesh, USkeletalMesh* NewSkeletalMesh, UClass* NewAnimClass, bool LeftHand, FVector PositionOffset, FRotator RotationOffset, FName OverrideSocket) // [0x1e30710] Final|Native|Protected|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UStaticMesh*, USkeletalMesh*, UClass*, bool, FVector, FRotator, FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[198]);
		func(NewStaticMesh, NewSkeletalMesh, NewAnimClass, LeftHand, PositionOffset, RotationOffset, OverrideSocket);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.ApplyIncapacitationEffect
	void ApplyIncapacitationEffect(float DurationRemainingOverride) // [0x1e30690] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[199]);
		func(DurationRemainingOverride);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.ApplyGameplayEffectSelf
	void ApplyGameplayEffectSelf(UBBQGameplayEffect* GAE) // [0x1e30600] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UBBQGameplayEffect*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[200]);
		func(GAE);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacter.AddInventoryItem
	void AddInventoryItem(FGameplayTag& ItemTag, AActor* ItemEffectInstigator, bool bShouldUpdateInventoryStat) // [0x1e304e0] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayTag&, AActor*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[201]);
		func(ItemTag, ItemEffectInstigator, bShouldUpdateInventoryStat);
	}
};

/// Class /Script/BBQGameSession.BBQBarbedWiredCheckNotifyState
/// Size: 0x0038 (56 bytes) (0x000030 - 0x000038) align 8 MaxSize: 0x0038
class UBBQBarbedWiredCheckNotifyState : public UAnimNotifyState
{ 
public:
	EBBQAnimSlot                                       AnimSlotToPlay;                                             // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/BBQGameSession.BBQGameSessionCharacterAnimated
/// Size: 0x22D0 (8912 bytes) (0x0016D0 - 0x0022D0) align 16 MaxSize: 0x22D0
class ABBQGameSessionCharacterAnimated : public ABBQGameSessionCharacter
{ 
public:
	FBBQControlSchemeDefaults                          ControlSchemeDefaults[2];                                   // 0x16D0   (0x0004)  
	bool                                               bUsingGamepad;                                              // 0x16D4   (0x0001)  
	unsigned char                                      UnknownData00_6[0x13];                                      // 0x16D5   (0x0013)  MISSED
	class USceneComponent*                             EscapeZoneRunDestination;                                   // 0x16E8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x16F0   (0x0010)  MISSED
	bool                                               bCanTurnInPlace;                                            // 0x1700   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x1701   (0x0007)  MISSED
	FGameplayTagContainer                              TurnInPlaceForbiddingTags;                                  // 0x1708   (0x0020)  
	FGameplayTagContainer                              SprintTurnForbiddenTags;                                    // 0x1728   (0x0020)  
	FGameplayTagContainer                              TagsWhileStaggered;                                         // 0x1748   (0x0020)  
	unsigned char                                      UnknownData03_6[0xC];                                       // 0x1768   (0x000C)  MISSED
	float                                              LongSidleSpeedMultiplier;                                   // 0x1774   (0x0004)  
	unsigned char                                      UnknownData04_6[0x28];                                      // 0x1778   (0x0028)  MISSED
	class UClass*                                      RunningEffectClass;                                         // 0x17A0   (0x0008)  
	class UClass*                                      SprintingEffectClass;                                       // 0x17A8   (0x0008)  
	class UClass*                                      DashingEffectClass;                                         // 0x17B0   (0x0008)  
	class UClass*                                      WalkingEffectClass;                                         // 0x17B8   (0x0008)  
	class UClass*                                      DraggingEffectClass;                                        // 0x17C0   (0x0008)  
	class UClass*                                      DraggingExhaustionEffectClass;                              // 0x17C8   (0x0008)  
	class UClass*                                      StunnedEffectClass;                                         // 0x17D0   (0x0008)  
	float                                              ForwardAxisValue;                                           // 0x17D8   (0x0004)  
	float                                              RightAxisValue;                                             // 0x17DC   (0x0004)  
	unsigned char                                      UnknownData05_6[0x44];                                      // 0x17E0   (0x0044)  MISSED
	FBBQTraversalData                                  ReplicatedTraversalData;                                    // 0x1824   (0x0044)  
	unsigned char                                      UnknownData06_6[0x8];                                       // 0x1868   (0x0008)  MISSED
	class AActor*                                      TraversalCurrentActor;                                      // 0x1870   (0x0008)  
	float                                              Turn180Threshold;                                           // 0x1878   (0x0004)  
	float                                              IgnoreHidingSpotCollisionsTime;                             // 0x187C   (0x0004)  
	unsigned char                                      UnknownData07_6[0xD];                                       // 0x1880   (0x000D)  MISSED
	BBQRotationMode                                    RotationMode;                                               // 0x188D   (0x0001)  
	BBQRotationMode                                    SecondaryRotationMode;                                      // 0x188E   (0x0001)  
	unsigned char                                      UnknownData08_6[0x1];                                       // 0x188F   (0x0001)  MISSED
	int32_t                                            SecondaryRotationModeGait;                                  // 0x1890   (0x0004)  
	BBQRotationMode                                    DefaultRotationMode;                                        // 0x1894   (0x0001)  
	BBQGait                                            Gait;                                                       // 0x1895   (0x0001)  
	BBQOverlayState                                    OverlayState;                                               // 0x1896   (0x0001)  
	unsigned char                                      UnknownData09_6[0x1];                                       // 0x1897   (0x0001)  MISSED
	class UPhysicalAnimationComponent*                 PhysicsAnimComponent;                                       // 0x1898   (0x0008)  
	FVector                                            PlayerAcceleration;                                         // 0x18A0   (0x000C)  
	unsigned char                                      UnknownData10_6[0xC];                                       // 0x18AC   (0x000C)  MISSED
	bool                                               bIsMoving;                                                  // 0x18B8   (0x0001)  
	bool                                               HasMovementInput;                                           // 0x18B9   (0x0001)  
	unsigned char                                      UnknownData11_6[0x2];                                       // 0x18BA   (0x0002)  MISSED
	FRotator                                           LastVelocityRotation;                                       // 0x18BC   (0x000C)  
	FRotator                                           LastMovementInputRotation;                                  // 0x18C8   (0x000C)  
	float                                              Speed;                                                      // 0x18D4   (0x0004)  
	float                                              MovementInputAmount;                                        // 0x18D8   (0x0004)  
	float                                              AimYawRate;                                                 // 0x18DC   (0x0004)  
	unsigned char                                      UnknownData12_6[0x4];                                       // 0x18E0   (0x0004)  MISSED
	float                                              DoorActionTimer;                                            // 0x18E4   (0x0004)  
	FBBQDoorActionParams                               DoorAction;                                                 // 0x18E8   (0x0038)  
	unsigned char                                      UnknownData13_6[0x8];                                       // 0x1920   (0x0008)  MISSED
	float                                              StaggerImmunityDuration;                                    // 0x1928   (0x0004)  
	bool                                               ExecutionSynchronized;                                      // 0x192C   (0x0001)  
	bool                                               ExecutionComplete;                                          // 0x192D   (0x0001)  
	unsigned char                                      UnknownData14_6[0x2];                                       // 0x192E   (0x0002)  MISSED
	float                                              ExecutionAnimationLength;                                   // 0x1930   (0x0004)  
	float                                              ExecutionTimer;                                             // 0x1934   (0x0004)  
	int32_t                                            ExecutionIndex;                                             // 0x1938   (0x0004)  
	float                                              NetworkExecutionTimer;                                      // 0x193C   (0x0004)  
	FVector                                            ExecutionLocation;                                          // 0x1940   (0x000C)  
	FRotator                                           ExecutionRotation;                                          // 0x194C   (0x000C)  
	float                                              ExecutionKillerForwardOffset;                               // 0x1958   (0x0004)  
	float                                              ExecutionKillerSideOffset;                                  // 0x195C   (0x0004)  
	class ABBQGameSessionCharacterAnimated*            ExecutionActor;                                             // 0x1960   (0x0008)  
	EBBQCombatAnimSlot                                 ExecutionTransitionAnim;                                    // 0x1968   (0x0001)  
	EBBQExecutionState                                 NetworkExecutionState;                                      // 0x1969   (0x0001)  
	EBBQExecutionState                                 LocalExecutionState;                                        // 0x196A   (0x0001)  
	unsigned char                                      UnknownData15_6[0x1];                                       // 0x196B   (0x0001)  MISSED
	float                                              NetworkAnimSlotTimer;                                       // 0x196C   (0x0004)  
	bool                                               NetworkAnimRepeat;                                          // 0x1970   (0x0001)  
	unsigned char                                      UnknownData16_6[0x3];                                       // 0x1971   (0x0003)  MISSED
	float                                              NetworkAnimRate;                                            // 0x1974   (0x0004)  
	class UAnimMontage*                                NetworkAnimationMontage;                                    // 0x1978   (0x0008)  
	FRotator                                           AimingRotation;                                             // 0x1980   (0x000C)  
	unsigned char                                      UnknownData17_6[0xC];                                       // 0x198C   (0x000C)  MISSED
	EBBQEmotion                                        CurrentEmotion;                                             // 0x1998   (0x0001)  
	unsigned char                                      UnknownData18_6[0x3];                                       // 0x1999   (0x0003)  MISSED
	float                                              CurrentEmotionBlend;                                        // 0x199C   (0x0004)  
	unsigned char                                      UnknownData19_6[0x4];                                       // 0x19A0   (0x0004)  MISSED
	float                                              EmotionBlendLerpSpeed;                                      // 0x19A4   (0x0004)  
	float                                              WalkInPlaceDuration;                                        // 0x19A8   (0x0004)  
	unsigned char                                      UnknownData20_6[0xC];                                       // 0x19AC   (0x000C)  MISSED
	FBBQMovementSettings                               CurrentMovementSettings;                                    // 0x19B8   (0x0038)  
	FBBQMovementSettingsState                          MovementData;                                               // 0x19F0   (0x01E8)  
	FBBQMovementSettingsMode                           MovementModeData;                                           // 0x1BD8   (0x0018)  
	FDataTableRowHandle                                MovementModel;                                              // 0x1BF0   (0x0010)  
	FDataTableRowHandle                                SidleAndClimbModel;                                         // 0x1C00   (0x0010)  
	class UTimelineComponent*                          SlideInPlaceTimeline;                                       // 0x1C10   (0x0008)  
	class UTimelineComponent*                          TurnInPlaceTimeline;                                        // 0x1C18   (0x0008)  
	class UCurveFloat*                                 TurnInPlaceCurveFloat;                                      // 0x1C20   (0x0008)  
	float                                              VelocityDirectionInterpSpeed;                               // 0x1C28   (0x0004)  
	float                                              LookingDirectionInterpSpeed;                                // 0x1C2C   (0x0004)  
	float                                              LockOnTargetInterpSpeed;                                    // 0x1C30   (0x0004)  
	float                                              LockOnActorInterpSpeed;                                     // 0x1C34   (0x0004)  
	float                                              LowFallRecoveryHeight;                                      // 0x1C38   (0x0004)  
	float                                              HighFallRecoveryHeight;                                     // 0x1C3C   (0x0004)  
	unsigned char                                      UnknownData21_6[0x60];                                      // 0x1C40   (0x0060)  MISSED
	FBBQAnimatedMontage                                AnimatedMontage;                                            // 0x1CA0   (0x0048)  
	unsigned char                                      UnknownData22_6[0x14];                                      // 0x1CE8   (0x0014)  MISSED
	bool                                               bCharacterCanCrouch;                                        // 0x1CFC   (0x0001)  
	unsigned char                                      UnknownData23_6[0x7];                                       // 0x1CFD   (0x0007)  MISSED
	float                                              MinDistanceTravelledForAutoCrouch;                          // 0x1D04   (0x0004)  
	unsigned char                                      UnknownData24_6[0xD];                                       // 0x1D08   (0x000D)  MISSED
	bool                                               bCanCrouchJog;                                              // 0x1D15   (0x0001)  
	unsigned char                                      UnknownData25_6[0x2];                                       // 0x1D16   (0x0002)  MISSED
	float                                              AutoCrouchGraceTime;                                        // 0x1D18   (0x0004)  
	float                                              ToggleSprintGraceTime;                                      // 0x1D1C   (0x0004)  
	unsigned char                                      UnknownData26_6[0x8];                                       // 0x1D20   (0x0008)  MISSED
	class UCurveFloat*                                 DashCurve;                                                  // 0x1D28   (0x0008)  
	FGameplayTag                                       SprintedRecentlyTag;                                        // 0x1D30   (0x0008)  
	float                                              RecentlySprintedDuration;                                   // 0x1D38   (0x0004)  
	unsigned char                                      UnknownData27_6[0x20];                                      // 0x1D3C   (0x0020)  MISSED
	float                                              MinStaminaPercentForRecoveryFromExhaustion;                 // 0x1D5C   (0x0004)  
	unsigned char                                      UnknownData28_6[0x25];                                      // 0x1D60   (0x0025)  MISSED
	EBBQLadderDismountReason                           LadderDismountReason;                                       // 0x1D85   (0x0001)  
	bool                                               bIsClimbingLadder;                                          // 0x1D86   (0x0001)  
	unsigned char                                      UnknownData29_6[0x19];                                      // 0x1D87   (0x0019)  MISSED
	bool                                               bClimbingInterrupted;                                       // 0x1DA0   (0x0001)  
	unsigned char                                      UnknownData30_6[0x1F];                                      // 0x1DA1   (0x001F)  MISSED
	FBBQAnimationState                                 AnimationState;                                             // 0x1DC0   (0x0050)  
	unsigned char                                      UnknownData31_6[0x38];                                      // 0x1E10   (0x0038)  MISSED
	class UClass*                                      WindowDmgPlayerFallEffect;                                  // 0x1E48   (0x0008)  
	class UClass*                                      WindowDmgPlayerHigherFallEffect;                            // 0x1E50   (0x0008)  
	class UClass*                                      WindowDmgBreakWindowEffect;                                 // 0x1E58   (0x0008)  
	FName                                              BargeHitframeName;                                          // 0x1E60   (0x0008)  
	class UTimelineComponent*                          FallRecoveryTimeline;                                       // 0x1E68   (0x0008)  
	unsigned char                                      UnknownData32_6[0x18];                                      // 0x1E70   (0x0018)  MISSED
	bool                                               bForceSprint;                                               // 0x1E88   (0x0001)  
	bool                                               bIsBeingForcedBackInEscapeZone;                             // 0x1E89   (0x0001)  
	bool                                               bForceRunForwards;                                          // 0x1E8A   (0x0001)  
	unsigned char                                      UnknownData33_6[0x1];                                       // 0x1E8B   (0x0001)  MISSED
	float                                              LockOnMovementInfluence;                                    // 0x1E8C   (0x0004)  
	FTimerHandle                                       TakeDamageHandle;                                           // 0x1E90   (0x0008)  
	FTimerHandle                                       DoorActionTimerHandle;                                      // 0x1E98   (0x0008)  
	FTimerHandle                                       SlidingDoorOpenAudioTimerHandle;                            // 0x1EA0   (0x0008)  
	FTimerHandle                                       SlidingDoorCloseAudioTimerHandle;                           // 0x1EA8   (0x0008)  
	FTimerHandle                                       BargeDoorTimerHandle;                                       // 0x1EB0   (0x0008)  
	unsigned char                                      UnknownData34_6[0x8];                                       // 0x1EB8   (0x0008)  MISSED
	FTimeline                                          WellJumpIntoTimeline;                                       // 0x1EC0   (0x0098)  
	FTimeline                                          WellClamberIntoTimeline;                                    // 0x1F58   (0x0098)  
	FTimeline                                          WellBeThrownIntoTimeline;                                   // 0x1FF0   (0x0098)  
	unsigned char                                      UnknownData35_6[0x3E];                                      // 0x2088   (0x003E)  MISSED
	EBBQWellInterruptionResponse                       WellInterruptionResponse;                                   // 0x20C6   (0x0001)  
	bool                                               RagdollOnGround;                                            // 0x20C7   (0x0001)  
	bool                                               RagdollFaceUp;                                              // 0x20C8   (0x0001)  
	unsigned char                                      UnknownData36_6[0x3];                                       // 0x20C9   (0x0003)  MISSED
	FVector                                            LastRagdollVelocity;                                        // 0x20CC   (0x000C)  
	float                                              SneakValue;                                                 // 0x20D8   (0x0004)  
	unsigned char                                      UnknownData37_6[0x4];                                       // 0x20DC   (0x0004)  MISSED
	class UStaticMesh*                                 ShardMesh;                                                  // 0x20E0   (0x0008)  
	unsigned char                                      UnknownData38_6[0x28];                                      // 0x20E8   (0x0028)  MISSED
	class UBBQEquippableExecutionData*                 EquippedExecution;                                          // 0x2110   (0x0008)  
	float                                              RunDistanceCheckScale;                                      // 0x2118   (0x0004)  
	bool                                               bUseRunGaitForFastTraversal;                                // 0x211C   (0x0001)  
	unsigned char                                      UnknownData39_6[0xB];                                       // 0x211D   (0x000B)  MISSED
	class AActor*                                      CurrentInteractableBeingUsed;                               // 0x2128   (0x0008)  
	unsigned char                                      UnknownData40_6[0x30];                                      // 0x2130   (0x0030)  MISSED
	class ABBQGameSessionCharacterAnimated*            DraggedPlayer;                                              // 0x2160   (0x0008)  
	class ABBQGameSessionCharacterAnimated*            DraggingPlayer;                                             // 0x2168   (0x0008)  
	class ABBQGameSessionCharacterAnimated*            ReplicatedDraggingPlayer;                                   // 0x2170   (0x0008)  
	FBBQDraggingInfo                                   ReplicatedDraggingInfo;                                     // 0x2178   (0x0018)  
	class ABBQContextualKillLocation*                  FinalContextualKillLocation;                                // 0x2190   (0x0008)  
	class ABBQGameSessionCharacterAnimated*            ReleasingPlayer;                                            // 0x2198   (0x0008)  
	FBBQWellInfo                                       ReplicatedWellBeingUsedInfo;                                // 0x21A0   (0x0010)  
	EBBQClimbingLadderState                            ReplicatedLadderClimbingState;                              // 0x21B0   (0x0001)  
	EBBQPerformingTraversalType                        PerformingTraversalType;                                    // 0x21B1   (0x0001)  
	EBBQPerformingTraversalSection                     PerformTraversalSection;                                    // 0x21B2   (0x0001)  
	unsigned char                                      UnknownData41_6[0x5];                                       // 0x21B3   (0x0005)  MISSED
	FGameplayVariableFloat                             MaxCarryTime;                                               // 0x21B8   (0x0058)  
	FGameplayVariableFloat                             WellRecoveryMontagePlayRate;                                // 0x2210   (0x0058)  
	float                                              CarriedTime;                                                // 0x2268   (0x0004)  
	float                                              GrabOffset;                                                 // 0x226C   (0x0004)  
	FTimerHandle                                       GrabTimerHandle;                                            // 0x2270   (0x0008)  
	FTimerHandle                                       DropTimerHandle;                                            // 0x2278   (0x0008)  
	FName                                              RootBoneName;                                               // 0x2280   (0x0008)  
	FName                                              PelvisBoneName;                                             // 0x2288   (0x0008)  
	TEnumAsByte<ECollisionChannel>                     TraversalCollisionChannel;                                  // 0x2290   (0x0001)  
	unsigned char                                      UnknownData42_6[0x3];                                       // 0x2291   (0x0003)  MISSED
	float                                              TurnDetectionWindow;                                        // 0x2294   (0x0004)  
	bool                                               bAllowStandingTurn;                                         // 0x2298   (0x0001)  
	bool                                               bAllowCrouchingTurn;                                        // 0x2299   (0x0001)  
	bool                                               bAllowWalkingTurn;                                          // 0x229A   (0x0001)  
	bool                                               bAllowRunningTurn;                                          // 0x229B   (0x0001)  
	bool                                               bAllowSprintingTurn;                                        // 0x229C   (0x0001)  
	unsigned char                                      UnknownData43_6[0x3];                                       // 0x229D   (0x0003)  MISSED
	float                                              ChasingRtpcActivationThreshold;                             // 0x22A0   (0x0004)  
	float                                              ChasingRtpcDeactivationThreshold;                           // 0x22A4   (0x0004)  
	bool                                               bIsChasing;                                                 // 0x22A8   (0x0001)  
	unsigned char                                      UnknownData44_6[0x7];                                       // 0x22A9   (0x0007)  MISSED
	class ABBQEscapeZone*                              ReachedEscapeZone;                                          // 0x22B0   (0x0008)  
	class UPhysicsAsset*                               OriginalPhysicsAsset;                                       // 0x22B8   (0x0008)  
	unsigned char                                      UnknownData45_7[0x10];                                      // 0x22C0   (0x0010)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.UpdateActorLocationAndRotation
	bool UpdateActorLocationAndRotation(FVector NewLocation, FRotator NewRotation, bool Sweep, bool Teleport, FHitResult& SweepHitResult) // [0x1e42a90] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	{
		typedef bool (*FuncPtr)(FVector, FRotator, bool, bool, FHitResult&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(NewLocation, NewRotation, Sweep, Teleport, SweepHitResult);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.TurnInPlaceUpdate
	void TurnInPlaceUpdate(float BlendIn) // [0x1e42a10] Final|Native|Public  
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(BlendIn);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.TurnInPlaceFinished
	void TurnInPlaceFinished() // [0x1e429f0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.TurnInPlace
	void TurnInPlace(FRotator RotationTarget, float PlayRateScale, float StartTime, float Duration, bool bPlayMontage, bool bAllowVictims) // [0x1e427f0] Final|Native|Public|HasDefaults 
	{
		typedef void (*FuncPtr)(FRotator, float, float, float, bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(RotationTarget, PlayRateScale, StartTime, Duration, bPlayMontage, bAllowVictims);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.TraversalStart
	void TraversalStart(FBBQTraversalData TraversalData, AActor* TraversalActor) // [0x1e426d0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FBBQTraversalData, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(TraversalData, TraversalActor);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.TraversalMainSectionCompleted
	void TraversalMainSectionCompleted(UAnimMontage* Montage, bool bInterrupted) // [0x1e42600] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.TraversalIntroSectionCompleted
	void TraversalIntroSectionCompleted(UAnimMontage* Montage, bool bInterrupted) // [0x1e42530] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.TraversalFinished
	void TraversalFinished(UAnimMontage* Montage) // [0x1e424a0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(Montage);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.StopStagger
	void StopStagger(UAnimMontage* Montage, bool bInterrupted) // [0x1e423d0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.StopSidling
	void StopSidling() // [0x1e423b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.StartSidling
	void StartSidling(FBBQAnimationData SidlingData) // [0x1e422f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FBBQAnimationData);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(SidlingData);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.SlideToBoltHoleEntry
	void SlideToBoltHoleEntry(USceneComponent* Entry1, USceneComponent* Entry2) // [0x1e42220] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(USceneComponent*, USceneComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(Entry1, Entry2);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.SlideInPlaceUpdate
	void SlideInPlaceUpdate(float BlendIn) // [0x1e421a0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(BlendIn);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.SlideInPlaceFinished
	void SlideInPlaceFinished() // [0x1e42180] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.SlideInPlace
	void SlideInPlace(FVector Location, FRotator Rotation, FGameplayTag TargetMovementState, float Duration, bool SlideInZ, bool bSweep) // [0x1e41f70] Final|Native|Public|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FVector, FRotator, FGameplayTag, float, bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(Location, Rotation, TargetMovementState, Duration, SlideInZ, bSweep);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.SidleRight
	void SidleRight() // [0x1e41f50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.SidleLeft
	void SidleLeft() // [0x1e41f30] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.ShowEmotionForDuration
	void ShowEmotionForDuration(EBBQEmotion Emotion, float Duration, float Blend, bool bOverrideCurrentEmotion) // [0x1e41dc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EBBQEmotion, float, float, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(Emotion, Duration, Blend, bOverrideCurrentEmotion);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.SetActorLocationDuringRagdoll
	void SetActorLocationDuringRagdoll() // [0x1e41da0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_TurnInPlace
	void Server_TurnInPlace(FRotator RotationTarget, float PlayRateScale, float StartTime) // [0x1e41c80] Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FRotator, float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(RotationTarget, PlayRateScale, StartTime);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_StopSidling
	void Server_StopSidling() // [0x1e41c60] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_StartSidling
	void Server_StartSidling(FBBQAnimationData AnimationData, ABBQSidling* Sidling) // [0x1e41b40] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FBBQAnimationData, ABBQSidling*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func(AnimationData, Sidling);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_StartRestrainMinigame
	void Server_StartRestrainMinigame(ABBQVictimRestrainedStart* RestrainedStart) // [0x1e41ab0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(ABBQVictimRestrainedStart*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func(RestrainedStart);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_SidleRight
	void Server_SidleRight() // [0x1e41a90] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_SidleLeft
	void Server_SidleLeft() // [0x1e41a70] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_SetDefaultStance
	void Server_SetDefaultStance(BBQStance NewDefaultStance) // [0x1e419f0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(BBQStance);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		func(NewDefaultStance);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_SetDefaultRotationMode
	void Server_SetDefaultRotationMode(BBQRotationMode NewRotationMode) // [0x1e41970] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(BBQRotationMode);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		func(NewRotationMode);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_SetDefaultGait
	void Server_SetDefaultGait(BBQGait NewDefaultGait) // [0x1e418f0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(BBQGait);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		func(NewDefaultGait);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_SetCurrentInteractableBeingUsed
	void Server_SetCurrentInteractableBeingUsed(AActor* NewInteractable) // [0x1e41860] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		func(NewInteractable);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_ReleaseDraggedPlayer
	void Server_ReleaseDraggedPlayer(bool bFullRelease) // [0x1e417d0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		func(bFullRelease);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_QuitMinigame
	void Server_QuitMinigame(ABBQHarvestLocation* HarvestLocation) // [0x1e41740] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(ABBQHarvestLocation*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		func(HarvestLocation);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_PlayVictimTurn
	void Server_PlayVictimTurn(UAnimMontage* Montage) // [0x1e416b0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		func(Montage);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_OnIncapacitatedBehaviourSuccess
	void Server_OnIncapacitatedBehaviourSuccess() // [0x1e41690] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_LadderExitClimbUp
	void Server_LadderExitClimbUp() // [0x1e41670] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_LadderExitClimbDown
	void Server_LadderExitClimbDown() // [0x1e41650] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_InitiateStruggle
	void Server_InitiateStruggle() // [0x1e41630] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_DestroyBoltHole
	void Server_DestroyBoltHole(ABBQTraversalActor* Bolthole, USceneComponent* Entry1, USceneComponent* Entry2) // [0x1e41520] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQTraversalActor*, USceneComponent*, USceneComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		func(Bolthole, Entry1, Entry2);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_ClimbFinished
	void Server_ClimbFinished() // [0x1e41500] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_CancelTurnInPlace
	void Server_CancelTurnInPlace() // [0x1e414e0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_BroadcastRestartHarvestMinigame
	void Server_BroadcastRestartHarvestMinigame(ABBQHarvestLocation* Loc) // [0x1e41450] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(ABBQHarvestLocation*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[39]);
		func(Loc);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_BroadcastHarvestOutcome
	void Server_BroadcastHarvestOutcome(ABBQHarvestLocation* HarvestLocation, EHarvestOutcome Outcome) // [0x1e41380] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(ABBQHarvestLocation*, EHarvestOutcome);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[40]);
		func(HarvestLocation, Outcome);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Server_BoltholeInteractionAnimEnded
	void Server_BoltholeInteractionAnimEnded(ABBQTraversalActor* Bolthole) // [0x1e412c0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate 
	{
		typedef void (*FuncPtr)(ABBQTraversalActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[41]);
		func(Bolthole);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.ResetRecentlySprinted
	void ResetRecentlySprinted() // [0x1e412a0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.ResetRecentlyRecoveredFromWellFall
	void ResetRecentlyRecoveredFromWellFall() // [0x1e41280] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.ResetCurrentEmotion
	void ResetCurrentEmotion() // [0x1e41260] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.RemoveRoomVolume
	void RemoveRoomVolume(FText& RoomName) // [0x1e41190] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FText&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		func(RoomName);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.RemoveAbilityGameplayEffect
	void RemoveAbilityGameplayEffect(UClass* Effect) // [0x1e41100] Final|Native|Public|BlueprintCallable|Const 
	{
		typedef void (*FuncPtr)(UClass*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		func(Effect);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.RagdollStart
	void RagdollStart(FName BoneName, bool bIncludeSelf, bool bIsLocalSimulation, float RagdollPhysicsBlendWeight) // [0x1e40f90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName, bool, bool, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		func(BoneName, bIncludeSelf, bIsLocalSimulation, RagdollPhysicsBlendWeight);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.RagdollEnd
	void RagdollEnd() // [0x1e40f70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.PlayAnimationSlot
	float PlayAnimationSlot(EBBQAnimSlot InAnimation, float InStartTime) // [0x1e40e90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(EBBQAnimSlot, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		return func(InAnimation, InStartTime);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.PlayAnimationMontage
	float PlayAnimationMontage(UAnimMontage* InMontage, float InStartTime, float InPlayRate) // [0x1e40d80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(UAnimMontage*, float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		return func(InMontage, InStartTime, InPlayRate);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnTurnEnded
	void OnTurnEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e40cb0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnThrowIntoWellMontageEnded
	void OnThrowIntoWellMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e40be0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnStaggerOutOfMontageBlendOut
	void OnStaggerOutOfMontageBlendOut(UAnimMontage* Montage, bool bInterrupted) // [0x1e40b10] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnStaggerIntoMontageBlendOut
	void OnStaggerIntoMontageBlendOut(UAnimMontage* Montage, bool bInterrupted) // [0x1e40a40] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnSnaredInBarbedWireEnded
	void OnSnaredInBarbedWireEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e3f830] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[55]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnSlidingDoorOpenAudioTimerEnded
	void OnSlidingDoorOpenAudioTimerEnded() // [0x1e40a20] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[56]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnSlidingDoorCloseAudioTimerEnded
	void OnSlidingDoorCloseAudioTimerEnded() // [0x1e40a00] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[57]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnRep_WellBeingUsed
	void OnRep_WellBeingUsed() // [0x1e409e0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[58]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnRep_ReleasingPlayer
	void OnRep_ReleasingPlayer(ABBQGameSessionCharacterAnimated* PrevPlayer) // [0x1e40950] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[59]);
		func(PrevPlayer);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnRep_ReachedEscapeZone
	void OnRep_ReachedEscapeZone() // [0x1e40930] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[60]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnRep_PerformingTraversal
	void OnRep_PerformingTraversal() // [0x1e40910] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[61]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnRep_NetworkAnimMontage
	void OnRep_NetworkAnimMontage(UAnimMontage* Old) // [0x1e40880] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[62]);
		func(Old);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnRep_LadderClimbingState
	void OnRep_LadderClimbingState() // [0x1e40860] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[63]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnRep_ForceSprint
	void OnRep_ForceSprint() // [0x1e40840] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[64]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnRep_FinalContextualKillLocation
	void OnRep_FinalContextualKillLocation(ABBQContextualKillLocation* PrevLocation) // [0x1e407b0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQContextualKillLocation*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[65]);
		func(PrevLocation);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnRep_ExecutionState
	void OnRep_ExecutionState() // [0x1e40790] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[66]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnRep_DraggingInfo
	void OnRep_DraggingInfo(FBBQDraggingInfo& PrevInfo) // [0x1e40700] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FBBQDraggingInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[67]);
		func(PrevInfo);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnRep_DoorAction
	void OnRep_DoorAction(FBBQDoorActionParams& Old) // [0x1e40610] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FBBQDoorActionParams&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[68]);
		func(Old);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnRep_CurrentInteractableBeingUsed
	void OnRep_CurrentInteractableBeingUsed(AActor* OldValue) // [0x1e40580] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[69]);
		func(OldValue);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnRep_AnimationState
	void OnRep_AnimationState(FBBQAnimationState& OldAnimationState) // [0x1e404e0] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FBBQAnimationState&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[70]);
		func(OldAnimationState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnRep_AnimatedMontage
	void OnRep_AnimatedMontage() // [0x1e404c0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[71]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnPlayerPickedUp
	void OnPlayerPickedUp(ABBQGameSessionCharacterAnimated* Player) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[72]);
		func(Player);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnPickingUpVictimForDragEnded
	void OnPickingUpVictimForDragEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e403f0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[73]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnOverlayStateChanged
	void OnOverlayStateChanged(BBQOverlayState NewOverlayState) // [0x1e40370] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(BBQOverlayState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[74]);
		func(NewOverlayState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnLockInteractionUnlockEnd
	void OnLockInteractionUnlockEnd() // [0x1e40350] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[75]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnLockInteractionUnlockBegin
	void OnLockInteractionUnlockBegin(AActor* DoorActor, ULocksContainer* Lock) // [0x1e40280] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, ULocksContainer*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[76]);
		func(DoorActor, Lock);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnLockInteractionLockEnd
	void OnLockInteractionLockEnd() // [0x1e40260] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[77]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnLockInteractionLockBegin
	void OnLockInteractionLockBegin(AActor* DoorActor, ULocksContainer* Lock) // [0x1e40190] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, ULocksContainer*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[78]);
		func(DoorActor, Lock);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnJumpThroughWindowStart
	void OnJumpThroughWindowStart(AActor* TraversalActor) // [0x1e40100] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[79]);
		func(TraversalActor);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnGrabTimerEnded
	void OnGrabTimerEnded() // [0x1e400e0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[80]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnFullTraversalCompleted
	void OnFullTraversalCompleted(UAnimMontage* Montage, bool bInterrupted) // [0x1e40010] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[81]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnFallRecoveryEnded
	void OnFallRecoveryEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e3ff40] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[82]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnFallFromWellRecoveryFinished
	void OnFallFromWellRecoveryFinished(UAnimMontage* AnimMontage, bool bInterrupted) // [0x1e3fe70] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[83]);
		func(AnimMontage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnFallBackwardsEnded
	void OnFallBackwardsEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e3fda0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[84]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnExecutionStarted
	void OnExecutionStarted(ABBQGameSessionCharacterAnimated* Victim) // [0x1e3fd10] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[85]);
		func(Victim);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnEnterTheWellUpdate
	void OnEnterTheWellUpdate(FVector Value) // [0x1e3fc80] Final|Native|Protected|HasDefaults 
	{
		typedef void (*FuncPtr)(FVector);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[86]);
		func(Value);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnEnterTheWellFinished
	void OnEnterTheWellFinished() // [0x1e3fc60] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[87]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnEndOverlap
	void OnEndOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e3fb00] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[88]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnEndDoorActionAnimation
	void OnEndDoorActionAnimation(UAnimMontage* InMontage, bool bInterrupted) // [0x1e3fa30] Final|Native|Private 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[89]);
		func(InMontage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnEmotionTimerEnded
	void OnEmotionTimerEnded() // [0x1e3fa10] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[90]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnDropTimerEnded
	void OnDropTimerEnded() // [0x1e3f9f0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[91]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnDoorSlammedOnPlayer
	void OnDoorSlammedOnPlayer(AActor* SlammingPlayer, AActor* SlammedPlayer) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(AActor*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[92]);
		func(SlammingPlayer, SlammedPlayer);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnDoorActionTimerEnded
	void OnDoorActionTimerEnded() // [0x1e3f9d0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[93]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnDestructionCompleteEnded
	void OnDestructionCompleteEnded(UAnimMontage* InMontage, bool bInterrupted) // [0x1e3f900] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[94]);
		func(InMontage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnDestroyTraversalActorEnded
	void OnDestroyTraversalActorEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e3f830] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[95]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnCharacterMovementModeChanged
	// void OnCharacterMovementModeChanged(TEnumAsByte<EMovementMode> PrevMovementMode, TEnumAsByte<EMovementMode> NewMovementMode, char PrevCustomMode, char NewCustomMode); // [0x1e3f6e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnCapsuleHit
	void OnCapsuleHit(UPrimitiveComponent* HitComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, FVector NormalImpulse, FHitResult& Hit) // [0x1e3f500] Final|Native|Protected|HasOutParms|HasDefaults 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, FVector, FHitResult&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[97]);
		func(HitComponent, OtherActor, OtherComp, NormalImpulse, Hit);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.OnBeginOverlap
	void OnBeginOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e3f3a0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[98]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_TurnInPlace
	void NetMulticast_TurnInPlace(FRotator RotationTarget, float PlayRateScale, float StartTime) // [0x1e3f280] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults 
	{
		typedef void (*FuncPtr)(FRotator, float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[99]);
		func(RotationTarget, PlayRateScale, StartTime);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_TraversalStart
	void NetMulticast_TraversalStart(FBBQTraversalData TraversalData) // [0x1e3f190] Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FBBQTraversalData);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[100]);
		func(TraversalData);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_TraversalPlayMainAnim
	void NetMulticast_TraversalPlayMainAnim(bool bFast) // [0x1e3f100] Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[101]);
		func(bFast);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_ThrowIntoWell
	void NetMulticast_ThrowIntoWell(ABBQWell* Well, ABBQGameSessionCharacterAnimated* PlayerBeingThrown, bool bGoToDesiredLocation, FVector DesiredPlayerLocation, FRotator DesiredPlayerRotation) // [0x1e3ef50] Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults 
	{
		typedef void (*FuncPtr)(ABBQWell*, ABBQGameSessionCharacterAnimated*, bool, FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[102]);
		func(Well, PlayerBeingThrown, bGoToDesiredLocation, DesiredPlayerLocation, DesiredPlayerRotation);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_StartEnteringTheWell
	void NetMulticast_StartEnteringTheWell(ABBQWell* Well, ABBQGameSessionCharacterAnimated* PlayerEntering) // [0x1e3ee80] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(ABBQWell*, ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[103]);
		func(Well, PlayerEntering);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_Stagger
	void NetMulticast_Stagger(bool bBack, float DesiredAngleDelta, AActor* SlammingPlayer, ABBQDoorHinge* Door) // [0x1e3ed20] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	{
		typedef void (*FuncPtr)(bool, float, AActor*, ABBQDoorHinge*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[104]);
		func(bBack, DesiredAngleDelta, SlammingPlayer, Door);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_SlideToBoltHoleEntry
	void NetMulticast_SlideToBoltHoleEntry(FVector Location, FRotator Rotation) // [0x1e3ec30] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults 
	{
		typedef void (*FuncPtr)(FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[105]);
		func(Location, Rotation);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_SlideInPlace
	void NetMulticast_SlideInPlace(FVector Location, FRotator Rotation, FGameplayTag TargetMovementState, float Duration, bool SlideInZ, bool bSweep) // [0x1e3ea30] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FVector, FRotator, FGameplayTag, float, bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[106]);
		func(Location, Rotation, TargetMovementState, Duration, SlideInZ, bSweep);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_SetSidleSpeedMultiplier
	void NetMulticast_SetSidleSpeedMultiplier(float NewMultiplier) // [0x1e3e9a0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[107]);
		func(NewMultiplier);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_PlayVictimTurn
	void NetMulticast_PlayVictimTurn(UAnimMontage* Montage) // [0x1e3e910] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[108]);
		func(Montage);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_PlayThrowIntoWellMontage
	void NetMulticast_PlayThrowIntoWellMontage() // [0x1e3e8f0] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[109]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_PlaySprintStop
	void NetMulticast_PlaySprintStop() // [0x1e3e8d0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[110]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_PlayLandRecoveryAnim
	void NetMulticast_PlayLandRecoveryAnim(float VelZ, float Accel) // [0x1e3e800] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[111]);
		func(VelZ, Accel);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_OnMiniGameEnded
	void NetMulticast_OnMiniGameEnded(EEndMinigameReason Reason) // [0x1e3e780] Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[112]);
		func(Reason);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_OnLanded
	void NetMulticast_OnLanded(float FallHeight, bool bTriggerFallRecovery) // [0x1e3e6a0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(float, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[113]);
		func(FallHeight, bTriggerFallRecovery);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_MontageJumpToSection
	void NetMulticast_MontageJumpToSection(FName SectionName, UAnimMontage* Montage) // [0x1e3e5d0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(FName, UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[114]);
		func(SectionName, Montage);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_LadderPlayClimbingUpMontage
	void NetMulticast_LadderPlayClimbingUpMontage() // [0x1e3e5b0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[115]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_LadderPlayClimbingDownMontage
	void NetMulticast_LadderPlayClimbingDownMontage() // [0x1e3e590] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[116]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMultiCast_LadderDismountLanding
	void NetMultiCast_LadderDismountLanding(bool bIsFallRecoveryTriggered) // [0x1e3e040] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[117]);
		func(bIsFallRecoveryTriggered);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMultiCast_LadderDismount
	void NetMultiCast_LadderDismount(EBBQLadderDismountReason DismountReason) // [0x1e3dfc0] Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EBBQLadderDismountReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[118]);
		func(DismountReason);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_InterruptWellEntering
	void NetMulticast_InterruptWellEntering(ABBQWell* Well, EBBQWellInterruptionResponse response) // [0x1e3e4c0] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(ABBQWell*, EBBQWellInterruptionResponse);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[119]);
		func(Well, response);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_InitiateStruggle
	void NetMulticast_InitiateStruggle() // [0x1e3e4a0] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[120]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_FullTraversalCompleted
	void NetMulticast_FullTraversalCompleted(UAnimMontage* Montage) // [0x1e3e410] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[121]);
		func(Montage);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_ForceSprintTo
	void NetMulticast_ForceSprintTo(UObject* Destination, float ForDuration, uint32_t NumTries) // [0x1e3e300] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(UObject*, float, uint32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[122]);
		func(Destination, ForDuration, NumTries);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_DestroyBoltHole
	void NetMulticast_DestroyBoltHole(ABBQTraversalActor* Bolthole, FVector Location, FRotator Rotation) // [0x1e3e1c0] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults 
	{
		typedef void (*FuncPtr)(ABBQTraversalActor*, FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[123]);
		func(Bolthole, Location, Rotation);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_Debug_ResetExecutionState
	void NetMulticast_Debug_ResetExecutionState() // [0x1e3e1a0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[124]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_CancelTurnInPlace
	void NetMulticast_CancelTurnInPlace() // [0x1e3e180] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[125]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_CancelSlideInPlace
	void NetMulticast_CancelSlideInPlace(FGameplayTag TargetMovementState) // [0x1e3e0f0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[126]);
		func(TargetMovementState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.NetMulticast_CancelClimbStart
	void NetMulticast_CancelClimbStart() // [0x1e3e0d0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[127]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.LadderStartClimbUp
	void LadderStartClimbUp(FVector LocationTop, FVector LocationBottom, FRotator Rotation) // [0x1e3de80] Final|Native|Public|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FVector, FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[128]);
		func(LocationTop, LocationBottom, Rotation);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.LadderStartClimbDown
	void LadderStartClimbDown(FVector LocationTop, FVector LocationBottom, FRotator Rotation) // [0x1e3dd40] Final|Native|Public|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FVector, FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[129]);
		func(LocationTop, LocationBottom, Rotation);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.LadderInitiateClimbUp
	void LadderInitiateClimbUp(FVector LocationTop, FVector LocationBottom, FRotator Rotation, ABBQLadder* Ladder) // [0x1e3dbb0] Final|Native|Public|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FVector, FVector, FRotator, ABBQLadder*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[130]);
		func(LocationTop, LocationBottom, Rotation, Ladder);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.LadderInitiateClimbDown
	void LadderInitiateClimbDown(FVector LocationTop, FVector LocationBottom, FRotator Rotation, ABBQLadder* Ladder) // [0x1e3da20] Final|Native|Public|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FVector, FVector, FRotator, ABBQLadder*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[131]);
		func(LocationTop, LocationBottom, Rotation, Ladder);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.LadderExitFinished
	void LadderExitFinished() // [0x1e3da00] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[132]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.LadderExitClimbUp
	void LadderExitClimbUp() // [0x1e3d9e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[133]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.LadderExitClimbDown
	void LadderExitClimbDown() // [0x1e3d9c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[134]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.LadderClimbUpUpdate
	void LadderClimbUpUpdate() // [0x1e3d9a0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[135]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.LadderClimbUp
	void LadderClimbUp() // [0x1e3d980] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[136]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.LadderClimbIntoTopFinished
	void LadderClimbIntoTopFinished() // [0x1e3d960] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[137]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.LadderClimbIntoBottomFinished
	void LadderClimbIntoBottomFinished() // [0x1e3d940] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[138]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.LadderClimbDownUpdate
	void LadderClimbDownUpdate() // [0x1e3d920] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[139]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.LadderClimbDown
	void LadderClimbDown() // [0x1e3d900] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[140]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.IsSprinting
	bool IsSprinting() // [0x1e3d880] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[141]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.IsPreparingToDoATraversal
	bool IsPreparingToDoATraversal() // [0x1e3d850] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[142]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.IsMoving
	bool IsMoving() // [0x1e3d830] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[143]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.IsInTraversalState
	bool IsInTraversalState() // [0x1e3d800] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[144]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.IsForwardProjectedInteraction
	bool IsForwardProjectedInteraction(AActor* InActor, FVector InTarget, float InProjectedTime) // [0x1e3d6e0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(AActor*, FVector, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[145]);
		return func(InActor, InTarget, InProjectedTime);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.IsFallingFromLadder
	bool IsFallingFromLadder() // [0x1e3d6b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[146]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.IsDoorActionAnimating
	bool IsDoorActionAnimating() // [0x1e3d680] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[147]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.IsCurrentTraversalStateInterruptible
	bool IsCurrentTraversalStateInterruptible() // [0x1e3d650] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[148]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.IsAttacking
	bool IsAttacking() // [0x1e3d620] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[149]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.IsATraversalState
	bool IsATraversalState(FGameplayTag QueriedMovementState) // [0x1e3d590] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[150]);
		return func(QueriedMovementState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.InterruptEnteringWell
	void InterruptEnteringWell(bool bForceInterrupt) // [0x1e3d500] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[151]);
		func(bForceInterrupt);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.InterruptCurrentAction
	void InterruptCurrentAction() // [0x1e3d4e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[152]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.InitiateThrowIntoWell
	void InitiateThrowIntoWell(ABBQWell* Well, ABBQGameSessionCharacterAnimated* PlayerBeingThrown, bool bGoToDesiredLocation, FVector DesiredPlayerLocation, FRotator DesiredPlayerRotation) // [0x1e3d320] Final|Native|Public|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQWell*, ABBQGameSessionCharacterAnimated*, bool, FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[153]);
		func(Well, PlayerBeingThrown, bGoToDesiredLocation, DesiredPlayerLocation, DesiredPlayerRotation);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.InitiateFallFromWell
	void InitiateFallFromWell(ABBQWell* Well) // [0x1e3d290] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQWell*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[154]);
		func(Well);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.InitiateEnterTheWell
	void InitiateEnterTheWell(ABBQWell* Well, EBBQWellEnteringMethod EnteringMethod, bool bGoToDesiredLocation, FVector DesiredPlayerLocation, FRotator DesiredPlayerRotation, float SlideDuration) // [0x1e3d080] Final|Native|Public|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQWell*, EBBQWellEnteringMethod, bool, FVector, FRotator, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[155]);
		func(Well, EnteringMethod, bGoToDesiredLocation, DesiredPlayerLocation, DesiredPlayerRotation, SlideDuration);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetWindowDamageEffect
	UBBQGameplayEffect* GetWindowDamageEffect(EBBQWindowDamageType DamageType) // [0x1e3cff0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UBBQGameplayEffect* (*FuncPtr)(EBBQWindowDamageType);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[156]);
		return func(DamageType);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetVelocityNormalized
	float GetVelocityNormalized() // [0x1e3cfc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[157]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetTriggerTime
	float GetTriggerTime(UAnimMontage* InMontage, int32_t InIndex, float InScale) // [0x1e3ce70] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef float (*FuncPtr)(UAnimMontage*, int32_t, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[158]);
		return func(InMontage, InIndex, InScale);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetSlideInPlaceTargetState
	FGameplayTag GetSlideInPlaceTargetState() // [0x1e3ce50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FGameplayTag (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[159]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetPlayerMovementInputMagnitude
	float GetPlayerMovementInputMagnitude() // [0x1e3ce20] Final|Native|Public|BlueprintCallable 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[160]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetPlayerMovementInput
	FVector GetPlayerMovementInput() // [0x1e3cde0] Final|Native|Public|HasDefaults|BlueprintCallable 
	{
		typedef FVector (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[161]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetNamedTriggerTimeFromMontage
	float GetNamedTriggerTimeFromMontage(UAnimMontage* InMontage, FString InName, float InDefault) // [0x1e3ccb0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef float (*FuncPtr)(UAnimMontage*, FString, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[162]);
		return func(InMontage, InName, InDefault);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetNamedTriggerTime
	float GetNamedTriggerTime(UAnimSequenceBase* InAnim, FString InName, float InDefault) // [0x1e3cb80] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef float (*FuncPtr)(UAnimSequenceBase*, FString, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[163]);
		return func(InAnim, InName, InDefault);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetMontageLength
	float GetMontageLength(UAnimMontage* InMontage, float InDefault) // [0x1e3caa0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef float (*FuncPtr)(UAnimMontage*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[164]);
		return func(InMontage, InDefault);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetGetUpAnimation
	UAnimMontage* GetGetUpAnimation() // [0xb88710] Final|Native|Public|BlueprintCallable 
	{
		typedef class UAnimMontage* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[165]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetForwardBackwardAxisValue
	float GetForwardBackwardAxisValue() // [0x1e3ca70] Final|Native|Public|BlueprintCallable 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[166]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetDoorOpenMontage
	UAnimMontage* GetDoorOpenMontage(ABBQDoorBase* InDoor, EDoorDirection InDirection, bool bUnlockFirst) // [0x1e3c960] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UAnimMontage* (*FuncPtr)(ABBQDoorBase*, EDoorDirection, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[167]);
		return func(InDoor, InDirection, bUnlockFirst);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetDoorBeingUsed
	ABBQDoorBase* GetDoorBeingUsed() // [0x1e3c940] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQDoorBase* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[168]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetDestructionProgress
	float GetDestructionProgress() // [0x1e3c910] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[169]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetDesiredGait
	BBQGait GetDesiredGait() // [0x1e3c8e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef BBQGait (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[170]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetCurrentHarvestLocation
	ABBQHarvestLocation* GetCurrentHarvestLocation() // [0x1e3c8b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQHarvestLocation* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[171]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetCurrentGait
	BBQGait GetCurrentGait() // [0x1e3c880] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef BBQGait (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[172]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetAnimationSlotLength
	float GetAnimationSlotLength(EBBQAnimSlot InAnim) // [0x1e3c7d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(EBBQAnimSlot);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[173]);
		return func(InAnim);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.GetAllowedGait
	BBQGait GetAllowedGait() // [0x1e3c7a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef BBQGait (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[174]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.FallRecoveryUpdate
	void FallRecoveryUpdate(float BlendIn) // [0x1e3c720] Final|Native|Public  
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[175]);
		func(BlendIn);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.FallRecoveryFinished
	void FallRecoveryFinished() // [0x1e3c700] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[176]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.DropVictim
	void DropVictim(FInputActionValue& ActionValue) // [0x1e3c650] Final|Native|Public|HasOutParms 
	{
		typedef void (*FuncPtr)(FInputActionValue&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[177]);
		func(ActionValue);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.DebugToggleRagdoll
	void DebugToggleRagdoll() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[178]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Debug_Server_SetMovementData
	void Debug_Server_SetMovementData(FBBQMovementSettingsState NewMovementData) // [0x1e3c560] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(FBBQMovementSettingsState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[179]);
		func(NewMovementData);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Debug_Multicast_SetMovementData
	void Debug_Multicast_SetMovementData(FBBQMovementSettingsState NewMovementData) // [0x1e3c470] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(FBBQMovementSettingsState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[180]);
		func(NewMovementData);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Client_GrandpaAttacked
	void Client_GrandpaAttacked(ABBQGrandpa* Grandpa) // [0x1e3c3e0] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(ABBQGrandpa*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[181]);
		func(Grandpa);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Client_BoltholeOpened
	void Client_BoltholeOpened(ABBQBoltholeBase* Bolthole, bool bOpenedBySpam) // [0x1e3c310] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(ABBQBoltholeBase*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[182]);
		func(Bolthole, bOpenedBySpam);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Client_BoltholeClosed
	void Client_BoltholeClosed(ABBQBoltholeBase* Bolthole) // [0x1e3c280] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(ABBQBoltholeBase*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[183]);
		func(Bolthole);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.ChangeNetworkAnimMontage
	float ChangeNetworkAnimMontage(UAnimMontage* InMontage, float InPlayRate, float InStartTime, bool InRepeat) // [0x1e3c120] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef float (*FuncPtr)(UAnimMontage*, float, float, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[184]);
		return func(InMontage, InPlayRate, InStartTime, InRepeat);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.CanTurnInPlace
	bool CanTurnInPlace() // [0x1e3c060] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[185]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.CanPerformFastTraversal
	bool CanPerformFastTraversal() // [0x1e3c030] Final|Native|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[186]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.CancelSlideInPlace
	void CancelSlideInPlace(FGameplayTag TargetMovementState) // [0x1e3c090] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[187]);
		func(TargetMovementState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.BP_PlayReplicatedDisableMovementMontage
	void BP_PlayReplicatedDisableMovementMontage(FBBQAnimatedMontage& InAnimatedMontage) // [0x2438a30] Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FBBQAnimatedMontage&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[188]);
		func(InAnimatedMontage);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Auth_SetAnimatedMontage
	void Auth_SetAnimatedMontage(FBBQAnimatedMontage& InAnimatedMontage) // [0x1e3bf50] Final|Native|Protected|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FBBQAnimatedMontage&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[189]);
		func(InAnimatedMontage);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Auth_RestrainVictimToHarvestLocation
	void Auth_RestrainVictimToHarvestLocation(ABBQHarvestLocation* HarvestLocation) // [0x1e3bec0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQHarvestLocation*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[190]);
		func(HarvestLocation);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Auth_RescueVictim
	void Auth_RescueVictim(ABBQHarvestLocation* HarvestLocation) // [0x1e3be30] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQHarvestLocation*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[191]);
		func(HarvestLocation);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Auth_ReleaseDraggingPlayer
	void Auth_ReleaseDraggingPlayer(bool bFullRelease) // [0x1e3bda0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[192]);
		func(bFullRelease);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Auth_ExecuteDraggingPlayerOnContextualKillLocation
	void Auth_ExecuteDraggingPlayerOnContextualKillLocation(ABBQContextualKillLocation* ContextualLocationLocation) // [0x1e3bd10] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQContextualKillLocation*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[193]);
		func(ContextualLocationLocation);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Auth_EnterHarvestLocation
	void Auth_EnterHarvestLocation(ABBQHarvestLocation* HarvestLocation) // [0x1e3bc80] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQHarvestLocation*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[194]);
		func(HarvestLocation);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Auth_DragPlayer
	void Auth_DragPlayer(AActor* CharacterBeingDragged) // [0x1e3bbf0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[195]);
		func(CharacterBeingDragged);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Auth_ContextualKillExecutionComplete
	void Auth_ContextualKillExecutionComplete() // [0x1e3bbd0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[196]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Auth_CanBeStaggered
	bool Auth_CanBeStaggered() // [0x1e3bba0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[197]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.Auth_AttemptExecution
	void Auth_AttemptExecution(ABBQGameSessionCharacterAnimated* Victim) // [0x1e3bb10] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[198]);
		func(Victim);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.AttemptRecoveryFromIncapacitation
	void AttemptRecoveryFromIncapacitation() // [0x1e3baf0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[199]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.AdjustRangeByGait
	float AdjustRangeByGait(float InRange) // [0x1e3ba50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[200]);
		return func(InRange);
	}
	// Function /Script/BBQGameSession.BBQGameSessionCharacterAnimated.AddRoomVolume
	void AddRoomVolume(FText& RoomName) // [0x1e3b980] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FText&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[201]);
		func(RoomName);
	}
};

/// Class /Script/BBQGameSession.BBQGameSessionGameMode
/// Size: 0x0610 (1552 bytes) (0x0003B0 - 0x000610) align 8 MaxSize: 0x0610
class ABBQGameSessionGameMode : public ABBQGameMode
{ 
public:
	unsigned char                                      UnknownData00_8[0x10];                                      // 0x03B0   (0x0010)  MISSED
	float                                              AbandonGameNoOpposingTeamDuration;                          // 0x03C0   (0x0004)  
	float                                              MinimumGameLength;                                          // 0x03C4   (0x0004)  
	float                                              PreSyncDuration;                                            // 0x03C8   (0x0004)  
	float                                              PreMatchDuration;                                           // 0x03CC   (0x0004)  
	bool                                               bAllowAutoTimeoutWhenNoOpposingTeamPresent;                 // 0x03D0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x03D1   (0x0003)  MISSED
	float                                              PrePostMatchDuration;                                       // 0x03D4   (0x0004)  
	float                                              PostMatchDuration;                                          // 0x03D8   (0x0004)  
	float                                              PostMatchQuitDuration;                                      // 0x03DC   (0x0004)  
	bool                                               bAutoKickWhenNoVictimsPresent;                              // 0x03E0   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x03E1   (0x0007)  MISSED
	TSoftObjectPtr<class UClass*>                      HUDClassSoftPtr;                                            // 0x03E8   (0x0028)  
	class ABBQPlayerRestrainer*                        PlayerRestrainer;                                           // 0x0410   (0x0008)  
	float                                              PreGameTimeRemaining;                                       // 0x0418   (0x0004)  
	float                                              LeatherfaceDelaySpawnUntil;                                 // 0x041C   (0x0004)  
	bool                                               bIsLeatherfaceVisible;                                      // 0x0420   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0421   (0x0007)  MISSED
	TArray<class UClass*>                              AlwaysAppliedFamilyMottoPerks;                              // 0x0428   (0x0010)  
	class UClass*                                      BleedoutEffectClass;                                        // 0x0438   (0x0008)  
	float                                              BleedoutEffectOccursAfterDuration;                          // 0x0440   (0x0004)  
	float                                              ForceLFVisibleInProgressTime;                               // 0x0444   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x0448   (0x0004)  MISSED
	float                                              LastVictimStandingAchievementDurationRequired;              // 0x044C   (0x0004)  
	bool                                               bDebug_BleedoutActive;                                      // 0x0450   (0x0001)  
	unsigned char                                      UnknownData05_6[0x3];                                       // 0x0451   (0x0003)  MISSED
	float                                              ClientSecurityCheckTime;                                    // 0x0454   (0x0004)  
	float                                              ClientSecurityValidationTime;                               // 0x0458   (0x0004)  
	bool                                               bSingleTeamMode;                                            // 0x045C   (0x0001)  
	unsigned char                                      UnknownData06_6[0x53];                                      // 0x045D   (0x0053)  MISSED
	class UBBQMultiplayerMinigameManagerV2*            MultiplayerMinigameManagerV2;                               // 0x04B0   (0x0008)  
	class UClass*                                      PickupDistributorClass;                                     // 0x04B8   (0x0008)  
	class ABBQPickupDistributor*                       PickupDistributor;                                          // 0x04C0   (0x0008)  
	unsigned char                                      UnknownData07_7[0x148];                                     // 0x04C8   (0x0148)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.SwitchCharacter
	void SwitchCharacter(APlayerController* Controller, FName CharacterName) // [0x1e46890] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(APlayerController*, FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Controller, CharacterName);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.Server_OnNotifyFear
	void Server_OnNotifyFear(AActor* EscapePointActor) // [0x1e46650] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(EscapePointActor);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.PromptMercuryKillGameplayActivityEvent
	void PromptMercuryKillGameplayActivityEvent(ABBQPlayerState* KillerPS) // [0x1e46500] Final|Native|Private 
	{
		typedef void (*FuncPtr)(ABBQPlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(KillerPS);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.OnRep_IsLeatherfaceVisible
	void OnRep_IsLeatherfaceVisible() // [0x1e464c0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.OnPreSetPostMatchState
	void OnPreSetPostMatchState() // [0x1e46460] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.OnPlayerSurvived
	void OnPlayerSurvived(ABBQGameSessionCharacter* EscapingPlayer, AActor* EscapePointActor) // [0x1e46240] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(EscapingPlayer, EscapePointActor);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.OnPlayerReachedExit
	void OnPlayerReachedExit(ABBQGameSessionCharacter* EscapingPlayer, AActor* EscapePointActor) // [0x1e46170] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(EscapingPlayer, EscapePointActor);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.InitPlayerStarts
	void InitPlayerStarts() // [0x1e45a70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.GetPickupDistributor
	ABBQPickupDistributor* GetPickupDistributor() // [0x1e45530] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQPickupDistributor* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.GetMaxNumVictimsDetected
	int32_t GetMaxNumVictimsDetected() // [0x1e454e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.GetMaxNumFamilyDetected
	int32_t GetMaxNumFamilyDetected() // [0x1e454c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.DebugForceEndOfMatch
	void DebugForceEndOfMatch() // [0x1e359f0] Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.BP_RemoveBleedoutEffect
	void BP_RemoveBleedoutEffect(ABBQGameSessionCharacter* Victim) // [0x1e45010] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(Victim);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.BP_OnPlayerSurvived
	void BP_OnPlayerSurvived(ABBQGameSessionCharacter* EscapingPlayer) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(EscapingPlayer);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.BP_OnPlayerReachedExit
	void BP_OnPlayerReachedExit(ABBQGameSessionCharacter* EscapingPlayer) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(EscapingPlayer);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.BP_OnMatchStateChanged
	void BP_OnMatchStateChanged(FName OldState, FName NewState) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FName, FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(OldState, NewState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.BP_OnMatchHasStarted
	void BP_OnMatchHasStarted() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.BP_OnLoadedPreMatch
	void BP_OnLoadedPreMatch() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.BP_OnBleedoutEffectAdded
	void BP_OnBleedoutEffectAdded() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.BP_HasBleedoutEffect
	bool BP_HasBleedoutEffect(ABBQGameSessionCharacter* Victim) // [0x1e44f30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		return func(Victim);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.BP_CanEndTheMatch
	void BP_CanEndTheMatch(bool& bResult) // [0x1e44e90] Native|Event|Public|HasOutParms|BlueprintEvent|Const 
	{
		typedef void (*FuncPtr)(bool&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(bResult);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.BP_ApplyBleedoutEffect
	void BP_ApplyBleedoutEffect(ABBQGameSessionCharacter* Victim) // [0x1e44e00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func(Victim);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.AttemptFastForwardGameEnd
	void AttemptFastForwardGameEnd() // [0x1e44de0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameMode.AddFreeCharacters
	void AddFreeCharacters() // [0x1e44dc0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQGameSessionGameState
/// Size: 0x0840 (2112 bytes) (0x0005D0 - 0x000840) align 8 MaxSize: 0x0840
class ABBQGameSessionGameState : public ABBQGameState
{ 
public:
	unsigned char                                      UnknownData00_8[0x20];                                      // 0x05D0   (0x0020)  MISSED
	SDK_UNDEFINED(16,523) /* FMulticastInlineDelegate */ __um(GameStartedDelegate);                                // 0x05F0   (0x0010)  
	SDK_UNDEFINED(16,524) /* FMulticastInlineDelegate */ __um(OnPlayerStateChangedEvent);                          // 0x0600   (0x0010)  
	SDK_UNDEFINED(16,525) /* FMulticastInlineDelegate */ __um(OnPlayerCountChangedEvent);                          // 0x0610   (0x0010)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x0620   (0x0002)  MISSED
	EBBQ_MatchResult                                   MatchResult;                                                // 0x0622   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1];                                       // 0x0623   (0x0001)  MISSED
	float                                              MaxTimeInPreMatchState;                                     // 0x0624   (0x0004)  
	float                                              PostMatchTimeLeft;                                          // 0x0628   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x062C   (0x0004)  MISSED
	class UGameplayVariableModStackComponent*          GameplayVariableModStackComponent;                          // 0x0630   (0x0008)  
	unsigned char                                      UnknownData04_6[0x18];                                      // 0x0638   (0x0018)  MISSED
	FGameplayTag                                       HasHearingAbilityTag;                                       // 0x0650   (0x0008)  
	TMap<EBBQ_MatchResult, class UAkSwitchValue*>      MatchResultSwitchValues;                                    // 0x0658   (0x0050)  
	TArray<class UAkAudioEvent*>                       VictimEscapedAudioEvents;                                   // 0x06A8   (0x0010)  
	TArray<class UAkAudioEvent*>                       VictimKilledAudioEvents;                                    // 0x06B8   (0x0010)  
	class UVisualDamageInteractionMappingAsset*        VisualDamageInteractionMapping;                             // 0x06C8   (0x0008)  
	class UClass*                                      VictimTrackerComponentClass;                                // 0x06D0   (0x0008)  
	FGameplayTag                                       LastVictimStandingTag;                                      // 0x06D8   (0x0008)  
	class UClass*                                      LastVictimStandingEffect;                                   // 0x06E0   (0x0008)  
	bool                                               bAttemptAutoLoginToPlayfab;                                 // 0x06E8   (0x0001)  
	unsigned char                                      UnknownData05_6[0x7];                                       // 0x06E9   (0x0007)  MISSED
	FString                                            DebugServerName;                                            // 0x06F0   (0x0010)  
	unsigned char                                      UnknownData06_6[0x20];                                      // 0x0700   (0x0020)  MISSED
	TMap<class AActor*, FBBQMinigameInstigatorSavedState> SavedMinigameInstigatorMap;                              // 0x0720   (0x0050)  
	unsigned char                                      UnknownData07_6[0x50];                                      // 0x0770   (0x0050)  MISSED
	class UBBQVictimTrackerComponent*                  VictimTrackerComponent;                                     // 0x07C0   (0x0008)  
	class ABBQGrandpa*                                 CachedGrandpa;                                              // 0x07C8   (0x0008)  
	float                                              ReplicatedMatchInProgressTime;                              // 0x07D0   (0x0004)  
	unsigned char                                      UnknownData08_7[0x6C];                                      // 0x07D4   (0x006C)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQGameSessionGameState.SetPendingViewTarget
	void SetPendingViewTarget(AActor* ViewTarget) // [0x1e46800] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(ViewTarget);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.SendPreparationPhaseEndedEvent
	void SendPreparationPhaseEndedEvent(FString PrepPhaseEndReason) // [0x1e465b0] Final|Native|Private|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(PrepPhaseEndReason);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.OnRep_ReplicatedMatchTime
	void OnRep_ReplicatedMatchTime() // [0x1e464e0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.OnPreSync
	void OnPreSync() // [0x1e464a0] Native|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.OnPreSetPostMatchState
	void OnPreSetPostMatchState() // [0x1e46480] Native|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.OnPreGame
	void OnPreGame() // [0x1e46440] Native|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.OnPlayerTeamIdChanged
	// void OnPlayerTeamIdChanged(TScriptInterface<Class> Interface, ETeamID PrevId, ETeamID NewId);                            // [0x1e46310] Final|Native|Private 
	// Function /Script/BBQGameSession.BBQGameSessionGameState.OnPlayerSurvived
	void OnPlayerSurvived(ABBQPlayerState* PlayerState) // [0x1e460e0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQPlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(PlayerState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.OnPlayerEscaped
	void OnPlayerEscaped(ABBQPlayerState* PlayerState) // [0x1e460e0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQPlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(PlayerState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.OnPlayerDead
	void OnPlayerDead(ABBQPlayerState* PlayerState) // [0x1e46050] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQPlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(PlayerState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.OnPlayerCountUpdated
	void OnPlayerCountUpdated(int32_t VictimCount, int32_t FamilyCount) // [0x1e45f80] Final|Native|Private 
	{
		typedef void (*FuncPtr)(int32_t, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(VictimCount, FamilyCount);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.OnNoiseOccurred
	void OnNoiseOccurred(FVector& Pos, ENoiseType Type) // [0x1e45ea0] Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FVector&, ENoiseType);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(Pos, Type);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.OnGrandpaStateChanged
	void OnGrandpaStateChanged(EGrandpaState PrevState, EGrandpaState CurrentState) // [0x1e45dd0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(EGrandpaState, EGrandpaState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(PrevState, CurrentState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.OnBBQPlayerStateChange
	void OnBBQPlayerStateChange(ABBQPlayerState* BBQPState) // [0x1e45cb0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQPlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(BBQPState);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.IsGrandpaSequencePlayerPlaying
	bool IsGrandpaSequencePlayerPlaying() // [0x2438a30] Event|Public|BlueprintEvent|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.HandleOnCountdownComplete
	void HandleOnCountdownComplete() // [0x1e459c0] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.GetVictimDeadAndAliveCounts
	void GetVictimDeadAndAliveCounts(int32_t& NumAlive, int32_t& NumDead) // [0x1e458e0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef void (*FuncPtr)(int32_t&, int32_t&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(NumAlive, NumDead);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.GetPendingViewTarget
	AActor* GetPendingViewTarget() // [0x1e45500] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class AActor* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.GetGrandpaSequencePlayer
	UBBQLevelSequencePlayer* GetGrandpaSequencePlayer() // [0x2438a30] Event|Public|BlueprintEvent|Const 
	{
		typedef class UBBQLevelSequencePlayer* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.GetGrandpa
	ABBQGrandpa* GetGrandpa() // [0x1e45490] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGrandpa* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.GetAllVictims
	// void GetAllVictims(TArray<ABBQGameSessionCharacter*>& OutVictims);                                                       // [0x1e45330] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/BBQGameSession.BBQGameSessionGameState.GetAllPlayers
	// void GetAllPlayers(TArray<ABBQGameSessionCharacter*>& OutPlayers);                                                       // [0x1e45280] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/BBQGameSession.BBQGameSessionGameState.GetAllPlayerControlledVictims
	// void GetAllPlayerControlledVictims(TArray<ABBQGameSessionCharacter*>& OutVictims);                                       // [0x1e451d0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/BBQGameSession.BBQGameSessionGameState.GetAllFamily
	// void GetAllFamily(TArray<ABBQGameSessionCharacter*>& OutFamily);                                                         // [0x1e45120] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/BBQGameSession.BBQGameSessionGameState.GetActiveVictimCount
	int32_t GetActiveVictimCount() // [0x1e450f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.DebugWakeUpGrandpa
	void DebugWakeUpGrandpa() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.CheckAllVictimsDead
	bool CheckAllVictimsDead() // [0x1e450a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.BP_OnBBQMatchIsInPostMatchState
	void BP_OnBBQMatchIsInPostMatchState() // [0x1e44ff0] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.BP_OnBBQMatchHasStarted
	void BP_OnBBQMatchHasStarted() // [0x1e44fd0] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.BP_LastVictimStandingEnd
	void BP_LastVictimStandingEnd(ABBQGameSessionCharacter* Player) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		func(Player);
	}
	// Function /Script/BBQGameSession.BBQGameSessionGameState.BP_BecomeLastVictimStanding
	void BP_BecomeLastVictimStanding(ABBQGameSessionCharacter* Player) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		func(Player);
	}
};

/// Class /Script/BBQGameSession.BBQBlueprintFunctionLibraryGameSessionGameState
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQBlueprintFunctionLibraryGameSessionGameState : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQBlueprintFunctionLibraryGameSessionGameState.GetBBQGameSessionGameState
	ABBQGameSessionGameState* GetBBQGameSessionGameState(UObject* WorldContextObject) // [0x1e453e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef class ABBQGameSessionGameState* (*FuncPtr)(UObject*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(WorldContextObject);
	}
};

/// Class /Script/BBQGameSession.BBQGameSessionPlayerState
/// Size: 0x0C58 (3160 bytes) (0x000BB0 - 0x000C58) align 8 MaxSize: 0x0C58
class ABBQGameSessionPlayerState : public ABBQPlayerState
{ 
public:
	unsigned char                                      UnknownData00_8[0x1];                                       // 0x0BB0   (0x0001)  MISSED
	bool                                               bDetectedByGrandpaOnce;                                     // 0x0BB1   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x0BB2   (0x0006)  MISSED
	TArray<class ABBQPlayerState*>                     SneakAttackTargets;                                         // 0x0BB8   (0x0010)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0BC8   (0x0008)  MISSED
	int32_t                                            TeammatesHealedCount;                                       // 0x0BD0   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0BD4   (0x0004)  MISSED
	SDK_UNDEFINED(80,526) /* TSet<ABBQGameSessionCharacter*> */ __um(SessionTrackedFamilyCharacters);              // 0x0BD8   (0x0050)  
	class ABBQGameSessionCharacter*                    LastControlledCharacter;                                    // 0x0C28   (0x0008)  
	TArray<FDataTableRowHandle>                        ActivityEvents;                                             // 0x0C30   (0x0010)  
	unsigned char                                      UnknownData04_6[0x1];                                       // 0x0C40   (0x0001)  MISSED
	bool                                               bShouldInitAttributes;                                      // 0x0C41   (0x0001)  
	unsigned char                                      UnknownData05_6[0x2];                                       // 0x0C42   (0x0002)  MISSED
	float                                              BBQ_PlayerStartTime;                                        // 0x0C44   (0x0004)  
	unsigned char                                      UnknownData06_6[0x8];                                       // 0x0C48   (0x0008)  MISSED
	class UBBQWorldOutlineInfoComponent*               OutlineInfoComponent;                                       // 0x0C50   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQGameSessionPlayerState.WasDetectedByGrandpa
	bool WasDetectedByGrandpa() // [0x1e469e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionPlayerState.UpdateUsedTraversals
	void UpdateUsedTraversals(ETraversalType TraversalType) // [0x1e46960] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ETraversalType);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(TraversalType);
	}
	// Function /Script/BBQGameSession.BBQGameSessionPlayerState.SetJumpFromWindowOnce
	void SetJumpFromWindowOnce(bool bParam) // [0x1e46770] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(bParam);
	}
	// Function /Script/BBQGameSession.BBQGameSessionPlayerState.SetDetectedByGrandpaOnce
	void SetDetectedByGrandpaOnce(bool bParam) // [0x1e466e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(bParam);
	}
	// Function /Script/BBQGameSession.BBQGameSessionPlayerState.ResetUsedTraversals
	void ResetUsedTraversals() // [0x1e46590] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionPlayerState.OnFamilyCharacterTracked
	void OnFamilyCharacterTracked(ABBQGameSessionCharacter* Char) // [0x1e45d40] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Char);
	}
	// Function /Script/BBQGameSession.BBQGameSessionPlayerState.IsTraversalUsed
	bool IsTraversalUsed(ETraversalType TraversalType) // [0x1e45c20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(ETraversalType);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(TraversalType);
	}
	// Function /Script/BBQGameSession.BBQGameSessionPlayerState.HasSneakAttackedAll
	bool HasSneakAttackedAll(ETeamID Team) // [0x1e459e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(ETeamID);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func(Team);
	}
	// Function /Script/BBQGameSession.BBQGameSessionPlayerState.GetTotalSneakAttackCountTeam
	int32_t GetTotalSneakAttackCountTeam(ETeamID Team) // [0x1e45850] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)(ETeamID);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func(Team);
	}
	// Function /Script/BBQGameSession.BBQGameSessionPlayerState.GetTotalSneakAttackCount
	int32_t GetTotalSneakAttackCount() // [0x1e45830] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionPlayerState.GetBBQ_PlayerStartTime
	float GetBBQ_PlayerStartTime() // [0x1e45470] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGameSessionPlayerState.DidJumpFromWindowOnce
	bool DidJumpFromWindowOnce() // [0x1e450d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQGameSessionProjectSettings
/// Size: 0x0048 (72 bytes) (0x000028 - 0x000048) align 8 MaxSize: 0x0048
class UBBQGameSessionProjectSettings : public UObject
{ 
public:
	class UClass*                                      DefaultInteractionType;                                     // 0x0028   (0x0008)  
	TArray<FBBQGlobalOutlineRendererConfig>            GlobalOutlineSettings;                                      // 0x0030   (0x0010)  
	float                                              ServerRejoinTimeLimit;                                      // 0x0040   (0x0004)  
	float                                              ClientRejoinTimeLimit;                                      // 0x0044   (0x0004)  
};

/// Class /Script/BBQGameSession.BBQGameSessionWorldSettings
/// Size: 0x03B8 (952 bytes) (0x0003A8 - 0x0003B8) align 8 MaxSize: 0x03B8
class ABBQGameSessionWorldSettings : public AWorldSettings
{ 
public:
	unsigned char                                      UnknownData00_8[0x8];                                       // 0x03A8   (0x0008)  MISSED
	class UClass*                                      PickupDistributorClassOverride;                             // 0x03B0   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQGameUtilitiesLibrary
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQGameUtilitiesLibrary : public UBBQUtilitiesLibrary
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQGameUtilitiesLibrary.IsPlayerOnTeam
	bool IsPlayerOnTeam(AActor* Actor, ETeamID TeamId) // [0x1e45b50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)(AActor*, ETeamID);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(Actor, TeamId);
	}
	// Function /Script/BBQGameSession.BBQGameUtilitiesLibrary.IsOnTeam
	bool IsOnTeam(ETeamID InTeamID, ETeamID FilterTeamID) // [0x1e45a90] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)(ETeamID, ETeamID);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(InTeamID, FilterTeamID);
	}
	// Function /Script/BBQGameSession.BBQGameUtilitiesLibrary.GetPlayersWithinRange
	// void GetPlayersWithinRange(UObject* WorldContextObject, TArray<ABBQGameSessionCharacter*>& OutPlayers, FVector Location, float Range, ETeamID OnTeam); // [0x1e45680] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/BBQGameSession.BBQGameUtilitiesLibrary.GetPlayersOnTeam
	// void GetPlayersOnTeam(UObject* WorldContextObject, TArray<ABBQGameSessionCharacter*>& OutPlayers, ETeamID TeamId);       // [0x1e45550] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/BBQGameSession.BBQGameWorldManager
/// Size: 0x02E0 (736 bytes) (0x0002E0 - 0x0002E0) align 8 MaxSize: 0x02E0
class ABBQGameWorldManager : public ABBQWorldManager
{ 
public:
};

/// Class /Script/BBQGameSession.BBQGarageControl
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQGarageControl : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQGarageDoor
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQGarageDoor : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQGenerator
/// Size: 0x0260 (608 bytes) (0x000228 - 0x000260) align 8 MaxSize: 0x0260
class ABBQGenerator : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x20];                                      // 0x0228   (0x0020)  MISSED
	class AActor*                                      GeneratorUser;                                              // 0x0248   (0x0008)  
	class ABBQMinigameV2*                              SwitchOnMinigame;                                           // 0x0250   (0x0008)  
	class UClass*                                      SwitchOnMinigameClass;                                      // 0x0258   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQGenerator.TriggerDialogOnMinigameSuccess
	void TriggerDialogOnMinigameSuccess(AActor* EventInstigator, bool bGeneratorActivated) // [0x1e4a060] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(EventInstigator, bGeneratorActivated);
	}
	// Function /Script/BBQGameSession.BBQGenerator.StartSwitchOnMinigame
	void StartSwitchOnMinigame(AActor* EventInstigator) // [0x1e49fb0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(EventInstigator);
	}
	// Function /Script/BBQGameSession.BBQGenerator.SetGeneratorState
	void SetGeneratorState(bool bIsActive, bool bShouldActivateCooldown) // [0x2438a30] BlueprintAuthorityOnly|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(bIsActive, bShouldActivateCooldown);
	}
	// Function /Script/BBQGameSession.BBQGenerator.OnStopUsingGenerator
	void OnStopUsingGenerator(AActor* EventInstigator) // [0x1e49bc0] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(EventInstigator);
	}
	// Function /Script/BBQGameSession.BBQGenerator.OnStartUsingGenerator
	void OnStartUsingGenerator(AActor* EventInstigator) // [0x1e49b30] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(EventInstigator);
	}
	// Function /Script/BBQGameSession.BBQGenerator.OnRep_GeneratorUser
	void OnRep_GeneratorUser(AActor* PreviousValue) // [0x1e49820] Final|Native|Private 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(PreviousValue);
	}
	// Function /Script/BBQGameSession.BBQGenerator.OnMinigameEnded
	void OnMinigameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason Reason) // [0x1e496b0] Final|Native|Private 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(Minigame, Reason);
	}
	// Function /Script/BBQGameSession.BBQGenerator.IsGeneratorActive
	bool IsGeneratorActive() // [0x1e24f20] Native|Event|Public|BlueprintEvent|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGenerator.BP_OnMinigameEnded
	void BP_OnMinigameEnded(EEndMinigameReason Reason) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(Reason);
	}
};

/// Class /Script/BBQGameSession.BBQGrandpa
/// Size: 0x2B70 (11120 bytes) (0x0022D0 - 0x002B70) align 16 MaxSize: 0x2B70
class ABBQGrandpa : public ABBQGameSessionCharacterAnimated
{ 
public:
	unsigned char                                      UnknownData00_8[0x38];                                      // 0x22D0   (0x0038)  MISSED
	class USphereComponent*                            InteractWithMeSphere;                                       // 0x2308   (0x0008)  
	class UBoxComponent*                               PostitionCheckBox;                                          // 0x2310   (0x0008)  
	class UBBQCloseEncounterComponent*                 CloseEncounterComponent;                                    // 0x2318   (0x0008)  
	class UAIPerceptionComponent*                      VisionPerceptionComponent;                                  // 0x2320   (0x0008)  
	class UAIPerceptionStimuliSourceComponent*         PerceptionStimuiSourceComponent;                            // 0x2328   (0x0008)  
	class USphereComponent*                            GrandpaAlertRange;                                          // 0x2330   (0x0008)  
	class UAISenseConfig_Sight*                        Sight;                                                      // 0x2338   (0x0008)  
	class UBBQSneakAttackAreaComponent*                SneakAttackAreaComponent;                                   // 0x2340   (0x0008)  
	class AActor*                                      InstigatingActor;                                           // 0x2348   (0x0008)  
	TArray<class USceneComponent*>                     Locators;                                                   // 0x2350   (0x0010)  
	float                                              SonarWarningBondLevel;                                      // 0x2360   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x2364   (0x0004)  MISSED
	TArray<float>                                      CooldownPerLevel;                                           // 0x2368   (0x0010)  
	FGrandpaSpawnSettings                              SpawnSettings;                                              // 0x2378   (0x0002)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x237A   (0x0002)  MISSED
	FName                                              GrandFeedBloodEventName;                                    // 0x237C   (0x0008)  
	FGameplayTag                                       ScreamAbilityTag;                                           // 0x2384   (0x0008)  
	FGameplayTag                                       DetectionAbilityTag;                                        // 0x238C   (0x0008)  
	FGameplayTag                                       BloodVialTag;                                               // 0x2394   (0x0008)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x239C   (0x0004)  MISSED
	FText                                              ReadyToolTipText;                                           // 0x23A0   (0x0018)  
	FText                                              NotReadyToolTipText;                                        // 0x23B8   (0x0018)  
	FText                                              IncapacitatedToolTipText;                                   // 0x23D0   (0x0018)  
	FGameplayTag                                       CooldownTag;                                                // 0x23E8   (0x0008)  
	class USceneComponent*                             FeedGrandpaLocatorLeft;                                     // 0x23F0   (0x0008)  
	class USceneComponent*                             FeedGrandpaLocatorRight;                                    // 0x23F8   (0x0008)  
	class USceneComponent*                             FeedGrandpaLocatorLeftLF;                                   // 0x2400   (0x0008)  
	class USceneComponent*                             FeedGrandpaLocatorRightLF;                                  // 0x2408   (0x0008)  
	FGameplayTagContainer                              FeedingGrandpaTags;                                         // 0x2410   (0x0020)  
	float                                              FeedSlideInPlaceDuration;                                   // 0x2430   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x2434   (0x0004)  MISSED
	class UClass*                                      FeedingCooldownEffectClass;                                 // 0x2438   (0x0008)  
	FGameplayTag                                       FeedingCooldownTag;                                         // 0x2440   (0x0008)  
	class UClass*                                      CooldownEffectClass;                                        // 0x2448   (0x0008)  
	class UAkAudioEvent*                               IdleSFX;                                                    // 0x2450   (0x0008)  
	class UAkAudioEvent*                               ScreamSFX;                                                  // 0x2458   (0x0008)  
	class UAkAudioEvent*                               ScreamSFX_SweetTalked;                                      // 0x2460   (0x0008)  
	class UAkAudioEvent*                               DeathSFX;                                                   // 0x2468   (0x0008)  
	class UAkAudioEvent*                               AlertedSFX;                                                 // 0x2470   (0x0008)  
	class UAkAudioEvent*                               HalfAlertedSFX;                                             // 0x2478   (0x0008)  
	class UAkAudioEvent*                               BloodVialSmashSFX;                                          // 0x2480   (0x0008)  
	class UAkAudioEvent*                               BloodFeedStart;                                             // 0x2488   (0x0008)  
	class UAkAudioEvent*                               BloodFeedStop;                                              // 0x2490   (0x0008)  
	class UAkAudioEvent*                               SonarFirstPing;                                             // 0x2498   (0x0008)  
	class UAkAudioEvent*                               SonarRepeatingPing;                                         // 0x24A0   (0x0008)  
	class UAkAudioEvent*                               SonarRepeatingPing_SweetTalked;                             // 0x24A8   (0x0008)  
	class UAkAudioEvent*                               SonarFeedbackLoopStart;                                     // 0x24B0   (0x0008)  
	class UAkAudioEvent*                               SonarFeedbackLoopStop;                                      // 0x24B8   (0x0008)  
	class UAkAudioEvent*                               SonarFamilyFeedbackLoopStart;                               // 0x24C0   (0x0008)  
	class UAkAudioEvent*                               SonarFamilyFeedbackLoopStop;                                // 0x24C8   (0x0008)  
	class UAkAudioEvent*                               SonarFeedbackLoopEnd;                                       // 0x24D0   (0x0008)  
	float                                              SpottedNearbyVictimCooldown;                                // 0x24D8   (0x0004)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x24DC   (0x0004)  MISSED
	class UAkAudioEvent*                               SpottedNearbyVictimSFX;                                     // 0x24E0   (0x0008)  
	class UAkRtpc*                                     ThreatRtpc;                                                 // 0x24E8   (0x0008)  
	FDataTableRowHandle                                IncapActivityEvent;                                         // 0x24F0   (0x0010)  
	FDataTableRowHandle                                DetectedActivityEvent;                                      // 0x2500   (0x0010)  
	FDataTableRowHandle                                FeedGrandpaActivityEvent;                                   // 0x2510   (0x0010)  
	FDataTableRowHandle                                FeedCooldownEndActivityEvent;                               // 0x2520   (0x0010)  
	FDataTableRowHandle                                InDangerAlertActivityEvent;                                 // 0x2530   (0x0010)  
	float                                              InDangerAlertActivityEventCooldown;                         // 0x2540   (0x0004)  
	float                                              HalfAlertedPeriod;                                          // 0x2544   (0x0004)  
	float                                              CooldownPeriod;                                             // 0x2548   (0x0004)  
	float                                              GrandpaHighlightOutTime;                                    // 0x254C   (0x0004)  
	bool                                               bShouldHighlightOnlyForFamily;                              // 0x2550   (0x0001)  
	TEnumAsByte<ECollisionChannel>                     LineOfSightRaycastChannel;                                  // 0x2551   (0x0001)  
	unsigned char                                      UnknownData06_6[0x2];                                       // 0x2552   (0x0002)  MISSED
	float                                              AlertAreaAlertTimerDelay;                                   // 0x2554   (0x0004)  
	float                                              VisionConeAlertTimerDelay;                                  // 0x2558   (0x0004)  
	float                                              VisionHighlightTime;                                        // 0x255C   (0x0004)  
	float                                              SneakAttackHighlightTime;                                   // 0x2560   (0x0004)  
	bool                                               bTriggerAlertOnSneakAttackRangeEnter;                       // 0x2564   (0x0001)  
	bool                                               bTriggerAlertOnSneakAttack;                                 // 0x2565   (0x0001)  
	bool                                               bHasVictimsInVisionRange;                                   // 0x2566   (0x0001)  
	unsigned char                                      UnknownData07_6[0x9];                                       // 0x2567   (0x0009)  MISSED
	FGameplayTagContainer                              IgnoreDetectionTags;                                        // 0x2570   (0x0020)  
	FGameplayTagContainer                              InterruptFeedingTags;                                       // 0x2590   (0x0020)  
	bool                                               bMakeLevel1OnPrepPhaseEnd;                                  // 0x25B0   (0x0001)  
	bool                                               bDoTraceBeforeFeed;                                         // 0x25B1   (0x0001)  
	unsigned char                                      UnknownData08_6[0x2];                                       // 0x25B2   (0x0002)  MISSED
	float                                              SonarHighlightDelayAfterScream;                             // 0x25B4   (0x0004)  
	float                                              MinDelayToRestartScream;                                    // 0x25B8   (0x0004)  
	FName                                              IncapOutOfSection;                                          // 0x25BC   (0x0008)  
	unsigned char                                      UnknownData09_6[0x4];                                       // 0x25C4   (0x0004)  MISSED
	TArray<class ABBQGameSessionCharacter*>            VictimsInVisionRange;                                       // 0x25C8   (0x0010)  
	unsigned char                                      UnknownData10_6[0x18];                                      // 0x25D8   (0x0018)  MISSED
	float                                              FamilyBondMaxOverride;                                      // 0x25F0   (0x0004)  
	unsigned char                                      UnknownData11_6[0x4];                                       // 0x25F4   (0x0004)  MISSED
	class UAnimMontage*                                CurrentStateMontage;                                        // 0x25F8   (0x0008)  
	unsigned char                                      UnknownData12_6[0x20];                                      // 0x2600   (0x0020)  MISSED
	EGrandpaState                                      GrandpaState;                                               // 0x2620   (0x0001)  
	unsigned char                                      UnknownData13_6[0x17];                                      // 0x2621   (0x0017)  MISSED
	TArray<FGrandpaPerceptionInfo>                     CurrentlyPerceivedActors;                                   // 0x2638   (0x0010)  
	TArray<class ABBQGameSessionCharacter*>            CrouchedActors;                                             // 0x2648   (0x0010)  
	FGrandpaFeedingInfo                                CurrentFeedingInfo;                                         // 0x2658   (0x0018)  
	unsigned char                                      UnknownData14_6[0x2A0];                                     // 0x2670   (0x02A0)  MISSED
	float                                              BloodIngested;                                              // 0x2910   (0x0004)  
	unsigned char                                      UnknownData15_6[0x5C];                                      // 0x2914   (0x005C)  MISSED
	bool                                               bDebugGrandpa;                                              // 0x2970   (0x0001)  
	bool                                               bSkipNextSonarWarningNotification;                          // 0x2971   (0x0001)  
	unsigned char                                      UnknownData16_6[0x2];                                       // 0x2972   (0x0002)  MISSED
	float                                              VictimDetectionRadius;                                      // 0x2974   (0x0004)  
	float                                              SonarActiveEffectOveride;                                   // 0x2978   (0x0004)  
	unsigned char                                      UnknownData17_6[0x8];                                       // 0x297C   (0x0008)  MISSED
	ETeamID                                            TargetTeam;                                                 // 0x2984   (0x0001)  
	unsigned char                                      UnknownData18_6[0x3];                                       // 0x2985   (0x0003)  MISSED
	FBBQOutlineRendererConfig                          OutlineConfig;                                              // 0x2988   (0x0098)  
	FBBQOutlineRendererConfig                          OutlineConfigMarkedForDeath;                                // 0x2A20   (0x0098)  
	FGameplayTag                                       MarkedForDeathTag;                                          // 0x2AB8   (0x0008)  
	class UClass*                                      AffectedByGrandpasSonarEffect;                              // 0x2AC0   (0x0008)  
	FGameplayTag                                       AffectedBySonarTag;                                         // 0x2AC8   (0x0008)  
	FGameplayTag                                       AffectedBySonarDurationIdTag;                               // 0x2AD0   (0x0008)  
	EGrandpaSonarState                                 SonarState;                                                 // 0x2AD8   (0x0001)  
	unsigned char                                      UnknownData19_6[0x7];                                       // 0x2AD9   (0x0007)  MISSED
	TArray<class AActor*>                              VictimsInActiveSonarRadius;                                 // 0x2AE0   (0x0010)  
	TArray<class AActor*>                              VictimsDetectedInActiveSonarRadius;                         // 0x2AF0   (0x0010)  
	TMap<class AActor*, bool>                          SonarDurationIgnoredPlayers;                                // 0x2B00   (0x0050)  
	unsigned char                                      UnknownData20_7[0x20];                                      // 0x2B50   (0x0020)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQGrandpa.TriggerSonar_Internal
	void TriggerSonar_Internal() // [0x1e4a130] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.StopSonarFeedback
	void StopSonarFeedback() // [0x1e4a040] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.StartFeedBloodInteraction
	void StartFeedBloodInteraction(ABBQGameSessionCharacterAnimated* FeedingPlayer) // [0x1e49f20] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(FeedingPlayer);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.SetGrandpaReady
	void SetGrandpaReady() // [0x1e49f00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.SetGrandpaCooldown
	void SetGrandpaCooldown() // [0x1e49ee0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.SetFamilyBondMaxOverride
	void SetFamilyBondMaxOverride(float BondPoints) // [0x1e49e60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(BondPoints);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.ReviveGrandpa
	void ReviveGrandpa() // [0x1e49e40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.PrepPhaseEnded
	void PrepPhaseEnded() // [0x1e49e20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.PlayScreamSFX
	void PlayScreamSFX() // [0x1e49e00] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.PerceptionUpdate
	void PerceptionUpdate(AActor* Actor, FAIStimulus Stimulus) // [0x1e49c70] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(AActor*, FAIStimulus);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(Actor, Stimulus);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.OnVisonConeTimerDelayEnd
	void OnVisonConeTimerDelayEnd() // [0x1e49c50] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.OnScreamAudioEnded
	void OnScreamAudioEnded(char CallbackType, UAkCallbackInfo* CallbackInfo) // [0x1e49a60] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(char, UAkCallbackInfo*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(CallbackType, CallbackInfo);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.OnRep_SpawnSettings
	void OnRep_SpawnSettings() // [0x1e49a40] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.OnRep_HasVictimsInVisionRange
	void OnRep_HasVictimsInVisionRange(bool bPrevValue) // [0x1e499b0] Final|Native|Protected|Const 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(bPrevValue);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.OnRep_GrandpaState
	void OnRep_GrandpaState(EGrandpaState PrevState) // [0x1e49930] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(EGrandpaState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(PrevState);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.OnRep_GrandpaSonarState
	void OnRep_GrandpaSonarState(EGrandpaSonarState PrevSonarState) // [0x1e498b0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(EGrandpaSonarState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(PrevSonarState);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.OnRep_FeedingInfo
	void OnRep_FeedingInfo(FGrandpaFeedingInfo& PrevInfo) // [0x1e49780] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FGrandpaFeedingInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(PrevInfo);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.OnHalfAlertedStateEnd
	void OnHalfAlertedStateEnd() // [0x1e49690] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.OnExitSneakAttackRange
	void OnExitSneakAttackRange(ABBQGameSessionCharacter* InBBQCharacter) // [0x1e49600] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(InBBQCharacter);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.OnEnterSneakAttackRange
	void OnEnterSneakAttackRange(ABBQGameSessionCharacter* InBBQCharacter) // [0x1e49570] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(InBBQCharacter);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.OnCooldownTagChange
	void OnCooldownTagChange(FGameplayTag Tag, int32_t Count) // [0x1e494a0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(FGameplayTag, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(Tag, Count);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.OnBackstabbedTagChange
	void OnBackstabbedTagChange(FGameplayTag Tag, int32_t Count) // [0x1e493d0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(FGameplayTag, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func(Tag, Count);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.OnAlertRangeVolumeOverlapEnd
	void OnAlertRangeVolumeOverlapEnd(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e49270] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.OnAlertRangeVolumeOverlapBegin
	void OnAlertRangeVolumeOverlapBegin(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e49110] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.NetMulticast_PlayGrandpaSpottedNearbyVictimSFX
	void NetMulticast_PlayGrandpaSpottedNearbyVictimSFX() // [0x1e490f0] Net|Native|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.IsSonarActive
	bool IsSonarActive() // [0x1e490c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.IsSleeping
	bool IsSleeping() // [0x1e49090] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.IsNearestFeedingLocatorActive
	bool IsNearestFeedingLocatorActive(ABBQGameSessionCharacter* Player) // [0x1e48ff0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		return func(Player);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.IsGrandpaIncapacitated
	bool IsGrandpaIncapacitated() // [0x1e48fc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.IsBeingSneakAttacked
	bool IsBeingSneakAttacked() // [0x1e48f90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.GrandpaFedBlood
	void GrandpaFedBlood(ABBQGameSessionCharacterAnimated* FeedingPlayer) // [0x1e48f00] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		func(FeedingPlayer);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.GetSneakAttackingPlayer
	ABBQGameSessionCharacter* GetSneakAttackingPlayer() // [0x1e48ed0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacter* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.GetIncapacitatedTotalTime
	float GetIncapacitatedTotalTime() // [0x1e48ea0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.GetIncapacitatedTimeRemaining
	float GetIncapacitatedTimeRemaining() // [0x1e48e70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.GetGrandpaState
	EGrandpaState GetGrandpaState() // [0x1e48e50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef EGrandpaState (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.GetGrandpaSonarState
	EGrandpaSonarState GetGrandpaSonarState() // [0x1e48e30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef EGrandpaSonarState (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.GetGrandpaCooldown
	float GetGrandpaCooldown() // [0x1e48e00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.GetGrandpaAbilityCooldownTotalTime
	float GetGrandpaAbilityCooldownTotalTime() // [0x1e48dd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.GetGrandpaAbilityCooldownTimeRemaining
	float GetGrandpaAbilityCooldownTimeRemaining() // [0x1e48da0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.GetCharacterFeedingBlood
	ABBQGameSessionCharacterAnimated* GetCharacterFeedingBlood() // [0x1e48d80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacterAnimated* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[39]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.FullyActivateSonar
	void FullyActivateSonar() // [0x1e48d60] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[40]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.EndFeedBloodInteraction
	void EndFeedBloodInteraction() // [0x1e48d40] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[41]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.Debug_NetMulticast_SetDebugSonarState
	void Debug_NetMulticast_SetDebugSonarState(int32_t NewState) // [0x1e48cb0] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		func(NewState);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.CloseEncounterResult
	void CloseEncounterResult(ABBQGameSessionCharacter* InbackstabbingVictim) // [0x1e48c20] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		func(InbackstabbingVictim);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.BP_OnSmashCarryingBloodVial
	void BP_OnSmashCarryingBloodVial() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.BP_OnNoLongerBackstabbed
	void BP_OnNoLongerBackstabbed() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.BP_OnGrandpaStateChanged
	void BP_OnGrandpaStateChanged(EGrandpaState OldState, EGrandpaState NewState) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EGrandpaState, EGrandpaState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		func(OldState, NewState);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.BP_OnGrandpaSonarFinished
	void BP_OnGrandpaSonarFinished() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.BP_OnGrandpaSonarActivated
	void BP_OnGrandpaSonarActivated() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.BP_OnGrandpaSneakAttacked
	void BP_OnGrandpaSneakAttacked(ABBQGameSessionCharacter* Attacker) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		func(Attacker);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.BP_OnGrandpaFedBlood
	void BP_OnGrandpaFedBlood(ABBQGameSessionCharacter* InCharacter, float BloodAmount) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		func(InCharacter, BloodAmount);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.BP_GrandpaFeedBloodMultiplier
	float BP_GrandpaFeedBloodMultiplier() // [0x1e48be0] Native|Event|Public|BlueprintEvent 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.BP_FeedGrandpaBlood
	void BP_FeedGrandpaBlood() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.BP_Debug_StopGrandpaSonar
	void BP_Debug_StopGrandpaSonar() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.BP_Debug_StartGrandpaSonar
	void BP_Debug_StartGrandpaSonar() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		func();
	}
	// Function /Script/BBQGameSession.BBQGrandpa.BP_BloodFeedStarted
	void BP_BloodFeedStarted(ABBQGameSessionCharacter* FeedingPlayer, bool bOnrightSide) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[55]);
		func(FeedingPlayer, bOnrightSide);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.BP_Auth_SonarIgnoredPlayerDetected
	void BP_Auth_SonarIgnoredPlayerDetected(AActor* Player) // [0x1e48b50] Native|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[56]);
		func(Player);
	}
	// Function /Script/BBQGameSession.BBQGrandpa.BP_Auth_CheckPlayerIgnoredBySonar
	bool BP_Auth_CheckPlayerIgnoredBySonar(AActor* Player) // [0x1e48ab0] Native|Event|Public|BlueprintEvent|Const 
	{
		typedef bool (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[57]);
		return func(Player);
	}
};

/// Class /Script/BBQGameSession.BBQGrandpaRandomiser
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQGrandpaRandomiser : public AActor
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQGrandpaRandomiser.BP_ForceGrandpaPositionAtIndex
	void BP_ForceGrandpaPositionAtIndex(int32_t IndexPos) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(IndexPos);
	}
};

/// Class /Script/BBQGameSession.BBQGrandpaSneakAttackBehaviour
/// Size: 0x0310 (784 bytes) (0x0002E8 - 0x000310) align 8 MaxSize: 0x0310
class ABBQGrandpaSneakAttackBehaviour : public ABBQCharacterBehaviour
{ 
public:
	FName                                              CameraState;                                                // 0x02E8   (0x0008)  
	EBBQPairedAnimSlot                                 SneakAttackAnimSlot;                                        // 0x02F0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02F1   (0x0007)  MISSED
	class ABBQGameSessionCharacterAnimated*            VictimCharacter;                                            // 0x02F8   (0x0008)  
	class ABBQGrandpa*                                 GrandpaCharacter;                                           // 0x0300   (0x0008)  
	unsigned char                                      UnknownData01_7[0x8];                                       // 0x0308   (0x0008)  MISSED
};

/// Class /Script/BBQGameSession.BBQGrandpaSpawn
/// Size: 0x0230 (560 bytes) (0x000228 - 0x000230) align 8 MaxSize: 0x0230
class ABBQGrandpaSpawn : public AActor
{ 
public:
	FGrandpaSpawnSettings                              SpawnSettings;                                              // 0x0228   (0x0002)  
	unsigned char                                      UnknownData00_7[0x6];                                       // 0x022A   (0x0006)  MISSED
};

/// Class /Script/BBQGameSession.HarvestIntoEndedAnimNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UHarvestIntoEndedAnimNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.HarvestOutEndedAnimNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UHarvestOutEndedAnimNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.BBQHarvestLocation
/// Size: 0x0470 (1136 bytes) (0x000228 - 0x000470) align 8 MaxSize: 0x0470
class ABBQHarvestLocation : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x10];                                      // 0x0228   (0x0010)  MISSED
	class USceneComponent*                             VictimLocator;                                              // 0x0238   (0x0008)  
	class USceneComponent*                             FamilyLocator;                                              // 0x0240   (0x0008)  
	class USceneComponent*                             BloodBucketLocator;                                         // 0x0248   (0x0008)  
	class USceneComponent*                             FamilyEndFleeLocator;                                       // 0x0250   (0x0008)  
	class UBBQNoiseOutlineComponent*                   OutlineComponent;                                           // 0x0258   (0x0008)  
	class UStaticMeshComponent*                        HarvestLocationMesh;                                        // 0x0260   (0x0008)  
	class UBoxComponent*                               InteractionBox;                                             // 0x0268   (0x0008)  
	class UBBQInteractionComponent*                    Interaction;                                                // 0x0270   (0x0008)  
	class UBBQInteractionEventComponent*               InteractionEvent;                                           // 0x0278   (0x0008)  
	class UBBQInteractionEventComponent*               InteractionEventAlreadyOccupied;                            // 0x0280   (0x0008)  
	class UBBQInteractionEventComponent*               InteractionEventRescueVictim;                               // 0x0288   (0x0008)  
	class UClass*                                      VictimEffectClass;                                          // 0x0290   (0x0008)  
	class UClass*                                      FamilyEffectClass;                                          // 0x0298   (0x0008)  
	class UClass*                                      BloodBucketClass;                                           // 0x02A0   (0x0008)  
	bool                                               bSpawnBloodBucket;                                          // 0x02A8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x02A9   (0x0007)  MISSED
	class UClass*                                      StunnedEffectClass;                                         // 0x02B0   (0x0008)  
	class UClass*                                      RecoveryEffectClass;                                        // 0x02B8   (0x0008)  
	FGameplayTag                                       HarvestRestrainedTag;                                       // 0x02C0   (0x0008)  
	FGameplayTag                                       HarvestVictimKnockedOutTag;                                 // 0x02C8   (0x0008)  
	FGameplayTag                                       MarkedForDeathTag;                                          // 0x02D0   (0x0008)  
	class UClass*                                      VictimEscapingHarvestEffectClass;                           // 0x02D8   (0x0008)  
	float                                              Cooldown;                                                   // 0x02E0   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x02E4   (0x0004)  MISSED
	FGameplayVariableFloat                             KnockoutTimeWhenPlaced;                                     // 0x02E8   (0x0058)  
	FGameplayVariableFloat                             KnockoutTimeAfterBloodLet;                                  // 0x0340   (0x0058)  
	float                                              StunDistance;                                               // 0x0398   (0x0004)  
	TEnumAsByte<ECollisionChannel>                     StunLineTraceChannel;                                       // 0x039C   (0x0001)  
	bool                                               bDebugHarvestLocation;                                      // 0x039D   (0x0001)  
	EBBQAnimSlot                                       AssociatedAnimSlotType;                                     // 0x039E   (0x0001)  
	unsigned char                                      UnknownData03_6[0x1];                                       // 0x039F   (0x0001)  MISSED
	class ULevelSequence*                              CameraSequenceRestrainVictim;                               // 0x03A0   (0x0008)  
	class ULevelSequence*                              CameraSequenceRestrainFamily;                               // 0x03A8   (0x0008)  
	class ULevelSequence*                              CameraSequenceIntoHarvestVictim;                            // 0x03B0   (0x0008)  
	class ULevelSequence*                              CameraSequenceIntoHarvestFamily;                            // 0x03B8   (0x0008)  
	class ULevelSequence*                              CameraSequenceFleeVictim;                                   // 0x03C0   (0x0008)  
	class ULevelSequence*                              CameraSequenceFleeFamily;                                   // 0x03C8   (0x0008)  
	class ULevelSequence*                              CameraSequenceExecuteVictim;                                // 0x03D0   (0x0008)  
	class ULevelSequence*                              CameraSequenceExecuteFamily;                                // 0x03D8   (0x0008)  
	bool                                               bEnableCameraSequences;                                     // 0x03E0   (0x0001)  
	bool                                               bAutoSkipToExecution;                                       // 0x03E1   (0x0001)  
	unsigned char                                      UnknownData04_6[0x6];                                       // 0x03E2   (0x0006)  MISSED
	class ABBQBloodBucket*                             AttachedBloodBucket;                                        // 0x03E8   (0x0008)  
	class ABBQGameSessionCharacterAnimated*            Family;                                                     // 0x03F0   (0x0008)  
	class ABBQGameSessionCharacterAnimated*            Victim;                                                     // 0x03F8   (0x0008)  
	unsigned char                                      UnknownData05_7[0x70];                                      // 0x0400   (0x0070)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQHarvestLocation.OnEndKnockoutTimer
	void OnEndKnockoutTimer() // [0x1e4ebc0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.OnCooldownTimerElapsed
	void OnCooldownTimerElapsed() // [0x1e4ea00] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.NetMulticast_RestrainVictim
	void NetMulticast_RestrainVictim(ABBQGameSessionCharacterAnimated* FamilyMember, ABBQGameSessionCharacterAnimated* VictimMember) // [0x1e4e790] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(FamilyMember, VictimMember);
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.NetMulticast_RescueVictim
	void NetMulticast_RescueVictim(ABBQGameSessionCharacterAnimated* VictimHelper) // [0x1e0a820] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(VictimHelper);
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.NetMulticast_HarvestVictim
	void NetMulticast_HarvestVictim(ABBQGameSessionCharacterAnimated* FamilyMember) // [0xc7c280] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(FamilyMember);
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.NetMulticast_FamilyMemberQuitMinigame
	void NetMulticast_FamilyMemberQuitMinigame(ABBQGameSessionCharacterAnimated* FamilyMember) // [0x1e071e0] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(FamilyMember);
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.NetMulticast_BroadcastHarvestOutcome
	void NetMulticast_BroadcastHarvestOutcome(EHarvestOutcome Outcome) // [0x1e4e660] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(EHarvestOutcome);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(Outcome);
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.NetMulticast_BeginHarvest
	void NetMulticast_BeginHarvest() // [0xc76210] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.GetVictimWillToLive
	float GetVictimWillToLive() // [0x1e4e570] Final|Native|Protected|BlueprintCallable 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.GetAttachedBloodBucket
	ABBQBloodBucket* GetAttachedBloodBucket() // [0x1e4e040] Final|Native|Public|BlueprintCallable 
	{
		typedef class ABBQBloodBucket* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.DEBUG_GetStatus
	FString DEBUG_GetStatus() // [0x1e4dfa0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FString (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.CanExecuteVictim
	bool CanExecuteVictim() // [0x1e4de40] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.BP_OnHarvestVictim
	void BP_OnHarvestVictim(ABBQGameSessionCharacterAnimated* VictimPlayer, ABBQGameSessionCharacterAnimated* FamilyPlayer) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(VictimPlayer, FamilyPlayer);
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.BP_OnHarvestEnded
	void BP_OnHarvestEnded(EHarvestOutcome Outcome) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EHarvestOutcome);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(Outcome);
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.BP_OnFamilyMemberQuit
	void BP_OnFamilyMemberQuit() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.BP_HarvestMinigameStarted
	void BP_HarvestMinigameStarted(ABBQGameSessionCharacterAnimated* VictimPlayer, ABBQGameSessionCharacterAnimated* FamilyPlayer) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(VictimPlayer, FamilyPlayer);
	}
	// Function /Script/BBQGameSession.BBQHarvestLocation.BP_ForcePlayRestrainMontageFromStart
	void BP_ForcePlayRestrainMontageFromStart(ABBQGameSessionCharacterAnimated* Character) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(Character);
	}
};

/// Class /Script/BBQGameSession.FollowToHidingCameraAnimNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UFollowToHidingCameraAnimNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.DisableInterruptSearchSuccessAnimNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UDisableInterruptSearchSuccessAnimNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.EnterHidingSpotLoopAnimNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UEnterHidingSpotLoopAnimNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.OpenGrabWindowAnimNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UOpenGrabWindowAnimNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.CloseGrabWindowAnimNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UCloseGrabWindowAnimNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.DamageDiscoveredVictimAnimNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UDamageDiscoveredVictimAnimNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.DamageGrabbedVictimAnimNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UDamageGrabbedVictimAnimNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.BBQHidingSpot
/// Size: 0x0988 (2440 bytes) (0x000228 - 0x000988) align 8 MaxSize: 0x0988
class ABBQHidingSpot : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x18];                                      // 0x0228   (0x0018)  MISSED
	SDK_UNDEFINED(16,527) /* FMulticastInlineDelegate */ __um(OnSearchInteractionEnded);                           // 0x0240   (0x0010)  
	SDK_UNDEFINED(16,528) /* FMulticastInlineDelegate */ __um(OnHideInteractionEnded);                             // 0x0250   (0x0010)  
	SDK_UNDEFINED(16,529) /* FMulticastInlineDelegate */ __um(OnBurstOutInteractionEnded);                         // 0x0260   (0x0010)  
	SDK_UNDEFINED(16,530) /* FMulticastInlineDelegate */ __um(OnLeaveInteractionEnded);                            // 0x0270   (0x0010)  
	unsigned char                                      UnknownData01_6[0x68];                                      // 0x0280   (0x0068)  MISSED
	class ABBQGameSessionCharacter*                    HidingCharacter;                                            // 0x02E8   (0x0008)  
	float                                              CameraLocationErrorTolerance;                               // 0x02F0   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x02F4   (0x0004)  MISSED
	class USceneComponent*                             RootSceneComponent;                                         // 0x02F8   (0x0008)  
	class USceneComponent*                             OutPosition;                                                // 0x0300   (0x0008)  
	class UArrowComponent*                             ArrowOut;                                                   // 0x0308   (0x0008)  
	class USceneComponent*                             HidingLocator;                                              // 0x0310   (0x0008)  
	class UArrowComponent*                             ArrowHidingLocator;                                         // 0x0318   (0x0008)  
	class USceneComponent*                             BurstOutStartLocator;                                       // 0x0320   (0x0008)  
	class UArrowComponent*                             ArrowBurstOutStartLocator;                                  // 0x0328   (0x0008)  
	FName                                              AutoAddTagForLineOfSightCheck;                              // 0x0330   (0x0008)  
	class UStaticMeshComponent*                        DoorMesh;                                                   // 0x0338   (0x0008)  
	class USceneComponent*                             CameraOriginLocator;                                        // 0x0340   (0x0008)  
	class UCameraComponent*                            CameraComponent;                                            // 0x0348   (0x0008)  
	class UBBQSplineCameraVolumeComponent*             SplineCameraVolumeComponent;                                // 0x0350   (0x0008)  
	class USplineComponent*                            SplineCameraVolumeSpline;                                   // 0x0358   (0x0008)  
	class UBoxComponent*                               SplineCameraVolumeCollision;                                // 0x0360   (0x0008)  
	class UBoxComponent*                               InteractionBox;                                             // 0x0368   (0x0008)  
	class UBoxComponent*                               PositionBox;                                                // 0x0370   (0x0008)  
	class UBBQInteractionComponent*                    InteractionComponent;                                       // 0x0378   (0x0008)  
	class USceneComponent*                             InteractionLocator;                                         // 0x0380   (0x0008)  
	class UArrowComponent*                             ArrowInteractionLocator;                                    // 0x0388   (0x0008)  
	class USceneComponent*                             SearchInteractionLocator;                                   // 0x0390   (0x0008)  
	class USceneComponent*                             SearchInteractionLocatorLeatherface;                        // 0x0398   (0x0008)  
	class UArrowComponent*                             ArrowSearchInteractionLocator;                              // 0x03A0   (0x0008)  
	class UArrowComponent*                             ArrowSearchInteractionLocatorLeatherface;                   // 0x03A8   (0x0008)  
	TMap<FGameplayTag, class USceneComponent*>         InteractionLocatorByCharacter;                              // 0x03B0   (0x0050)  
	TMap<FGameplayTag, class USceneComponent*>         SearchInteractionLocatorByCharacter;                        // 0x0400   (0x0050)  
	TMap<FGameplayTag, class USceneComponent*>         HidingLocatorByCharacter;                                   // 0x0450   (0x0050)  
	TMap<FGameplayTag, class USceneComponent*>         BurstOutStartLocatorByCharacter;                            // 0x04A0   (0x0050)  
	TMap<FGameplayTag, class USceneComponent*>         OutPositionLocatorByCharacter;                              // 0x04F0   (0x0050)  
	class ABBQGameSessionCharacter*                    SearchingCharacter;                                         // 0x0540   (0x0008)  
	TEnumAsByte<ECollisionChannel>                     TraversalChannel;                                           // 0x0548   (0x0001)  
	FCollisionResponseContainer                        HidingCharacterCachedResponses;                             // 0x0549   (0x0020)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0569   (0x0003)  MISSED
	float                                              HidingCameraYawRotation;                                    // 0x056C   (0x0004)  
	float                                              HidingCameraPitchRotation;                                  // 0x0570   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x0574   (0x0004)  MISSED
	float                                              HidingCameraXOffset;                                        // 0x0578   (0x0004)  
	float                                              HidingCameraYOffset;                                        // 0x057C   (0x0004)  
	float                                              MinExitingCameraYawRotation;                                // 0x0580   (0x0004)  
	float                                              MaxExitingCameraYawRotation;                                // 0x0584   (0x0004)  
	float                                              MinExitingCameraPitchRotation;                              // 0x0588   (0x0004)  
	float                                              MaxExitingCameraPitchRotation;                              // 0x058C   (0x0004)  
	bool                                               bInterpolateSpectatorCamera;                                // 0x0590   (0x0001)  
	unsigned char                                      UnknownData05_6[0x3];                                       // 0x0591   (0x0003)  MISSED
	float                                              SpectatorCameraInterpSpeed;                                 // 0x0594   (0x0004)  
	float                                              HidingCameraSpeed;                                          // 0x0598   (0x0004)  
	float                                              HidingCameraBlendInDuration;                                // 0x059C   (0x0004)  
	float                                              HidingCameraBlendOutDuration;                               // 0x05A0   (0x0004)  
	float                                              HidingCameraBurstBlendOutDuration;                          // 0x05A4   (0x0004)  
	float                                              TimeTilForcedOutOfHidingSpot;                               // 0x05A8   (0x0004)  
	float                                              TimeToStartPanicForceOutOfHidingSpotAudio;                  // 0x05AC   (0x0004)  
	float                                              TimePlayerEnteredHidingSpot;                                // 0x05B0   (0x0004)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x05B4   (0x0003)  MISSED
	EHidingSpotType                                    HidingSpotType;                                             // 0x05B7   (0x0001)  
	EBBQHidingSpotAnimSlot                             SlowEnterHidingSpotAnimSlot;                                // 0x05B8   (0x0001)  
	EBBQHidingSpotAnimSlot                             FastEnterHidingSpotAnimSlot;                                // 0x05B9   (0x0001)  
	EBBQHidingSpotAnimSlot                             LeaveHidingSpotAnimSlot;                                    // 0x05BA   (0x0001)  
	EBBQHidingSpotAnimSlot                             DyingLeaveHidingSpotAnimSlot;                               // 0x05BB   (0x0001)  
	EBBQHidingSpotAnimSlot                             BurstOutOfHidingSpotAnimSlot;                               // 0x05BC   (0x0001)  
	EBBQHidingSpotAnimSlot                             SearchFailHidingSpotAnimSlot;                               // 0x05BD   (0x0001)  
	EBBQHidingSpotAnimSlot                             SearchSuccessHidingSpotAnimSlot;                            // 0x05BE   (0x0001)  
	EBBQHidingSpotAnimSlot                             DraggedOutOfHidingSpotAnimSlot;                             // 0x05BF   (0x0001)  
	TMap<FGameplayTag, EBBQHidingSpotAnimSlot>         DraggedOutOfHidingSpotAnimSlotByCharacter;                  // 0x05C0   (0x0050)  
	EBBQHidingSpotAnimSlot                             GrabbedWhileEnteringHidingSpotAnimSlot;                     // 0x0610   (0x0001)  
	EBBQHidingSpotAnimSlot                             GrabEnteringCharacterHidingSpotAnimSlot;                    // 0x0611   (0x0001)  
	EBBQHidingSpotAnimSlot                             GrabbedWhileLeavingHidingSpotAnimSlot;                      // 0x0612   (0x0001)  
	EBBQHidingSpotAnimSlot                             GrabLeavingCharacterHidingSpotAnimSlot;                     // 0x0613   (0x0001)  
	unsigned char                                      UnknownData07_6[0x4];                                       // 0x0614   (0x0004)  MISSED
	FBBQHidingSpotCurves                               DefaultCurveSet;                                            // 0x0618   (0x00C8)  
	TMap<FGameplayTag, FBBQHidingSpotCurves>           CurveSetByHidingCharacter;                                  // 0x06E0   (0x0050)  
	class UTimelineComponent*                          AnimTimeline;                                               // 0x0730   (0x0008)  
	class UAkAudioEvent*                               EnteringAkEvent;                                            // 0x0738   (0x0008)  
	class UAkAudioEvent*                               EnterAkEvent;                                               // 0x0740   (0x0008)  
	class UAkAudioEvent*                               ExitAkEvent;                                                // 0x0748   (0x0008)  
	class UAkAudioEvent*                               BurstOutAkEvent;                                            // 0x0750   (0x0008)  
	class UAkAudioEvent*                               OpenAkEvent;                                                // 0x0758   (0x0008)  
	class UAkAudioEvent*                               AmbientAkEvent;                                             // 0x0760   (0x0008)  
	class UAkAudioEvent*                               SearchAkEvent;                                              // 0x0768   (0x0008)  
	class UAkAudioEvent*                               SearchSuccessfulAkEvent;                                    // 0x0770   (0x0008)  
	class UAkAudioEvent*                               PanicBeginAkEvent;                                          // 0x0778   (0x0008)  
	class UAkAudioEvent*                               PanicEndAkEvent;                                            // 0x0780   (0x0008)  
	class UAkAudioEvent*                               OnForcedOutOfHidingAkEvent;                                 // 0x0788   (0x0008)  
	class UAkRtpc*                                     PanicBreathVolumeRTPC;                                      // 0x0790   (0x0008)  
	class UAkRtpc*                                     HiddenFocusRTPC;                                            // 0x0798   (0x0008)  
	unsigned char                                      UnknownData08_6[0x8];                                       // 0x07A0   (0x0008)  MISSED
	FGameplayTagContainer                              InHidingSpotTags;                                           // 0x07A8   (0x0020)  
	FGameplayTagContainer                              TagsWhilstSearching;                                        // 0x07C8   (0x0020)  
	FGameplayTag                                       IsHidingTag;                                                // 0x07E8   (0x0008)  
	class UClass*                                      StunnedEffectClass;                                         // 0x07F0   (0x0008)  
	float                                              StunDistance;                                               // 0x07F8   (0x0004)  
	float                                              StunForwardConeAngle;                                       // 0x07FC   (0x0004)  
	FDataTableRowHandle                                VictimFoundFamilyBondActivityRow;                           // 0x0800   (0x0010)  
	float                                              SlowEnterSlideInPlaceDuration;                              // 0x0810   (0x0004)  
	float                                              FastEnterSlideInPlaceDuration;                              // 0x0814   (0x0004)  
	float                                              SearchSlideInPlaceDuration;                                 // 0x0818   (0x0004)  
	unsigned char                                      UnknownData09_6[0x4];                                       // 0x081C   (0x0004)  MISSED
	FGameplayTagContainer                              GameplayTags;                                               // 0x0820   (0x0020)  
	FName                                              EnteringHidingSpotCameraStateName;                          // 0x0840   (0x0008)  
	float                                              HoldDownButtonToBurstOutDuration;                           // 0x0848   (0x0004)  
	unsigned char                                      UnknownData10_6[0xC];                                       // 0x084C   (0x000C)  MISSED
	float                                              BurstOutDelay;                                              // 0x0858   (0x0004)  
	float                                              CurrentHiderPanicPct;                                       // 0x085C   (0x0004)  
	unsigned char                                      UnknownData11_6[0xC];                                       // 0x0860   (0x000C)  MISSED
	bool                                               bShouldHideCharacterMesh;                                   // 0x086C   (0x0001)  
	unsigned char                                      UnknownData12_6[0x3];                                       // 0x086D   (0x0003)  MISSED
	FGameplayVariableFloat                             DiscoveredDamage;                                           // 0x0870   (0x0058)  
	FGameplayVariableFloat                             GrabDamage;                                                 // 0x08C8   (0x0058)  
	class UClass*                                      DiscoveredDamageType;                                       // 0x0920   (0x0008)  
	class UClass*                                      GrabbedDamageType;                                          // 0x0928   (0x0008)  
	unsigned char                                      UnknownData13_6[0x10];                                      // 0x0930   (0x0010)  MISSED
	FHidingPlayerCameraInfo                            HidingPlayerCameraInfo;                                     // 0x0940   (0x0018)  
	FHidingCharacterInfo                               HidingCharacterInfo;                                        // 0x0958   (0x0010)  
	char                                               PostLeaveParams;                                            // 0x0968   (0x0001)  
	unsigned char                                      UnknownData14_7[0x1F];                                      // 0x0969   (0x001F)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQHidingSpot.StunSearchingCharacter
	void StunSearchingCharacter() // [0x1e50630] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.StunNearbyFamilyMembers
	void StunNearbyFamilyMembers() // [0x1e50610] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.SetStunDistance
	void SetStunDistance(float Value) // [0x1e50590] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Value);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.SetSearchInteractionLocator
	void SetSearchInteractionLocator(FGameplayTag CharacterTag, USceneComponent* SceneComponent) // [0x1e50430] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayTag, USceneComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(CharacterTag, SceneComponent);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.SetSearchingCharacter
	void SetSearchingCharacter(ABBQGameSessionCharacter* Character) // [0x1e50500] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.SetOutPositionLocator
	void SetOutPositionLocator(FGameplayTag CharacterTag, USceneComponent* SceneComponent) // [0x1e50360] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayTag, USceneComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(CharacterTag, SceneComponent);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.SetInteractionLocator
	void SetInteractionLocator(FGameplayTag CharacterTag, USceneComponent* SceneComponent) // [0x1e50290] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayTag, USceneComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(CharacterTag, SceneComponent);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.SetHoldDownButtonToBurstOutDuration
	void SetHoldDownButtonToBurstOutDuration(float Value) // [0x1e50210] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(Value);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.SetHidingLocator
	void SetHidingLocator(FGameplayTag CharacterTag, USceneComponent* SceneComponent) // [0x1e50140] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayTag, USceneComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(CharacterTag, SceneComponent);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.SetHidingCharacter
	void SetHidingCharacter(ABBQGameSessionCharacter* Character) // [0x1e500b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.SetCharacterHidingCollisionAndVisibility
	void SetCharacterHidingCollisionAndVisibility(bool Enabled) // [0x1e50020] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(Enabled);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.SetBurstOutStartLocator
	void SetBurstOutStartLocator(FGameplayTag CharacterTag, USceneComponent* SceneComponent) // [0x1e4ff50] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayTag, USceneComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(CharacterTag, SceneComponent);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.Server_Test_BurstOutOfHidingSpot
	void Server_Test_BurstOutOfHidingSpot() // [0xde6780] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.Server_OnLeavingInteractionInterrupted
	void Server_OnLeavingInteractionInterrupted() // [0x1e1d010] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.Server_OnEnteringInteractionInterrupted
	void Server_OnEnteringInteractionInterrupted() // [0xc76210] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.Server_LeaveHidingSpot
	void Server_LeaveHidingSpot(bool IsDying) // [0x1e4fe90] Net|NetReliableNative|Event|Protected|NetServer|NetValidate 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(IsDying);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.Server_BurstOutOfHidingSpot
	void Server_BurstOutOfHidingSpot() // [0x1e4fe40] Net|NetReliableNative|Event|Protected|NetServer|NetValidate 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.RestoreCharacterCamera
	void RestoreCharacterCamera(float BlendDuration) // [0x1e4fdc0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(BlendDuration);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.PlaySearchFailHidingSpotMontage
	void PlaySearchFailHidingSpotMontage(ABBQGameSessionCharacter* InteractionInstigator) // [0x1e4fd30] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(InteractionInstigator);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.PlayLeaveHidingSpotMontage
	void PlayLeaveHidingSpotMontage() // [0x1e4fd10] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.PlayHiddenCharacterDiscoveredHidingSpotMontages
	void PlayHiddenCharacterDiscoveredHidingSpotMontages() // [0x1e4fcf0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.PlayGrabbingHidingSpotMontages
	void PlayGrabbingHidingSpotMontages() // [0x1e4fcd0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.PlayEnterHidingSpotMontage
	void PlayEnterHidingSpotMontage() // [0x1e4fcb0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.PlayDyingLeaveHidingSpotMontage
	void PlayDyingLeaveHidingSpotMontage() // [0x1e4fc90] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.PlayBurstOutOfHidingSpotMontage
	void PlayBurstOutOfHidingSpotMontage() // [0x1e4fc70] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.PlayAudioOnExit
	void PlayAudioOnExit() // [0x1e4fc50] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.PlayAudioOnEnter
	void PlayAudioOnEnter() // [0x1e4fc30] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnTakeDamage
	void OnTakeDamage(AActor* DamagedActor, float Damage, UDamageType* DamageType, AController* InstigatedBy, AActor* DamageCauser) // [0x1e4fa80] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(AActor*, float, UDamageType*, AController*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		func(DamagedActor, Damage, DamageType, InstigatedBy, DamageCauser);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnStunAnimBlendOut
	void OnStunAnimBlendOut(UAnimMontage* Montage, bool bInterrupted, ABBQGameSessionCharacterAnimated* Player) // [0x1e4f970] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool, ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		func(Montage, bInterrupted, Player);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnSneakAttacked
	void OnSneakAttacked(AActor* Attacker, AActor* Target) // [0x1e4f8a0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(AActor*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		func(Attacker, Target);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnSlideInPlaceSearchHidingSpotFinished
	void OnSlideInPlaceSearchHidingSpotFinished(ABBQGameSessionCharacterAnimated* Character, bool bWasInterrupted) // [0x1e4f7d0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		func(Character, bWasInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnSlideInPlaceEnterHidingSpotFinished
	void OnSlideInPlaceEnterHidingSpotFinished(ABBQGameSessionCharacterAnimated* Character, bool bWasInterrupted) // [0x1e4f700] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		func(Character, bWasInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnSearchSuccessHidingSpotMontageEnded
	void OnSearchSuccessHidingSpotMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e4f630] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnSearchFailHidingSpotMontageEnded
	void OnSearchFailHidingSpotMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e4f560] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnRep_HidingPlayerState
	void OnRep_HidingPlayerState(FHidingPlayerCameraInfo& PreviousState) // [0x1e4f4c0] Final|Native|Public|HasOutParms 
	{
		typedef void (*FuncPtr)(FHidingPlayerCameraInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		func(PreviousState);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnRep_HidingCharacterInfo
	void OnRep_HidingCharacterInfo(FHidingCharacterInfo& PrevInfo) // [0x1e4f420] Final|Native|Private|HasOutParms 
	{
		typedef void (*FuncPtr)(FHidingCharacterInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		func(PrevInfo);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnLeaveHidingSpotMontageEnded
	void OnLeaveHidingSpotMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e4f350] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnInteractionSearchEventDelegate
	void OnInteractionSearchEventDelegate(FName EventName, AActor* EventInstigator) // [0x1e4f280] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		func(EventName, EventInstigator);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnInteractionGrabEventDelegate
	void OnInteractionGrabEventDelegate(FName EventName, AActor* EventInstigator) // [0x1e4f1b0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(FName, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[38]);
		func(EventName, EventInstigator);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnInteractionEventDelegate
	void OnInteractionEventDelegate(UBBQInteractionEventComponent* InteractionScenario, FName EventName, AActor* EventInstigator) // [0x1e4f0a0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UBBQInteractionEventComponent*, FName, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[39]);
		func(InteractionScenario, EventName, EventInstigator);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnInteractionEnterFamilyEventDelegate
	void OnInteractionEnterFamilyEventDelegate(FName EventName, AActor* EventInstigator) // [0x1e4efd0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(FName, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[40]);
		func(EventName, EventInstigator);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnInteractionEnterEventDelegate
	void OnInteractionEnterEventDelegate(FName EventName, AActor* EventInstigator) // [0x1e4ef00] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(FName, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[41]);
		func(EventName, EventInstigator);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnInteractionEnded__DelegateSignature
	void OnInteractionEnded__DelegateSignature() // [0x2438a30] MulticastDelegate|Public|Delegate 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnHidingSpotSearched
	void OnHidingSpotSearched() // [0x1e4eee0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnHidingSpotLeft
	void OnHidingSpotLeft(bool bUseAdjustedFinalPos) // [0x1e4ee50] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		func(bUseAdjustedFinalPos);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnGrabHidingCharacterMontageEnded
	void OnGrabHidingCharacterMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e4ecb0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnGrabbedOutOfHidingSpotMontageEnded
	void OnGrabbedOutOfHidingSpotMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e4ed80] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnEnterCloseEncounter
	void OnEnterCloseEncounter(AActor* Leader, AActor* Participant) // [0x1e4ebe0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(AActor*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		func(Leader, Participant);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnDyingLeaveHidingSpotMontageEnded
	void OnDyingLeaveHidingSpotMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e4eaf0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnDraggedOutOfHidingSpotMontageEnded
	void OnDraggedOutOfHidingSpotMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e4ea20] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.OnBurstOutOfHidingSpotMontageEnded
	void OnBurstOutOfHidingSpotMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e4e930] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.NetMulticast_StopCurrentSearchHidingSpotMontage
	void NetMulticast_StopCurrentSearchHidingSpotMontage() // [0x1e4e910] Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.NetMulticast_SkipToEndOfSearchFailHidingSpotMontage
	void NetMulticast_SkipToEndOfSearchFailHidingSpotMontage() // [0x1e4e8f0] Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.NetMulticast_SearchHidingSpot
	void NetMulticast_SearchHidingSpot(ABBQGameSessionCharacter* InteractionInstigator) // [0x1e4e860] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		func(InteractionInstigator);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.NetMulticast_OnSneakAttacked
	void NetMulticast_OnSneakAttacked(AActor* Attacker, AActor* Target) // [0x1e4e790] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(AActor*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		func(Attacker, Target);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.NetMulticast_OnLeavingInteractionInterrupted
	void NetMulticast_OnLeavingInteractionInterrupted() // [0x1e14940] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[55]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.NetMulticast_OnEnteringInteractionInterrupted
	void NetMulticast_OnEnteringInteractionInterrupted() // [0xc761f0] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[56]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.NetMulticast_GrabHidingCharacter
	void NetMulticast_GrabHidingCharacter(ABBQGameSessionCharacter* InteractionInstigator) // [0x1e4e700] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[57]);
		func(InteractionInstigator);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.NetMulticast_BurstOutOfHidingSpot
	void NetMulticast_BurstOutOfHidingSpot() // [0x1e4e6e0] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[58]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.LeaveHidingSpot
	void LeaveHidingSpot(bool IsDying) // [0x1e4e5d0] Native|Protected     
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[59]);
		func(IsDying);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.IsBurstOutEnabled
	bool IsBurstOutEnabled() // [0x1e4e5a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[60]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.HasMatchingGameplayTag
	bool HasMatchingGameplayTag(FGameplayTag TagToCheck) // [0x1e1ca00] Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[61]);
		return func(TagToCheck);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.HasAnyMatchingGameplayTags
	bool HasAnyMatchingGameplayTags(FGameplayTagContainer& TagContainer) // [0x1e1c930] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTagContainer&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[62]);
		return func(TagContainer);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.HasAllMatchingGameplayTags
	bool HasAllMatchingGameplayTags(FGameplayTagContainer& TagContainer) // [0x1e1c860] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTagContainer&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[63]);
		return func(TagContainer);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetVictimDiscoverDamageIncrease
	float GetVictimDiscoverDamageIncrease() // [0x1e4e530] Native|Event|Protected|BlueprintEvent|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[64]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetStunDistance
	float GetStunDistance() // [0x1e4e500] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[65]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetSearchInteractionTransform
	FTransform GetSearchInteractionTransform(ABBQGameSessionCharacter* Character) // [0x1e4e420] Final|Native|Protected|HasDefaults|BlueprintCallable 
	{
		typedef FTransform (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[66]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetSearchingCharacter
	ABBQGameSessionCharacter* GetSearchingCharacter() // [0x1e4e4d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacter* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[67]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetOwnedGameplayTags
	void GetOwnedGameplayTags(FGameplayTagContainer& TagContainer) // [0x1e1c710] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef void (*FuncPtr)(FGameplayTagContainer&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[68]);
		func(TagContainer);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetOutPositionTransform
	FTransform GetOutPositionTransform(ABBQGameSessionCharacter* Character) // [0x1e4e370] Final|Native|Protected|HasDefaults|BlueprintCallable 
	{
		typedef FTransform (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[69]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetInteractionTransform
	FTransform GetInteractionTransform(ABBQGameSessionCharacter* Character) // [0x1e4e2c0] Final|Native|Protected|HasDefaults|BlueprintCallable 
	{
		typedef FTransform (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[70]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetHoldDownButtonToBurstOutDuration
	float GetHoldDownButtonToBurstOutDuration() // [0x1e4e290] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[71]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetHidingTransform
	FTransform GetHidingTransform(ABBQGameSessionCharacter* Character) // [0x1e4e1e0] Final|Native|Protected|HasDefaults|BlueprintCallable 
	{
		typedef FTransform (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[72]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetHidingSpotType
	EHidingSpotType GetHidingSpotType() // [0x1e4e1c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef EHidingSpotType (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[73]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetHidingCharacter
	ABBQGameSessionCharacter* GetHidingCharacter() // [0x1e4e190] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacter* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[74]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetCanBurstOut
	bool GetCanBurstOut() // [0x1e4e160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[75]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetCameraComponent
	UCameraComponent* GetCameraComponent() // [0x1e4e140] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UCameraComponent* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[76]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetBurstOutStartTransform
	FTransform GetBurstOutStartTransform(ABBQGameSessionCharacter* Character) // [0x1e4e090] Final|Native|Protected|HasDefaults|BlueprintCallable 
	{
		typedef FTransform (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[77]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.GetBurstOutDurationTimerElapsedPercent
	float GetBurstOutDurationTimerElapsedPercent() // [0x1e4e060] Final|Native|Public|BlueprintCallable 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[78]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.EnableHidingCamera
	void EnableHidingCamera() // [0x1e4e020] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[79]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.CanSearchHidingSpot
	bool CanSearchHidingSpot(ABBQGameSessionCharacter* InteractionInstigator) // [0x1e4df00] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[80]);
		return func(InteractionInstigator);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.CanLeaveHidingSpot
	bool CanLeaveHidingSpot() // [0x1e4ded0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[81]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.CanInterruptSearchSuccess
	bool CanInterruptSearchSuccess() // [0x1e4dea0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[82]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.CanGrabHidingCharacter
	bool CanGrabHidingCharacter() // [0x1e4de70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[83]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_SearchHidingSpot
	void BP_SearchHidingSpot(ABBQGameSessionCharacter* InteractionInstigator) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[84]);
		func(InteractionInstigator);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_PlaySearchFailHidingSpotMontage
	void BP_PlaySearchFailHidingSpotMontage(ABBQGameSessionCharacter* InteractionInstigator) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[85]);
		func(InteractionInstigator);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_PlayLeaveHidingSpotMontage
	void BP_PlayLeaveHidingSpotMontage() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[86]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_PlayHiddenCharacterDiscoveredHidingSpotMontages
	void BP_PlayHiddenCharacterDiscoveredHidingSpotMontages() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[87]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_PlayGrabbingHidingSpotMontages
	void BP_PlayGrabbingHidingSpotMontages() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[88]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_PlayEnterHidingSpotMontage
	void BP_PlayEnterHidingSpotMontage() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[89]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_PlayDyingLeaveHidingSpotMontage
	void BP_PlayDyingLeaveHidingSpotMontage() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[90]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_PlayBurstOutOfHidingSpotMontage
	void BP_PlayBurstOutOfHidingSpotMontage() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[91]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnSearchSuccessInteractionInterrupted
	void BP_OnSearchSuccessInteractionInterrupted() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[92]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnSearchSuccessHidingSpotMontageEnded
	void BP_OnSearchSuccessHidingSpotMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[93]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnSearchFailHidingSpotMontageStarted
	void BP_OnSearchFailHidingSpotMontageStarted(UAnimMontage* Montage) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[94]);
		func(Montage);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnSearchFailHidingSpotMontageEnded
	void BP_OnSearchFailHidingSpotMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[95]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnLeavingInteractionInterrupted
	void BP_OnLeavingInteractionInterrupted() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[96]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnLeaveHidingSpotMontageStarted
	void BP_OnLeaveHidingSpotMontageStarted(UAnimMontage* Montage) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[97]);
		func(Montage);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnLeaveHidingSpotMontageEnded
	void BP_OnLeaveHidingSpotMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[98]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnInteractionSearchEventDelegate
	void BP_OnInteractionSearchEventDelegate(FName EventName, AActor* EventInstigator) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FName, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[99]);
		func(EventName, EventInstigator);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnInteractionEnterEventDelegate
	void BP_OnInteractionEnterEventDelegate(FName EventName, AActor* EventInstigator) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FName, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[100]);
		func(EventName, EventInstigator);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnHidingSpotSearched
	void BP_OnHidingSpotSearched() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[101]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnHiddenCharacterDiscoveredSlavePairedMontageEnded
	void BP_OnHiddenCharacterDiscoveredSlavePairedMontageEnded(EBBQPairedAnimSlot PairedAnimSlot, bool bInterrupted) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EBBQPairedAnimSlot, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[102]);
		func(PairedAnimSlot, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnHiddenCharacterDiscoveredPairedMontageStarted
	void BP_OnHiddenCharacterDiscoveredPairedMontageStarted(EBBQPairedAnimSlot PairedAnimSlot) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EBBQPairedAnimSlot);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[103]);
		func(PairedAnimSlot);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnHiddenCharacterDiscoveredMasterPairedMontageEnded
	void BP_OnHiddenCharacterDiscoveredMasterPairedMontageEnded(EBBQPairedAnimSlot PairedAnimSlot, bool bInterrupted) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EBBQPairedAnimSlot, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[104]);
		func(PairedAnimSlot, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnHiddenCharacterDiscoveredHidingSpotMontagesStarted
	void BP_OnHiddenCharacterDiscoveredHidingSpotMontagesStarted(UAnimMontage* SearchingCharacterMontage, UAnimMontage* HiddenCharacterMontage) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UAnimMontage*, UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[105]);
		func(SearchingCharacterMontage, HiddenCharacterMontage);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnEnteringInteractionInterrupted
	void BP_OnEnteringInteractionInterrupted() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[106]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnEnterHidingSpotSuccess
	void BP_OnEnterHidingSpotSuccess() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[107]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnEnterHidingSpotMontageStarted
	void BP_OnEnterHidingSpotMontageStarted(UAnimMontage* Montage) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[108]);
		func(Montage);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnEnterHidingSpotMontageEnded
	void BP_OnEnterHidingSpotMontageEnded() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[109]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnDyingLeaveHidingSpotMontageStarted
	void BP_OnDyingLeaveHidingSpotMontageStarted(UAnimMontage* Montage) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[110]);
		func(Montage);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnDyingLeaveHidingSpotMontageEnded
	void BP_OnDyingLeaveHidingSpotMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[111]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnDraggedOutOfHidingSpotMontageEnded
	void BP_OnDraggedOutOfHidingSpotMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[112]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnDraggedOutInteractionInterrupted
	void BP_OnDraggedOutInteractionInterrupted() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[113]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_OnBurstOutOfHidingSpotMontageEnded
	void BP_OnBurstOutOfHidingSpotMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[114]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_LeaveHidingSpot
	void BP_LeaveHidingSpot(bool bIsVictimDiscovered) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[115]);
		func(bIsVictimDiscovered);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_HidingPlayerReconnected
	void BP_HidingPlayerReconnected() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[116]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BP_BurstOutOfHidingSpot
	void BP_BurstOutOfHidingSpot() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[117]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.BindHidingCameraActionsAndAxes
	void BindHidingCameraActionsAndAxes() // [0x1e4de20] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[118]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.AnimUpdate
	void AnimUpdate(FVector CurveVector) // [0x1e4dd90] Final|Native|Protected|HasDefaults 
	{
		typedef void (*FuncPtr)(FVector);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[119]);
		func(CurveVector);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.AddMercuryFearVFXPostProcessToSequence
	void AddMercuryFearVFXPostProcessToSequence(UBBQLevelSequencePlayer* TransitionSequence) // [0x1e4dd00] Final|Native|Private|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UBBQLevelSequencePlayer*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[120]);
		func(TransitionSequence);
	}
	// Function /Script/BBQGameSession.BBQHidingSpot.AddLocalPlayerProximityVFXPostProcessToSequence
	void AddLocalPlayerProximityVFXPostProcessToSequence(UBBQLevelSequencePlayer* TransitionSequence) // [0x1e4dc70] Final|Native|Private|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UBBQLevelSequencePlayer*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[121]);
		func(TransitionSequence);
	}
};

/// Class /Script/BBQGameSession.BBQHidingVictimProximityComponent
/// Size: 0x04E0 (1248 bytes) (0x000480 - 0x0004E0) align 16 MaxSize: 0x04E0
class UBBQHidingVictimProximityComponent : public USphereComponent
{ 
public:
	class UCurveFloat*                                 HidingVolumeCurveFloat;                                     // 0x0480   (0x0008)  
	TMap<class ABBQGameSessionCharacter*, float>       VictimsInHidingVolumes;                                     // 0x0488   (0x0050)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x04D8   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQHidingVictimProximityComponent.OnVictimOut
	void OnVictimOut(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e54ed0] Final|Native|Private 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQHidingVictimProximityComponent.OnVictimEntered
	void OnVictimEntered(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e54d70] Final|Native|Private 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQHidingVictimProximityComponent.OnCharacterHidingStateChanged
	void OnCharacterHidingStateChanged(ABBQGameSessionCharacter* Victim, bool bIsHidden) // [0x1e54440] Final|Native|Private 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Victim, bIsHidden);
	}
};

/// Class /Script/BBQGameSession.BBQHidingVolume
/// Size: 0x0250 (592 bytes) (0x000228 - 0x000250) align 8 MaxSize: 0x0250
class ABBQHidingVolume : public AActor
{ 
public:
	class USceneComponent*                             Root;                                                       // 0x0228   (0x0008)  
	class UBBQHidingVolumeComponent*                   HidingVolumeComponent;                                      // 0x0230   (0x0008)  
	class UBoxComponent*                               VolumeCollision;                                            // 0x0238   (0x0008)  
	class UAkAudioEvent*                               HidingMovementStartAudioEvent;                              // 0x0240   (0x0008)  
	class UAkAudioEvent*                               HidingMovementStopAudioEvent;                               // 0x0248   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQHidingVolume.OnCharacterHiddenStateChanged
	void OnCharacterHiddenStateChanged(ABBQGameSessionCharacter* Character, bool bIsHidden) // [0x1e54370] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Character, bIsHidden);
	}
	// Function /Script/BBQGameSession.BBQHidingVolume.OnActorExitVolume
	void OnActorExitVolume(AActor* OverlappedActor, AActor* OtherActor) // [0x1e53c00] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(AActor*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(OverlappedActor, OtherActor);
	}
	// Function /Script/BBQGameSession.BBQHidingVolume.OnActorEnteredVolume
	void OnActorEnteredVolume(AActor* OverlappedActor, AActor* OtherActor) // [0x1e53b30] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(AActor*, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(OverlappedActor, OtherActor);
	}
	// Function /Script/BBQGameSession.BBQHidingVolume.BP_OnCharacterHidden
	void BP_OnCharacterHidden(ABBQGameSessionCharacter* HidingCharacter, bool bIsHidden) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(HidingCharacter, bIsHidden);
	}
};

/// Class /Script/BBQGameSession.BBQHidingVolumeComponent
/// Size: 0x0148 (328 bytes) (0x0000C8 - 0x000148) align 8 MaxSize: 0x0148
class UBBQHidingVolumeComponent : public UBBQVolumetricTintingVolume
{ 
public:
	TArray<class ABBQGameSessionCharacter*>            PlayersInHidingVolume;                                      // 0x00C8   (0x0010)  
	TArray<class UPrimitiveComponent*>                 PrimitiveComponents;                                        // 0x00D8   (0x0010)  
	bool                                               FamilyCanHide;                                              // 0x00E8   (0x0001)  
	bool                                               IsRequiringCrouching;                                       // 0x00E9   (0x0001)  
	bool                                               IsUsingDrawDistance;                                        // 0x00EA   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x00EB   (0x0001)  MISSED
	float                                              HidingDrawDistance;                                         // 0x00EC   (0x0004)  
	FName                                              CameraStateHidingName;                                      // 0x00F0   (0x0008)  
	TMap<class ABBQGameSessionCharacter*, int32_t>     PrimitiveComponentsOverlappingPlayer;                       // 0x00F8   (0x0050)  


	/// Functions
	// Function /Script/BBQGameSession.BBQHidingVolumeComponent.OnEndOverlapPrimitive
	void OnEndOverlapPrimitive(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e547d0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQHidingVolumeComponent.OnBeginOverlapPrimitive
	void OnBeginOverlapPrimitive(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e53f90] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQHidingVolumeComponent.CheckPrimitives
	void CheckPrimitives() // [0x1e539d0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQHUDMainWidget
/// Size: 0x0280 (640 bytes) (0x000260 - 0x000280) align 8 MaxSize: 0x0280
class UBBQHUDMainWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_8[0x18];                                      // 0x0260   (0x0018)  MISSED
	bool                                               bChangeStyleOnFocus;                                        // 0x0278   (0x0001)  
	unsigned char                                      UnknownData01_7[0x7];                                       // 0x0279   (0x0007)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQHUDMainWidget.ShouldShowDebugOptions
	bool ShouldShowDebugOptions() // [0x1e02100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQHUDMainWidget.OnToggleStatsWidget
	void OnToggleStatsWidget(bool bIsChecked) // [0x1e54ce0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(bIsChecked);
	}
	// Function /Script/BBQGameSession.BBQHUDMainWidget.OnStatsReadyCb
	void OnStatsReadyCb(bool bResult, EBBQNetError NetError, uint32_t InternalErrorCode) // [0x1e54bd0] Final|Native|Private 
	{
		typedef void (*FuncPtr)(bool, EBBQNetError, uint32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(bResult, NetError, InternalErrorCode);
	}
	// Function /Script/BBQGameSession.BBQHUDMainWidget.OnLogInChangedCb
	void OnLogInChangedCb(int32_t LocalUserNum) // [0x1e54b20] Final|Native|Private 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(LocalUserNum);
	}
	// Function /Script/BBQGameSession.BBQHUDMainWidget.OnForceLoginPlayfab
	void OnForceLoginPlayfab() // [0x1e54930] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQHUDMainWidget.BP_SetInteractionVisuals
	void BP_SetInteractionVisuals(FInteractionVisualParams& Params) // [0x2438a30] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FInteractionVisualParams&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Params);
	}
};

/// Class /Script/BBQGameSession.BBQImposter
/// Size: 0x0288 (648 bytes) (0x000228 - 0x000288) align 8 MaxSize: 0x0288
class ABBQImposter : public AActor
{ 
public:
	FString                                            AssociatedPlayerName;                                       // 0x0228   (0x0010)  
	FBBQLevelSequenceAnimOverride                      LevelSequenceAnimOverrides;                                 // 0x0238   (0x0050)  


	/// Functions
	// Function /Script/BBQGameSession.BBQImposter.BP_OnApplyOutfit
	void BP_OnApplyOutfit(UBBQCharacterOutfit* Outfit) // [0x1e06fa0] Native|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UBBQCharacterOutfit*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Outfit);
	}
};

/// Class /Script/BBQGameSession.IncapResponseTable
/// Size: 0x0040 (64 bytes) (0x000030 - 0x000040) align 8 MaxSize: 0x0040
class UIncapResponseTable : public UDataAsset
{ 
public:
	TArray<FIncapResponse>                             IncapResponses;                                             // 0x0030   (0x0010)  
};

/// Class /Script/BBQGameSession.BBQIncapacitatedBehaviour
/// Size: 0x03D0 (976 bytes) (0x0002E8 - 0x0003D0) align 16 MaxSize: 0x03D0
class ABBQIncapacitatedBehaviour : public ABBQCharacterBehaviour
{ 
public:
	float                                              AnimTimeoutDuration;                                        // 0x02E8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02EC   (0x0004)  MISSED
	class UAnimMontage*                                CurrentAnimMontageForTimeout;                               // 0x02F0   (0x0008)  
	class UAnimMontage*                                PreviousTickAnimMontage;                                    // 0x02F8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0300   (0x0018)  MISSED
	class UClass*                                      IncapacitationRestoreEffect;                                // 0x0318   (0x0008)  
	class UClass*                                      BleedingOutEffect;                                          // 0x0320   (0x0008)  
	EBBQCombatAnimSlot                                 GatherStrengthAnimSlot;                                     // 0x0328   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0329   (0x0007)  MISSED
	class UIncapResponseTable*                         IncapResponseTable;                                         // 0x0330   (0x0008)  
	bool                                               bGatherStrengthDuringBleedOutDeath;                         // 0x0338   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0339   (0x0003)  MISSED
	float                                              MovingMontageSpeedThreshold;                                // 0x033C   (0x0004)  
	float                                              IncapacitatedSafeArea;                                      // 0x0340   (0x0004)  
	float                                              IncapacitatedSafeAreaSearchDistance;                        // 0x0344   (0x0004)  
	EBBQCombatAnimSlot                                 ChosenDownAnimSlot;                                         // 0x0348   (0x0001)  
	EBBQCombatAnimSlot                                 ChosenToNeutralAnimSlot;                                    // 0x0349   (0x0001)  
	unsigned char                                      UnknownData04_6[0x2];                                       // 0x034A   (0x0002)  MISSED
	int32_t                                            ChosenIncapResponseIndex;                                   // 0x034C   (0x0004)  
	EBBQHitReactionDirection                           ChosenIncapResponseDirection;                               // 0x0350   (0x0001)  
	unsigned char                                      UnknownData05_6[0xF];                                       // 0x0351   (0x000F)  MISSED
	FTransform                                         IncapacitatedTransform;                                     // 0x0360   (0x0030)  
	float                                              SafeDistanceForward;                                        // 0x0390   (0x0004)  
	float                                              SafeDistanceBackward;                                       // 0x0394   (0x0004)  
	class UBBQLevelSequencePlayer*                     SequencePlayer;                                             // 0x0398   (0x0008)  
	class ALevelSequenceActor*                         SequenceActor;                                              // 0x03A0   (0x0008)  
	FActiveGameplayEffectHandle                        ActiveIncapRecoveryEffectHandle;                            // 0x03A8   (0x0008)  
	FActiveGameplayEffectHandle                        ActiveBleedOutEffectHandle;                                 // 0x03B0   (0x0008)  
	unsigned char                                      UnknownData06_7[0x18];                                      // 0x03B8   (0x0018)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.UnapplyCameraSetup
	void UnapplyCameraSetup() // [0x1e55410] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.SetupAnimTimeout
	// void SetupAnimTimeout(UAnimMontage* AnimMontage, FDelegateProperty AnimTimeoutDelegate, FName SectionName);              // [0x1e552e0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.OnRep_IncapacitatedTransform
	void OnRep_IncapacitatedTransform() // [0x1e54bb0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.OnIncapRecoveryEffectEnded
	void OnIncapRecoveryEffectEnded(FGameplayEffectRemovalInfo& RemInfo) // [0x1e54970] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayEffectRemovalInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(RemInfo);
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.OnIncapacitatedTagChange
	void OnIncapacitatedTagChange(FGameplayTag Tag, int32_t Count) // [0x1e54a50] Final|Native|Public  
	{
		typedef void (*FuncPtr)(FGameplayTag, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Tag, Count);
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.OnGatherStrengthAnimTimedOut
	void OnGatherStrengthAnimTimedOut() // [0x1e54950] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.OnBleedingOutEffectEnded
	void OnBleedingOutEffectEnded(FGameplayEffectRemovalInfo& RemInfo) // [0x1e54290] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FGameplayEffectRemovalInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(RemInfo);
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.OnBeingExecutedTagChange
	void OnBeingExecutedTagChange(FGameplayTag Tag, int32_t Count) // [0x1e541c0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(FGameplayTag, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(Tag, Count);
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.OnBeingDraggedTagChange
	void OnBeingDraggedTagChange(FGameplayTag Tag, int32_t Count) // [0x1e540f0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(FGameplayTag, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(Tag, Count);
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.IsCarryPossible
	bool IsCarryPossible() // [0x1e53ae0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.HasTimedOut
	bool HasTimedOut() // [0x1e53ac0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.GetToNeutralAnim
	UAnimMontage* GetToNeutralAnim() // [0x1e53a90] Final|Native|Public|BlueprintCallable|BlueprintPure 
	{
		typedef class UAnimMontage* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.GetGatherStrengthAnim
	UAnimMontage* GetGatherStrengthAnim() // [0x1e53a60] Final|Native|Public|BlueprintCallable|BlueprintPure 
	{
		typedef class UAnimMontage* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.GetDownAnim
	UAnimMontage* GetDownAnim() // [0x1e53a30] Final|Native|Public|BlueprintCallable|BlueprintPure 
	{
		typedef class UAnimMontage* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.CanGatherStrength
	bool CanGatherStrength() // [0x1e539a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.BP_OnServerGatheredStrength
	void BP_OnServerGatheredStrength() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func();
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.BP_OnGatherStrengthAnimTimedOut
	void BP_OnGatherStrengthAnimTimedOut() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func();
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.BBQ_AnimTimeoutDelegate__DelegateSignature
	void BBQ_AnimTimeoutDelegate__DelegateSignature() // [0x2438a30] Public|Delegate      
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func();
	}
	// Function /Script/BBQGameSession.BBQIncapacitatedBehaviour.ApplyCameraSetup
	void ApplyCameraSetup() // [0x1e53860] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQInspectableObjectBase
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQInspectableObjectBase : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQInteractableInterface
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQInteractableInterface : public UInterface
{ 
public:
};

/// Class /Script/BBQGameSession.BBQInteractionComponent
/// Size: 0x0268 (616 bytes) (0x0000B0 - 0x000268) align 8 MaxSize: 0x0268
class UBBQInteractionComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,531) /* FMulticastInlineDelegate */ __um(OnInteractionEventDelegate);                         // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,532) /* FMulticastInlineDelegate */ __um(OnHighlightInteractable);                            // 0x00C0   (0x0010)  
	SDK_UNDEFINED(16,533) /* FMulticastInlineDelegate */ __um(OnUnHighlightInteractable);                          // 0x00D0   (0x0010)  
	FName                                              AutoAddTagForInteractivePrims;                              // 0x00E0   (0x0008)  
	FName                                              AutoAddTagForPositionCheckPrims;                            // 0x00E8   (0x0008)  
	FName                                              AutoAddTagForLineOfSightCheck;                              // 0x00F0   (0x0008)  
	FName                                              AutoAddTagForUILocation;                                    // 0x00F8   (0x0008)  
	bool                                               bCanInteract;                                               // 0x0100   (0x0001)  
	bool                                               bShowUIWhenInactive;                                        // 0x0101   (0x0001)  
	bool                                               bHighUIPriority;                                            // 0x0102   (0x0001)  
	bool                                               bDoSimpleDistanceCheck;                                     // 0x0103   (0x0001)  
	bool                                               bDoLineOfSightCheck;                                        // 0x0104   (0x0001)  
	bool                                               bDoAngleRangeCheck;                                         // 0x0105   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0106   (0x0002)  MISSED
	float                                              LineOfSightTraceHeight;                                     // 0x0108   (0x0004)  
	float                                              DistanceCheckThreshold;                                     // 0x010C   (0x0004)  
	float                                              AngleRangeMin;                                              // 0x0110   (0x0004)  
	float                                              AngleRangeMax;                                              // 0x0114   (0x0004)  
	EInteractionAlignment                              AlignmentCheck;                                             // 0x0118   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0119   (0x0003)  MISSED
	float                                              AlignmentCheckThreshold;                                    // 0x011C   (0x0004)  
	float                                              CameraAlignmentCheckThreshold;                              // 0x0120   (0x0004)  
	bool                                               bIsExclusiveWhenHeld;                                       // 0x0124   (0x0001)  
	bool                                               bAllowOtherInteractorsWhenHeld;                             // 0x0125   (0x0001)  
	bool                                               bDebugDrawMaxInteractDistance;                              // 0x0126   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1];                                       // 0x0127   (0x0001)  MISSED
	TArray<class UPrimitiveComponent*>                 InteractivePrimatives;                                      // 0x0128   (0x0010)  
	TArray<class UPrimitiveComponent*>                 PositionCheckPrimatives;                                    // 0x0138   (0x0010)  
	TArray<class USceneComponent*>                     LineOfSightTargets;                                         // 0x0148   (0x0010)  
	TArray<class USceneComponent*>                     UILocations;                                                // 0x0158   (0x0010)  
	TArray<class ACharacter*>                          OverlappingCharacters;                                      // 0x0168   (0x0010)  
	TArray<class AActor*>                              BlueprintInteractingActors;                                 // 0x0178   (0x0010)  
	class UBBQInteractorComponent*                     CurrentlyHoldingInteractor;                                 // 0x0188   (0x0008)  
	unsigned char                                      UnknownData03_6[0xD0];                                      // 0x0190   (0x00D0)  MISSED
	class UBBQNoiseOutlineComponent*                   NoiseOutlineComponent;                                      // 0x0260   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQInteractionComponent.SetUILocation
	void SetUILocation(FName TagForUILocation) // [0x1e55250] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(TagForUILocation);
	}
	// Function /Script/BBQGameSession.BBQInteractionComponent.SetInteractionEnabled
	void SetInteractionEnabled(bool bEnabled) // [0x1e551c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(bEnabled);
	}
	// Function /Script/BBQGameSession.BBQInteractionComponent.SetAngleRangeCheckMinAngle
	void SetAngleRangeCheckMinAngle(float MinAngle) // [0x1e55140] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(MinAngle);
	}
	// Function /Script/BBQGameSession.BBQInteractionComponent.SetAngleRangeCheckMaxAngle
	void SetAngleRangeCheckMaxAngle(float MaxAngle) // [0x1e550c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(MaxAngle);
	}
	// Function /Script/BBQGameSession.BBQInteractionComponent.SetAngleRangeCheckEnabled
	void SetAngleRangeCheckEnabled(bool bEnabled) // [0x1e55030] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(bEnabled);
	}
	// Function /Script/BBQGameSession.BBQInteractionComponent.OnEndOverlapPositionCheckPrimitive
	void OnEndOverlapPositionCheckPrimitive(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e54670] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQInteractionComponent.OnEndOverlapInteractivePrimitive
	void OnEndOverlapInteractivePrimitive(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e54510] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQInteractionComponent.OnBeginOverlapPositionCheckPrimitive
	void OnBeginOverlapPositionCheckPrimitive(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e53e30] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQInteractionComponent.OnBeginOverlapInteractivePrimitive
	void OnBeginOverlapInteractivePrimitive(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e53cd0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQInteractionComponent.IsInteractionEnabled
	bool IsInteractionEnabled() // [0x1e53b10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQInteractionComponent.GetDistanceCheckRangeOverride
	float GetDistanceCheckRangeOverride() // [0x1e539f0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQInteractionComponent.BP_StopUsingInteractable
	void BP_StopUsingInteractable(AActor* InActor) // [0x1e53910] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(InActor);
	}
	// Function /Script/BBQGameSession.BBQInteractionComponent.BP_StartUsingInteractable
	void BP_StartUsingInteractable(AActor* InActor) // [0x1e53880] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(InActor);
	}
};

/// Class /Script/BBQGameSession.BBQInteractionMinigame
/// Size: 0x05A8 (1448 bytes) (0x000580 - 0x0005A8) align 8 MaxSize: 0x05A8
class ABBQInteractionMinigame : public ABBQMinigameV2
{ 
public:
	bool                                               bShouldEndOnMaxNoise;                                       // 0x0580   (0x0001)  
	EEndMinigameReason                                 MaxNoiseEndReason;                                          // 0x0581   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0582   (0x0002)  MISSED
	FBBQMinigameNetState_Interaction                   InteractionState;                                           // 0x0584   (0x0018)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x059C   (0x0004)  MISSED
	class UBBQMinigameGameplayComponent_Interaction*   CachedGC_Interaction;                                       // 0x05A0   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQInteractionMinigame.UpdateTapAction
	void UpdateTapAction(float DeltaTime) // [0x1e5a650] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(DeltaTime);
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigame.UpdateHoldAction
	void UpdateHoldAction(float DeltaTime) // [0x1e5a310] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(DeltaTime);
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigame.OnRep_InteractionState
	void OnRep_InteractionState(FBBQMinigameNetState_Interaction& LastInteractionState) // [0x1e59940] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FBBQMinigameNetState_Interaction&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(LastInteractionState);
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigame.GetInteractionSettings
	UBBQMinigameSettingsV2_Interaction* GetInteractionSettings() // [0x1e592f0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UBBQMinigameSettingsV2_Interaction* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigame.EventPerformSimulatedUpdate_Interaction
	void EventPerformSimulatedUpdate_Interaction(FBBQMinigameNetState_Interaction& LastInteractionState) // [0x2438a30] Event|Protected|HasOutParms|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FBBQMinigameNetState_Interaction&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(LastInteractionState);
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigame.EventOnMaxNoiseMade
	void EventOnMaxNoiseMade() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigame.EventAddPointsAndNoise
	void EventAddPointsAndNoise(float Points, float Noise) // [0x1e59120] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(Points, Noise);
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigame.AddNoise
	void AddNoise(float Value) // [0x1e58f00] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(Value);
	}
};

/// Class /Script/BBQGameSession.BBQInteractionMinigame_DoorUnlock
/// Size: 0x05C0 (1472 bytes) (0x0005A8 - 0x0005C0) align 8 MaxSize: 0x05C0
class ABBQInteractionMinigame_DoorUnlock : public ABBQInteractionMinigame
{ 
public:
	TArray<float>                                      SweetSpotAngleStream;                                       // 0x05A8   (0x0010)  
	float                                              PointsPerSection;                                           // 0x05B8   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x05BC   (0x0004)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQInteractionMinigame_DoorUnlock.SetLeftStickAngle
	void SetLeftStickAngle(float Angle) // [0x1e59e30] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Angle);
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigame_DoorUnlock.SetIsInSweetSpot
	void SetIsInSweetSpot(bool bValue) // [0x1e59da0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(bValue);
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigame_DoorUnlock.NextSweetSpotAngle
	void NextSweetSpotAngle() // [0x1e597f0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigame_DoorUnlock.HasAdditionalLock
	bool HasAdditionalLock() // [0x1e59380] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigame_DoorUnlock.GetCurrentSweetSpotAngle
	float GetCurrentSweetSpotAngle() // [0x1e592a0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigame_DoorUnlock.GenerateAngleStream
	void GenerateAngleStream() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQInteractionMinigameAudioDataAsset
/// Size: 0x0298 (664 bytes) (0x000030 - 0x000298) align 8 MaxSize: 0x0298
class UBBQInteractionMinigameAudioDataAsset : public UDataAsset
{ 
public:
	TWeakObjectPtr<class UAkAudioEvent*>               OnStarted;                                                  // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0038   (0x0020)  MISSED
	SDK_UNDEFINED(80,534) /* TMap<EEndMinigameReason, TWeakObjectPtr<UAkAudioEvent*>> */ __um(OnEnded);            // 0x0058   (0x0050)  
	TWeakObjectPtr<class UAkAudioEvent*>               PrimaryAbilityUsed;                                         // 0x00A8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x00B0   (0x0020)  MISSED
	TWeakObjectPtr<class UAkAudioEvent*>               SectionCompleted;                                           // 0x00D0   (0x0008)  
	unsigned char                                      UnknownData02_6[0x20];                                      // 0x00D8   (0x0020)  MISSED
	TWeakObjectPtr<class UAkAudioEvent*>               Tap;                                                        // 0x00F8   (0x0008)  
	unsigned char                                      UnknownData03_6[0x20];                                      // 0x0100   (0x0020)  MISSED
	TWeakObjectPtr<class UAkAudioEvent*>               SweetSpotHit;                                               // 0x0120   (0x0008)  
	unsigned char                                      UnknownData04_6[0x20];                                      // 0x0128   (0x0020)  MISSED
	TWeakObjectPtr<class UAkAudioEvent*>               MovementLoopStart;                                          // 0x0148   (0x0008)  
	unsigned char                                      UnknownData05_6[0x20];                                      // 0x0150   (0x0020)  MISSED
	TWeakObjectPtr<class UAkAudioEvent*>               MovementLoopStop;                                           // 0x0170   (0x0008)  
	unsigned char                                      UnknownData06_6[0x20];                                      // 0x0178   (0x0020)  MISSED
	class UAkRtpc*                                     MovementRtpc;                                               // 0x0198   (0x0008)  
	float                                              MovementRtpcScaler;                                         // 0x01A0   (0x0004)  
	float                                              MovementLoopStartThreshold;                                 // 0x01A4   (0x0004)  
	TWeakObjectPtr<class UAkAudioEvent*>               ProgressLoopStart;                                          // 0x01A8   (0x0008)  
	unsigned char                                      UnknownData07_6[0x20];                                      // 0x01B0   (0x0020)  MISSED
	TWeakObjectPtr<class UAkAudioEvent*>               ProgressLoopStop;                                           // 0x01D0   (0x0008)  
	unsigned char                                      UnknownData08_6[0x20];                                      // 0x01D8   (0x0020)  MISSED
	class UAkRtpc*                                     ProgressRtpc;                                               // 0x01F8   (0x0008)  
	float                                              ProgressRtpcScaler;                                         // 0x0200   (0x0004)  
	float                                              ProgressLoopStartThreshold;                                 // 0x0204   (0x0004)  
	TWeakObjectPtr<class UAkAudioEvent*>               NoiseLoopStart;                                             // 0x0208   (0x0008)  
	unsigned char                                      UnknownData09_6[0x20];                                      // 0x0210   (0x0020)  MISSED
	TWeakObjectPtr<class UAkAudioEvent*>               NoiseLoopStop;                                              // 0x0230   (0x0008)  
	unsigned char                                      UnknownData10_6[0x20];                                      // 0x0238   (0x0020)  MISSED
	class UAkRtpc*                                     NoiseLevelRtpc;                                             // 0x0258   (0x0008)  
	float                                              NoiseAlertThreshold;                                        // 0x0260   (0x0004)  
	unsigned char                                      UnknownData11_6[0x4];                                       // 0x0264   (0x0004)  MISSED
	TWeakObjectPtr<class UAkAudioEvent*>               NoiseAlertOneShot;                                          // 0x0268   (0x0008)  
	unsigned char                                      UnknownData12_6[0x20];                                      // 0x0270   (0x0020)  MISSED
	float                                              UpdateMinInterval;                                          // 0x0290   (0x0004)  
	float                                              StopLoopDelay;                                              // 0x0294   (0x0004)  
};

/// Class /Script/BBQGameSession.BBQInteractionMinigameAudioPlayer
/// Size: 0x0070 (112 bytes) (0x000028 - 0x000070) align 8 MaxSize: 0x0070
class UBBQInteractionMinigameAudioPlayer : public UObject
{ 
public:
	class UBBQInteractionMinigameAudioDataAsset*       Config;                                                     // 0x0028   (0x0008)  
	class ABBQGameSessionCharacter*                    Character;                                                  // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_7[0x38];                                      // 0x0038   (0x0038)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQInteractionMinigameAudioPlayer.UpdateSweetSpot
	void UpdateSweetSpot(bool bIsInSweetSpot) // [0x1e5a5c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(bIsInSweetSpot);
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigameAudioPlayer.UpdateSectionIndex
	void UpdateSectionIndex(int32_t SectionIndex) // [0x1e5a530] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(SectionIndex);
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigameAudioPlayer.UpdateProgress
	void UpdateProgress(float Progress, float TimeSeconds) // [0x1e5a460] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Progress, TimeSeconds);
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigameAudioPlayer.UpdateMovement
	void UpdateMovement(float MovementPosition, float TimeSeconds) // [0x1e5a390] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(MovementPosition, TimeSeconds);
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigameAudioPlayer.StopLoopingSounds
	void StopLoopingSounds() // [0x1e5a220] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigameAudioPlayer.Setup
	void Setup(UBBQInteractionMinigameAudioDataAsset* AudioConfig, ABBQGameSessionCharacter* PlayingCharacter, int32_t InitialSectionIndex, float InitialProgress, float InitialMovementPosition) // [0x1e5a080] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UBBQInteractionMinigameAudioDataAsset*, ABBQGameSessionCharacter*, int32_t, float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(AudioConfig, PlayingCharacter, InitialSectionIndex, InitialProgress, InitialMovementPosition);
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigameAudioPlayer.Reset
	void Reset() // [0x1e59cf0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigameAudioPlayer.PlayTapSound
	void PlayTapSound() // [0x1e59c00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigameAudioPlayer.PlayPrimaryAbilityUsedSound
	void PlayPrimaryAbilityUsedSound() // [0x1e59be0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigameAudioPlayer.PlayMinigameStartSound
	void PlayMinigameStartSound() // [0x1e59bc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigameAudioPlayer.PlayMinigameEndSound
	void PlayMinigameEndSound(EEndMinigameReason EndReason) // [0x1e59b40] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(EndReason);
	}
	// Function /Script/BBQGameSession.BBQInteractionMinigameAudioPlayer.IsReady
	bool IsReady() // [0x1e59700] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQInteractionType
/// Size: 0x01A8 (424 bytes) (0x000028 - 0x0001A8) align 8 MaxSize: 0x01A8
class UBBQInteractionType : public UObject
{ 
public:
	FInheritedTagContainer                             RequiredTags;                                               // 0x0028   (0x0060)  
	FInheritedTagContainer                             ForbiddenTags;                                              // 0x0088   (0x0060)  
	FInheritedTagContainer                             OwnerRequiredTags;                                          // 0x00E8   (0x0060)  
	FInheritedTagContainer                             OwnerForbiddenTags;                                         // 0x0148   (0x0060)  
};

/// Class /Script/BBQGameSession.BBQInteractionUIActor
/// Size: 0x0230 (560 bytes) (0x000228 - 0x000230) align 8 MaxSize: 0x0230
class ABBQInteractionUIActor : public AActor
{ 
public:
	bool                                               bHasValidInteractions;                                      // 0x0228   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0229   (0x0003)  MISSED
	float                                              DistanceToActorSQR;                                         // 0x022C   (0x0004)  


	/// Functions
	// Function /Script/BBQGameSession.BBQInteractionUIActor.UpdateParams
	void UpdateParams(FInteractionVisualParams& Params) // [0x2438a30] Event|Public|HasOutParms|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FInteractionVisualParams&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Params);
	}
	// Function /Script/BBQGameSession.BBQInteractionUIActor.UpdateHasValidInteractions
	void UpdateHasValidInteractions(bool bNowHasValidInteractions) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(bNowHasValidInteractions);
	}
	// Function /Script/BBQGameSession.BBQInteractionUIActor.UpdateDistanceToActor
	void UpdateDistanceToActor(float NewDistanceToActor, float UIDrawDistance) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(NewDistanceToActor, UIDrawDistance);
	}
	// Function /Script/BBQGameSession.BBQInteractionUIActor.Expand
	void Expand(FInteractionVisualParams& Params) // [0x2438a30] Event|Public|HasOutParms|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FInteractionVisualParams&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(Params);
	}
	// Function /Script/BBQGameSession.BBQInteractionUIActor.Collapse
	void Collapse() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQInteractiveLightSource
/// Size: 0x0330 (816 bytes) (0x000228 - 0x000330) align 8 MaxSize: 0x0330
class ABBQInteractiveLightSource : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x10];                                      // 0x0228   (0x0010)  MISSED
	class UPointLightComponent*                        PointLightComponent;                                        // 0x0238   (0x0008)  
	class UStaticMeshComponent*                        LightSourceMeshComponent;                                   // 0x0240   (0x0008)  
	class USphereComponent*                            InteractionArea;                                            // 0x0248   (0x0008)  
	class UBoxComponent*                               PositionCheckBox;                                           // 0x0250   (0x0008)  
	class UTimelineComponent*                          ExplodeTimelineComponent;                                   // 0x0258   (0x0008)  
	class UAkComponent*                                AkComponent;                                                // 0x0260   (0x0008)  
	class UCurveFloat*                                 ExplodeCurve;                                               // 0x0268   (0x0008)  
	class USceneComponent*                             RootSceneComponent;                                         // 0x0270   (0x0008)  
	TArray<FLightSourceMaterialInfo>                   MaterialAppliedOn;                                          // 0x0278   (0x0010)  
	TArray<FLightSourceMaterialInfo>                   MaterialAppliedOff;                                         // 0x0288   (0x0010)  
	TArray<class ABBQHidingVolume*>                    LinkedHidingVolumes;                                        // 0x0298   (0x0010)  
	class UClass*                                      StunEffectClass;                                            // 0x02A8   (0x0008)  
	class UAkAudioEvent*                               LightOnEvent;                                               // 0x02B0   (0x0008)  
	class UAkAudioEvent*                               LightOffEvent;                                              // 0x02B8   (0x0008)  
	class UAkAudioEvent*                               LightTrappedEvent;                                          // 0x02C0   (0x0008)  
	class UAkAudioEvent*                               LightExplodeEvent;                                          // 0x02C8   (0x0008)  
	class UAkAudioEvent*                               LightOnLoopEvent;                                           // 0x02D0   (0x0008)  
	int32_t                                            LightOnLoopEventID;                                         // 0x02D8   (0x0004)  
	bool                                               bStartOn;                                                   // 0x02DC   (0x0001)  
	bool                                               bGeneratorPowered;                                          // 0x02DD   (0x0001)  
	EBBQAnimSlot                                       LightsOnOffMontageSlot;                                     // 0x02DE   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1];                                       // 0x02DF   (0x0001)  MISSED
	FGameplayTagContainer                              IgnoreStunTags;                                             // 0x02E0   (0x0020)  
	ELightSourceState                                  CurrentState;                                               // 0x0300   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0301   (0x0007)  MISSED
	class ABBQGameSessionCharacterAnimated*            StunnedCharacter;                                           // 0x0308   (0x0008)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x0310   (0x0008)  MISSED
	FLightSourceInteraction                            InteractionState;                                           // 0x0318   (0x0010)  
	FTimerHandle                                       SetLightStateTimerHandle;                                   // 0x0328   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQInteractiveLightSource.UpdateExplosion
	void UpdateExplosion(float BlendIn) // [0x1e13950] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(BlendIn);
	}
	// Function /Script/BBQGameSession.BBQInteractiveLightSource.SetLightSourceState
	void SetLightSourceState(ELightSourceState NewState) // [0x1e59eb0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ELightSourceState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(NewState);
	}
	// Function /Script/BBQGameSession.BBQInteractiveLightSource.OnSetLightStateTimerEnded
	void OnSetLightStateTimerEnded() // [0x1e59b20] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractiveLightSource.OnRep_StunnedCharacter
	void OnRep_StunnedCharacter(ABBQGameSessionCharacterAnimated* PrevCharacter) // [0x1e59a90] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(PrevCharacter);
	}
	// Function /Script/BBQGameSession.BBQInteractiveLightSource.OnRep_InteractionState
	void OnRep_InteractionState(FLightSourceInteraction& PreviusInteractionState) // [0x1e599f0] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FLightSourceInteraction&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(PreviusInteractionState);
	}
	// Function /Script/BBQGameSession.BBQInteractiveLightSource.OnRep_CurrentState
	void OnRep_CurrentState(ELightSourceState PreviousState) // [0x1e598c0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ELightSourceState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(PreviousState);
	}
	// Function /Script/BBQGameSession.BBQInteractiveLightSource.IsTrapped
	bool IsTrapped() // [0x1e59730] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQInteractiveLightSource.ExplosionFinished
	void ExplosionFinished() // [0x1e591f0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractiveLightSource.EnableLinkedHidingVolumes
	void EnableLinkedHidingVolumes() // [0x1e59100] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractiveLightSource.DisableLinkedHidingVolumes
	void DisableLinkedHidingVolumes() // [0x1e590e0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractiveLightSource.BP_LightStateChanged
	void BP_LightStateChanged(ELightSourceState LastState, ELightSourceState NewState) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ELightSourceState, ELightSourceState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(LastState, NewState);
	}
	// Function /Script/BBQGameSession.BBQInteractiveLightSource.Auth_StartInteraction
	void Auth_StartInteraction(ABBQGameSessionCharacterAnimated* Player, ELightSourceState StateToSet) // [0x1e59010] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, ELightSourceState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(Player, StateToSet);
	}
	// Function /Script/BBQGameSession.BBQInteractiveLightSource.Auth_EndInteraction
	void Auth_EndInteraction(ABBQGameSessionCharacterAnimated* Player) // [0x1e58f80] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(Player);
	}
};

/// Class /Script/BBQGameSession.BBQInteractorComponent
/// Size: 0x0660 (1632 bytes) (0x000490 - 0x000660) align 16 MaxSize: 0x0660
class UBBQInteractorComponent : public UBoxComponent
{ 
public:
	FGameplayTagContainer                              InteractionPreventionTags;                                  // 0x0490   (0x0020)  
	float                                              InteractionRange;                                           // 0x04B0   (0x0004)  
	float                                              PositionCheckLookAheadTime;                                 // 0x04B4   (0x0004)  
	float                                              InteractionHeight;                                          // 0x04B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x04BC   (0x0004)  MISSED
	class UClass*                                      UIActorClass;                                               // 0x04C0   (0x0008)  
	float                                              StandardUIDrawRange;                                        // 0x04C8   (0x0004)  
	float                                              HighPriorityExtraUIDrawRange;                               // 0x04CC   (0x0004)  
	SDK_UNDEFINED(16,535) /* FMulticastInlineDelegate */ __um(OnHoldEventEnded);                                   // 0x04D0   (0x0010)  
	unsigned char                                      UnknownData01_6[0x40];                                      // 0x04E0   (0x0040)  MISSED
	TArray<FInteractionPrimativePair>                  OverlappedInteractionPrims;                                 // 0x0520   (0x0010)  
	SDK_UNDEFINED(80,536) /* TSet<UBBQInteractionComponent*> */ __um(OverlappedInteractionComponents);             // 0x0530   (0x0050)  
	TMap<class UBBQInteractionComponent*, FInteractionAvailabilityData> AvailabilityDataMap;                       // 0x0580   (0x0050)  
	TMap<class UBBQInteractionComponent*, class ABBQInteractionUIActor*> UIActorInstances;                         // 0x05D0   (0x0050)  
	class UBBQInteractionComponent*                    CurrentlySelectedInteractable;                              // 0x0620   (0x0008)  
	class UBBQInteractionComponent*                    CurrentlyHeldInteractable;                                  // 0x0628   (0x0008)  
	unsigned char                                      UnknownData02_7[0x30];                                      // 0x0630   (0x0030)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQInteractorComponent.UnregisterNearbyInteraction
	void UnregisterNearbyInteraction(UBBQInteractionComponent* InteractionComponent, UPrimitiveComponent* Prim) // [0x1e5a240] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UBBQInteractionComponent*, UPrimitiveComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(InteractionComponent, Prim);
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.Server_TryTriggerInteractionEvent
	void Server_TryTriggerInteractionEvent(UBBQInteractionEventComponent* InteractionEvent) // [0x125fdf0] Net|NetReliableNative|Event|Protected|NetServer 
	{
		typedef void (*FuncPtr)(UBBQInteractionEventComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(InteractionEvent);
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.Server_SetHeldInteractable
	void Server_SetHeldInteractable(UBBQInteractionComponent* NewHeldInteractable) // [0x125fd60] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(UBBQInteractionComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(NewHeldInteractable);
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.Server_ClearHeldInteractable
	void Server_ClearHeldInteractable(UBBQInteractionComponent* OldHeldInteractable) // [0x125fc40] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(UBBQInteractionComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(OldHeldInteractable);
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.RegisterNearbyInteraction
	void RegisterNearbyInteraction(UBBQInteractionComponent* InteractionComponent, UPrimitiveComponent* Prim) // [0x1e59c20] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UBBQInteractionComponent*, UPrimitiveComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(InteractionComponent, Prim);
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.OnRep_CurrentHeldInteractable
	void OnRep_CurrentHeldInteractable(UBBQInteractionComponent* OldValue) // [0x1e59830] Final|Native|Private 
	{
		typedef void (*FuncPtr)(UBBQInteractionComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(OldValue);
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.IsInteractionMethodAvailableByAbilityInput
	bool IsInteractionMethodAvailableByAbilityInput(EBBQAbilityInputID AbilityInputID) // [0x1e59670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(EBBQAbilityInputID);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(AbilityInputID);
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.IsInteractionMethodAvailable
	bool IsInteractionMethodAvailable(EInteractionMethod InteractionMethod) // [0x1e595e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(EInteractionMethod);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func(InteractionMethod);
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.IsInteractionMethodActive
	bool IsInteractionMethodActive(EInteractionMethod InteractionMethod) // [0x1e59550] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(EInteractionMethod);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func(InteractionMethod);
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.InputComponent_StopSpecialInteraction
	void InputComponent_StopSpecialInteraction() // [0x1e59510] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.InputComponent_StopSecondaryInteraction
	void InputComponent_StopSecondaryInteraction() // [0x1e594f0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.InputComponent_StopPrimaryInteraction
	void InputComponent_StopPrimaryInteraction() // [0x1e594d0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.InputComponent_StopPerkInteraction
	void InputComponent_StopPerkInteraction() // [0x1e594b0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.InputComponent_StopInventoryInteraction
	void InputComponent_StopInventoryInteraction() // [0x1e59490] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.InputComponent_StopAttackInteraction
	void InputComponent_StopAttackInteraction() // [0x1e59470] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.InputComponent_StartSpecialInteraction
	void InputComponent_StartSpecialInteraction() // [0x1e59450] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.InputComponent_StartSecondaryInteraction
	void InputComponent_StartSecondaryInteraction() // [0x1e59430] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.InputComponent_StartPrimaryInteraction
	void InputComponent_StartPrimaryInteraction() // [0x1e59410] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.InputComponent_StartPerkInteraction
	void InputComponent_StartPerkInteraction() // [0x1e593f0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.InputComponent_StartInventoryInteraction
	void InputComponent_StartInventoryInteraction() // [0x1e593d0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.InputComponent_StartAttackInteraction
	void InputComponent_StartAttackInteraction() // [0x1e593b0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInteractorComponent.FindInputAction
	UInputAction* FindInputAction(EInteractionMethod InteractionMethod) // [0x1e59210] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UInputAction* (*FuncPtr)(EInteractionMethod);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		return func(InteractionMethod);
	}
};

/// Class /Script/BBQGameSession.BBQInventoryContainerWidget
/// Size: 0x0268 (616 bytes) (0x000260 - 0x000268) align 8 MaxSize: 0x0268
class UBBQInventoryContainerWidget : public UUserWidget
{ 
public:
	class UUniformGridPanel*                           InventoryGrid;                                              // 0x0260   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQInventoryContainerWidget.ResetSlots
	void ResetSlots() // [0x1e5e910] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInventoryContainerWidget.GetSlots
	// TArray<UPanelSlot*> GetSlots();                                                                                          // [0x1e5e220] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/BBQGameSession.BBQInventoryContainerWidget.GetInventoryGrid
	UUniformGridPanel* GetInventoryGrid() // [0x1e5e130] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UUniformGridPanel* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQInventoryContainerWidget.GetGridSize
	int32_t GetGridSize() // [0x1e5e100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQInventoryContainerWidget.GetCurrentlySelectedSlot
	UPanelSlot* GetCurrentlySelectedSlot() // [0x1e5dee0] Final|Native|Public|BlueprintCallable 
	{
		typedef class UPanelSlot* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQInventorySlotWidget
/// Size: 0x0280 (640 bytes) (0x000260 - 0x000280) align 8 MaxSize: 0x0280
class UBBQInventorySlotWidget : public UUserWidget
{ 
public:
	class UImage*                                      ItemIcon;                                                   // 0x0260   (0x0008)  
	class UTexture2D*                                  EmptyItemTexture;                                           // 0x0268   (0x0008)  
	class UBorder*                                     SelectedBorder;                                             // 0x0270   (0x0008)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x0278   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQInventorySlotWidget.SetItemIconTexture
	void SetItemIconTexture(UTexture2D* Texture) // [0x1e5e9c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UTexture2D*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Texture);
	}
	// Function /Script/BBQGameSession.BBQInventorySlotWidget.SetIsSelected
	void SetIsSelected(bool Value) // [0x1e5e930] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Value);
	}
	// Function /Script/BBQGameSession.BBQInventorySlotWidget.Reset
	void Reset() // [0x1e5e8f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQInventorySlotWidget.GetIsSelected
	bool GetIsSelected() // [0x1e5e160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQInventorySlotWidget.GetEmptyItemTexture
	UTexture2D* GetEmptyItemTexture() // [0x1e5df10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UTexture2D* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQInventoryWidget
/// Size: 0x0268 (616 bytes) (0x000260 - 0x000268) align 8 MaxSize: 0x0268
class UBBQInventoryWidget : public UUserWidget
{ 
public:
	class UBBQInventoryContainerWidget*                InventoryContainerWidget;                                   // 0x0260   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQInventoryWidget.RefreshHUD
	void RefreshHUD() // [0x1e5e8d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
};

/// Class /Script/BBQGameSession.LadderFootingAnimNotify
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class ULadderFootingAnimNotify : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.LadderGrabWindowAnimNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class ULadderGrabWindowAnimNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.LadderClimbIntoTopCorrectionNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class ULadderClimbIntoTopCorrectionNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.LadderClimbIntoBottomCorrectionNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class ULadderClimbIntoBottomCorrectionNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.BBQLadder
/// Size: 0x03D0 (976 bytes) (0x000228 - 0x0003D0) align 8 MaxSize: 0x03D0
class ABBQLadder : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x18];                                      // 0x0228   (0x0018)  MISSED
	bool                                               bUseZHeightGrabDetection;                                   // 0x0240   (0x0001)  
	unsigned char                                      UnknownData01_6[0xF];                                       // 0x0241   (0x000F)  MISSED
	bool                                               bUnfoldCancelled;                                           // 0x0250   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0251   (0x0007)  MISSED
	FLadderInteractionInfo                             InteractionInfo;                                            // 0x0258   (0x0010)  
	class USceneComponent*                             EntryBottom;                                                // 0x0268   (0x0008)  
	class UArrowComponent*                             ExitBottom;                                                 // 0x0270   (0x0008)  
	class USceneComponent*                             EntryTop;                                                   // 0x0278   (0x0008)  
	class UArrowComponent*                             ExitTop;                                                    // 0x0280   (0x0008)  
	class UNavLinkCustomComponent*                     SmartLink;                                                  // 0x0288   (0x0008)  
	class UArrowComponent*                             FamilyGrabbingPosition;                                     // 0x0290   (0x0008)  
	class UArrowComponent*                             VictimGrabbingPosition;                                     // 0x0298   (0x0008)  
	class UBoxComponent*                               InteractionCollisionBox;                                    // 0x02A0   (0x0008)  
	class UBBQInteractionComponent*                    Interaction;                                                // 0x02A8   (0x0008)  
	class UBBQInteractionEventComponent*               InteractionEvent;                                           // 0x02B0   (0x0008)  
	ELadderType                                        LadderType;                                                 // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x02B9   (0x0003)  MISSED
	FName                                              BlockerName;                                                // 0x02BC   (0x0008)  
	float                                              MaxDismountRatioForKnockOff;                                // 0x02C4   (0x0004)  
	float                                              MinClimbDownRatioForSafeFall;                               // 0x02C8   (0x0004)  
	float                                              OnHitLadderTopFallHeightFactor;                             // 0x02CC   (0x0004)  
	float                                              MaxClimbDownRatioForCorrection;                             // 0x02D0   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x02D4   (0x0004)  MISSED
	class UClass*                                      UnfoldMinigameClass;                                        // 0x02D8   (0x0008)  
	class ABBQMinigameV2*                              UnfoldMinigameInstance;                                     // 0x02E0   (0x0008)  
	TWeakObjectPtr<class ACharacter*>                  wpCurrentInstigatorPlayer;                                  // 0x02E8   (0x0008)  
	float                                              MinimumNextPlayerInteractionHeight;                         // 0x02F0   (0x0004)  
	float                                              TopNoDismountWindow;                                        // 0x02F4   (0x0004)  
	float                                              GrabbingHeight;                                             // 0x02F8   (0x0004)  
	FGameplayTag                                       GrabMeleeImmunityTag;                                       // 0x02FC   (0x0008)  
	FGameplayTag                                       FamilyMeleeBlockingTag;                                     // 0x0304   (0x0008)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x030C   (0x0004)  MISSED
	class UAnimMontage*                                LadderGrabbingMontage_Master;                               // 0x0310   (0x0008)  
	class UAnimMontage*                                LadderGrabbingMontage_Slave;                                // 0x0318   (0x0008)  
	TArray<FBBQLadderEnterTopCorrectionInfo>           EnterTopCorrectionInfo;                                     // 0x0320   (0x0010)  
	TArray<FBBQLadderEnterTopCorrectionInfo>           EnterBottomCorrectionInfo;                                  // 0x0330   (0x0010)  
	char                                               LadderState;                                                // 0x0340   (0x0001)  
	bool                                               bDestroyOnInteractorTakeDamage;                             // 0x0341   (0x0001)  
	unsigned char                                      UnknownData06_6[0x6];                                       // 0x0342   (0x0006)  MISSED
	class USceneComponent*                             LadderUnfoldLocator;                                        // 0x0348   (0x0008)  
	TMap<char, class ACharacter*>                      LadderPlayers;                                              // 0x0350   (0x0050)  
	TArray<class ACharacter*>                          SortedPlayerArrayCache;                                     // 0x03A0   (0x0010)  
	class ACharacter*                                  DismountableCharacter;                                      // 0x03B0   (0x0008)  
	class ACharacter*                                  GrabbingCharacter;                                          // 0x03B8   (0x0008)  
	bool                                               bGrabInteractionInProgress;                                 // 0x03C0   (0x0001)  
	unsigned char                                      UnknownData07_6[0x2];                                       // 0x03C1   (0x0002)  MISSED
	bool                                               bIsEntryOnCooldown;                                         // 0x03C3   (0x0001)  
	bool                                               bCanGrabLastPlayer;                                         // 0x03C4   (0x0001)  
	unsigned char                                      UnknownData08_6[0x3];                                       // 0x03C5   (0x0003)  MISSED
	class USceneComponent*                             LastUsedEntryMarker;                                        // 0x03C8   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQLadder.StartUnfoldMinigame
	void StartUnfoldMinigame(ABBQGameSessionCharacterAnimated* PlayingCharacter) // [0x1e5ebf0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(PlayingCharacter);
	}
	// Function /Script/BBQGameSession.BBQLadder.StartUnfoldInteraction
	void StartUnfoldInteraction(ABBQGameSessionCharacterAnimated* EventInstigator, ELadderInteractionState TargetState) // [0x1e5eb20] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, ELadderInteractionState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(EventInstigator, TargetState);
	}
	// Function /Script/BBQGameSession.BBQLadder.Server_GrabDismountPlayer
	void Server_GrabDismountPlayer(ACharacter* GrabbingActor) // [0x1e0a820] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ACharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(GrabbingActor);
	}
	// Function /Script/BBQGameSession.BBQLadder.OnUnfoldMinigameSpawned
	void OnUnfoldMinigameSpawned() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLadder.OnUnfoldMinigameEnded
	void OnUnfoldMinigameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason Reason) // [0x1e5e630] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Minigame, Reason);
	}
	// Function /Script/BBQGameSession.BBQLadder.OnRep_PlayersUsingLadder
	void OnRep_PlayersUsingLadder() // [0x1e5e5d0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLadder.OnRep_LadderState
	void OnRep_LadderState(char Old) // [0x1e5e550] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(char);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(Old);
	}
	// Function /Script/BBQGameSession.BBQLadder.OnRep_LadderInteractionInfo
	void OnRep_LadderInteractionInfo(FLadderInteractionInfo& PrevInfo) // [0x1e5e4c0] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FLadderInteractionInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(PrevInfo);
	}
	// Function /Script/BBQGameSession.BBQLadder.OnClimbStarted
	void OnClimbStarted() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLadder.OnClimbFinished
	void OnClimbFinished(ACharacter* ClimbingCharacter) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ACharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(ClimbingCharacter);
	}
	// Function /Script/BBQGameSession.BBQLadder.NetMulticast_GrabDismountPlayer
	void NetMulticast_GrabDismountPlayer(ACharacter* GrabbingActor) // [0x1e06fa0] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(ACharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(GrabbingActor);
	}
	// Function /Script/BBQGameSession.BBQLadder.NetMulticast_ClimbStarted
	void NetMulticast_ClimbStarted(ACharacter* InstigatorPlayer) // [0x1e06420] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(ACharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(InstigatorPlayer);
	}
	// Function /Script/BBQGameSession.BBQLadder.NetMulticast_ClimbFinished
	void NetMulticast_ClimbFinished(ACharacter* InstigatorPlayer) // [0x1e071e0] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(ACharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(InstigatorPlayer);
	}
	// Function /Script/BBQGameSession.BBQLadder.IsEntryOnCoolDown
	bool IsEntryOnCoolDown() // [0x1e5e2e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQLadder.IsDestroyed
	bool IsDestroyed() // [0x1e5e2b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQLadder.GetLengthApprox
	float GetLengthApprox() // [0x1e5e1b0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQLadder.GetLastInteractedEntry
	USceneComponent* GetLastInteractedEntry() // [0x1e5e190] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class USceneComponent* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQLadder.GetEntryExitPoints
	void GetEntryExitPoints(FVector& Target, USceneComponent*& Entry, USceneComponent*& Exit) // [0x1e5df40] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	{
		typedef void (*FuncPtr)(FVector&, USceneComponent*&, USceneComponent*&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(Target, Entry, Exit);
	}
	// Function /Script/BBQGameSession.BBQLadder.EndUnfoldInteraction
	void EndUnfoldInteraction(bool bIsCancelled) // [0x1e5de50] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(bIsCancelled);
	}
	// Function /Script/BBQGameSession.BBQLadder.DestroyLadder
	void DestroyLadder(ABBQGameSessionCharacter* Character) // [0x1e5ddc0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQLadder.CanPlayerGetGrabed
	bool CanPlayerGetGrabed() // [0x1e5dd00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQLadder.CanPlayerDismount
	bool CanPlayerDismount(ACharacter* DismountingCharacter) // [0x1e5dc60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(ACharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		return func(DismountingCharacter);
	}
	// Function /Script/BBQGameSession.BBQLadder.BP_OnLadderUnfold
	void BP_OnLadderUnfold(ABBQGameSessionCharacterAnimated* User) // [0x2438a30] Event|Protected|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func(User);
	}
	// Function /Script/BBQGameSession.BBQLadder.BP_OnEndLadderUnfoldInteraction
	void BP_OnEndLadderUnfoldInteraction(ABBQGameSessionCharacterAnimated* User, bool bIsCancelled) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		func(User, bIsCancelled);
	}
	// Function /Script/BBQGameSession.BBQLadder.BP_OnDestroyed
	void BP_OnDestroyed() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLadder.BP_OnBeginLadderUnfoldInteraction
	void BP_OnBeginLadderUnfoldInteraction(ABBQGameSessionCharacterAnimated* User) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		func(User);
	}
};

/// Class /Script/BBQGameSession.BBQLevelActorRandomizer
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQLevelActorRandomizer : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQLevelIntro
/// Size: 0x0380 (896 bytes) (0x000228 - 0x000380) align 16 MaxSize: 0x0380
class ABBQLevelIntro : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x28];                                      // 0x0228   (0x0028)  MISSED
	class UBBQLevelSequencePlayer*                     LevelSequencePlayer;                                        // 0x0250   (0x0008)  
	FString                                            FamilyImposterName1;                                        // 0x0258   (0x0010)  
	FString                                            FamilyImposterName2;                                        // 0x0268   (0x0010)  
	FString                                            VictimImposterName;                                         // 0x0278   (0x0010)  
	class UBBQCharacterOutfit*                         ImposterVictimOutfit;                                       // 0x0288   (0x0008)  
	class UBBQCharacterOutfit*                         ImposterFamily1Outfit;                                      // 0x0290   (0x0008)  
	class UBBQCharacterOutfit*                         ImposterFamily2Outfit;                                      // 0x0298   (0x0008)  
	class UBBQCharacterOutfit*                         ImposterLeatherfaceOutfit;                                  // 0x02A0   (0x0008)  
	class UClass*                                      FamilyImposterClass1;                                       // 0x02A8   (0x0008)  
	class UClass*                                      FamilyImposterClass2;                                       // 0x02B0   (0x0008)  
	class UClass*                                      VictimImposterClass;                                        // 0x02B8   (0x0008)  
	FGameplayTag                                       VictimGender;                                               // 0x02C0   (0x0008)  
	class UClass*                                      LeatherfaceChainsawClass;                                   // 0x02C8   (0x0008)  
	class ABBQChainsawProp*                            SkinnedReplacementChainsaw;                                 // 0x02D0   (0x0008)  
	unsigned char                                      UnknownData01_7[0xA8];                                      // 0x02D8   (0x00A8)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQLevelIntro.SetupImposterWithAssociatedCosmetics
	void SetupImposterWithAssociatedCosmetics(ABBQImposter* ImposterActor, EIntroImposterType WhichImposter) // [0x1e5ea50] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQImposter*, EIntroImposterType);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(ImposterActor, WhichImposter);
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.PlayIntroSequence
	// void PlayIntroSequence(UBBQLevelSequencePlayer* BBQSequencePlayer, TArray<FString>& WantedSections);                     // [0x1e5e780] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/BBQGameSession.BBQLevelIntro.PlayCommMercuryMatchStartFromClient
	void PlayCommMercuryMatchStartFromClient(float Delay) // [0x1e5e700] Final|Native|Private|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Delay);
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.OnRep_VictimImposter
	void OnRep_VictimImposter() // [0x1e5e5f0] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.OnRep_ImposterVictimOutfit
	void OnRep_ImposterVictimOutfit() // [0x1e5e4a0] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.OnRep_ImposterLeatherfaceOutfit
	void OnRep_ImposterLeatherfaceOutfit() // [0x1e5e480] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.OnRep_ImposterFamily2Outfit
	void OnRep_ImposterFamily2Outfit() // [0x1e5e460] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.OnRep_ImposterFamily1Outfit
	void OnRep_ImposterFamily1Outfit() // [0x1e5e440] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.OnRep_FamilyImposter2
	void OnRep_FamilyImposter2() // [0x1e5e420] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.OnRep_FamilyImposter1
	void OnRep_FamilyImposter1() // [0x1e5e400] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.OnOutfitApplied
	void OnOutfitApplied(AActor* CosmeticAppliedTo) // [0x1e5e370] Final|Native|Private 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(CosmeticAppliedTo);
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.OnMercuryIntroSequenceFinished
	void OnMercuryIntroSequenceFinished() // [0x1e5e350] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.OnIntroSequencePaused
	void OnIntroSequencePaused() // [0x1e5e330] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.OnIntroSequenceFinished
	void OnIntroSequenceFinished() // [0x1e5e310] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.GetFifthVictimEditorOverride
	FString GetFifthVictimEditorOverride() // [0x1e5e080] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FString (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.DeactivateImposterMesh
	void DeactivateImposterMesh(USkeletalMeshComponent* SkeletalMeshComponent) // [0x1e5dd30] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(USkeletalMeshComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(SkeletalMeshComponent);
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.BP_StartIntroObjectives
	void BP_StartIntroObjectives() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.BP_ReadyToPlayIntro
	bool BP_ReadyToPlayIntro() // [0x2438a30] Event|Public|BlueprintEvent|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.BP_HandleJoinInProgress
	void BP_HandleJoinInProgress() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.Auth_PickVictimImposterClass
	void Auth_PickVictimImposterClass() // [0x1e5dc40] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.Auth_PickFamilyImposterClasses
	void Auth_PickFamilyImposterClasses() // [0x1e5dc20] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelIntro.Auth_PickCostumeForImposter
	void Auth_PickCostumeForImposter(FString ImposterActor, EIntroImposterType WhichImposter) // [0x1e5db40] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString, EIntroImposterType);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func(ImposterActor, WhichImposter);
	}
};

/// Class /Script/BBQGameSession.BBQLevelLobby
/// Size: 0x0238 (568 bytes) (0x000230 - 0x000238) align 8 MaxSize: 0x0238
class ABBQLevelLobby : public ALevelScriptActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0230   (0x0008)  MISSED
};

/// Class /Script/BBQGameSession.BBQLevelOutro
/// Size: 0x0298 (664 bytes) (0x000228 - 0x000298) align 8 MaxSize: 0x0298
class ABBQLevelOutro : public AActor
{ 
public:
	class UClass*                                      LeatherfaceImposterClass;                                   // 0x0228   (0x0008)  
	class UClass*                                      LeatherfaceChainsawClass;                                   // 0x0230   (0x0008)  
	class ULevelSequence*                              PostMatchEndSequence;                                       // 0x0238   (0x0008)  
	class ABBQImposter*                                SpawnedLFImposter;                                          // 0x0240   (0x0008)  
	ETeamID                                            WinningTeam;                                                // 0x0248   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0249   (0x0007)  MISSED
	class UAkAudioEvent*                               SawDanceSFX;                                                // 0x0250   (0x0008)  
	class UAkAudioEvent*                               VictimWinSFX;                                               // 0x0258   (0x0008)  
	class UAkAudioEvent*                               FamilyWinSFX;                                               // 0x0260   (0x0008)  
	class UAkAudioEvent*                               FamilyVictimDrawSFX;                                        // 0x0268   (0x0008)  
	class ALevelSequenceActor*                         LevelSequenceActor;                                         // 0x0270   (0x0008)  
	class ABBQChainsawProp*                            SkinnedReplacementChainsaw;                                 // 0x0278   (0x0008)  
	class UAkComponent*                                PooledAkComp;                                               // 0x0280   (0x0008)  
	float                                              OutroSequenceFadeDuration;                                  // 0x0288   (0x0004)  
	float                                              LoopingScoreboardFadeDuration;                              // 0x028C   (0x0004)  
	unsigned char                                      UnknownData01_7[0x8];                                       // 0x0290   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQLevelOutro.SkipEndSequence
	void SkipEndSequence() // [0x1e5e610] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelOutro.PlayOutroSequence
	void PlayOutroSequence() // [0x1e5e8b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelOutro.PlayLoopingScoreboardSequence
	void PlayLoopingScoreboardSequence() // [0x1e5e890] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelOutro.OnSequenceFinished
	void OnSequenceFinished() // [0x1e5e610] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelOutro.GetMatchEndGameResultSequence
	ULevelSequence* GetMatchEndGameResultSequence() // [0x1e5e1f0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	{
		typedef class ULevelSequence* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQLevelRoomVolume
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQLevelRoomVolume : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQLevelSequenceActor
/// Size: 0x02B0 (688 bytes) (0x0002B0 - 0x0002B0) align 8 MaxSize: 0x02B0
class ABBQLevelSequenceActor : public ALevelSequenceActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQSampleLevelSequenceActor
/// Size: 0x02B0 (688 bytes) (0x0002B0 - 0x0002B0) align 8 MaxSize: 0x02B0
class ABBQSampleLevelSequenceActor : public ALevelSequenceActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQSampleLevelSequencePlayer
/// Size: 0x0608 (1544 bytes) (0x000600 - 0x000608) align 8 MaxSize: 0x0608
class UBBQSampleLevelSequencePlayer : public ULevelSequencePlayer
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0600   (0x0008)  MISSED
};

/// Class /Script/BBQGameSession.BBQLevelSequenceCollisionObject
/// Size: 0x0068 (104 bytes) (0x000030 - 0x000068) align 8 MaxSize: 0x0068
class UBBQLevelSequenceCollisionObject : public UDataAsset
{ 
public:
	float                                              MaxCameraPushForwardDistance;                               // 0x0030   (0x0004)  
	float                                              MaxCameraPushForwardRatio;                                  // 0x0034   (0x0004)  
	TArray<class ULevelSequence*>                      LevelSequenceList;                                          // 0x0038   (0x0010)  
	float                                              LocationThreshold;                                          // 0x0048   (0x0004)  
	float                                              FloorMargin;                                                // 0x004C   (0x0004)  
	bool                                               bRequiresBuild;                                             // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0051   (0x0007)  MISSED
	TArray<FBBQLevelSequenceCollisionDataSample>       SampleData;                                                 // 0x0058   (0x0010)  


	/// Functions
	// Function /Script/BBQGameSession.BBQLevelSequenceCollisionObject.Build
	void Build() // [0xb888e0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQLevelSequencePlayer
/// Size: 0x0618 (1560 bytes) (0x000600 - 0x000618) align 8 MaxSize: 0x0618
class UBBQLevelSequencePlayer : public ULevelSequencePlayer
{ 
public:
	bool                                               bOverrideAudioListener;                                     // 0x0600   (0x0001)  
	unsigned char                                      UnknownData00_7[0x17];                                      // 0x0601   (0x0017)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQLevelSequencePlayer.SetAsCameraModifier
	void SetAsCameraModifier() // [0x1e63180] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelSequencePlayer.PlayWithBlend
	void PlayWithBlend(bool bReverse, float BlendInTime, EMovieSceneBuiltInEasing BlendInType, bool bPlayAfterBlendIn, float BlendOutTime, EMovieSceneBuiltInEasing BlendOutType, bool bResetCameraWhenFinished, bool bLockPreviousCamera) // [0x1e62d60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool, float, EMovieSceneBuiltInEasing, bool, float, EMovieSceneBuiltInEasing, bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(bReverse, BlendInTime, BlendInType, bPlayAfterBlendIn, BlendOutTime, BlendOutType, bResetCameraWhenFinished, bLockPreviousCamera);
	}
	// Function /Script/BBQGameSession.BBQLevelSequencePlayer.OnCameraCutCallback
	void OnCameraCutCallback(UCameraComponent* CameraComponent) // [0x1e62b40] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UCameraComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(CameraComponent);
	}
	// Function /Script/BBQGameSession.BBQLevelSequencePlayer.OnBlendOut
	void OnBlendOut() // [0x1e62b20] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelSequencePlayer.CreateWorldTransformBBQLevelSequencePlayer
	UBBQLevelSequencePlayer* CreateWorldTransformBBQLevelSequencePlayer(UObject* WorldContextObject, ULevelSequence* LevelSequence, FMovieSceneSequencePlaybackSettings Settings, FTransform WorldTransform, ALevelSequenceActor*& OutActor) // [0x1e62220] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	{
		typedef class UBBQLevelSequencePlayer* (*FuncPtr)(UObject*, ULevelSequence*, FMovieSceneSequencePlaybackSettings, FTransform, ALevelSequenceActor*&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(WorldContextObject, LevelSequence, Settings, WorldTransform, OutActor);
	}
	// Function /Script/BBQGameSession.BBQLevelSequencePlayer.CreateLevelSequencePlayerWithAnimOverrides
	// UBBQLevelSequencePlayer* CreateLevelSequencePlayerWithAnimOverrides(UObject* WorldContextObject, ULevelSequence* LevelSequence, FMovieSceneSequencePlaybackSettings Settings, ALevelSequenceActor*& OutActor, TMap<FName, FBBQLevelSequenceAnimOverride>& AnimOverrides); // [0x1e61fc0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/BBQGameSession.BBQLevelSequencePlayer.CreateBBQLevelSequencePlayer
	UBBQLevelSequencePlayer* CreateBBQLevelSequencePlayer(UObject* WorldContextObject, ULevelSequence* LevelSequence, FMovieSceneSequencePlaybackSettings Settings, ALevelSequenceActor*& OutActor) // [0x1e61e40] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	{
		typedef class UBBQLevelSequencePlayer* (*FuncPtr)(UObject*, ULevelSequence*, FMovieSceneSequencePlaybackSettings, ALevelSequenceActor*&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(WorldContextObject, LevelSequence, Settings, OutActor);
	}
	// Function /Script/BBQGameSession.BBQLevelSequencePlayer.ClearAsCameraModifier
	void ClearAsCameraModifier() // [0x1e61e20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLevelSequencePlayer.AdjustSequenceTransform
	void AdjustSequenceTransform(ALevelSequenceActor* SequenceActor, FTransform WorldTransform) // [0x1e61bc0] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ALevelSequenceActor*, FTransform);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(SequenceActor, WorldTransform);
	}
};

/// Class /Script/BBQGameSession.BBQLevelSequenceTrigger
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQLevelSequenceTrigger : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQLifeSaverAbilityBase
/// Size: 0x05E0 (1504 bytes) (0x0005E0 - 0x0005E0) align 8 MaxSize: 0x05E0
class UBBQLifeSaverAbilityBase : public UBBQStarSignAbility
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQLifeSaverAbilityBase.BP_OnDurationEffectRemoved
	void BP_OnDurationEffectRemoved() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLifeSaverAbilityBase.BP_CanBeCanceled
	bool BP_CanBeCanceled() // [0x1e61dc0] Native|Event|Protected|BlueprintEvent|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQLifeSaverCooldownRequirement
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQLifeSaverCooldownRequirement : public UGameplayEffectCustomApplicationRequirement
{ 
public:
};

/// Class /Script/BBQGameSession.BBQLineOfSightTrackerSubsystem
/// Size: 0x00D0 (208 bytes) (0x000030 - 0x0000D0) align 8 MaxSize: 0x00D0
class UBBQLineOfSightTrackerSubsystem : public UWorldSubsystem
{ 
public:
	float                                              LineOfSightTickInterval;                                    // 0x0030   (0x0004)  
	float                                              SeeCharacterRadius;                                         // 0x0034   (0x0004)  
	float                                              ForgetCharacterRadius;                                      // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
	TArray<class ABBQGameSessionCharacterAnimated*>    CharactersInMatch;                                          // 0x0040   (0x0010)  
	unsigned char                                      UnknownData01_7[0x80];                                      // 0x0050   (0x0080)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQLineOfSightTrackerSubsystem.GetCharactersInLOS
	// void GetCharactersInLOS(ABBQGameSessionCharacterAnimated* CurrentChar, float MaxRadius, ETeamID OtherCharsTeamID, TArray<ABBQGameSessionCharacterAnimated*>& OutOtherChars); // [0x1e62460] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/BBQGameSession.BBQLocationTrigger
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQLocationTrigger : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQLockBase
/// Size: 0x0270 (624 bytes) (0x000228 - 0x000270) align 8 MaxSize: 0x0270
class ABBQLockBase : public AActor
{ 
public:
	EBBQAnimSlot                                       LockAnimSlot;                                               // 0x0228   (0x0001)  
	EBBQAnimSlot                                       UnlockAnimSlot;                                             // 0x0229   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x022A   (0x0006)  MISSED
	class UStaticMeshComponent*                        LockFront;                                                  // 0x0230   (0x0008)  
	class UStaticMeshComponent*                        FrameFront;                                                 // 0x0238   (0x0008)  
	class UStaticMeshComponent*                        LockRear;                                                   // 0x0240   (0x0008)  
	class UStaticMeshComponent*                        FrameRear;                                                  // 0x0248   (0x0008)  
	FBBQLockLocations                                  LockLocations;                                              // 0x0250   (0x0018)  
	char                                               State;                                                      // 0x0268   (0x0001)  
	unsigned char                                      UnknownData01_7[0x7];                                       // 0x0269   (0x0007)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQLockBase.ShowLock
	void ShowLock() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLockBase.ShowInactiveLock
	void ShowInactiveLock() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLockBase.ShowDeactivatedLock
	void ShowDeactivatedLock() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLockBase.RestoreLock
	void RestoreLock() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLockBase.OnRep_State
	void OnRep_State(char Old) // [0x1e62ce0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(char);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Old);
	}
	// Function /Script/BBQGameSession.BBQLockBase.OnRep_LockLocations
	void OnRep_LockLocations() // [0x1e62ca0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLockBase.OnBroken
	void OnBroken() // [0x2438a30] BlueprintCosmetic|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLockBase.HideLock
	void HideLock() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLockBase.GetUnlockAnimSlot
	EBBQAnimSlot GetUnlockAnimSlot() // [0x1e62700] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef EBBQAnimSlot (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQLockBase.GetUnlockAnimation
	UAnimMontage* GetUnlockAnimation(ABBQGameSessionCharacterAnimated* InInstigator) // [0x1e62720] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UAnimMontage* (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func(InInstigator);
	}
	// Function /Script/BBQGameSession.BBQLockBase.GetLockAnimSlot
	EBBQAnimSlot GetLockAnimSlot() // [0x1e62600] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef EBBQAnimSlot (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQLockBase.GetLockAnimation
	UAnimMontage* GetLockAnimation(ABBQGameSessionCharacterAnimated* InInstigator) // [0x1e62620] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UAnimMontage* (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func(InInstigator);
	}
	// Function /Script/BBQGameSession.BBQLockBase.DestroyLock
	void DestroyLock() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLockBase.BP_Initialize
	void BP_Initialize(USceneComponent* FrontLocation, USceneComponent* RearLocation, USceneComponent* FrameLocation) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(USceneComponent*, USceneComponent*, USceneComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(FrontLocation, RearLocation, FrameLocation);
	}
};

/// Class /Script/BBQGameSession.BBQLockComponent
/// Size: 0x0138 (312 bytes) (0x0000B0 - 0x000138) align 8 MaxSize: 0x0138
class UBBQLockComponent : public UActorComponent
{ 
public:
	FGameplayTagContainer                              Stages;                                                     // 0x00B0   (0x0020)  
	bool                                               bStartWithStagesActive;                                     // 0x00D0   (0x0001)  
	bool                                               bCanStagesBeRestored;                                       // 0x00D1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x00D2   (0x0002)  MISSED
	FGameplayTag                                       ByPassGameplayTag;                                          // 0x00D4   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00DC   (0x0004)  MISSED
	FGameplayTagContainer                              ActiveTagsContainer;                                        // 0x00E0   (0x0020)  
	int32_t                                            MaxLocks;                                                   // 0x0100   (0x0004)  
	int32_t                                            StartingLocks;                                              // 0x0104   (0x0004)  
	class UClass*                                      LockClass;                                                  // 0x0108   (0x0008)  
	class UClass*                                      PlayerAddedLockClass;                                       // 0x0110   (0x0008)  
	int32_t                                            ActiveLocks;                                                // 0x0118   (0x0004)  
	int32_t                                            BrokenLocks;                                                // 0x011C   (0x0004)  
	int32_t                                            LocksAdded;                                                 // 0x0120   (0x0004)  
	int32_t                                            DeactivatedLocks;                                           // 0x0124   (0x0004)  
	class UClass*                                      LockMinigameClass;                                          // 0x0128   (0x0008)  
	class UClass*                                      UnlockMinigameClass;                                        // 0x0130   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQLockComponentV2
/// Size: 0x01B0 (432 bytes) (0x0000B0 - 0x0001B0) align 8 MaxSize: 0x01B0
class UBBQLockComponentV2 : public UActorComponent
{ 
public:
	FGameplayTagContainer                              Stages;                                                     // 0x00B0   (0x0020)  
	bool                                               bStartWithStagesActive;                                     // 0x00D0   (0x0001)  
	bool                                               bCanStagesBeRestored;                                       // 0x00D1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x00D2   (0x0006)  MISSED
	class UClass*                                      LockMinigameClass;                                          // 0x00D8   (0x0008)  
	class UClass*                                      UnlockMinigameClass;                                        // 0x00E0   (0x0008)  
	class UClass*                                      LockClass;                                                  // 0x00E8   (0x0008)  
	class UClass*                                      PlayerAddedLockClass;                                       // 0x00F0   (0x0008)  
	int32_t                                            MaxLocks;                                                   // 0x00F8   (0x0004)  
	int32_t                                            StartingLocks;                                              // 0x00FC   (0x0004)  
	int32_t                                            StageCount;                                                 // 0x0100   (0x0004)  
	int32_t                                            ActiveLocks;                                                // 0x0104   (0x0004)  
	int32_t                                            BrokenLocks;                                                // 0x0108   (0x0004)  
	int32_t                                            LocksAdded;                                                 // 0x010C   (0x0004)  
	int32_t                                            DeactivatedLocks;                                           // 0x0110   (0x0004)  
	bool                                               bLocksInitialized;                                          // 0x0114   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0115   (0x0003)  MISSED
	FGameplayTag                                       ByPassGameplayTag;                                          // 0x0118   (0x0008)  
	FGameplayTagContainer                              ActiveTagsContainer;                                        // 0x0120   (0x0020)  
	TArray<class ULocksContainer*>                     LockArray;                                                  // 0x0140   (0x0010)  
	FGameplayTagContainer                              DeactivatedTagsContainer;                                   // 0x0150   (0x0020)  
	FGameplayTagContainer                              CompletedTagsContainer;                                     // 0x0170   (0x0020)  
	FGameplayTagContainer                              InactiveTagsContainer;                                      // 0x0190   (0x0020)  


	/// Functions
	// Function /Script/BBQGameSession.BBQLockComponentV2.Server_EngageAllLockStages
	void Server_EngageAllLockStages() // [0x1e63020] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLockComponentV2.Server_DisengageAllLockStages
	void Server_DisengageAllLockStages() // [0x1e63000] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLockComponentV2.OnRep_LocksInitialized
	void OnRep_LocksInitialized() // [0x1e62cc0] Final|Native|Private 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQLockComponentV2.IsAtMaxCapacity
	bool IsAtMaxCapacity() // [0x1e627c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQLockComponentV2.GetRecoverableLockCount
	int32_t GetRecoverableLockCount() // [0x1e626c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQLockComponentV2.GetDeactivatedLockCount
	int32_t GetDeactivatedLockCount() // [0x1e625e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQLockComponentV2.GetActiveLockCount
	int32_t GetActiveLockCount() // [0x1e62440] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQMasterSingleObjectRandomiser
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQMasterSingleObjectRandomiser : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQAttributeSet_Melee
/// Size: 0x0048 (72 bytes) (0x000038 - 0x000048) align 8 MaxSize: 0x0048
class UBBQAttributeSet_Melee : public UBBQBaseAttributeSet
{ 
public:
	FGameplayAttributeData                             DamageMultiplier;                                           // 0x0038   (0x0010)  
};

/// Class /Script/BBQGameSession.BBQMeleeComponent
/// Size: 0x01E0 (480 bytes) (0x0000B0 - 0x0001E0) align 8 MaxSize: 0x01E0
class UBBQMeleeComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_8[0x8];                                       // 0x00B0   (0x0008)  MISSED
	class UDataTable*                                  AttributeSetInitDataTable;                                  // 0x00B8   (0x0008)  
	FGameplayTag                                       MeleeAbilityTags[2];                                        // 0x00C0   (0x0010)  
	FGameplayTagContainer                              DisableHitReactionTags;                                     // 0x00D0   (0x0020)  
	TArray<FMeleeHitReaction>                          HitReactions;                                               // 0x00F0   (0x0010)  
	class UBBQAttributeSet_Melee*                      GivenAttributeSet;                                          // 0x0100   (0x0008)  
	class ABBQGameSessionCharacterAnimated*            CharacterOwner;                                             // 0x0108   (0x0008)  
	class UBBQAbilitySystemComponent*                  OwnerASC;                                                   // 0x0110   (0x0008)  
	class UAnimMontage*                                CurrentReactionMontage;                                     // 0x0118   (0x0008)  
	unsigned char                                      UnknownData01_7[0xC0];                                      // 0x0120   (0x00C0)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQMeleeComponent.TriggerMeleeAttack
	bool TriggerMeleeAttack(FGameplayTag TriggerTag, AActor* Target) // [0x1e631f0] Final|Native|Public|BlueprintCallable 
	{
		typedef bool (*FuncPtr)(FGameplayTag, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(TriggerTag, Target);
	}
	// Function /Script/BBQGameSession.BBQMeleeComponent.Server_BreakOutOfStationaryReaction
	void Server_BreakOutOfStationaryReaction() // [0x1e10620] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMeleeComponent.OnReactionMontageEnded
	void OnReactionMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e62bd0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQMeleeComponent.NetMulticast_PlayHitReaction
	void NetMulticast_PlayHitReaction(ABBQGameSessionCharacterAnimated* CharacterAttacker, FGameplayTag DamageTag, UAnimMontage* ReactionMontage, bool bIsStationary, bool bCanBreakOutOfStationary) // [0x1e628a0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, FGameplayTag, UAnimMontage*, bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(CharacterAttacker, DamageTag, ReactionMontage, bIsStationary, bCanBreakOutOfStationary);
	}
	// Function /Script/BBQGameSession.BBQMeleeComponent.NetMulticast_BreakOutOfStationaryReaction
	void NetMulticast_BreakOutOfStationaryReaction() // [0x1e06ef0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMeleeComponent.IsAttacking
	bool IsAttacking() // [0x1e627f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMeleeComponent.CanPlayHitReactions
	bool CanPlayHitReactions() // [0x1e61df0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMeleeComponent.Auth_TriggerAppropriateHitReaction
	void Auth_TriggerAppropriateHitReaction(ABBQGameSessionCharacterAnimated* CharacterAttacker, FGameplayTag DamageTag) // [0x1e61cf0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(CharacterAttacker, DamageTag);
	}
};

/// Class /Script/BBQGameSession.BBQMercuryCarHidingSpot
/// Size: 0x09B8 (2488 bytes) (0x000988 - 0x0009B8) align 8 MaxSize: 0x09B8
class ABBQMercuryCarHidingSpot : public ABBQHidingSpot
{ 
public:
	float                                              RadioCallDialogDuration;                                    // 0x0988   (0x0004)  
	char                                               CarStateParams;                                             // 0x098C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x098D   (0x0003)  MISSED
	class UClass*                                      ActivationMinigameClass;                                    // 0x0990   (0x0008)  
	class ABBQMinigameV2*                              ActivationMinigameInstance;                                 // 0x0998   (0x0008)  
	FTimerHandle                                       RadioCallDialogTimerHandle;                                 // 0x09A0   (0x0008)  
	unsigned char                                      UnknownData01_7[0x10];                                      // 0x09A8   (0x0010)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.StopRadioCall
	void StopRadioCall() // [0x1e631d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.ShouldLeaveCar
	bool ShouldLeaveCar() // [0x1e631a0] Final|Native|Public|BlueprintCallable 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.Server_StartTuningMercuryCarRadio
	void Server_StartTuningMercuryCarRadio() // [0xde67a0] Net|Native|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.Server_SetMercuryCountdown
	void Server_SetMercuryCountdown() // [0x1e63160] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.Server_SetCarStateParams
	void Server_SetCarStateParams(char Params) // [0x1e630e0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(char);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Params);
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.Server_RemoveCarStateParams
	void Server_RemoveCarStateParams(char Params) // [0x1e63060] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(char);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Params);
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.Server_FinishTuningMercuryCarRadio
	void Server_FinishTuningMercuryCarRadio() // [0x1e63040] Net|Native|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.Server_CreateStartCarMinigame
	void Server_CreateStartCarMinigame() // [0x1e62fe0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.OnInteractionEnded__DelegateSignature
	void OnInteractionEnded__DelegateSignature() // [0x2438a30] MulticastDelegate|Public|Delegate 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.OnActivationMinigameEnded
	void OnActivationMinigameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason Reason) // [0x1e62a50] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(Minigame, Reason);
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.IsPoliceCalled
	bool IsPoliceCalled() // [0x1e62870] Final|Native|Public|BlueprintCallable 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.IsCarStarted
	bool IsCarStarted() // [0x1e62840] Final|Native|Public|BlueprintCallable 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.IsCallingPolice
	bool IsCallingPolice() // [0x1e62810] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.BP_StartTuningMercuryCarRadio
	void BP_StartTuningMercuryCarRadio() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.BP_StartMercuryCar
	void BP_StartMercuryCar() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.BP_StartCallingMercuryCarRadio
	void BP_StartCallingMercuryCarRadio() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.BP_FinishTuningMercuryCarRadio
	void BP_FinishTuningMercuryCarRadio() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMercuryCarHidingSpot.BP_CallMercuryCarRadio
	void BP_CallMercuryCarRadio() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQMeshVisualiser
/// Size: 0x0258 (600 bytes) (0x000228 - 0x000258) align 8 MaxSize: 0x0258
class ABBQMeshVisualiser : public AActor
{ 
public:
	TWeakObjectPtr<class USkeletalMesh*>               TargetMesh;                                                 // 0x0228   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0230   (0x0020)  MISSED
	class USkeletalMeshComponent*                      Mesh;                                                       // 0x0250   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQLevelSequenceMeshReplacer
/// Size: 0x0040 (64 bytes) (0x000030 - 0x000040) align 8 MaxSize: 0x0040
class UBBQLevelSequenceMeshReplacer : public UDataAsset
{ 
public:
	TArray<class UClass*>                              MeshVisualiserClasses;                                      // 0x0030   (0x0010)  


	/// Functions
	// Function /Script/BBQGameSession.BBQLevelSequenceMeshReplacer.ReplaceMeshesInSequences
	void ReplaceMeshesInSequences() // [0xb888e0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQMinigameGameplayComponent
/// Size: 0x00C0 (192 bytes) (0x0000B0 - 0x0000C0) align 8 MaxSize: 0x00C0
class UBBQMinigameGameplayComponent : public UActorComponent
{ 
public:
	bool                                               bClientOnly;                                                // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00B1   (0x0007)  MISSED
	class ABBQMinigameV2*                              MinigameOwner;                                              // 0x00B8   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQMinigameGameplayComponent.EventOnMontageInterrupted
	void EventOnMontageInterrupted() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameGameplayComponent.EventOnMontageCompleted
	void EventOnMontageCompleted(UAnimMontage* Montage) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Montage);
	}
	// Function /Script/BBQGameSession.BBQMinigameGameplayComponent.EventOnMontageBlendingOut
	void EventOnMontageBlendingOut(UAnimMontage* Montage) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UAnimMontage*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Montage);
	}
	// Function /Script/BBQGameSession.BBQMinigameGameplayComponent.EventOnMinigameSucceeded
	void EventOnMinigameSucceeded() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameGameplayComponent.EventOnMinigameStarted
	void EventOnMinigameStarted() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameGameplayComponent.EventOnMinigamePostUpdate
	void EventOnMinigamePostUpdate() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameGameplayComponent.EventOnMinigamePointsChanged
	void EventOnMinigamePointsChanged(float PreviousPoints) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(PreviousPoints);
	}
	// Function /Script/BBQGameSession.BBQMinigameGameplayComponent.EventOnMinigameInterrupted
	void EventOnMinigameInterrupted() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameGameplayComponent.EventOnMinigameFailed
	void EventOnMinigameFailed() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func();
	}
	// Function /Script/BBQGameSession.BBQMinigameGameplayComponent.EventOnMinigameEnded
	void EventOnMinigameEnded(EEndMinigameReason Reason) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(Reason);
	}
	// Function /Script/BBQGameSession.BBQMinigameGameplayComponent.EventOnMinigameCanceled
	void EventOnMinigameCanceled() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQMinigameGameplayComponent_Interaction
/// Size: 0x00C0 (192 bytes) (0x0000C0 - 0x0000C0) align 8 MaxSize: 0x00C0
class UBBQMinigameGameplayComponent_Interaction : public UBBQMinigameGameplayComponent
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQMinigameGameplayComponent_Interaction.EventOnMaxNoiseMade
	void EventOnMaxNoiseMade() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQMinigameTestSpawner
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQMinigameTestSpawner : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQMinigameSettingsV2
/// Size: 0x0050 (80 bytes) (0x000028 - 0x000050) align 8 MaxSize: 0x0050
class UBBQMinigameSettingsV2 : public UObject
{ 
public:
	float                                              MinPoints;                                                  // 0x0028   (0x0004)  
	float                                              MaxPoints;                                                  // 0x002C   (0x0004)  
	float                                              StartPoints;                                                // 0x0030   (0x0004)  
	float                                              DecayRate;                                                  // 0x0034   (0x0004)  
	float                                              DecayValue;                                                 // 0x0038   (0x0004)  
	float                                              StartDelay;                                                 // 0x003C   (0x0004)  
	float                                              EndDelay;                                                   // 0x0040   (0x0004)  
	float                                              InputFailDelay;                                             // 0x0044   (0x0004)  
	float                                              TimeoutTime;                                                // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x004C   (0x0004)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQMinigameSettingsV2.SetBaseSettingsFromVariables
	void SetBaseSettingsFromVariables(FGameplayVariable MinPointsVar, FGameplayVariable MaxPointsVar, FGameplayVariable StartPointsVar, FGameplayVariable DecayRateVar, FGameplayVariable DecayValueVar, FGameplayVariable StartDelayVar, FGameplayVariable EndDelayVar, FGameplayVariable InputFailDelayVar, FGameplayVariable TimeoutTimeVar, AActor* ModStackOwner) // [0x1e6c250] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(MinPointsVar, MaxPointsVar, StartPointsVar, DecayRateVar, DecayValueVar, StartDelayVar, EndDelayVar, InputFailDelayVar, TimeoutTimeVar, ModStackOwner);
	}
};

/// Class /Script/BBQGameSession.BBQMinigameSettingsV2_SweetSpot
/// Size: 0x0068 (104 bytes) (0x000050 - 0x000068) align 8 MaxSize: 0x0068
class UBBQMinigameSettingsV2_SweetSpot : public UBBQMinigameSettingsV2
{ 
public:
	float                                              HitAddPoints;                                               // 0x0050   (0x0004)  
	float                                              MissRemovePoints;                                           // 0x0054   (0x0004)  
	float                                              Speed;                                                      // 0x0058   (0x0004)  
	float                                              SweetZoneSize;                                              // 0x005C   (0x0004)  
	float                                              MarkerPosition;                                             // 0x0060   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x0064   (0x0004)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQMinigameSettingsV2_SweetSpot.SetSweetSpotSettingsFromVariables
	void SetSweetSpotSettingsFromVariables(FGameplayVariable HitAddPointsVar, FGameplayVariable MissRemovePointsVar, FGameplayVariable SpeedVar, FGameplayVariable SweetZoneSizeVar, FGameplayVariable MarkerPositionVar, AActor* ModStackOwner) // [0x1e6d2f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(HitAddPointsVar, MissRemovePointsVar, SpeedVar, SweetZoneSizeVar, MarkerPositionVar, ModStackOwner);
	}
};

/// Class /Script/BBQGameSession.BBQMinigameSettingsV2_Interaction
/// Size: 0x0078 (120 bytes) (0x000050 - 0x000078) align 8 MaxSize: 0x0078
class UBBQMinigameSettingsV2_Interaction : public UBBQMinigameSettingsV2
{ 
public:
	float                                              ProgressHoldUpdateTickRate;                                 // 0x0050   (0x0004)  
	float                                              ProgressHoldPointsPerTick;                                  // 0x0054   (0x0004)  
	float                                              ProgressPointsOnTap;                                        // 0x0058   (0x0004)  
	float                                              NoiseHoldValuePerTick;                                      // 0x005C   (0x0004)  
	float                                              NoiseValueOnTap;                                            // 0x0060   (0x0004)  
	float                                              NoiseMaxValue;                                              // 0x0064   (0x0004)  
	float                                              NoiseDecayValue;                                            // 0x0068   (0x0004)  
	float                                              NoiseDecayRate;                                             // 0x006C   (0x0004)  
	int32_t                                            NumberOfSections;                                           // 0x0070   (0x0004)  
	float                                              SweetSpotSize;                                              // 0x0074   (0x0004)  


	/// Functions
	// Function /Script/BBQGameSession.BBQMinigameSettingsV2_Interaction.SetInteractionSettingsFromVariables
	void SetInteractionSettingsFromVariables(FGameplayVariable ProgressHoldUpdateTickRateVar, FGameplayVariable ProgressHoldPointsPerTickVar, FGameplayVariable ProgressPointsOnTapVar, FGameplayVariable NoiseHoldValuePerTickVar, FGameplayVariable NoiseValueOnTapVar, FGameplayVariable NoiseMaxValueVar, FGameplayVariable NoiseDecayValueVar, FGameplayVariable NoiseDecayRateVar, FGameplayVariable NumberOfSectionsVar, FGameplayVariable SweetSpotSizeVar, AActor* ModStackOwner) // [0x1e6ca70] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, FGameplayVariable, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(ProgressHoldUpdateTickRateVar, ProgressHoldPointsPerTickVar, ProgressPointsOnTapVar, NoiseHoldValuePerTickVar, NoiseValueOnTapVar, NoiseMaxValueVar, NoiseDecayValueVar, NoiseDecayRateVar, NumberOfSectionsVar, SweetSpotSizeVar, ModStackOwner);
	}
};

/// Class /Script/BBQGameSession.BBQMinigameWidget
/// Size: 0x0260 (608 bytes) (0x000260 - 0x000260) align 8 MaxSize: 0x0260
class UBBQMinigameWidget : public UUserWidget
{ 
public:
};

/// Class /Script/BBQGameSession.BBQMovementDisorder
/// Size: 0x0080 (128 bytes) (0x000030 - 0x000080) align 8 MaxSize: 0x0080
class UBBQMovementDisorder : public UDataAsset
{ 
public:
	class UClass*                                      CameraShake;                                                // 0x0030   (0x0008)  
	float                                              CameraShakeScale;                                           // 0x0038   (0x0004)  
	ECameraShakePlaySpace                              CameraShakePlaySpace;                                       // 0x003C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x003D   (0x0003)  MISSED
	FRotator                                           CameraShakeUserPlaySpaceRot;                                // 0x0040   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x004C   (0x0004)  MISSED
	TArray<FBBQMovementOscillator>                     MovementOscillators;                                        // 0x0050   (0x0010)  
	float                                              TimeBetweenOscillationsMin;                                 // 0x0060   (0x0004)  
	float                                              TimeBetweenOscillationsMax;                                 // 0x0064   (0x0004)  
	float                                              OscillationScaleWithNoUserInput;                            // 0x0068   (0x0004)  
	float                                              BlendInTime;                                                // 0x006C   (0x0004)  
	float                                              BlendOutTime;                                               // 0x0070   (0x0004)  
	bool                                               bApplyOscillationsWhenNotMoving;                            // 0x0074   (0x0001)  
	bool                                               bChangeOnlyDirection;                                       // 0x0075   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x0076   (0x0002)  MISSED
	float                                              MaxInputDeviationAngle;                                     // 0x0078   (0x0004)  
	unsigned char                                      UnknownData03_7[0x4];                                       // 0x007C   (0x0004)  MISSED
};

/// Class /Script/BBQGameSession.BBQMovementDisorderComponent
/// Size: 0x00F0 (240 bytes) (0x0000B0 - 0x0000F0) align 8 MaxSize: 0x00F0
class UBBQMovementDisorderComponent : public UActorComponent
{ 
public:
	class UBBQMovementDisorder*                        MovementDisorder;                                           // 0x00B0   (0x0008)  
	class UCameraShakeBase*                            ActiveCameraShake;                                          // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData00_7[0x30];                                      // 0x00C0   (0x0030)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQMovementDisorderComponent.SpawnMovementDisorderComponent
	void SpawnMovementDisorderComponent(APawn* InPawn, UBBQMovementDisorder* InMovementDisorder, float InDuration) // [0x1e6d7b0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(APawn*, UBBQMovementDisorder*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(InPawn, InMovementDisorder, InDuration);
	}
	// Function /Script/BBQGameSession.BBQMovementDisorderComponent.DestroyMovementDisorderComponent
	void DestroyMovementDisorderComponent(APawn* InPawn, bool bImmediate) // [0x1e6ad20] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(APawn*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(InPawn, bImmediate);
	}
};

/// Class /Script/BBQGameSession.BBQMultiplayerMinigameManagerV2
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQMultiplayerMinigameManagerV2 : public UObject
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQMultiplayerMinigameManagerV2.SpawnMultiplayerMinigame
	void SpawnMultiplayerMinigame(UClass* MinigameClass, ABBQGameSessionCharacter* FirstCharacter, ABBQGameSessionCharacter* SecondCharacter) // [0x1e6d8c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UClass*, ABBQGameSessionCharacter*, ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(MinigameClass, FirstCharacter, SecondCharacter);
	}
};

/// Class /Script/BBQGameSession.BBQMultiplayerMinigameTester
/// Size: 0x0248 (584 bytes) (0x000228 - 0x000248) align 8 MaxSize: 0x0248
class ABBQMultiplayerMinigameTester : public AActor
{ 
public:
	class USphereComponent*                            TriggerVolume;                                              // 0x0228   (0x0008)  
	class UClass*                                      MinigameClass;                                              // 0x0230   (0x0008)  
	TArray<class ABBQGameSessionCharacter*>            CharacterInsideVolume;                                      // 0x0238   (0x0010)  


	/// Functions
	// Function /Script/BBQGameSession.BBQMultiplayerMinigameTester.OnTriggerVolumeEndOverlap
	void OnTriggerVolumeEndOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e6c060] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQMultiplayerMinigameTester.OnTriggerVolumeBeginOverlap
	void OnTriggerVolumeBeginOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e6bf00] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
};

/// Class /Script/BBQGameSession.BBQMultiplayerMinigameV2
/// Size: 0x0590 (1424 bytes) (0x000580 - 0x000590) align 8 MaxSize: 0x0590
class ABBQMultiplayerMinigameV2 : public ABBQMinigameV2
{ 
public:
	FBBQMultiplayerMinigameInfo                        MultiplayerInfo;                                            // 0x0580   (0x000C)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x058C   (0x0004)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQMultiplayerMinigameV2.OnRep_MultiplayerInfo
	void OnRep_MultiplayerInfo(FBBQMultiplayerMinigameInfo& LastInfo) // [0x1e6be60] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FBBQMultiplayerMinigameInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(LastInfo);
	}
	// Function /Script/BBQGameSession.BBQMultiplayerMinigameV2.GetOpponentPoints
	float GetOpponentPoints() // [0x1e6b000] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMultiplayerMinigameV2.GetOpponent
	ABBQGameSessionCharacter* GetOpponent() // [0x1e6afc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacter* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQMultiplayerMinigameV2.EventOnOponnentPointsUpdated
	void EventOnOponnentPointsUpdated(float LastPoints, float CurrentPoints) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(float, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(LastPoints, CurrentPoints);
	}
};

/// Class /Script/BBQGameSession.BBQNetSyncedDoorBase
/// Size: 0x0340 (832 bytes) (0x000228 - 0x000340) align 8 MaxSize: 0x0340
class ABBQNetSyncedDoorBase : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x8];                                       // 0x0228   (0x0008)  MISSED
	class UStaticMeshComponent*                        Door;                                                       // 0x0230   (0x0008)  
	float                                              Cooldown;                                                   // 0x0238   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x023C   (0x0004)  MISSED
	TArray<class AActor*>                              OverlappingActors;                                          // 0x0240   (0x0010)  
	char                                               DoorState;                                                  // 0x0250   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0251   (0x0003)  MISSED
	float                                              AnimationDuration;                                          // 0x0254   (0x0004)  
	float                                              DefaultAnimMultiplier;                                      // 0x0258   (0x0004)  
	float                                              AnimationMultiplier;                                        // 0x025C   (0x0004)  
	float                                              PauseAnimationLimit;                                        // 0x0260   (0x0004)  
	float                                              ReverseAnimationLimit;                                      // 0x0264   (0x0004)  
	FRotator                                           OpenRotator;                                                // 0x0268   (0x000C)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0274   (0x0004)  MISSED
	class UCurveFloat*                                 RotatorFloatCurve;                                          // 0x0278   (0x0008)  
	FVector                                            OpenOffset;                                                 // 0x0280   (0x000C)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x028C   (0x0004)  MISSED
	class UCurveFloat*                                 OffsetFloatCurve;                                           // 0x0290   (0x0008)  
	bool                                               bStartOpen;                                                 // 0x0298   (0x0001)  
	bool                                               bShouldPauseWhenOpening;                                    // 0x0299   (0x0001)  
	bool                                               bShouldPauseWhenClosing;                                    // 0x029A   (0x0001)  
	unsigned char                                      UnknownData05_6[0x1];                                       // 0x029B   (0x0001)  MISSED
	FNetSyncedDoorAnimation                            AnimationInfo;                                              // 0x029C   (0x0034)  
	float                                              AnimationTimer;                                             // 0x02D0   (0x0004)  
	unsigned char                                      UnknownData06_6[0x8];                                       // 0x02D4   (0x0008)  MISSED
	float                                              BlockedDoorReopenDelay;                                     // 0x02DC   (0x0004)  
	class UBoxComponent*                               DoorOverlap;                                                // 0x02E0   (0x0008)  
	class USceneComponent*                             ForwardLocator;                                             // 0x02E8   (0x0008)  
	class UAkPortalComponent*                          AkPortal;                                                   // 0x02F0   (0x0008)  
	unsigned char                                      UnknownData07_6[0x8];                                       // 0x02F8   (0x0008)  MISSED
	float                                              PortalAmountTime;                                           // 0x0300   (0x0004)  
	unsigned char                                      UnknownData08_6[0x4];                                       // 0x0304   (0x0004)  MISSED
	FGameplayTagContainer                              GameplayTags;                                               // 0x0308   (0x0020)  
	class UNavLinkCustomComponent*                     SmartLink;                                                  // 0x0328   (0x0008)  
	class USceneComponent*                             FrontOpenLocator;                                           // 0x0330   (0x0008)  
	class USceneComponent*                             BackOpenLocator;                                            // 0x0338   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.Server_OpenDoor
	void Server_OpenDoor() // [0xc761f0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.Server_CloseDoor
	void Server_CloseDoor() // [0xc76210] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.RemoveGameplayTag
	void RemoveGameplayTag(FGameplayTag Tag) // [0x1e6c1c0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Tag);
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.OnRep_DoorState
	void OnRep_DoorState(char Old) // [0x1e6bde0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(char);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(Old);
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.OnRep_AnimationInfo
	void OnRep_AnimationInfo(FNetSyncedDoorAnimation& Old) // [0x1e6bcc0] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FNetSyncedDoorAnimation&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Old);
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.OnOverlapEnd
	void OnOverlapEnd(UPrimitiveComponent* LocalComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e6bb60] Final|Native|Private 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(LocalComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.OnOverlapBegin
	void OnOverlapBegin(UPrimitiveComponent* LocalComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e6ba00] Final|Native|Private 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(LocalComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.OnDoorActuallyOpened
	void OnDoorActuallyOpened() // [0x1e1d010] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.OnDoorActuallyClosed
	void OnDoorActuallyClosed() // [0x1e1cff0] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func();
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.IsOpen
	bool IsOpen() // [0x1e6b6c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.IsFrozen
	bool IsFrozen() // [0x1e6b690] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.HasTag
	bool HasTag(FGameplayTag Tag) // [0x1e6b520] Final|Native|Public|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func(Tag);
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.HasMatchingGameplayTag
	bool HasMatchingGameplayTag(FGameplayTag TagToCheck) // [0x1e6b480] Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func(TagToCheck);
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.HasAnyMatchingGameplayTags
	bool HasAnyMatchingGameplayTags(FGameplayTagContainer& TagContainer) // [0x1e6b3b0] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTagContainer&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func(TagContainer);
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.HasAllMatchingGameplayTags
	bool HasAllMatchingGameplayTags(FGameplayTagContainer& TagContainer) // [0x1e6b2e0] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FGameplayTagContainer&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func(TagContainer);
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.GetOwnedGameplayTags
	void GetOwnedGameplayTags(FGameplayTagContainer& TagContainer) // [0x1e6b020] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	{
		typedef void (*FuncPtr)(FGameplayTagContainer&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(TagContainer);
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.GetAnimationMultiplier
	float GetAnimationMultiplier() // [0x1e6ae70] Final|Native|Public|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.CanInteract
	bool CanInteract() // [0x1e66dc0] Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.BP_OnDoorStateChanged
	void BP_OnDoorStateChanged(bool bOpen) // [0x1266c00] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(bOpen);
	}
	// Function /Script/BBQGameSession.BBQNetSyncedDoorBase.AddGameplayTag
	void AddGameplayTag(FGameplayTag Tag) // [0x1e6ac90] Final|Native|Public  
	{
		typedef void (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(Tag);
	}
};

/// Class /Script/BBQGameSession.BBQNoiseMaker
/// Size: 0x0278 (632 bytes) (0x000228 - 0x000278) align 8 MaxSize: 0x0278
class ABBQNoiseMaker : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x18];                                      // 0x0228   (0x0018)  MISSED
	class USceneComponent*                             Root;                                                       // 0x0240   (0x0008)  
	class UBBQNoiseOutlineComponent*                   NoiseOutlineComponent;                                      // 0x0248   (0x0008)  
	class UBBQPointOfInterestComponent*                POIComponent;                                               // 0x0250   (0x0008)  
	ETeamID                                            TriggerTeam;                                                // 0x0258   (0x0001)  
	bool                                               bPerformLineOfCheckUponTriggering;                          // 0x0259   (0x0001)  
	bool                                               bActivatePOI;                                               // 0x025A   (0x0001)  
	bool                                               bInstigatorShouldIgnorePOI;                                 // 0x025B   (0x0001)  
	TEnumAsByte<ECollisionChannel>                     LineOfSightChannel;                                         // 0x025C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x025D   (0x0003)  MISSED
	class UAkComponent*                                AkComponent;                                                // 0x0260   (0x0008)  
	class UAkAudioEvent*                               IdleAudioEvent;                                             // 0x0268   (0x0008)  
	class ABBQGameSessionCharacter*                    InteractingCharacter;                                       // 0x0270   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQNoiseMaker.TriggerEnd
	void TriggerEnd() // [0xc76210] Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQNoiseMaker.Trigger
	void Trigger(AActor* InInstigator) // [0x1e06420] Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(InInstigator);
	}
	// Function /Script/BBQGameSession.BBQNoiseMaker.StartNoiseMakerInteraction
	void StartNoiseMakerInteraction(ABBQGameSessionCharacter* Character) // [0x1e6d9d0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQNoiseMaker.GetNoiseTypeString
	FString GetNoiseTypeString() // [0x1e6af40] Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	{
		typedef FString (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQNoiseMaker.GetLineOfSightTraceStartLocation
	FVector GetLineOfSightTraceStartLocation() // [0x1e6af00] Native|Event|Protected|HasDefaults|BlueprintEvent|Const 
	{
		typedef FVector (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQNoiseMaker.EndNoiseMakerInteraction
	void EndNoiseMakerInteraction(ABBQGameSessionCharacter* Character) // [0x1e6ade0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQNoiseMaker.BP_OnTriggered
	void BP_OnTriggered() // [0x2438a30] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQNoiseMakerChicken
/// Size: 0x0310 (784 bytes) (0x000278 - 0x000310) align 8 MaxSize: 0x0310
class ABBQNoiseMakerChicken : public ABBQNoiseMaker
{ 
public:
	FGameplayTagContainer                              IgnoreTriggerTagContainer;                                  // 0x0278   (0x0020)  
	class UAnimMontage*                                ChickenIdleMontage;                                         // 0x0298   (0x0008)  
	class UAnimMontage*                                ChickenAlertedMontage;                                      // 0x02A0   (0x0008)  
	class UAnimMontage*                                ChickenSemiAlertedMontage;                                  // 0x02A8   (0x0008)  
	class UAnimMontage*                                ChickenDeadMontage;                                         // 0x02B0   (0x0008)  
	FGameplayTag                                       ShardItemTag;                                               // 0x02B8   (0x0008)  
	FDataTableRowHandle                                NoiseMakerDisarmedRow;                                      // 0x02C0   (0x0010)  
	float                                              RetriggerTime;                                              // 0x02D0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02D4   (0x0004)  MISSED
	class UBBQTriggerAreaComponent*                    TriggerArea;                                                // 0x02D8   (0x0008)  
	class UBBQTriggerAreaComponent*                    TriggerAreaClose;                                           // 0x02E0   (0x0008)  
	class USkeletalMeshComponent*                      ChickenMesh;                                                // 0x02E8   (0x0008)  
	TArray<FPlayerInNoiseMakerInfo>                    PlayersInArea;                                              // 0x02F0   (0x0010)  
	EChickenState                                      ChickenState;                                               // 0x0300   (0x0001)  
	unsigned char                                      UnknownData01_7[0xF];                                       // 0x0301   (0x000F)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.TriggerChickenNoiseMaker
	void TriggerChickenNoiseMaker() // [0x1e6da80] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.StartTriggerChickenNoiseMaker
	void StartTriggerChickenNoiseMaker() // [0x1e6da60] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.ShouldTriggerOnEnterOuterArea
	bool ShouldTriggerOnEnterOuterArea(ABBQGameSessionCharacter* Character) // [0x1e6d710] Native|Event|Public|BlueprintEvent 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.SetChickenState
	void SetChickenState(EChickenState NewState) // [0x1e6c9f0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EChickenState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(NewState);
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.OnRep_ChickenState
	void OnRep_ChickenState(EChickenState PrevState) // [0x1e6bd60] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(EChickenState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(PrevState);
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.OnExitTriggerAreaClose
	void OnExitTriggerAreaClose(ABBQGameSessionCharacter* Character) // [0x1e6b970] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.OnExitTriggerArea
	void OnExitTriggerArea(ABBQGameSessionCharacter* Character) // [0x1e6b8e0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.OnEnterTriggerAreaClose
	void OnEnterTriggerAreaClose(ABBQGameSessionCharacter* Character) // [0x1e6b850] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.OnEnterTriggerArea
	void OnEnterTriggerArea(ABBQGameSessionCharacter* Character) // [0x1e6b7c0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.OnChickenSilenced
	void OnChickenSilenced(ABBQGameSessionCharacter* Character, bool bUseItem) // [0x1e6b6f0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(Character, bUseItem);
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.IsDestroyed
	bool IsDestroyed() // [0x1e6b660] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.IsCharacterInNoiseMakerRange
	bool IsCharacterInNoiseMakerRange(ABBQGameSessionCharacter* Character) // [0x1e6b5c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.GetPlayersTriggeringNoiseMaker
	// TArray<ABBQGameSessionCharacter*> GetPlayersTriggeringNoiseMaker(ENoiseTriggerType TriggerType, ETeamID TeamFilter);     // [0x1e6b1c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.GetPlayersInNoiseMakerRange
	// TArray<ABBQGameSessionCharacter*> GetPlayersInNoiseMakerRange(ETeamID TeamFilter);                                       // [0x1e6b0e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.GetLastTriggeringPlayer
	ABBQGameSessionCharacter* GetLastTriggeringPlayer() // [0x1e6aed0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacter* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.GetClosestCharacter
	ABBQGameSessionCharacter* GetClosestCharacter() // [0x1e6aea0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacter* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.BP_OnDestroyed
	void BP_OnDestroyed() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func();
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.BP_OnChickenStateChanged
	void BP_OnChickenStateChanged(EChickenState PrevState, EChickenState NewState) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EChickenState, EChickenState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(PrevState, NewState);
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.BP_OnChickenNoiseMakerTriggered
	void BP_OnChickenNoiseMakerTriggered() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func();
	}
	// Function /Script/BBQGameSession.BBQNoiseMakerChicken.BP_OnAllPlayersOutOfArea
	void BP_OnAllPlayersOutOfArea(ABBQGameSessionCharacter* LastPlayerToLeave) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(LastPlayerToLeave);
	}
};

/// Class /Script/BBQGameSession.BBQNoiseOutlineComponent
/// Size: 0x0270 (624 bytes) (0x0001F8 - 0x000270) align 16 MaxSize: 0x0270
class UBBQNoiseOutlineComponent : public USceneComponent
{ 
public:
	FNoiseOutlineConfig                                Config;                                                     // 0x01F8   (0x0048)  
	class UNiagaraComponent*                           CurrentSpawnedPS;                                           // 0x0240   (0x0008)  
	bool                                               bSpawnVFXAttachedToSelf;                                    // 0x0248   (0x0001)  
	unsigned char                                      UnknownData00_7[0x27];                                      // 0x0249   (0x0027)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQNoiseOutlineComponent.Trigger
	void Trigger() // [0x1e71d70] BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQNoiseOutlineComponent.LocalTrigger
	void LocalTrigger() // [0x1e71370] Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQNoiseOutlineComponent.LocalEnd
	void LocalEnd() // [0x1e71350] Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQNoiseOutlineComponent.IsTriggering
	bool IsTriggering() // [0x1e71320] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQNoiseSpottableInterface
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQNoiseSpottableInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQNoiseSpottableInterface.OnBeingFocusedEnd
	void OnBeingFocusedEnd() // [0x1e714c0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQNoiseSpottableInterface.OnBeingFocusedBegin
	void OnBeingFocusedBegin() // [0x1e714a0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQNoiseSpottableInterface.IsEnvironmental
	bool IsEnvironmental() // [0x1e712c0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQNoiseSpottableInterface.GetPriority
	char GetPriority() // [0x1e71210] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	{
		typedef char (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQNoiseSpottableInterface.CanBeSpotted
	bool CanBeSpotted(AActor* Instigator) // [0x1e710b0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(Instigator);
	}
	// Function /Script/BBQGameSession.BBQNoiseSpottableInterface.CanBeSensed
	bool CanBeSensed(AActor* Instigator) // [0x1e71010] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(Instigator);
	}
	// Function /Script/BBQGameSession.BBQNoiseSpottableInterface.CanBeReSpotted
	bool CanBeReSpotted() // [0x1e70fe0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQObstacleSpawnBlocker
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQObstacleSpawnBlocker : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQOutlineRenderer
/// Size: 0x01B8 (440 bytes) (0x0000B0 - 0x0001B8) align 8 MaxSize: 0x01B8
class UBBQOutlineRenderer : public UActorComponent
{ 
public:
	float                                              TotalSecsTilDestroy;                                        // 0x00B0   (0x0004)  
	FName                                              DefaultOutlineInstanceName;                                 // 0x00B4   (0x0008)  
	ETeamID                                            TeamVisibility;                                             // 0x00BC   (0x0001)  
	char                                               ColorIndex;                                                 // 0x00BD   (0x0001)  
	bool                                               bHighlightOnlyIfMoving;                                     // 0x00BE   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x00BF   (0x0001)  MISSED
	float                                              FadeTimeOnMoveChange;                                       // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00C4   (0x0004)  MISSED
	FGameplayTagContainer                              VisibilityRequiredTags;                                     // 0x00C8   (0x0020)  
	FGameplayTagContainer                              VisibilityIgnoreTags;                                       // 0x00E8   (0x0020)  
	FGameplayTagContainer                              OwnerRequiredTags;                                          // 0x0108   (0x0020)  
	FGameplayTagContainer                              OwnerIgnoreTags;                                            // 0x0128   (0x0020)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0148   (0x0010)  MISSED
	TArray<FOutlineInstance>                           OutlineInstances;                                           // 0x0158   (0x0010)  
	unsigned char                                      UnknownData03_7[0x50];                                      // 0x0168   (0x0050)  MISSED
};

/// Class /Script/BBQGameSession.PairedAnimationEnableElevationFixNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UPairedAnimationEnableElevationFixNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.PairedAnimationDisableElevationFixNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UPairedAnimationDisableElevationFixNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.PairedAnimationEndEarlyNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UPairedAnimationEndEarlyNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.PairedAnimationDisablePositionLockingNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UPairedAnimationDisablePositionLockingNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.BBQPairedAnimationComponent
/// Size: 0x0148 (328 bytes) (0x0000B0 - 0x000148) align 8 MaxSize: 0x0148
class UBBQPairedAnimationComponent : public UActorComponent
{ 
public:
	TEnumAsByte<ECollisionChannel>                     PairedAnimCharacterChannel;                                 // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3F];                                      // 0x00B1   (0x003F)  MISSED
	class ABBQGameSessionCharacterAnimated*            CharacterOwner;                                             // 0x00F0   (0x0008)  
	class AActor*                                      Partner;                                                    // 0x00F8   (0x0008)  
	class ULevelSequencePlayer*                        AssetSequencePlayer;                                        // 0x0100   (0x0008)  
	class ALevelSequenceActor*                         AssetSequenceActor;                                         // 0x0108   (0x0008)  
	TArray<class UPrimitiveComponent*>                 MoveIgnoredComponents;                                      // 0x0110   (0x0010)  
	unsigned char                                      UnknownData01_7[0x28];                                      // 0x0120   (0x0028)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQPairedAnimationComponent.OnMontageEnded
	void OnMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e71790] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQPairedAnimationComponent.NetMulticast_PlayPairedAnimationFromSlot
	void NetMulticast_PlayPairedAnimationFromSlot(EBBQPairedAnimSlot PairedAnimSlot, AActor* Follower, float MontagePlayRate) // [0x1e71390] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(EBBQPairedAnimSlot, AActor*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(PairedAnimSlot, Follower, MontagePlayRate);
	}
	// Function /Script/BBQGameSession.BBQPairedAnimationComponent.IsPlayingPairedAnimation
	bool IsPlayingPairedAnimation() // [0x1e712f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func();
	}
};

/// Class /Script/BBQGameSession.GrabItemAnimNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UGrabItemAnimNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.BBQPickupDispenser
/// Size: 0x0320 (800 bytes) (0x000228 - 0x000320) align 8 MaxSize: 0x0320
class ABBQPickupDispenser : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x10];                                      // 0x0228   (0x0010)  MISSED
	SDK_UNDEFINED(16,537) /* FMulticastInlineDelegate */ __um(OnPickupMinigameSpawnedEvent);                       // 0x0238   (0x0010)  
	class USceneComponent*                             RootSceneComponent;                                         // 0x0248   (0x0008)  
	class UStaticMeshComponent*                        MeshComponent;                                              // 0x0250   (0x0008)  
	class UBoxComponent*                               InteractionBox;                                             // 0x0258   (0x0008)  
	class UBoxComponent*                               PositionBox;                                                // 0x0260   (0x0008)  
	class UBBQInteractionComponent*                    InteractionComponent;                                       // 0x0268   (0x0008)  
	class UBBQInteractionEventComponent*               InteractionEventSpawnPickup;                                // 0x0270   (0x0008)  
	class UBBQInteractionEventComponent*               InteractionEventSwapPickup;                                 // 0x0278   (0x0008)  
	FGameplayTagContainer                              PossiblePickupTypes;                                        // 0x0280   (0x0020)  
	float                                              SpawnCooldown;                                              // 0x02A0   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x02A4   (0x000C)  MISSED
	FGameplayTag                                       PickupDispenserType;                                        // 0x02B0   (0x0008)  
	class ABBQMinigameV2*                              PickupMinigame;                                             // 0x02B8   (0x0008)  
	class UClass*                                      PickupMinigameClass;                                        // 0x02C0   (0x0008)  
	FGameplayTag                                       GrabbingItemMovementState;                                  // 0x02C8   (0x0008)  
	FBBQPickupDispenserState                           PickupDispenserState;                                       // 0x02D0   (0x000C)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x02DC   (0x0004)  MISSED
	class AActor*                                      ItemEffectInstigator;                                       // 0x02E0   (0x0008)  
	unsigned char                                      UnknownData03_6[0x1C];                                      // 0x02E8   (0x001C)  MISSED
	float                                              DistanceToChangeInstigatorStance;                           // 0x0304   (0x0004)  
	bool                                               bCanUpdateInventoryStat;                                    // 0x0308   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x0309   (0x0007)  MISSED
	class UAkAudioEvent*                               PickupAkEvent;                                              // 0x0310   (0x0008)  
	class UAkAudioEvent*                               DropAkEvent;                                                // 0x0318   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQPickupDispenser.SetItemEffectInstigator
	void SetItemEffectInstigator(AActor* InEffectInstigator) // [0x1e71b00] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(InEffectInstigator);
	}
	// Function /Script/BBQGameSession.BBQPickupDispenser.OnRep_PickupDispenserState
	void OnRep_PickupDispenserState(FBBQPickupDispenserState& PrevPickupDispenserState) // [0x1e71930] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FBBQPickupDispenserState&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(PrevPickupDispenserState);
	}
	// Function /Script/BBQGameSession.BBQPickupDispenser.OnPickupMinigameSpawned__DelegateSignature
	void OnPickupMinigameSpawned__DelegateSignature() // [0x2438a30] MulticastDelegate|Public|Delegate 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPickupDispenser.OnPickupMinigameEnded
	void OnPickupMinigameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason EndMinigameReason) // [0x1e71860] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(Minigame, EndMinigameReason);
	}
	// Function /Script/BBQGameSession.BBQPickupDispenser.OnInteractionEventDelegate
	void OnInteractionEventDelegate(UBBQInteractionEventComponent* InteractionScenario, FName EventName, AActor* EventInstigator) // [0x1e715b0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UBBQInteractionEventComponent*, FName, AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(InteractionScenario, EventName, EventInstigator);
	}
	// Function /Script/BBQGameSession.BBQPickupDispenser.OnGrabPickupMontageEnded
	void OnGrabPickupMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x1e714e0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQPickupDispenser.GetItemTypeToReplaceThis
	FGameplayTag GetItemTypeToReplaceThis() // [0x1e711d0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FGameplayTag (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPickupDispenser.GetItemEffectInstigator
	AActor* GetItemEffectInstigator() // [0x1e711b0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class AActor* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPickupDispenser.GetCurrentEventInstigator
	ABBQGameSessionCharacter* GetCurrentEventInstigator() // [0x1e71170] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacter* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPickupDispenser.BP_OnGrabPickupMontageEnded
	void BP_OnGrabPickupMontageEnded(UAnimMontage* Montage, bool bInterrupted) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQPickupDispenser.BP_OnAnimNotifySetPickupItemInHands
	void BP_OnAnimNotifySetPickupItemInHands() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPickupDispenser.BP_ItemAddedToInventory
	void BP_ItemAddedToInventory(FGameplayTag ItemCollected) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FGameplayTag);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(ItemCollected);
	}
};

/// Class /Script/BBQGameSession.BBQPickupDistributor
/// Size: 0x02D0 (720 bytes) (0x000228 - 0x0002D0) align 8 MaxSize: 0x02D0
class ABBQPickupDistributor : public AActor
{ 
public:
	class UPickupZones*                                PickupZones;                                                // 0x0228   (0x0008)  
	unsigned char                                      UnknownData00_7[0xA0];                                      // 0x0230   (0x00A0)  MISSED
};

/// Class /Script/BBQGameSession.PickupZones
/// Size: 0x0040 (64 bytes) (0x000030 - 0x000040) align 8 MaxSize: 0x0040
class UPickupZones : public UDataAsset
{ 
public:
	TArray<FPickupZoneData>                            ZoneData;                                                   // 0x0030   (0x0010)  
};

/// Class /Script/BBQGameSession.BBQPickupSpawnerComponent
/// Size: 0x0210 (528 bytes) (0x0001F8 - 0x000210) align 16 MaxSize: 0x0210
class UBBQPickupSpawnerComponent : public USceneComponent
{ 
public:
	int32_t                                            PickupSpawnLimit;                                           // 0x01F8   (0x0004)  
	unsigned char                                      UnknownData00_7[0x14];                                      // 0x01FC   (0x0014)  MISSED
};

/// Class /Script/BBQGameSession.BBQPickupSpawnerGroup
/// Size: 0x0230 (560 bytes) (0x000228 - 0x000230) align 8 MaxSize: 0x0230
class ABBQPickupSpawnerGroup : public AActor
{ 
public:
	class UBBQPickupSpawnerComponent*                  SpawnerComponent;                                           // 0x0228   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQPickupSpawnerMarker
/// Size: 0x0240 (576 bytes) (0x000228 - 0x000240) align 8 MaxSize: 0x0240
class ABBQPickupSpawnerMarker : public AActor
{ 
public:
	FBBQPickupSpawnerData                              Spawner;                                                    // 0x0228   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0234   (0x0004)  MISSED
	class ABBQPickupSpawnerGroup*                      PickupGroup;                                                // 0x0238   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQPipeExit
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQPipeExit : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQPipeGate
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQPipeGate : public AActor
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQPipeGate.IsOpen
	bool IsOpen() // [0x1e24f20] Native|Event|Public|BlueprintEvent|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQPipeValve
/// Size: 0x02A0 (672 bytes) (0x000228 - 0x0002A0) align 8 MaxSize: 0x02A0
class ABBQPipeValve : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x18];                                      // 0x0228   (0x0018)  MISSED
	EPipeValveState                                    PipeValveState;                                             // 0x0240   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0241   (0x0007)  MISSED
	FPipeValveInteractionInfo                          InteractionInfo;                                            // 0x0248   (0x0010)  
	class ABBQMinigameV2*                              MinigameInstance;                                           // 0x0258   (0x0008)  
	class UClass*                                      MinigameClass;                                              // 0x0260   (0x0008)  
	class USceneComponent*                             Root;                                                       // 0x0268   (0x0008)  
	class USceneComponent*                             PipeValveUseLocator;                                        // 0x0270   (0x0008)  
	class USceneComponent*                             PipeValveUseLocatorLeatherface;                             // 0x0278   (0x0008)  
	class USceneComponent*                             AttachValveLocator;                                         // 0x0280   (0x0008)  
	class USceneComponent*                             AttachValveLocatorMale;                                     // 0x0288   (0x0008)  
	unsigned char                                      UnknownData02_7[0x10];                                      // 0x0290   (0x0010)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQPipeValve.StartPipeValveInteraction
	void StartPipeValveInteraction(ABBQGameSessionCharacterAnimated* EventInstigator, EPipeValveState TargetState) // [0x1e71ca0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, EPipeValveState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(EventInstigator, TargetState);
	}
	// Function /Script/BBQGameSession.BBQPipeValve.StartMinigame
	void StartMinigame(ABBQGameSessionCharacterAnimated* PlayingCharacter) // [0x1e71c10] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(PlayingCharacter);
	}
	// Function /Script/BBQGameSession.BBQPipeValve.SetPipeValveState
	void SetPipeValveState(EPipeValveState NewPipeValveState) // [0x1e71b90] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EPipeValveState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(NewPipeValveState);
	}
	// Function /Script/BBQGameSession.BBQPipeValve.OnValveAttachNotifyEnded
	void OnValveAttachNotifyEnded() // [0x1e71ae0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPipeValve.OnRep_PipeValveState
	void OnRep_PipeValveState(EPipeValveState PrevState) // [0x1e71a60] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(EPipeValveState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(PrevState);
	}
	// Function /Script/BBQGameSession.BBQPipeValve.OnRep_PipeValveInteractionInfo
	void OnRep_PipeValveInteractionInfo(FPipeValveInteractionInfo& PrevInfo) // [0x1e719d0] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FPipeValveInteractionInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(PrevInfo);
	}
	// Function /Script/BBQGameSession.BBQPipeValve.OnMinigameSpawned
	void OnMinigameSpawned() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPipeValve.OnMinigameEnded
	void OnMinigameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason Reason) // [0x1e716c0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(Minigame, Reason);
	}
	// Function /Script/BBQGameSession.BBQPipeValve.GetValveUser
	ABBQGameSessionCharacterAnimated* GetValveUser() // [0x1e712a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacterAnimated* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPipeValve.GetUserLocatorTransform
	FTransform GetUserLocatorTransform() // [0x1e71240] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FTransform (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPipeValve.EndPipeValveInteraction
	void EndPipeValveInteraction() // [0x1e71150] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPipeValve.BP_OnPipeValveStateChanged
	void BP_OnPipeValveStateChanged(EPipeValveState PrevState, EPipeValveState NewState) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EPipeValveState, EPipeValveState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(PrevState, NewState);
	}
	// Function /Script/BBQGameSession.BBQPipeValve.BP_OnPipeValveOpened
	void BP_OnPipeValveOpened(ABBQGameSessionCharacterAnimated* User) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(User);
	}
};

/// Class /Script/BBQGameSession.BBQPlacementGuideArrow
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQPlacementGuideArrow : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQPlayerCameraManager
/// Size: 0x28F0 (10480 bytes) (0x002880 - 0x0028F0) align 16 MaxSize: 0x28F0
class ABBQPlayerCameraManager : public APlayerCameraManager
{ 
public:
	class UMatineeCameraShake*                         LoopingShake;                                               // 0x2880   (0x0008)  
	class UCurveFloat*                                 FadeCurve;                                                  // 0x2888   (0x0008)  
	class UBBQCinematicCameraModifier*                 CachedCinematicCameraMod;                                   // 0x2890   (0x0008)  
	unsigned char                                      UnknownData00_6[0x40];                                      // 0x2898   (0x0040)  MISSED
	class AActor*                                      GameplayViewTargetOverride;                                 // 0x28D8   (0x0008)  
	unsigned char                                      UnknownData01_7[0x10];                                      // 0x28E0   (0x0010)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQPlayerCameraManager.StartCameraFadeWithCurve
	void StartCameraFadeWithCurve(UCurveFloat* Curve, FLinearColor Color, float PlayRate, bool bShouldFadeAudio, bool bHoldWhenFinished) // [0x1e77170] Final|Native|Public|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UCurveFloat*, FLinearColor, float, bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Curve, Color, PlayRate, bShouldFadeAudio, bHoldWhenFinished);
	}
	// Function /Script/BBQGameSession.BBQPlayerCameraManager.GetGameplayViewTarget
	AActor* GetGameplayViewTarget() // [0x1e75390] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class AActor* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPlayerCameraManager.CameraFadeOut
	void CameraFadeOut() // [0x1e74570] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerCameraManager.CameraFadeIn
	void CameraFadeIn() // [0x1e74550] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQPlayerCommandChannel
/// Size: 0x00B0 (176 bytes) (0x0000B0 - 0x0000B0) align 8 MaxSize: 0x00B0
class UBBQPlayerCommandChannel : public UActorComponent
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQPlayerCommandChannel.Server_SendCommand
	void Server_SendCommand(FString PlayerList, FString Command) // [0x1e76ca0] Final|Net|NetReliableNative|Event|Private|NetServer 
	{
		typedef void (*FuncPtr)(FString, FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(PlayerList, Command);
	}
	// Function /Script/BBQGameSession.BBQPlayerCommandChannel.Client_ReceiveCommand
	void Client_ReceiveCommand(FString Command) // [0x1e74bf0] Final|Net|NetReliableNative|Event|Private|NetClient 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Command);
	}
};

/// Class /Script/BBQGameSession.BBQPlayerController
/// Size: 0x07F8 (2040 bytes) (0x000618 - 0x0007F8) align 8 MaxSize: 0x07F8
class ABBQPlayerController : public ABBQCorePlayerController
{ 
public:
	bool                                               bCanShowInteractionHUD;                                     // 0x0618   (0x0001)  
	bool                                               bForceHideInteractionHUD;                                   // 0x0619   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x061A   (0x0006)  MISSED
	SDK_UNDEFINED(16,538) /* FMulticastInlineDelegate */ __um(OnAcknowledgePossessionDelegate);                    // 0x0620   (0x0010)  
	SDK_UNDEFINED(16,539) /* FMulticastInlineDelegate */ __um(OnStartSpectating);                                  // 0x0630   (0x0010)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0640   (0x0018)  MISSED
	bool                                               bUsePreviousPlayerState;                                    // 0x0658   (0x0001)  
	bool                                               bLastInputFromGamepad;                                      // 0x0659   (0x0001)  
	unsigned char                                      UnknownData02_6[0x6];                                       // 0x065A   (0x0006)  MISSED
	class UBBQViewTargetManagerComponent*              ViewTargetManager;                                          // 0x0660   (0x0008)  
	unsigned char                                      UnknownData03_6[0x38];                                      // 0x0668   (0x0038)  MISSED
	float                                              InputPitchScaleWhenSprinting;                               // 0x06A0   (0x0004)  
	float                                              InputYawScaleWhenSprinting;                                 // 0x06A4   (0x0004)  
	float                                              MouseSensitivity;                                           // 0x06A8   (0x0004)  
	FVector2D                                          GamepadSensitivity;                                         // 0x06AC   (0x0008)  
	FVector2D                                          MouseSensitivityLimits;                                     // 0x06B4   (0x0008)  
	FVector2D                                          GamepadXSensitivityLimits;                                  // 0x06BC   (0x0008)  
	FVector2D                                          GamepadYSensitivityLimits;                                  // 0x06C4   (0x0008)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x06CC   (0x0004)  MISSED
	class UAkAudioEvent*                               StartSpectatingSFX;                                         // 0x06D0   (0x0008)  
	bool                                               bRequiresSpawnAck;                                          // 0x06D8   (0x0001)  
	unsigned char                                      UnknownData05_6[0xA7];                                      // 0x06D9   (0x00A7)  MISSED
	class ABBQGameSessionCharacter*                    ControllingCharacter;                                       // 0x0780   (0x0008)  
	class APawn*                                       LastViewTargetPawn;                                         // 0x0788   (0x0008)  
	class UDataTable*                                  InputActionTable;                                           // 0x0790   (0x0008)  
	TArray<class AActor*>                              RequestedHiddenActorList;                                   // 0x0798   (0x0010)  
	unsigned char                                      UnknownData06_6[0x40];                                      // 0x07A8   (0x0040)  MISSED
	class UBBQPlayerCommandChannel*                    CommandChannel;                                             // 0x07E8   (0x0008)  
	class APlayerStart*                                PlayerStart;                                                // 0x07F0   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQPlayerController.ToggleDebugWidget
	void ToggleDebugWidget() // [0xb888e0] Final|Native|Private|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.StopSpectating
	void StopSpectating() // [0x1e773d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.StartSpectating
	void StartSpectating(bool bIsStartingAsSpectator) // [0x1e77340] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(bIsStartingAsSpectator);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ShowSpectatorMode
	void ShowSpectatorMode() // [0x1e77150] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ShowBBQChatWidget
	void ShowBBQChatWidget(bool MessageAll) // [0x1e770c0] Final|Native|Private|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(MessageAll);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.SetTeam
	void SetTeam(int32_t ID) // [0x1e138c0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(ID);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.SetScreenBlurStrength
	void SetScreenBlurStrength(float ALPHA) // [0x1e77040] Final|Native|Private|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(ALPHA);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.SetInputActive
	void SetInputActive(bool bActive) // [0x1e76fb0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(bActive);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.SetCharacterIntroFinished
	void SetCharacterIntroFinished(bool bHasFinished) // [0x1e76f20] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(bHasFinished);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ServerSetMMTeamID
	void ServerSetMMTeamID(EMMTeamID ID) // [0x1e76170] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	{
		typedef void (*FuncPtr)(EMMTeamID);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(ID);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ServerSetAttachedClientIsUsingPIE
	void ServerSetAttachedClientIsUsingPIE() // [0x1e76150] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ServerSendChatMessage
	void ServerSendChatMessage(FString SenderName, FString Message, bool bMessageAll, ETeamID TeamId, bool bOnlyUpdate) // [0x1e75f50] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate 
	{
		typedef void (*FuncPtr)(FString, FString, bool, ETeamID, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(SenderName, Message, bMessageAll, TeamId, bOnlyUpdate);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ServerRecvClientsideSpawnAck
	void ServerRecvClientsideSpawnAck() // [0x1e75f30] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ServerOnTimeOfDayChangeRequested
	void ServerOnTimeOfDayChangeRequested(EBBQTimeOfDay NewWantedTimeOfDay) // [0x1e75e80] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	{
		typedef void (*FuncPtr)(EBBQTimeOfDay);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func(NewWantedTimeOfDay);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ServerOnReadyChanged
	void ServerOnReadyChanged(bool bReadyState) // [0x1e75df0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(bReadyState);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ServerOnPlayerChangeRequestedOutfit
	void ServerOnPlayerChangeRequestedOutfit(UBBQCharacterOutfit* WantedOutfit, uint64_t OutfitContentKey) // [0x1e75cf0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	{
		typedef void (*FuncPtr)(UBBQCharacterOutfit*, uint64_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(WantedOutfit, OutfitContentKey);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ServerOnPlayerChangeRequestedCharacter
	void ServerOnPlayerChangeRequestedCharacter(FString WantedChar, ETeamID WantedTeam, uint64_t CharacterContentKey) // [0x1e75ba0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	{
		typedef void (*FuncPtr)(FString, ETeamID, uint64_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(WantedChar, WantedTeam, CharacterContentKey);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ServerOnModeChangeRequested
	void ServerOnModeChangeRequested(UClass* GAMEMODE) // [0x1e75ae0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate 
	{
		typedef void (*FuncPtr)(UClass*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(GAMEMODE);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ServerOnMapChangeRequested
	void ServerOnMapChangeRequested(FString WantedMap, int32_t WantedMapIndex, uint64_t MapContentKey) // [0x1e75990] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	{
		typedef void (*FuncPtr)(FString, int32_t, uint64_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(WantedMap, WantedMapIndex, MapContentKey);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ServerForceEnsure
	void ServerForceEnsure() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Server_ToggleAllVictimBleedout
	void Server_ToggleAllVictimBleedout() // [0x1e76f00] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Server_SyncTick
	void Server_SyncTick() // [0x1e76ee0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Server_StopSpectating
	void Server_StopSpectating() // [0x1e76ec0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Server_SetNextAvailableCharacter
	void Server_SetNextAvailableCharacter(ABBQPlayerState* BBQPlayerState) // [0x1e76e30] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQPlayerState*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		func(BBQPlayerState);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Server_OnStartSpectate
	void Server_OnStartSpectate(bool bIsStartingAsSpectator) // [0x1e76a20] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		func(bIsStartingAsSpectator);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Server_OnCharacterIntroFinished
	void Server_OnCharacterIntroFinished() // [0x1e76900] Final|Net|NetReliableNative|Event|Private|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[25]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Server_LeaveGameAsSpectator
	void Server_LeaveGameAsSpectator() // [0x1e768c0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[26]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Server_Incapacitate
	void Server_Incapacitate() // [0x1e76810] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[27]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Server_ForceEnsureRPC
	void Server_ForceEnsureRPC() // [0x1e76440] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[28]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Server_DebugMercuryIncrementKillCount
	void Server_DebugMercuryIncrementKillCount(int32_t Count) // [0x1e763b0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[29]);
		func(Count);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Server_CreateTestRPCChannel
	void Server_CreateTestRPCChannel() // [0x1e76390] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[30]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Server_CreateMatchNetworkComplete
	void Server_CreateMatchNetworkComplete(FString NetworkDescriptor) // [0x1e762f0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[31]);
		func(NetworkDescriptor);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.RunCommandOn
	void RunCommandOn(FString Players, FString Command) // [0x1e75890] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)(FString, FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[32]);
		func(Players, Command);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Reset
	void Reset() // [0x1e75870] Final|Native|Private|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[33]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.PrintAmbientAudioStatus
	void PrintAmbientAudioStatus() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[34]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.OnRep_RequiresSpawnAck
	void OnRep_RequiresSpawnAck(bool bOldValue) // [0x1e757e0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[35]);
		func(bOldValue);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.OnPlayerIncapacitated
	void OnPlayerIncapacitated() // [0x1e757c0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[36]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.OnPlayerChangeRequestedCharacter
	void OnPlayerChangeRequestedCharacter(FString WantedChar, ETeamID WantedTeam) // [0x1e756e0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString, ETeamID);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[37]);
		func(WantedChar, WantedTeam);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.OnMovementModeChanged
	// void OnMovementModeChanged(ACharacter* PlayerCharacter, TEnumAsByte<EMovementMode> PrevMovementMode, char PreviousCustomMode); // [0x1e755d0] Final|Native|Public  
	// Function /Script/BBQGameSession.BBQPlayerController.OnMapChangeRequested
	void OnMapChangeRequested(FString WantedMap, int32_t WantedMapIndex) // [0x1e754f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[39]);
		func(WantedMap, WantedMapIndex);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.NotifyJumpApex
	void NotifyJumpApex() // [0x1e754d0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[40]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.IsPlayerSpectatable
	bool IsPlayerSpectatable() // [0x1e754a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[41]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.IsFullscreenFadeComplete
	bool IsFullscreenFadeComplete() // [0x1e75470] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[42]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.IsChatAvailable
	bool IsChatAvailable() // [0x1e75440] Final|Native|Public|BlueprintCallable 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[43]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Incapacitate
	void Incapacitate() // [0x1e75420] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[44]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.GetSpectatedPlayerState
	ABBQPlayerState* GetSpectatedPlayerState() // [0x1e753f0] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQPlayerState* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[45]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.GetPlayerRpcChannel
	UBBQPlayerRpcChannel* GetPlayerRpcChannel() // [0x2438a30] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	{
		typedef class UBBQPlayerRpcChannel* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[46]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.GetPlayerOrSpectatedPlayer
	ABBQGameSessionCharacter* GetPlayerOrSpectatedPlayer() // [0x1e753c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacter* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[47]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.FadeToBlack
	void FadeToBlack(float Duration) // [0x1e75310] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[48]);
		func(Duration);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.FadeScreenBlur
	void FadeScreenBlur(bool bFadeOut) // [0x1e75280] Final|Native|Private|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[49]);
		func(bFadeOut);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.FadeFromBlack
	void FadeFromBlack(float Duration) // [0x1e75200] Final|Exec|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[50]);
		func(Duration);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.DisableExpensiveShadows
	void DisableExpensiveShadows() // [0x1e751e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[51]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Debug_LeaveAsSpectator
	void Debug_LeaveAsSpectator() // [0xb888e0] Final|Exec|Native|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[52]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ClientStopSpectating
	void ClientStopSpectating() // [0x1e74890] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[53]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ClientStartSpectating
	void ClientStartSpectating(bool bIsStartingAsSpectator) // [0x1e74800] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[54]);
		func(bIsStartingAsSpectator);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ClientSetHUDSoftPtr
	// void ClientSetHUDSoftPtr(TSoftObjectPtr<UClass*> NewHUDClass);                                                           // [0x1e74740] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	// Function /Script/BBQGameSession.BBQPlayerController.ClientReceiveChatMessage
	void ClientReceiveChatMessage(FString SenderName, FString Message, bool bMessageAll, bool bOnlyUpdate) // [0x1e745b0] Net|Native|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(FString, FString, bool, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[56]);
		func(SenderName, Message, bMessageAll, bOnlyUpdate);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.ClientGameStarted
	void ClientGameStarted() // [0x1e74590] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[57]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Client_UpdateAchievement
	void Client_UpdateAchievement(FString AchievementName, int32_t Current, int32_t Required) // [0x1e750b0] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString, int32_t, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[58]);
		func(AchievementName, Current, Required);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Client_UnlockAchievement
	void Client_UnlockAchievement(FString AchievementName) // [0x1e75010] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[59]);
		func(AchievementName);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Client_StartMatchNetwork
	void Client_StartMatchNetwork() // [0x1e74f60] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[60]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Client_ShowGameplayActivityEvent
	void Client_ShowGameplayActivityEvent(FDataTableRowHandle ActivityEvent, FBBQNotificationData CustomNotificationData) // [0x1e74c90] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(FDataTableRowHandle, FBBQNotificationData);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[61]);
		func(ActivityEvent, CustomNotificationData);
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Client_OnSpectatorReadyToLeave
	void Client_OnSpectatorReadyToLeave() // [0x1e74b40] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[62]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerController.Client_JoinMatchNetwork
	void Client_JoinMatchNetwork(FString NetworkDescriptor) // [0x1e74aa0] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(FString);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[63]);
		func(NetworkDescriptor);
	}
};

/// Class /Script/BBQGameSession.BBQPlayerRestrainer
/// Size: 0x0250 (592 bytes) (0x000228 - 0x000250) align 8 MaxSize: 0x0250
class ABBQPlayerRestrainer : public AActor
{ 
public:
	bool                                               bShouldStartRestrained;                                     // 0x0228   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0229   (0x0007)  MISSED
	TArray<class ABBQVictimRestrainedStart*>           RestrainLocations;                                          // 0x0230   (0x0010)  
	unsigned char                                      UnknownData01_7[0x10];                                      // 0x0240   (0x0010)  MISSED
};

/// Class /Script/BBQGameSession.BBQPlayerRpcChannel
/// Size: 0x00B8 (184 bytes) (0x0000B0 - 0x0000B8) align 8 MaxSize: 0x00B8
class UBBQPlayerRpcChannel : public UActorComponent
{ 
public:
	class ABBQGrandpa*                                 CachedGrandpaRef;                                           // 0x00B0   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_SetMetaValue
	void Server_SetMetaValue(int32_t Value) // [0x1e76da0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Value);
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_ResetMetaGameData
	void Server_ResetMetaGameData() // [0x1dff7e0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_RefreshMetaGameData
	void Server_RefreshMetaGameData() // [0x1e76c80] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_PostPickupMinigameEnded
	void Server_PostPickupMinigameEnded(ABBQPickupDispenser* PickupDispenser, AActor* EventInstigator, EEndMinigameReason EndMinigameReason) // [0x1e76b70] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(ABBQPickupDispenser*, AActor*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(PickupDispenser, EventInstigator, EndMinigameReason);
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_PossessAvailableCharacter
	void Server_PossessAvailableCharacter(APawn* Character) // [0x1e76ab0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate 
	{
		typedef void (*FuncPtr)(APawn*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_OnEscapeSequenceEnded
	void Server_OnEscapeSequenceEnded(ABBQEscapeZone* EscapeZone, ABBQGameSessionCharacter* EscapedVictim) // [0x1e76920] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate 
	{
		typedef void (*FuncPtr)(ABBQEscapeZone*, ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(EscapeZone, EscapedVictim);
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_MercuryJohnnyIntroSequenceComplete
	void Server_MercuryJohnnyIntroSequenceComplete() // [0x1e768e0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_LeatherfaceIntroSequenceComplete
	void Server_LeatherfaceIntroSequenceComplete() // [0x1dfee90] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_IncrementBloodVialCountForHarvestLocation
	void Server_IncrementBloodVialCountForHarvestLocation(ABBQHarvestLocation* HarvestLocation) // [0x1e76830] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQHarvestLocation*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(HarvestLocation);
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_Grandpa_StopSonar
	void Server_Grandpa_StopSonar() // [0x1e767f0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_Grandpa_StartSonar
	void Server_Grandpa_StartSonar() // [0x1e767d0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_Grandpa_SetState
	void Server_Grandpa_SetState(EGrandpaState InNewState) // [0x1e76750] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EGrandpaState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(InNewState);
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_Grandpa_ForcePosition
	void Server_Grandpa_ForcePosition(int32_t InNewGrandpaIndex) // [0x1e766c0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(InNewGrandpaIndex);
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_Grandpa_FeedBlood
	void Server_Grandpa_FeedBlood() // [0x1e766a0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_ForceSetStat
	void Server_ForceSetStat(ABBQPlayerState* PS, EPlayerStatType StatType, int32_t NewValue) // [0x1e76590] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQPlayerState*, EPlayerStatType, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(PS, StatType, NewValue);
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_ForceSetAchievementProgress
	void Server_ForceSetAchievementProgress(ABBQGameSessionPlayerState* PS, FString AchievementID, int32_t DELTA) // [0x1e76460] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionPlayerState*, FString, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func(PS, AchievementID, DELTA);
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Server_ApplyGameplayVariableMod
	void Server_ApplyGameplayVariableMod(UGameplayVariableMod* GameplayVariableMod, int32_t Priority) // [0x1e76220] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(UGameplayVariableMod*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func(GameplayVariableMod, Priority);
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Client_TriggerNoiseOutlineComponent
	void Client_TriggerNoiseOutlineComponent(UBBQNoiseOutlineComponent* NoiseOutlineComponent) // [0x1e74f80] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(UBBQNoiseOutlineComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(NoiseOutlineComponent);
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Client_SpawnNoiseOutlineComponentAttached
	void Client_SpawnNoiseOutlineComponentAttached(AActor* Actor, FNoiseOutlineConfig Config) // [0x1e74e30] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(AActor*, FNoiseOutlineConfig);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func(Actor, Config);
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Client_PullMetaValueByReference
	void Client_PullMetaValueByReference(FBBQMetaRef MetaRef) // [0x1e74b60] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(FBBQMetaRef);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(MetaRef);
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Client_ExecuteComm
	void Client_ExecuteComm(UBBQDialogComponent* InstigatorDialogComponent, FName CommId, FName LineId) // [0x1e74990] Net|Native|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(UBBQDialogComponent*, FName, FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(InstigatorDialogComponent, CommId, LineId);
	}
	// Function /Script/BBQGameSession.BBQPlayerRpcChannel.Client_DebugSetRadius
	void Client_DebugSetRadius(UBBQTriggerAreaComponent* TriggerArea, float NewRadius) // [0x1e748b0] Net|NetReliableNative|Event|Public|NetClient 
	{
		typedef void (*FuncPtr)(UBBQTriggerAreaComponent*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func(TriggerArea, NewRadius);
	}
};

/// Class /Script/BBQGameSession.BBQPointOfInterestComponent
/// Size: 0x04C0 (1216 bytes) (0x000480 - 0x0004C0) align 16 MaxSize: 0x04C0
class UBBQPointOfInterestComponent : public USphereComponent
{ 
public:
	SDK_UNDEFINED(16,540) /* FDelegateProperty */      __um(IsPOIActiveDelegate);                                  // 0x0480   (0x0010)  
	FDataTableRowHandle                                Definition;                                                 // 0x0490   (0x0010)  
	unsigned char                                      UnknownData00_7[0x20];                                      // 0x04A0   (0x0020)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQPointOfInterestComponent.IsPOIActiveDelegate__DelegateSignature
	bool IsPOIActiveDelegate__DelegateSignature(UBBQPointOfInterestLocatorComponent* POILocator) // [0x2438a30] Public|Delegate      
	{
		typedef bool (*FuncPtr)(UBBQPointOfInterestLocatorComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(POILocator);
	}
	// Function /Script/BBQGameSession.BBQPointOfInterestComponent.ActivateWithTimer
	void ActivateWithTimer(float Duration) // [0x1e79a90] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Duration);
	}
};

/// Class /Script/BBQGameSession.BBQPointOfInterestLocatorComponent
/// Size: 0x0670 (1648 bytes) (0x000480 - 0x000670) align 16 MaxSize: 0x0670
class UBBQPointOfInterestLocatorComponent : public USphereComponent
{ 
public:
	TEnumAsByte<ECollisionChannel>                     LineOfSightTraceChannel;                                    // 0x0480   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0481   (0x0007)  MISSED
	FGameplayTagContainer                              RequiredAllCharacterTags;                                   // 0x0488   (0x0020)  
	FGameplayTagContainer                              RequiredAnyCharacterTags;                                   // 0x04A8   (0x0020)  
	FGameplayTagContainer                              ForbiddenCharacterTags;                                     // 0x04C8   (0x0020)  
	bool                                               bEnablePOI;                                                 // 0x04E8   (0x0001)  
	bool                                               bEnableAiming;                                              // 0x04E9   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x04EA   (0x0002)  MISSED
	int32_t                                            AimingPriority;                                             // 0x04EC   (0x0004)  
	float                                              MaxAimingInactivityTime;                                    // 0x04F0   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x04F4   (0x0004)  MISSED
	FGameplayTagContainer                              AimingRequiredAllCharacterTags;                             // 0x04F8   (0x0020)  
	FGameplayTagContainer                              AimingRequiredAnyCharacterTags;                             // 0x0518   (0x0020)  
	FGameplayTagContainer                              AimingForbiddenCharacterTags;                               // 0x0538   (0x0020)  
	TMap<FGameplayTag, float>                          AimingPitchOverride;                                        // 0x0558   (0x0050)  
	class UBBQPointOfInterestComponent*                CurrentPOI;                                                 // 0x05A8   (0x0008)  
	TMap<class UBBQPointOfInterestComponent*, float>   IgnoredPOIs;                                                // 0x05B0   (0x0050)  
	unsigned char                                      UnknownData03_6[0x68];                                      // 0x0600   (0x0068)  MISSED
	bool                                               bIsAimingActive;                                            // 0x0668   (0x0001)  
	unsigned char                                      UnknownData04_7[0x7];                                       // 0x0669   (0x0007)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQPointOfInterestLocatorComponent.RemoveIgnoredPOI
	void RemoveIgnoredPOI(UBBQPointOfInterestComponent* POI) // [0x1e7a580] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UBBQPointOfInterestComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(POI);
	}
	// Function /Script/BBQGameSession.BBQPointOfInterestLocatorComponent.IsPOIActive
	bool IsPOIActive() // [0x1e79fa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPointOfInterestLocatorComponent.IsAimingActive
	bool IsAimingActive() // [0x1e79f60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPointOfInterestLocatorComponent.GetHeadAimingRotation
	FRotator GetHeadAimingRotation(FRotator& InAimingRotation) // [0x1e79e20] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FRotator (*FuncPtr)(FRotator&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(InAimingRotation);
	}
	// Function /Script/BBQGameSession.BBQPointOfInterestLocatorComponent.GetCurrentPOI
	UBBQPointOfInterestComponent* GetCurrentPOI() // [0x1e79c90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UBBQPointOfInterestComponent* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQPointOfInterestLocatorComponent.AddIgnoredPOI
	void AddIgnoredPOI(UBBQPointOfInterestComponent* POI, float Duration) // [0x1e79b10] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UBBQPointOfInterestComponent*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(POI, Duration);
	}
};

/// Class /Script/BBQGameSession.BBQPoisonCloud
/// Size: 0x0328 (808 bytes) (0x000228 - 0x000328) align 8 MaxSize: 0x0328
class ABBQPoisonCloud : public AActor
{ 
public:
	class USphereComponent*                            PoisonCloudSphere;                                          // 0x0228   (0x0008)  
	class UClass*                                      PoisonEffectClass;                                          // 0x0230   (0x0008)  
	TMap<ETeamID, class UClass*>                       PoisonEffectTeamOverrideClass;                              // 0x0238   (0x0050)  
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                               // 0x0288   (0x0001)  
	ETeamID                                            TargetTeamID;                                               // 0x0289   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x028A   (0x0006)  MISSED
	FGameplayTagContainer                              PoisonImmunityTags;                                         // 0x0290   (0x0020)  
	float                                              OwnerStartImmuneDuration;                                   // 0x02B0   (0x0004)  
	float                                              MaxRangeForCommTrigger;                                     // 0x02B4   (0x0004)  
	TArray<class ABBQGameSessionCharacter*>            CharactersInside;                                           // 0x02B8   (0x0010)  
	SDK_UNDEFINED(80,541) /* TSet<ABBQGameSessionCharacter*> */ __um(CharactersPoisoned);                          // 0x02C8   (0x0050)  
	unsigned char                                      UnknownData01_7[0x10];                                      // 0x0318   (0x0010)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQPoisonCloud.PoisonTick
	void PoisonTick() // [0x1e7a560] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPoisonCloud.OnPoisonCloudEndOverlap
	void OnPoisonCloudEndOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e7a210] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQPoisonCloud.OnPoisonCloudBeginOverlap
	void OnPoisonCloudBeginOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e7a0b0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQPoisonCloud.OnCharacterPoisoned
	void OnCharacterPoisoned(ABBQGameSessionCharacter* Character) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(Character);
	}
};

/// Class /Script/BBQGameSession.BBQPolicePhone
/// Size: 0x02F8 (760 bytes) (0x000228 - 0x0002F8) align 8 MaxSize: 0x02F8
class ABBQPolicePhone : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x18];                                      // 0x0228   (0x0018)  MISSED
	int32_t                                            TotalFusesNum;                                              // 0x0240   (0x0004)  
	int32_t                                            FuseSlotsNum;                                               // 0x0244   (0x0004)  
	int32_t                                            FuseColorNum;                                               // 0x0248   (0x0004)  
	FVector2D                                          FuseAmpValueRange;                                          // 0x024C   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0254   (0x0004)  MISSED
	TArray<FFuse>                                      FuseDataArray;                                              // 0x0258   (0x0010)  
	TArray<int32_t>                                    AMPValues;                                                  // 0x0268   (0x0010)  
	TArray<int32_t>                                    SolutionColorIndexes;                                       // 0x0278   (0x0010)  
	uint32_t                                           InitialSeed;                                                // 0x0288   (0x0004)  
	float                                              MinigameStartDelay;                                         // 0x028C   (0x0004)  
	FGameplayTagContainer                              MinigameStartForbiddenTags;                                 // 0x0290   (0x0020)  
	class UClass*                                      MinigameClass;                                              // 0x02B0   (0x0008)  
	class ABBQMinigameV2*                              MinigameInstance;                                           // 0x02B8   (0x0008)  
	class USceneComponent*                             RootSceneComponent;                                         // 0x02C0   (0x0008)  
	class UCameraComponent*                            CameraComponent;                                            // 0x02C8   (0x0008)  
	class USceneComponent*                             PolicePhoneInteractionLocator;                              // 0x02D0   (0x0008)  
	bool                                               bRequiresMinigameToFix;                                     // 0x02D8   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x02D9   (0x0007)  MISSED
	FPolicePhoneInteractionState                       InteractionState;                                           // 0x02E0   (0x0010)  
	char                                               CurrentPolicePhoneState;                                    // 0x02F0   (0x0001)  
	unsigned char                                      UnknownData03_7[0x7];                                       // 0x02F1   (0x0007)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQPolicePhone.UnsetPolicePhoneStateFlag
	void UnsetPolicePhoneStateFlag(EPolicePhoneState Flag) // [0x1e7aa40] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EPolicePhoneState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Flag);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.TakeOverPlayersCamera
	void TakeOverPlayersCamera(ABBQGameSessionCharacter* PlayingCharacter) // [0x1e7a9b0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(PlayingCharacter);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.StartMinigame
	void StartMinigame(ABBQGameSessionCharacter* PlayingCharacter) // [0x1e7a920] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(PlayingCharacter);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.SetPolicePhoneStateFlag
	void SetPolicePhoneStateFlag(EPolicePhoneState Flag) // [0x1e7a8a0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EPolicePhoneState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(Flag);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.SetInteractionState
	void SetInteractionState(ABBQGameSessionCharacter* Character, EPolicePhoneAction InteractionToPerform) // [0x1e7a7d0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, EPolicePhoneAction);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Character, InteractionToPerform);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.RestorePlayersCamera
	void RestorePlayersCamera(ABBQGameSessionCharacter* PlayingCharacter) // [0x1e7a630] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(PlayingCharacter);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.OnUpdateStateFromMinigame
	void OnUpdateStateFromMinigame(FBBQMinigameNetState_FuseBox& PolicePhoneState) // [0x2438a30] Event|Protected|HasOutParms|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FBBQMinigameNetState_FuseBox&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(PolicePhoneState);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.OnStartMinigameDelayEnded
	void OnStartMinigameDelayEnded() // [0x1e7a540] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.OnRep_PolicePhoneState
	void OnRep_PolicePhoneState(char PrevState) // [0x1e7a4c0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(char);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(PrevState);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.OnRep_PolicePhoneInteractionState
	void OnRep_PolicePhoneInteractionState(FPolicePhoneInteractionState& PrevState) // [0x1e7a420] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FPolicePhoneInteractionState&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(PrevState);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.OnRep_InitialSeed
	void OnRep_InitialSeed() // [0x1e7a400] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.OnPolicePhonePuzzleSetupComplete
	void OnPolicePhonePuzzleSetupComplete() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.OnPolicePhoneDoorOpened
	void OnPolicePhoneDoorOpened(ABBQGameSessionCharacter* Player) // [0x1e7a370] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		func(Player);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.OnMinigameSpawned
	void OnMinigameSpawned() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.OnMinigameEnded
	void OnMinigameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason Reason) // [0x1e79fe0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		func(Minigame, Reason);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.IsPolicePhoneStateMaskSet
	bool IsPolicePhoneStateMaskSet(int32_t InPolicePhoneState) // [0x1e24e80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func(InPolicePhoneState);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.IsPolicePhoneStateFlagSet
	bool IsPolicePhoneStateFlagSet(EPolicePhoneState FlagToCheck) // [0x1e24df0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(EPolicePhoneState);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		return func(FlagToCheck);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.IsPolicePhoneStateEqual
	bool IsPolicePhoneStateEqual(int32_t InPolicePhoneState) // [0x1e24d50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func(InPolicePhoneState);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.GeneratePolicePhonePuzzle
	void GeneratePolicePhonePuzzle() // [0x1e79c70] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[18]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.ClearInteractingCharacter
	void ClearInteractingCharacter(ABBQGameSessionCharacter* Character) // [0x1e79be0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[19]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.BP_StartInteraction_PlaceFuse
	void BP_StartInteraction_PlaceFuse(ABBQGameSessionCharacter* InteractingCharacter) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[20]);
		func(InteractingCharacter);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.BP_OnPolicePhoneFlagChanged
	void BP_OnPolicePhoneFlagChanged(EPolicePhoneState Flag, bool bValue) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EPolicePhoneState, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[21]);
		func(Flag, bValue);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.BP_OnMinigameStarted
	void BP_OnMinigameStarted(ABBQGameSessionCharacter* PlayingCharacter) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[22]);
		func(PlayingCharacter);
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.BP_OnLeaveInteraction
	void BP_OnLeaveInteraction() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[23]);
		func();
	}
	// Function /Script/BBQGameSession.BBQPolicePhone.BP_OnFixPolicePhoneMinigameEnded
	void BP_OnFixPolicePhoneMinigameEnded(EEndMinigameReason EndReason) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[24]);
		func(EndReason);
	}
};

/// Class /Script/BBQGameSession.BBQPowderCloud
/// Size: 0x0278 (632 bytes) (0x000228 - 0x000278) align 8 MaxSize: 0x0278
class ABBQPowderCloud : public AActor
{ 
public:
	TArray<class ABBQBaseCharacter*>                   HealVictims;                                                // 0x0228   (0x0010)  
	FGameplayTag                                       OwnerCharacterTag;                                          // 0x0238   (0x0008)  
	FGameplayTag                                       HealVictimsPerkTag;                                         // 0x0240   (0x0008)  
	FGameplayTag                                       MedicalBenefitsPerkTag;                                     // 0x0248   (0x0008)  
	FGameplayTag                                       RescueMedicPerkPerkTag;                                     // 0x0250   (0x0008)  
	class UClass*                                      HealVictimsGameplayEffect;                                  // 0x0258   (0x0008)  
	class UClass*                                      MedicalBenefitsGameplayEffect;                              // 0x0260   (0x0008)  
	class UClass*                                      RescueMedicPerkGameplayEffect;                              // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x0270   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQPowderCloud.UpdateHealVictimsAbility
	void UpdateHealVictimsAbility(bool bActivateAbility, ABBQBaseCharacter* Character) // [0x1e7aac0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool, ABBQBaseCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(bActivateAbility, Character);
	}
};

/// Class /Script/BBQGameSession.BBQCustomTriggerCondition
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQCustomTriggerCondition : public UObject
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQCustomTriggerCondition.CanTrigger
	bool CanTrigger(AActor* Owner, ABBQGameSessionCharacter* Player) // [0x1e89150] Native|Event|Public|BlueprintEvent|Const 
	{
		typedef bool (*FuncPtr)(AActor*, ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func(Owner, Player);
	}
};

/// Class /Script/BBQGameSession.BBQCustomTriggerCondition_PowderCloud
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQCustomTriggerCondition_PowderCloud : public UBBQCustomTriggerCondition
{ 
public:
};

/// Class /Script/BBQGameSession.BBQProceduralFence
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQProceduralFence : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQPushButton
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQPushButton : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQRecoveryVolume
/// Size: 0x0238 (568 bytes) (0x000228 - 0x000238) align 8 MaxSize: 0x0238
class ABBQRecoveryVolume : public AActor
{ 
public:
	class USceneComponent*                             Root;                                                       // 0x0228   (0x0008)  
	class UBoxComponent*                               RecoveryVolume;                                             // 0x0230   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQReplayPlayerController
/// Size: 0x0578 (1400 bytes) (0x000578 - 0x000578) align 8 MaxSize: 0x0578
class ABBQReplayPlayerController : public APlayerController
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQReplayPlayerController.SetCurrentReplayTime
	void SetCurrentReplayTime(int32_t TimeInSeconds) // [0x1e7a740] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(TimeInSeconds);
	}
	// Function /Script/BBQGameSession.BBQReplayPlayerController.SetCurrentReplayRate
	void SetCurrentReplayRate(float Rate) // [0x1e7a6c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Rate);
	}
	// Function /Script/BBQGameSession.BBQReplayPlayerController.RestartRecording
	void RestartRecording() // [0x1e7a610] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQReplayPlayerController.GetReplayLength
	int32_t GetReplayLength() // [0x1e79ef0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQReplayPlayerController.GetCurrentReplayTime
	int32_t GetCurrentReplayTime() // [0x1e79cb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQScriptDebugger
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQScriptDebugger : public UObject
{ 
public:
};

/// Class /Script/BBQGameSession.BBQSidling
/// Size: 0x02F8 (760 bytes) (0x000228 - 0x0002F8) align 8 MaxSize: 0x02F8
class ABBQSidling : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x10];                                      // 0x0228   (0x0010)  MISSED
	bool                                               bUseExitMarkers;                                            // 0x0238   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0239   (0x0007)  MISSED
	class USceneComponent*                             EntryLeftMarker;                                            // 0x0240   (0x0008)  
	class USceneComponent*                             EntryRightMarker;                                           // 0x0248   (0x0008)  
	class UBoxComponent*                               ExitLeft;                                                   // 0x0250   (0x0008)  
	class UBoxComponent*                               ExitRight;                                                  // 0x0258   (0x0008)  
	class UNavLinkCustomComponent*                     SmartLink;                                                  // 0x0260   (0x0008)  
	class UBoxComponent*                               InteractionBox;                                             // 0x0268   (0x0008)  
	class UBBQInteractionComponent*                    Interaction;                                                // 0x0270   (0x0008)  
	class UBBQInteractionEventComponent*               InteractionEvent;                                           // 0x0278   (0x0008)  
	float                                              EntryCoolDown;                                              // 0x0280   (0x0004)  
	bool                                               bCooldownActive;                                            // 0x0284   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0285   (0x0003)  MISSED
	TMap<char, class ABBQGameSessionCharacterAnimated*> SidlePlayers;                                              // 0x0288   (0x0050)  
	TArray<class ABBQGameSessionCharacterAnimated*>    SortedPlayerArrayCache;                                     // 0x02D8   (0x0010)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x02E8   (0x0008)  MISSED
	class USceneComponent*                             LastUsedEntryMarker;                                        // 0x02F0   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQSidling.OnSidleEnded
	void OnSidleEnded(AActor* ExitingCharater) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(ExitingCharater);
	}
	// Function /Script/BBQGameSession.BBQSidling.NetMulticast_OnSidleEnded
	void NetMulticast_OnSidleEnded(AActor* ExitingCharater) // [0x1e06fa0] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(ExitingCharater);
	}
	// Function /Script/BBQGameSession.BBQSidling.IsOnCoolDown
	bool IsOnCoolDown() // [0x1e79f80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQSidling.GetTraversingActor
	AActor* GetTraversingActor() // [0x1e79f20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class AActor* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQSidling.GetLastInteractedEntry
	USceneComponent* GetLastInteractedEntry() // [0x1e79ed0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class USceneComponent* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQSidling.GetEntryExitPoints
	void GetEntryExitPoints(FVector& Target, USceneComponent*& Entry, USceneComponent*& Exit) // [0x1e79ce0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	{
		typedef void (*FuncPtr)(FVector&, USceneComponent*&, USceneComponent*&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Target, Entry, Exit);
	}
	// Function /Script/BBQGameSession.BBQSidling.BP_GetInteractionPosition
	bool BP_GetInteractionPosition(FName InteractionEventName, int32_t Index, FVector& OutLocation) // [0x2438a30] Event|Public|HasOutParms|HasDefaults|BlueprintEvent|Const 
	{
		typedef bool (*FuncPtr)(FName, int32_t, FVector&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		return func(InteractionEventName, Index, OutLocation);
	}
};

/// Class /Script/BBQGameSession.BBQSimpleCostCalculation
/// Size: 0x0180 (384 bytes) (0x000040 - 0x000180) align 8 MaxSize: 0x0180
class UBBQSimpleCostCalculation : public UBBQGameplayModMagnitudeCalc
{ 
public:
	FValueSelector                                     cost;                                                       // 0x0040   (0x00A0)  
	FValueSelector                                     Multiplier;                                                 // 0x00E0   (0x00A0)  
};

/// Class /Script/BBQGameSession.BBQSissyPowderPickup
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQSissyPowderPickup : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQSkeletalMeshActor
/// Size: 0x02B0 (688 bytes) (0x0002B0 - 0x0002B0) align 8 MaxSize: 0x02B0
class ABBQSkeletalMeshActor : public ASkeletalMeshActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQSkeletalMeshComponent
/// Size: 0x0F10 (3856 bytes) (0x000EF8 - 0x000F10) align 16 MaxSize: 0x0F10
class UBBQSkeletalMeshComponent : public USkeletalMeshComponent
{ 
public:
	FVector                                            RagdollOverlapTestLift;                                     // 0x0EF8   (0x000C)  
	int32_t                                            RagdollOverlapTestStuckHitsThreshold;                       // 0x0F04   (0x0004)  
	unsigned char                                      UnknownData00_7[0x8];                                       // 0x0F08   (0x0008)  MISSED
};

/// Class /Script/BBQGameSession.BBQSneakAttackAreaComponent
/// Size: 0x0560 (1376 bytes) (0x000480 - 0x000560) align 16 MaxSize: 0x0560
class UBBQSneakAttackAreaComponent : public USphereComponent
{ 
public:
	unsigned char                                      UnknownData00_8[0x20];                                      // 0x0480   (0x0020)  MISSED
	FGameplayTag                                       CanSneakAttackTag;                                          // 0x04A0   (0x0008)  
	class UClass*                                      CanSneakAttackGrandpaEffectClass;                           // 0x04A8   (0x0008)  
	FGameplayTag                                       MaxFamilyBondLevelModifierTag;                              // 0x04B0   (0x0008)  
	FGameplayTag                                       ShardItemTag;                                               // 0x04B8   (0x0008)  
	FGameplayTag                                       AttackerTagWhileSlideInPlace;                               // 0x04C0   (0x0008)  
	FGameplayTagContainer                              TagsWhileBeingSneakAttacked;                                // 0x04C8   (0x0020)  
	float                                              SneakAttackSlideInPlaceDuration;                            // 0x04E8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x04EC   (0x0004)  MISSED
	class UClass*                                      FamilyBondLockEffectClass;                                  // 0x04F0   (0x0008)  
	class UClass*                                      GrandpaSneakAttackedEffect;                                 // 0x04F8   (0x0008)  
	int32_t                                            LevelUpsAllowedInBondLock;                                  // 0x0500   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0504   (0x0004)  MISSED
	TArray<FActiveGameplayEffectHandle>                FamilyBondLockEffectHandles;                                // 0x0508   (0x0010)  
	TArray<FQuadrantInfo>                              AllQuadDividers;                                            // 0x0518   (0x0010)  
	float                                              AngleOffsetWhenOnDivider;                                   // 0x0528   (0x0004)  
	float                                              ThresholdAvailableArea;                                     // 0x052C   (0x0004)  
	TArray<class ABBQGameSessionCharacter*>            PlayersInArea;                                              // 0x0530   (0x0010)  
	FSneakAttackInfo                                   OngoingSneakAttackInfo;                                     // 0x0540   (0x0010)  
	unsigned char                                      UnknownData03_7[0x10];                                      // 0x0550   (0x0010)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQSneakAttackAreaComponent.StartSneakAttack
	void StartSneakAttack(ABBQGameSessionCharacterAnimated* Attacker, bool bShouldRemoveShard) // [0x1e7ec50] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Attacker, bShouldRemoveShard);
	}
	// Function /Script/BBQGameSession.BBQSneakAttackAreaComponent.OnSneakAttackAreaExit
	void OnSneakAttackAreaExit(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e7e8a0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQSneakAttackAreaComponent.OnSneakAttackAreaEntered
	void OnSneakAttackAreaEntered(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e7e740] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQSneakAttackAreaComponent.OnRep_OngoingSneakAttackInfo
	void OnRep_OngoingSneakAttackInfo(FSneakAttackInfo& PrevInfo) // [0x1e7e590] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FSneakAttackInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(PrevInfo);
	}
	// Function /Script/BBQGameSession.BBQSneakAttackAreaComponent.GetBestQuadrantInfo
	bool GetBestQuadrantInfo(ABBQGameSessionCharacterAnimated* Attacker, FQuadrantInfo& OutQuadrant) // [0x1e7dcb0] Final|Native|Public|HasOutParms|BlueprintCallable 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacterAnimated*, FQuadrantInfo&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		return func(Attacker, OutQuadrant);
	}
	// Function /Script/BBQGameSession.BBQSneakAttackAreaComponent.GetBestLocatorForPlayer
	USceneComponent* GetBestLocatorForPlayer(ABBQGameSessionCharacter* Player) // [0x1e7dc10] Final|Native|Protected|BlueprintCallable 
	{
		typedef class USceneComponent* (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func(Player);
	}
	// Function /Script/BBQGameSession.BBQSneakAttackAreaComponent.ChangeQuadrantStateOfPlayerQuadrant
	void ChangeQuadrantStateOfPlayerQuadrant(ABBQGameSessionCharacter* Player, bool bNewState) // [0x1e7d940] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(Player, bNewState);
	}
	// Function /Script/BBQGameSession.BBQSneakAttackAreaComponent.ChangeQuadrantStateFromLocator
	void ChangeQuadrantStateFromLocator(USceneComponent* Locator, bool bNewState) // [0x1e7d870] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(USceneComponent*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(Locator, bNewState);
	}
};

/// Class /Script/BBQGameSession.BBQSneakAttackNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UBBQSneakAttackNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.BBQSneakAttackBehaviour
/// Size: 0x0350 (848 bytes) (0x0002E8 - 0x000350) align 8 MaxSize: 0x0350
class ABBQSneakAttackBehaviour : public ABBQCharacterBehaviour
{ 
public:
	FBBQCinematicCameraSetup                           CinematicCameraSetup;                                       // 0x02E8   (0x0048)  
	FGameplayTag                                       ItemTag;                                                    // 0x0330   (0x0008)  
	class ABBQGameSessionCharacterAnimated*            CharacterOwner;                                             // 0x0338   (0x0008)  
	class ABBQGameSessionCharacterAnimated*            CharacterTarget;                                            // 0x0340   (0x0008)  
	float                                              BackstabConeAngle;                                          // 0x0348   (0x0004)  
	unsigned char                                      UnknownData00_7[0x4];                                       // 0x034C   (0x0004)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQSneakAttackBehaviour.OnMontageBlendOut
	void OnMontageBlendOut(UAnimMontage* Montage, bool bInterrupted) // [0x1e7e320] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQSneakAttackBehaviour.NetMulticast_PlaySneakAttackMontage
	void NetMulticast_PlaySneakAttackMontage(EBBQSneakAttackDirection Direction) // [0x1e7e050] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(EBBQSneakAttackDirection);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Direction);
	}
	// Function /Script/BBQGameSession.BBQSneakAttackBehaviour.InitiateSneakAttack
	void InitiateSneakAttack(ABBQGameSessionCharacterAnimated* Attacker, ABBQGameSessionCharacterAnimated* Target, UClass* AttackerBehaviourClass, UClass* TargetBehaviourClass) // [0x1e7ded0] Final|Native|Static|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, ABBQGameSessionCharacterAnimated*, UClass*, UClass*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Attacker, Target, AttackerBehaviourClass, TargetBehaviourClass);
	}
};

/// Class /Script/BBQGameSession.BBQSneakAttackTargetBehaviour
/// Size: 0x0378 (888 bytes) (0x0002E8 - 0x000378) align 8 MaxSize: 0x0378
class ABBQSneakAttackTargetBehaviour : public ABBQCharacterBehaviour
{ 
public:
	class UClass*                                      GameplayEffectToApply;                                      // 0x02E8   (0x0008)  
	FBBQCinematicCameraSetup                           CinematicCameraSetup;                                       // 0x02F0   (0x0048)  
	class ABBQGameSessionCharacterAnimated*            CharacterOwner;                                             // 0x0338   (0x0008)  
	class ABBQGameSessionCharacterAnimated*            CharacterAttacker;                                          // 0x0340   (0x0008)  
	class UAbilitySystemComponent*                     CachedOwnerASC;                                             // 0x0348   (0x0008)  
	class UAbilitySystemComponent*                     CachedAttackerASC;                                          // 0x0350   (0x0008)  
	unsigned char                                      UnknownData00_7[0x20];                                      // 0x0358   (0x0020)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQSneakAttackTargetBehaviour.StopStunInto
	void StopStunInto() // [0x1e7ed20] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQSneakAttackTargetBehaviour.OnReactionOutOfMontageEnd
	void OnReactionOutOfMontageEnd(UAnimMontage* Montage, bool bInterrupted) // [0x1e7e4c0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQSneakAttackTargetBehaviour.OnReactionIntoMontageBlendOut
	void OnReactionIntoMontageBlendOut(UAnimMontage* Montage, bool bInterrupted) // [0x1e7e3f0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQSneakAttackTargetBehaviour.NetMulticast_StopStunInto
	void NetMulticast_StopStunInto() // [0x1e4e6e0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQSneakAttackTargetBehaviour.NetMulticast_PlaySneakAttackReactionMontage
	void NetMulticast_PlaySneakAttackReactionMontage(EBBQSneakAttackDirection Direction) // [0x1e7e0d0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(EBBQSneakAttackDirection);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Direction);
	}
};

/// Class /Script/BBQGameSession.BBQSneakAttackKnifeNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UBBQSneakAttackKnifeNotifyState : public UBBQSneakAttackNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.BBQSneakAttackKnifeBehaviour
/// Size: 0x0350 (848 bytes) (0x000350 - 0x000350) align 8 MaxSize: 0x0350
class ABBQSneakAttackKnifeBehaviour : public ABBQSneakAttackBehaviour
{ 
public:
};

/// Class /Script/BBQGameSession.BBQSpectatorPawn
/// Size: 0x0650 (1616 bytes) (0x0002B0 - 0x000650) align 8 MaxSize: 0x0650
class ABBQSpectatorPawn : public ASpectatorPawn
{ 
public:
	FBBQPopUpSpec                                      ExitSpectatorPopUpSpec;                                     // 0x02B0   (0x00E0)  
	FBBQPopUpSpec                                      ExitSpectatorCustomPopUpSpec;                               // 0x0390   (0x00E0)  
	FBBQPopUpSpec                                      ExitAsHostSpectatorPopUpSpec;                               // 0x0470   (0x00E0)  
	FBBQPopUpSpec                                      ExitAsGuestSpectatorPopUpSpec;                              // 0x0550   (0x00E0)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0630   (0x0018)  MISSED
	bool                                               bNoStaticCameraOnSpectateStart;                             // 0x0648   (0x0001)  
	unsigned char                                      UnknownData01_7[0x7];                                       // 0x0649   (0x0007)  MISSED
};

/// Class /Script/BBQGameSession.BBQSplineCameraVolume
/// Size: 0x0270 (624 bytes) (0x000260 - 0x000270) align 8 MaxSize: 0x0270
class ABBQSplineCameraVolume : public AVolume
{ 
public:
	class UBBQSplineCameraVolumeComponent*             SplineCameraVolumeComponent;                                // 0x0260   (0x0008)  
	class USplineComponent*                            SplineComponent;                                            // 0x0268   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQCameraVolumeComponent
/// Size: 0x0198 (408 bytes) (0x0000B0 - 0x000198) align 8 MaxSize: 0x0198
class UBBQCameraVolumeComponent : public UActorComponent
{ 
public:
	FName                                              CameraState;                                                // 0x00B0   (0x0008)  
	bool                                               bDisableCollisionTest;                                      // 0x00B8   (0x0001)  
	bool                                               bDisableCollisionTestForTransition;                         // 0x00B9   (0x0001)  
	bool                                               bOverrideInTransitionParams;                                // 0x00BA   (0x0001)  
	bool                                               bInTransitionHardCut;                                       // 0x00BB   (0x0001)  
	float                                              InTransitionTime;                                           // 0x00BC   (0x0004)  
	class UCurveFloat*                                 InTransitionCurve;                                          // 0x00C0   (0x0008)  
	float                                              InTransitionDelay;                                          // 0x00C8   (0x0004)  
	bool                                               bDetachCameraOnInTransition;                                // 0x00CC   (0x0001)  
	bool                                               bIgnorePreviousCameraOutTransitionDelay;                    // 0x00CD   (0x0001)  
	bool                                               bOverrideOutTransitionParams;                               // 0x00CE   (0x0001)  
	bool                                               bOutTransitionHardCut;                                      // 0x00CF   (0x0001)  
	float                                              OutTransitionTime;                                          // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00D4   (0x0004)  MISSED
	class UCurveFloat*                                 OutTransitionCurve;                                         // 0x00D8   (0x0008)  
	float                                              OutTransitionDelay;                                         // 0x00E0   (0x0004)  
	bool                                               bDetachCameraOnOutTransition;                               // 0x00E4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x00E5   (0x0003)  MISSED
	FGameplayTagContainer                              RequiredMovementStateTags;                                  // 0x00E8   (0x0020)  
	int32_t                                            RequiredStance;                                             // 0x0108   (0x0004)  
	int32_t                                            RequiredGait;                                               // 0x010C   (0x0004)  
	bool                                               bDontRequireVolumeOverlapWhenActive;                        // 0x0110   (0x0001)  
	bool                                               bUseOngoingRequiredMovementState;                           // 0x0111   (0x0001)  
	unsigned char                                      UnknownData02_6[0x6];                                       // 0x0112   (0x0006)  MISSED
	FGameplayTagContainer                              OngoingRequiredMovementStateTags;                           // 0x0118   (0x0020)  
	int32_t                                            OngoingRequiredStance;                                      // 0x0138   (0x0004)  
	int32_t                                            OngoingRequiredGait;                                        // 0x013C   (0x0004)  
	FName                                              CameraBoomAttachBone;                                       // 0x0140   (0x0008)  
	float                                              TimeDisabledAfterUserInput;                                 // 0x0148   (0x0004)  
	int32_t                                            Priority;                                                   // 0x014C   (0x0004)  
	FDataTableRowHandle                                CameraStateModifier;                                        // 0x0150   (0x0010)  
	float                                              ModifierBlendTime;                                          // 0x0160   (0x0004)  
	bool                                               bApplyModifierOnlyWhenActive;                               // 0x0164   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0165   (0x0003)  MISSED
	SDK_UNDEFINED(16,542) /* FDelegateProperty */      __um(ShouldApplyToActorDelegate);                           // 0x0168   (0x0010)  
	TArray<FComponentReference>                        PrimitiveComponentReferences;                               // 0x0178   (0x0010)  
	TArray<class UPrimitiveComponent*>                 PrimitiveComponents;                                        // 0x0188   (0x0010)  
};

/// Class /Script/BBQGameSession.BBQSplineCameraVolumeComponent
/// Size: 0x01F0 (496 bytes) (0x000198 - 0x0001F0) align 8 MaxSize: 0x01F0
class UBBQSplineCameraVolumeComponent : public UBBQCameraVolumeComponent
{ 
public:
	FComponentReference                                SplineComponentReference;                                   // 0x0198   (0x0028)  
	class USplineComponent*                            SplineComponent;                                            // 0x01C0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x01C8   (0x0010)  MISSED
	float                                              DesiredDistanceToPlayer;                                    // 0x01D8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x01DC   (0x0004)  MISSED
	class UCurveFloat*                                 DesiredDistanceMultCurve;                                   // 0x01E0   (0x0008)  
	ESplineCameraDirection                             DesiredCameraDirection;                                     // 0x01E8   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x01E9   (0x0003)  MISSED
	float                                              SplineApproximationPrecisionFactor;                         // 0x01EC   (0x0004)  


	/// Functions
	// Function /Script/BBQGameSession.BBQSplineCameraVolumeComponent.SetSplineComponent
	void SetSplineComponent(USplineComponent* Component) // [0x1e7ebc0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(USplineComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Component);
	}
};

/// Class /Script/BBQGameSession.BBQSpringArmComponent
/// Size: 0x02F0 (752 bytes) (0x000280 - 0x0002F0) align 16 MaxSize: 0x02F0
class UBBQSpringArmComponent : public USpringArmComponent
{ 
public:
	FVector                                            LookAtPointOffset;                                          // 0x0280   (0x000C)  
	bool                                               bTraceToTargetPoint;                                        // 0x028C   (0x0001)  
	bool                                               bTraceToArmOrigin;                                          // 0x028D   (0x0001)  
	bool                                               bAllowTargetPointObscuring;                                 // 0x028E   (0x0001)  
	bool                                               bEnablePlayersCollision;                                    // 0x028F   (0x0001)  
	TEnumAsByte<ECollisionChannel>                     PlayersCollisionProbeChannel;                               // 0x0290   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0291   (0x0003)  MISSED
	float                                              TargetPointProbeSize;                                       // 0x0294   (0x0004)  
	float                                              MinDistanceToObscuringGeometry;                             // 0x0298   (0x0004)  
	float                                              MaxTimeObscured;                                            // 0x029C   (0x0004)  
	float                                              MaxDistanceObscured;                                        // 0x02A0   (0x0004)  
	float                                              LocationInterpSpeed;                                        // 0x02A4   (0x0004)  
	float                                              MinDistanceToPawn;                                          // 0x02A8   (0x0004)  
	float                                              CameraDistanceLimitDuration;                                // 0x02AC   (0x0004)  
	float                                              CameraDistanceLimitInterpSpeed;                             // 0x02B0   (0x0004)  
	unsigned char                                      UnknownData01_7[0x3C];                                      // 0x02B4   (0x003C)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQSpringArmComponent.ResetCameraLag
	void ResetCameraLag() // [0x1e7eba0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
};

/// Class /Script/BBQGameSession.BBQSpyAbilityHandlerComponent
/// Size: 0x01C0 (448 bytes) (0x0000B0 - 0x0001C0) align 8 MaxSize: 0x01C0
class UBBQSpyAbilityHandlerComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,543) /* FMulticastInlineDelegate */ __um(SpyEffectStarted);                                   // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,544) /* FMulticastInlineDelegate */ __um(SpyEffectEnded);                                     // 0x00C0   (0x0010)  
	SDK_UNDEFINED(16,545) /* FMulticastInlineDelegate */ __um(SpyAbilityPhaseChanged);                             // 0x00D0   (0x0010)  
	class UClass*                                      ChargeDepletionEffect;                                      // 0x00E0   (0x0008)  
	FGameplayTag                                       VictimViewActiveTag;                                        // 0x00E8   (0x0008)  
	FGameplayTag                                       AbilityActivationGameplayCueTag;                            // 0x00F0   (0x0008)  
	FGameplayTag                                       VictimViewGameplayCueTag;                                   // 0x00F8   (0x0008)  
	FGameplayTag                                       VictimGameplayCueTag;                                       // 0x0100   (0x0008)  
	class UCurveFloat*                                 FadeCurveToVictim;                                          // 0x0108   (0x0008)  
	class UCurveFloat*                                 FadeCurveToOwner;                                           // 0x0110   (0x0008)  
	float                                              FadeDurationToVictim;                                       // 0x0118   (0x0004)  
	float                                              FadeDurationToOwner;                                        // 0x011C   (0x0004)  
	TMap<ESpyAbilityPhase, FBBQSpyAbilityMontageData>  MontageToPlay;                                              // 0x0120   (0x0050)  
	class UBBQAbilitySpyOnPlayer*                      ActiveAbility;                                              // 0x0170   (0x0008)  
	class ABBQGameSessionCharacter*                    TargetVictim;                                               // 0x0178   (0x0008)  
	ESpyAbilityPhase                                   Phase;                                                      // 0x0180   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1F];                                      // 0x0181   (0x001F)  MISSED
	class UAnimMontage*                                CurrentAnimMontage;                                         // 0x01A0   (0x0008)  
	unsigned char                                      UnknownData01_7[0x18];                                      // 0x01A8   (0x0018)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQSpyAbilityHandlerComponent.OnRep_TargetVictim
	void OnRep_TargetVictim(ABBQGameSessionCharacter* LastTargetVictim) // [0x1e7e6b0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(LastTargetVictim);
	}
	// Function /Script/BBQGameSession.BBQSpyAbilityHandlerComponent.OnRep_Phase
	void OnRep_Phase(ESpyAbilityPhase OldPhase) // [0x1e7e630] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ESpyAbilityPhase);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(OldPhase);
	}
	// Function /Script/BBQGameSession.BBQSpyAbilityHandlerComponent.IsVictimViewActive
	bool IsVictimViewActive() // [0x1e7e020] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQStudyAndTamperAbility
/// Size: 0x05E0 (1504 bytes) (0x0005E0 - 0x0005E0) align 8 MaxSize: 0x05E0
class UBBQStudyAndTamperAbility : public UBBQStarSignAbility
{ 
public:
};

/// Class /Script/BBQGameSession.BBQStudyAndTamperComponent
/// Size: 0x03A0 (928 bytes) (0x0000B0 - 0x0003A0) align 8 MaxSize: 0x03A0
class UBBQStudyAndTamperComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,546) /* FMulticastInlineDelegate */ __um(OnObjectInspected);                                  // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,547) /* FMulticastInlineDelegate */ __um(OnObjectTampered);                                   // 0x00C0   (0x0010)  
	TArray<FBBQStudyAndTamperKnowledgePoints>          KnowledgePoints;                                            // 0x00D0   (0x0010)  
	TArray<FName>                                      PerformedInspections;                                       // 0x00E0   (0x0010)  
	class UDataTable*                                  InspectionDefinitionsDataTable;                             // 0x00F0   (0x0008)  
	FGameplayVariableFloat                             MaxTotalKnowledgePoints;                                    // 0x00F8   (0x0058)  
	bool                                               bUseMaxGroupKnowledgePoints;                                // 0x0150   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0151   (0x0007)  MISSED
	FGameplayVariableFloat                             MaxGroupKnowledgePoints;                                    // 0x0158   (0x0058)  
	FGameplayVariableFloat                             GainedKnowledgePointsMultiplier;                            // 0x01B0   (0x0058)  
	FGameplayVariableBool                              AllowMultipleInspections;                                   // 0x0208   (0x0058)  
	FGameplayVariableBool                              RequireInspectionBeforeTamper;                              // 0x0260   (0x0058)  
	FGameplayVariableFloat                             TamperEffectDuration;                                       // 0x02B8   (0x0058)  
	FGameplayTag                                       InspectXorTamperModeTag;                                    // 0x0310   (0x0008)  
	FGameplayTag                                       KnowledgePointsTag;                                         // 0x0318   (0x0008)  
	FDataTableRowHandle                                ActivityEventObjectInspected;                               // 0x0320   (0x0010)  
	FDataTableRowHandle                                ActivityEventObjectTampered;                                // 0x0330   (0x0010)  
	class UClass*                                      TamperMinigameClass;                                        // 0x0340   (0x0008)  
	unsigned char                                      UnknownData01_7[0x58];                                      // 0x0348   (0x0058)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.ShouldInspectBeforeTamper
	bool ShouldInspectBeforeTamper() // [0x1e831e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.ShouldAllowMultipleInspections
	bool ShouldAllowMultipleInspections() // [0x1e831a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.ResetGroupKnowledgePoints
	void ResetGroupKnowledgePoints(FName GroupID) // [0x1e82ca0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(GroupID);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.ResetAllKnowledgePoints
	void ResetAllKnowledgePoints() // [0x1e82c80] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.OnRep_KnowledgePoints
	void OnRep_KnowledgePoints() // [0x1e82910] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.ObjectTamperedDelegate__DelegateSignature
	void ObjectTamperedDelegate__DelegateSignature(UBBQStudyAndTamperObjectComponent* Object) // [0x2438a30] MulticastDelegate|Public|Delegate 
	{
		typedef void (*FuncPtr)(UBBQStudyAndTamperObjectComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Object);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.ObjectInspectedDelegate__DelegateSignature
	void ObjectInspectedDelegate__DelegateSignature(UBBQStudyAndTamperObjectComponent* Object, int32_t PointsAdded) // [0x2438a30] MulticastDelegate|Public|Delegate 
	{
		typedef void (*FuncPtr)(UBBQStudyAndTamperObjectComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(Object, PointsAdded);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.IsInspectXorTamperModeEnabled
	bool IsInspectXorTamperModeEnabled() // [0x1e82140] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.IsInspectionPerformed
	bool IsInspectionPerformed(FName InspectionId) // [0x1e821a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func(InspectionId);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.IsGroupInspectionPerformed
	bool IsGroupInspectionPerformed(FName GroupID) // [0x1e820a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func(GroupID);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.GetTotalKnowledgePoints
	float GetTotalKnowledgePoints() // [0x1e81ce0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.GetTamperEffectDuration
	float GetTamperEffectDuration() // [0x1e81c90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.GetMaxTotalKnowledgePoints
	float GetMaxTotalKnowledgePoints() // [0x1e81ae0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.GetMaxGroupKnowledgePoints
	float GetMaxGroupKnowledgePoints(FName GroupID) // [0x1e81a40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func(GroupID);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperComponent.GetGroupKnowledgePoits
	float GetGroupKnowledgePoits(FName Group) // [0x1e818c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef float (*FuncPtr)(FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func(Group);
	}
};

/// Class /Script/BBQGameSession.BBQStudyAndTamperObjectComponent
/// Size: 0x0180 (384 bytes) (0x0000B0 - 0x000180) align 8 MaxSize: 0x0180
class UBBQStudyAndTamperObjectComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,548) /* FMulticastInlineDelegate */ __um(OnObjectInspected);                                  // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,549) /* FMulticastInlineDelegate */ __um(OnObjectTampered);                                   // 0x00C0   (0x0010)  
	SDK_UNDEFINED(16,550) /* FMulticastInlineDelegate */ __um(OnObjectTamperEffectEnded);                          // 0x00D0   (0x0010)  
	SDK_UNDEFINED(16,551) /* FDelegateProperty */      __um(CustomGetInteractionLocatorFunction);                  // 0x00E0   (0x0010)  
	FDataTableRowHandle                                InspectionDefinition;                                       // 0x00F0   (0x0010)  
	FBBQStudyAndTamperInspection                       CachedInspectionDefinition;                                 // 0x0100   (0x0018)  
	bool                                               bUseInstigatorLocation;                                     // 0x0118   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0119   (0x0007)  MISSED
	FComponentReference                                InteractionLocatorComponent;                                // 0x0120   (0x0028)  
	EBBQAnimSlot                                       TamperingAnimSlot;                                          // 0x0148   (0x0001)  
	EBBQAnimSlot                                       InspectingAnimSlot;                                         // 0x0149   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x014A   (0x0002)  MISSED
	float                                              TamperingSlideInPlaceDuration;                              // 0x014C   (0x0004)  
	class UAkAudioEvent*                               TamperingStartSound;                                        // 0x0150   (0x0008)  
	class UAkAudioEvent*                               TamperingEndSound;                                          // 0x0158   (0x0008)  
	class UAkAudioEvent*                               TamperingFailureSound;                                      // 0x0160   (0x0008)  
	class ABBQGameSessionCharacter*                    InspectedBy;                                                // 0x0168   (0x0008)  
	class ABBQGameSessionCharacter*                    TamperedBy;                                                 // 0x0170   (0x0008)  
	unsigned char                                      UnknownData02_7[0x8];                                       // 0x0178   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.TamperObject
	void TamperObject(ABBQGameSessionCharacter* Character) // [0x1e83350] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.StopTamperingAnimation
	void StopTamperingAnimation(ABBQGameSessionCharacter* Character) // [0x1e59760] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.StartTamperingObject
	void StartTamperingObject(ABBQGameSessionCharacter* Character) // [0x1e832c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.PlayTamperingAnimation
	void PlayTamperingAnimation(ABBQGameSessionCharacter* Character) // [0x1e82b50] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.OnTamperMinigameEnded
	void OnTamperMinigameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason EndReason) // [0x1e82a80] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Minigame, EndReason);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.OnRep_TamperedBy
	void OnRep_TamperedBy(ABBQGameSessionCharacter* OldValue) // [0x1e829d0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(OldValue);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.OnRep_InspectedBy
	void OnRep_InspectedBy(ABBQGameSessionCharacter* OldValue) // [0x1e827d0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(OldValue);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.ObjectInteractionCompletedDelegate__DelegateSignature
	void ObjectInteractionCompletedDelegate__DelegateSignature(ABBQGameSessionCharacter* Character) // [0x2438a30] MulticastDelegate|Public|Delegate 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.IsTampered
	bool IsTampered() // [0x1e82240] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.IsInspected
	bool IsInspected() // [0x1e82170] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.InspectObject
	void InspectObject(ABBQGameSessionCharacter* Character) // [0x1e82010] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.GetInteractionLocatorSignature__DelegateSignature
	FTransform GetInteractionLocatorSignature__DelegateSignature(AActor* Character) // [0x2438a30] Public|Delegate|HasDefaults 
	{
		typedef FTransform (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.GetInteractionLocator
	FTransform GetInteractionLocator(AActor* Character) // [0x1e81980] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FTransform (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.GetInspectionPoints
	int32_t GetInspectionPoints() // [0x1e625e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.GetInspectionId
	FName GetInspectionId() // [0x1e81960] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FName (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.GetGroupId
	FName GetGroupId() // [0x1e818a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FName (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.CanBeTampered
	bool CanBeTampered(ABBQGameSessionCharacter* Character) // [0x1e81450] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectComponent.CanBeInspected
	bool CanBeInspected(ABBQGameSessionCharacter* Character) // [0x1e813b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		return func(Character);
	}
};

/// Class /Script/BBQGameSession.BBQStudyAndTamperObjectInterface
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQStudyAndTamperObjectInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQStudyAndTamperObjectInterface.GetStudyAndTamperObjectComponent
	UBBQStudyAndTamperObjectComponent* GetStudyAndTamperObjectComponent() // [0x1e81bf0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	{
		typedef class UBBQStudyAndTamperObjectComponent* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQSweetSpotMinigame
/// Size: 0x0588 (1416 bytes) (0x000580 - 0x000588) align 8 MaxSize: 0x0588
class ABBQSweetSpotMinigame : public ABBQMinigameV2
{ 
public:
	FBBQMinigameNetState_SweetSpot                     SweetSpotState;                                             // 0x0580   (0x0004)  
	bool                                               bUseConfigMarkerPosition;                                   // 0x0584   (0x0001)  
	bool                                               bShouldFailOnSweetSpotMiss;                                 // 0x0585   (0x0001)  
	bool                                               bAllowFailDurationVisuals;                                  // 0x0586   (0x0001)  
	unsigned char                                      UnknownData00_7[0x1];                                       // 0x0587   (0x0001)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQSweetSpotMinigame.SetMarkerPosition
	void SetMarkerPosition(float Value) // [0x1e82fc0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Value);
	}
	// Function /Script/BBQGameSession.BBQSweetSpotMinigame.Reset
	void Reset() // [0x1e75870] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.BBQSweetSpotMinigame.OnRep_SweetSpotState
	void OnRep_SweetSpotState(FBBQMinigameNetState_SweetSpot& LastSweetSpotState) // [0x1e82930] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FBBQMinigameNetState_SweetSpot&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(LastSweetSpotState);
	}
	// Function /Script/BBQGameSession.BBQSweetSpotMinigame.GetSweetSpotSettings
	UBBQMinigameSettingsV2_SweetSpot* GetSweetSpotSettings() // [0x1e81c20] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class UBBQMinigameSettingsV2_SweetSpot* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQSweetSpotMinigame.EventPerformSimulatedUpdate_SweetSpot
	void EventPerformSimulatedUpdate_SweetSpot(FBBQMinigameNetState_SweetSpot& LastSweetSpotState) // [0x2438a30] Event|Protected|HasOutParms|BlueprintEvent 
	{
		typedef void (*FuncPtr)(FBBQMinigameNetState_SweetSpot&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(LastSweetSpotState);
	}
};

/// Class /Script/BBQGameSession.BBQTestRPCChannel
/// Size: 0x00B8 (184 bytes) (0x0000B0 - 0x0000B8) align 8 MaxSize: 0x00B8
class UBBQTestRPCChannel : public UActorComponent
{ 
public:
	int32_t                                            ClientId;                                                   // 0x00B0   (0x0004)  
	int32_t                                            NumSuccessTests;                                            // 0x00B4   (0x0004)  


	/// Functions
	// Function /Script/BBQGameSession.BBQTestRPCChannel.Server_UpdateSuccessCount
	void Server_UpdateSuccessCount() // [0x1e82fa0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQTestRPCChannel.Server_SwitchCharacter
	void Server_SwitchCharacter(APlayerController* Controller, FName CharacterName) // [0x1e82ed0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(APlayerController*, FName);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Controller, CharacterName);
	}
	// Function /Script/BBQGameSession.BBQTestRPCChannel.Server_StartSearch
	void Server_StartSearch(ABBQBaseCharacter* BBQChar, ABBQHidingSpot* HidingSpot) // [0x1e82e00] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQBaseCharacter*, ABBQHidingSpot*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(BBQChar, HidingSpot);
	}
	// Function /Script/BBQGameSession.BBQTestRPCChannel.Server_StartHiding
	void Server_StartHiding(ABBQBaseCharacter* BBQChar, ABBQHidingSpot* HidingSpot) // [0x1e82d30] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQBaseCharacter*, ABBQHidingSpot*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(BBQChar, HidingSpot);
	}
};

/// Class /Script/BBQGameSession.BBQTimeOfDayLoader
/// Size: 0x0230 (560 bytes) (0x000228 - 0x000230) align 8 MaxSize: 0x0230
class ABBQTimeOfDayLoader : public AActor
{ 
public:
	EBBQTimeOfDay                                      DefaultTimeOfDay;                                           // 0x0228   (0x0001)  
	unsigned char                                      UnknownData00_7[0x7];                                       // 0x0229   (0x0007)  MISSED
};

/// Class /Script/BBQGameSession.BBQTimeOfDayLevelStreamingSubsystem
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UBBQTimeOfDayLevelStreamingSubsystem : public UWorldSubsystem
{ 
public:
};

/// Class /Script/BBQGameSession.BBQTrap
/// Size: 0x0348 (840 bytes) (0x000228 - 0x000348) align 8 MaxSize: 0x0348
class ABBQTrap : public AActor
{ 
public:
	class UClass*                                      TriggerEffectClass;                                         // 0x0228   (0x0008)  
	class UClass*                                      PoisonEffectClass;                                          // 0x0230   (0x0008)  
	class UClass*                                      EscapeTrapMinigameClass;                                    // 0x0238   (0x0008)  
	class UClass*                                      TrapTriggeredDamageType;                                    // 0x0240   (0x0008)  
	FGameplayVariableFloat                             TrapTriggerDamage;                                          // 0x0248   (0x0058)  
	class ABBQMinigameV2*                              EscapeTrapMinigame;                                         // 0x02A0   (0x0008)  
	float                                              TooFarCorrectDistSq;                                        // 0x02A8   (0x0004)  
	float                                              CollectRadius;                                              // 0x02AC   (0x0004)  
	float                                              MaxDistanceToTriggerComm;                                   // 0x02B0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02B4   (0x0004)  MISSED
	FGameplayTagContainer                              TriggerPreventionTags;                                      // 0x02B8   (0x0020)  
	FGameplayTagContainer                              MovementStateIgnoreTags;                                    // 0x02D8   (0x0020)  
	class UStaticMeshComponent*                        TrapMesh;                                                   // 0x02F8   (0x0008)  
	class UBoxComponent*                               TrapCollision;                                              // 0x0300   (0x0008)  
	class ABBQGameSessionCharacterAnimated*            CaughtVictim;                                               // 0x0308   (0x0008)  
	ETrapState                                         TrapState;                                                  // 0x0310   (0x0001)  
	bool                                               bIsPoisoned;                                                // 0x0311   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x0312   (0x0006)  MISSED
	class AActor*                                      PoisonInstigator;                                           // 0x0318   (0x0008)  
	bool                                               bUnlockForced;                                              // 0x0320   (0x0001)  
	bool                                               bStateChanging;                                             // 0x0321   (0x0001)  
	EBBQAnimSlot                                       FreeVictimAnimSlot;                                         // 0x0322   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1];                                       // 0x0323   (0x0001)  MISSED
	FName                                              FreeVictimEndSectionName;                                   // 0x0324   (0x0008)  
	float                                              SlideInPlaceDuration;                                       // 0x032C   (0x0004)  
	float                                              AnimLocatorRadius;                                          // 0x0330   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0334   (0x0004)  MISSED
	class ABBQGameSessionCharacterAnimated*            PendingVictim;                                              // 0x0338   (0x0008)  
	unsigned char                                      UnknownData04_7[0x8];                                       // 0x0340   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQTrap.UnlockTrap
	void UnlockTrap() // [0x1e833e0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQTrap.StartEscapeTrapMinigame
	ABBQMinigameV2* StartEscapeTrapMinigame(ABBQBaseCharacter* StuckPlayer) // [0x1e83220] Final|Native|Protected|BlueprintCallable 
	{
		typedef class ABBQMinigameV2* (*FuncPtr)(ABBQBaseCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func(StuckPlayer);
	}
	// Function /Script/BBQGameSession.BBQTrap.SetupEscapeTrapMinigame
	void SetupEscapeTrapMinigame(ABBQMinigameV2* MinigameInstance) // [0x1e06420] Native|Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(MinigameInstance);
	}
	// Function /Script/BBQGameSession.BBQTrap.SetTrapState
	void SetTrapState(ETrapState NewState, bool bForced) // [0x1e830d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ETrapState, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(NewState, bForced);
	}
	// Function /Script/BBQGameSession.BBQTrap.SetPoisoned
	void SetPoisoned(AActor* InPoisonInstigator) // [0x1e83040] Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(InPoisonInstigator);
	}
	// Function /Script/BBQGameSession.BBQTrap.OnRep_TrapState
	void OnRep_TrapState() // [0x1e82a60] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func();
	}
	// Function /Script/BBQGameSession.BBQTrap.OnRep_CaughtVictim
	void OnRep_CaughtVictim(ABBQGameSessionCharacterAnimated* LastCaughtVictim) // [0x1e82740] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(LastCaughtVictim);
	}
	// Function /Script/BBQGameSession.BBQTrap.OnOverlapEnd
	void OnOverlapEnd(UPrimitiveComponent* LocalComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e825e0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(LocalComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQTrap.OnOverlapBegin
	void OnOverlapBegin(UPrimitiveComponent* LocalComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e82480] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(LocalComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.BBQTrap.OnEscapeTrapMinigameEnded
	void OnEscapeTrapMinigameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason EndReason) // [0x1e823b0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func(Minigame, EndReason);
	}
	// Function /Script/BBQGameSession.BBQTrap.NetMulticast_PlayFreeVictimEndMontage
	void NetMulticast_PlayFreeVictimEndMontage(ABBQGameSessionCharacterAnimated* Character) // [0x1e06fa0] Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQTrap.NetMulticast_PlayFreeVictimBeginMontage
	void NetMulticast_PlayFreeVictimBeginMontage(ABBQGameSessionCharacterAnimated* Character) // [0x1e071e0] Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		func(Character);
	}
	// Function /Script/BBQGameSession.BBQTrap.GetTrapOwner
	ABBQGameSessionCharacter* GetTrapOwner() // [0x1e67130] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacter* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQTrap.GetCollectTransform
	FTransform GetCollectTransform(AActor* InInstigator) // [0x1e817e0] Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure 
	{
		typedef FTransform (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func(InInstigator);
	}
	// Function /Script/BBQGameSession.BBQTrap.GetAnimLocatorTransform
	FTransform GetAnimLocatorTransform(ABBQGameSessionCharacterAnimated* InInstigator, float Radius) // [0x1e81510] Final|Native|Protected|HasDefaults|BlueprintCallable 
	{
		typedef FTransform (*FuncPtr)(ABBQGameSessionCharacterAnimated*, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func(InInstigator, Radius);
	}
	// Function /Script/BBQGameSession.BBQTrap.BP_OnTrapTriggered
	void BP_OnTrapTriggered() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		func();
	}
	// Function /Script/BBQGameSession.BBQTrap.BP_OnTrapStateChanged
	void BP_OnTrapStateChanged() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[16]);
		func();
	}
	// Function /Script/BBQGameSession.BBQTrap.BP_OnEscapeTrapMinigameEnded
	void BP_OnEscapeTrapMinigameEnded(EEndMinigameReason EndReason) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[17]);
		func(EndReason);
	}
};

/// Class /Script/BBQGameSession.BBQTraversalInterface
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQTraversalInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/BBQGameSession.BBQTraversalInterface.OnTraversalStarted
	void OnTraversalStarted(AActor* TraversingActor) // [0x1e89f70] Native|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(TraversingActor);
	}
	// Function /Script/BBQGameSession.BBQTraversalInterface.OnTraversalEnded
	void OnTraversalEnded(AActor* TraversingActor) // [0x113ca50] Native|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(TraversingActor);
	}
	// Function /Script/BBQGameSession.BBQTraversalInterface.OnTraversalActorDestroyed
	void OnTraversalActorDestroyed() // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQTraversalInterface.NetMulticast_OnTraversalStarted
	void NetMulticast_OnTraversalStarted(AActor* TraversingActor) // [0x1e89b40] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(TraversingActor);
	}
	// Function /Script/BBQGameSession.BBQTraversalInterface.NetMulticast_OnTraversalFinished
	void NetMulticast_OnTraversalFinished(AActor* TraversingActor) // [0x1e89ab0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(TraversingActor);
	}
};

/// Class /Script/BBQGameSession.BBQClamberableObstacle
/// Size: 0x0028 (40 bytes) (0x000028 - 0x000028) align 8 MaxSize: 0x0028
class UBBQClamberableObstacle : public UInterface
{ 
public:
};

/// Class /Script/BBQGameSession.BBQTriggerAreaComponent
/// Size: 0x0650 (1616 bytes) (0x000480 - 0x000650) align 16 MaxSize: 0x0650
class UBBQTriggerAreaComponent : public USphereComponent
{ 
public:
	SDK_UNDEFINED(16,552) /* FMulticastInlineDelegate */ __um(OnTriggerStart);                                     // 0x0480   (0x0010)  
	SDK_UNDEFINED(16,553) /* FMulticastInlineDelegate */ __um(OnTriggerEnd);                                       // 0x0490   (0x0010)  
	FGameplayVariableFloat                             RadiusMultiplier;                                           // 0x04A0   (0x0058)  
	FAttributeTrigger                                  AttributeTrigger;                                           // 0x04F8   (0x0078)  
	FGameplayTagContainer                              RequiredPerks;                                              // 0x0570   (0x0020)  
	FGameplayTagContainer                              IgnoreTriggerTags;                                          // 0x0590   (0x0020)  
	bool                                               bOnlyDoConditionCheckOnEnter;                               // 0x05B0   (0x0001)  
	bool                                               bDoLOSCheck;                                                // 0x05B1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x05B2   (0x0002)  MISSED
	float                                              LOSCheckHeightOffset;                                       // 0x05B4   (0x0004)  
	ETriggerAreaNotifyType                             NotifyType;                                                 // 0x05B8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x05B9   (0x0007)  MISSED
	class UClass*                                      TriggerConditionClass;                                      // 0x05C0   (0x0008)  
	float                                              MaxZOffset;                                                 // 0x05C8   (0x0004)  
	float                                              MinZOffset;                                                 // 0x05CC   (0x0004)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x05D0   (0x0010)  MISSED
	TArray<FPlayerInTriggerAreaInfo>                   CharactersInArea;                                           // 0x05E0   (0x0010)  
	TArray<FPlayerInTriggerAreaInfo>                   PrevCharactersInArea;                                       // 0x05F0   (0x0010)  
	TMap<class APlayerState*, float>                   PlayerToRadiusMap;                                          // 0x0600   (0x0050)  


	/// Functions
	// Function /Script/BBQGameSession.BBQTriggerAreaComponent.SetTriggerAreaRadius
	void SetTriggerAreaRadius(float InRadius) // [0x1e8a0d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(InRadius);
	}
	// Function /Script/BBQGameSession.BBQTriggerAreaComponent.OnRep_CharactersInArea
	// void OnRep_CharactersInArea(TArray<FPlayerInTriggerAreaInfo>& PrevValue);                                                // [0x1e89d60] Final|Native|Protected|HasOutParms 
	// Function /Script/BBQGameSession.BBQTriggerAreaComponent.GetTriggeredCharactersCount
	int32_t GetTriggeredCharactersCount() // [0x1e899a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef int32_t (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQVfx
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQVfx : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.VictimRestraintEndedAnimNotifyState
/// Size: 0x0038 (56 bytes) (0x000030 - 0x000038) align 8 MaxSize: 0x0038
class UVictimRestraintEndedAnimNotifyState : public UAnimNotifyState
{ 
public:
	FGameplayTag                                       MovementState;                                              // 0x0030   (0x0008)  
};

/// Class /Script/BBQGameSession.BBQVictimRestrainedStart
/// Size: 0x0288 (648 bytes) (0x000228 - 0x000288) align 8 MaxSize: 0x0288
class ABBQVictimRestrainedStart : public AActor
{ 
public:
	int32_t                                            MinimumRequiredCharacterLevel;                              // 0x0228   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x022C   (0x0004)  MISSED
	class USceneComponent*                             VictimLocator;                                              // 0x0230   (0x0008)  
	class UStaticMeshComponent*                        HarvestLocationMesh;                                        // 0x0238   (0x0008)  
	class UClass*                                      BreakLooseMinigameClass;                                    // 0x0240   (0x0008)  
	bool                                               bStartMinigamesImmediately;                                 // 0x0248   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0249   (0x0003)  MISSED
	float                                              HookHeight;                                                 // 0x024C   (0x0004)  
	float                                              HookToPlayerOffset;                                         // 0x0250   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0254   (0x0004)  MISSED
	class ABBQGameSessionCharacterAnimated*            Victim;                                                     // 0x0258   (0x0008)  
	EEndMinigameReason                                 MinigameEndReason;                                          // 0x0260   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0261   (0x0007)  MISSED
	class ABBQPlayerState*                             ReservedAssociatedVictim;                                   // 0x0268   (0x0008)  
	class ABBQMinigameV2*                              BreakLooseMinigame;                                         // 0x0270   (0x0008)  
	int32_t                                            UncrouchAtTickCount;                                        // 0x0278   (0x0004)  
	int32_t                                            StartAtTickCount;                                           // 0x027C   (0x0004)  
	unsigned char                                      UnknownData04_7[0x8];                                       // 0x0280   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQVictimRestrainedStart.StartRestrainMinigame
	void StartRestrainMinigame() // [0x1e8a150] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQVictimRestrainedStart.OnRep_Victim
	void OnRep_Victim(ABBQGameSessionCharacterAnimated* LastVictim) // [0x1e89e10] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(LastVictim);
	}
	// Function /Script/BBQGameSession.BBQVictimRestrainedStart.OnGameStarted
	void OnGameStarted() // [0x1e89ca0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.BBQVictimRestrainedStart.OnBreakLooseMinigameEnded
	void OnBreakLooseMinigameEnded(ABBQMinigameV2* Minigame, EEndMinigameReason EndMinigameReason) // [0x1e89bd0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQMinigameV2*, EEndMinigameReason);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(Minigame, EndMinigameReason);
	}
	// Function /Script/BBQGameSession.BBQVictimRestrainedStart.Local_StartRestrainedMinigame
	void Local_StartRestrainedMinigame() // [0x1e89a90] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.BBQVictimRestrainedStart.GetMinigameEndReason
	EEndMinigameReason GetMinigameEndReason() // [0x1e89850] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	{
		typedef EEndMinigameReason (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQVictimRestrainedStart.BP_OnEndVictimRestraintEndAnim
	void BP_OnEndVictimRestraintEndAnim(ABBQGameSessionCharacterAnimated* ForcedVictim) // [0x1e890c0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(ForcedVictim);
	}
	// Function /Script/BBQGameSession.BBQVictimRestrainedStart.BP_OnEndVictimRestraint
	void BP_OnEndVictimRestraint(ABBQGameSessionCharacterAnimated* ForcedVictim) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(ForcedVictim);
	}
	// Function /Script/BBQGameSession.BBQVictimRestrainedStart.BP_OnBeginVictimRestraint
	void BP_OnBeginVictimRestraint(ABBQGameSessionCharacterAnimated* ForcedVictim) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(ForcedVictim);
	}
};

/// Class /Script/BBQGameSession.BBQVictimTrackerComponent
/// Size: 0x0130 (304 bytes) (0x0000B0 - 0x000130) align 8 MaxSize: 0x0130
class UBBQVictimTrackerComponent : public UActorComponent
{ 
public:
	float                                              MoveDistanceThreshold;                                      // 0x00B0   (0x0004)  
	int32_t                                            MaxFootprintsInTrail;                                       // 0x00B4   (0x0004)  
	float                                              TimeToConsiderFootprintHot;                                 // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
	FGameplayTagContainer                              TrackingBlockedTags;                                        // 0x00C0   (0x0020)  
	TMap<class ABBQGameSessionCharacter*, FBBQFootprintTrail> FootprintTrailMap;                                   // 0x00E0   (0x0050)  
};

/// Class /Script/BBQGameSession.BBQViewTargetManagerComponent
/// Size: 0x0100 (256 bytes) (0x0000B0 - 0x000100) align 8 MaxSize: 0x0100
class UBBQViewTargetManagerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_8[0x18];                                      // 0x00B0   (0x0018)  MISSED
	class UAkAudioEvent*                               SpectateNextSFX;                                            // 0x00C8   (0x0008)  
	FActiveSpectatorState                              ActiveState;                                                // 0x00D0   (0x0010)  
	TArray<FSpectatorLevelSequenceInfo>                AllLevelSequenceInfo;                                       // 0x00E0   (0x0010)  
	class AActor*                                      PreviousViewTarget;                                         // 0x00F0   (0x0008)  
	FTimerHandle                                       CheckValidPlayerStateHandle;                                // 0x00F8   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQViewTargetManagerComponent.Server_SwitchPlayer
	void Server_SwitchPlayer(int32_t Direction, bool bViewSelf) // [0x1e8a000] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(int32_t, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Direction, bViewSelf);
	}
	// Function /Script/BBQGameSession.BBQViewTargetManagerComponent.OnSpectatingPlayerChanged
	void OnSpectatingPlayerChanged(int32_t Direction, bool bViewSelf) // [0x1e89ea0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(int32_t, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Direction, bViewSelf);
	}
	// Function /Script/BBQGameSession.BBQViewTargetManagerComponent.OnRep_ActiveSpectatorState
	void OnRep_ActiveSpectatorState(FActiveSpectatorState& PreviouState) // [0x1e89cc0] Final|Native|Protected|HasOutParms 
	{
		typedef void (*FuncPtr)(FActiveSpectatorState&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(PreviouState);
	}
};

/// Class /Script/BBQGameSession.BBQWaterValve
/// Size: 0x0228 (552 bytes) (0x000228 - 0x000228) align 8 MaxSize: 0x0228
class ABBQWaterValve : public AActor
{ 
public:
};

/// Class /Script/BBQGameSession.BBQWell
/// Size: 0x0370 (880 bytes) (0x000228 - 0x000370) align 8 MaxSize: 0x0370
class ABBQWell : public AActor
{ 
public:
	unsigned char                                      UnknownData00_8[0x10];                                      // 0x0228   (0x0010)  MISSED
	float                                              ClamberRadius;                                              // 0x0238   (0x0004)  
	float                                              JumpRadiusMin;                                              // 0x023C   (0x0004)  
	float                                              JumpRadiusMax;                                              // 0x0240   (0x0004)  
	float                                              ThrowingRadius;                                             // 0x0244   (0x0004)  
	bool                                               bDrawDebug;                                                 // 0x0248   (0x0001)  
	bool                                               bUseExitPointRotation;                                      // 0x0249   (0x0001)  
	bool                                               bIgnoreLandingDamage;                                       // 0x024A   (0x0001)  
	bool                                               bAllowInterruption;                                         // 0x024B   (0x0001)  
	bool                                               bFadeCamera;                                                // 0x024C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x024D   (0x0003)  MISSED
	class UCurveFloat*                                 FadeCurve;                                                  // 0x0250   (0x0008)  
	float                                              TraversalDelay;                                             // 0x0258   (0x0004)  
	float                                              FallDelay;                                                  // 0x025C   (0x0004)  
	float                                              DefaultSlideDuration;                                       // 0x0260   (0x0004)  
	float                                              SlideDurationMultiplerWhenSprinting;                        // 0x0264   (0x0004)  
	TMap<EBBQWellEnteringMethod, class UClass*>        LandingEffects;                                             // 0x0268   (0x0050)  
	FGameplayTagContainer                              TagsWhilstUsing;                                            // 0x02B8   (0x0020)  
	FGameplayTagContainer                              TagsWhilstFallingAndRecovery;                               // 0x02D8   (0x0020)  
	bool                                               bMeleeImmuneOnInterrupt;                                    // 0x02F8   (0x0001)  
	EBBQAnimSlot                                       ClamberIntoAnimSlot;                                        // 0x02F9   (0x0001)  
	EBBQAnimSlot                                       JumpIntoAnimSlot;                                           // 0x02FA   (0x0001)  
	EBBQAnimSlot                                       BeThrownIntoAnimSlot;                                       // 0x02FB   (0x0001)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x02FC   (0x0004)  MISSED
	TMap<EBBQWellEnteringMethod, bool>                 ApplyPositionCorrectionOnEntry;                             // 0x0300   (0x0050)  
	class USceneComponent*                             InteractionPoint;                                           // 0x0350   (0x0008)  
	class USceneComponent*                             EntryPoint;                                                 // 0x0358   (0x0008)  
	class USceneComponent*                             ExitPoint;                                                  // 0x0360   (0x0008)  
	TWeakObjectPtr<class ABBQGameSessionCharacterAnimated*> CurrentInstigatorPlayer;                               // 0x0368   (0x0008)  


	/// Functions
	// Function /Script/BBQGameSession.BBQWell.ThrowIntoWell
	void ThrowIntoWell(ABBQGameSessionCharacterAnimated* ThrowingPlayer, ABBQGameSessionCharacterAnimated* PlayerBeingThrown) // [0x1e8a170] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(ThrowingPlayer, PlayerBeingThrown);
	}
	// Function /Script/BBQGameSession.BBQWell.OnStartEnteringTheWell
	void OnStartEnteringTheWell(ABBQGameSessionCharacterAnimated* Player) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Player);
	}
	// Function /Script/BBQGameSession.BBQWell.OnPlayerRecovered
	void OnPlayerRecovered(ABBQGameSessionCharacterAnimated* Player, EBBQWellEnteringMethod EnteringMethod) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, EBBQWellEnteringMethod);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Player, EnteringMethod);
	}
	// Function /Script/BBQGameSession.BBQWell.OnPlayerFall
	void OnPlayerFall(ABBQGameSessionCharacterAnimated* Player, EBBQWellEnteringMethod EnteringMethod) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, EBBQWellEnteringMethod);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(Player, EnteringMethod);
	}
	// Function /Script/BBQGameSession.BBQWell.OnPlayerEntered
	void OnPlayerEntered(ABBQGameSessionCharacterAnimated* Player, EBBQWellEnteringMethod EnteringMethod) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, EBBQWellEnteringMethod);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(Player, EnteringMethod);
	}
	// Function /Script/BBQGameSession.BBQWell.OnInterruptWellEntering
	void OnInterruptWellEntering(ABBQGameSessionCharacterAnimated* Player) // [0x2438a30] Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Player);
	}
	// Function /Script/BBQGameSession.BBQWell.JumpIntoWell
	void JumpIntoWell(ABBQGameSessionCharacterAnimated* Player) // [0x1e89a00] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(Player);
	}
	// Function /Script/BBQGameSession.BBQWell.IsBeingUsed
	bool IsBeingUsed() // [0x1e899d0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	{
		typedef bool (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQWell.GetSlideDesiredPostionAndRotation
	void GetSlideDesiredPostionAndRotation(ABBQGameSessionCharacterAnimated* Player, FVector& DesiredLocation, FRotator& DesiredRotation) // [0x1e89870] Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent|Const 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacterAnimated*, FVector&, FRotator&);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(Player, DesiredLocation, DesiredRotation);
	}
	// Function /Script/BBQGameSession.BBQWell.GetJumpIntoAnimSlot
	EBBQAnimSlot GetJumpIntoAnimSlot() // [0x1e89830] Native|Event|Public|BlueprintEvent|Const 
	{
		typedef EBBQAnimSlot (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQWell.GetInteractionLocation
	FVector GetInteractionLocation() // [0x1e897f0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	{
		typedef FVector (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[10]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQWell.GetExitRotation
	FRotator GetExitRotation(ABBQGameSessionCharacterAnimated* Player) // [0x1e89740] Native|Event|Public|HasDefaults|BlueprintEvent|Const 
	{
		typedef FRotator (*FuncPtr)(ABBQGameSessionCharacterAnimated*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[11]);
		return func(Player);
	}
	// Function /Script/BBQGameSession.BBQWell.GetExitLocation
	FVector GetExitLocation() // [0x1e6af00] Native|Event|Public|HasDefaults|BlueprintEvent|Const 
	{
		typedef FVector (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[12]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQWell.GetEntryLocation
	FVector GetEntryLocation() // [0x1e89700] Native|Event|Public|HasDefaults|BlueprintEvent|Const 
	{
		typedef FVector (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[13]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQWell.GetClamberIntoAnimSlot
	EBBQAnimSlot GetClamberIntoAnimSlot() // [0x1e896e0] Native|Event|Public|BlueprintEvent|Const 
	{
		typedef EBBQAnimSlot (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[14]);
		return func();
	}
	// Function /Script/BBQGameSession.BBQWell.GetBeThrownIntoAnimSlot
	EBBQAnimSlot GetBeThrownIntoAnimSlot() // [0x1e896c0] Native|Event|Public|BlueprintEvent|Const 
	{
		typedef EBBQAnimSlot (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[15]);
		return func();
	}
};

/// Class /Script/BBQGameSession.BBQAnimNotify_WindowLandingAssist
/// Size: 0x0080 (128 bytes) (0x000030 - 0x000080) align 8 MaxSize: 0x0080
class UBBQAnimNotify_WindowLandingAssist : public UAnimNotifyState
{ 
public:
	TMap<class USkeletalMeshComponent*, FBBQWindowJumpData> ActiveJumpData;                                        // 0x0030   (0x0050)  
};

/// Class /Script/BBQGameSession.BBQWindowSmashVFX
/// Size: 0x00F8 (248 bytes) (0x0000B0 - 0x0000F8) align 8 MaxSize: 0x00F8
class UBBQWindowSmashVFX : public UActorComponent
{ 
public:
	class UNiagaraSystem*                              WindowSmashParticles;                                       // 0x00B0   (0x0008)  
	class UClass*                                      WinFinalDestructibleActorTemplate;                          // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00C0   (0x0008)  MISSED
	FComponentReference                                IntactMeshToHideReference;                                  // 0x00C8   (0x0028)  
	unsigned char                                      UnknownData01_7[0x8];                                       // 0x00F0   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQWindowSmashVFX.DestroyAndExplodeWindowDelayed
	void DestroyAndExplodeWindowDelayed(float Force, FVector ForceOrigin, FVector ForceDirection, FVector VFXPosition, FVector WinDestructiblePosition, FRotator WinDestructibleRotation) // [0x1e89490] Final|Native|Protected|HasDefaults 
	{
		typedef void (*FuncPtr)(float, FVector, FVector, FVector, FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(Force, ForceOrigin, ForceDirection, VFXPosition, WinDestructiblePosition, WinDestructibleRotation);
	}
	// Function /Script/BBQGameSession.BBQWindowSmashVFX.DestroyAndExplodeWindow
	void DestroyAndExplodeWindow(float Force, FVector ForceOrigin, FVector ForceDirection, FVector VFXPosition, FVector WinDestructiblePosition, FRotator WinDestructibleRotation, float Delay) // [0x1e89220] Final|Native|Public|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float, FVector, FVector, FVector, FVector, FRotator, float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Force, ForceOrigin, ForceDirection, VFXPosition, WinDestructiblePosition, WinDestructibleRotation, Delay);
	}
};

/// Class /Script/BBQGameSession.BBQWorldOutlineInfoComponent
/// Size: 0x01D8 (472 bytes) (0x0000B0 - 0x0001D8) align 8 MaxSize: 0x01D8
class UBBQWorldOutlineInfoComponent : public UActorComponent
{ 
public:
	FPlayerOutlineContainer                            Outlines;                                                   // 0x00B0   (0x0120)  
	class ABBQGameSessionPlayerState*                  ViewPlayerState;                                            // 0x01D0   (0x0008)  
};

/// Class /Script/BBQGameSession.VisualDamageInteractionMappingAsset
/// Size: 0x0040 (64 bytes) (0x000030 - 0x000040) align 8 MaxSize: 0x0040
class UVisualDamageInteractionMappingAsset : public UDataAsset
{ 
public:
	TArray<FVisualDamageInteractionParam>              DamageMappings;                                             // 0x0030   (0x0010)  
};

/// Class /Script/BBQGameSession.BBQWrenchAttackNotifyState
/// Size: 0x0030 (48 bytes) (0x000030 - 0x000030) align 8 MaxSize: 0x0030
class UBBQWrenchAttackNotifyState : public UAnimNotifyState
{ 
public:
};

/// Class /Script/BBQGameSession.BBQWrenchAttackBehaviour
/// Size: 0x0358 (856 bytes) (0x0002E8 - 0x000358) align 8 MaxSize: 0x0358
class ABBQWrenchAttackBehaviour : public ABBQCharacterBehaviour
{ 
public:
	FBBQCinematicCameraSetup                           CinematicCameraSetup;                                       // 0x02E8   (0x0048)  
	EBBQCombatAnimSlot                                 CombatAnimSlotAttack;                                       // 0x0330   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0331   (0x0003)  MISSED
	FGameplayTag                                       WrenchItemTag;                                              // 0x0334   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x033C   (0x0004)  MISSED
	class ABBQGameSessionCharacterAnimated*            CharacterOwner;                                             // 0x0340   (0x0008)  
	class ABBQGameSessionCharacterAnimated*            CharacterTarget;                                            // 0x0348   (0x0008)  
	float                                              BackstabConeAngle;                                          // 0x0350   (0x0004)  
	unsigned char                                      UnknownData02_7[0x4];                                       // 0x0354   (0x0004)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.BBQWrenchAttackBehaviour.OnReachedNotify
	void OnReachedNotify() // [0xc7bb20] Native|Event|Public|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.BBQWrenchAttackBehaviour.OnMontageBlendOut
	void OnMontageBlendOut(UAnimMontage* Montage, bool bInterrupted) // [0x1e7e320] Final|Native|Public  
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(Montage, bInterrupted);
	}
	// Function /Script/BBQGameSession.BBQWrenchAttackBehaviour.NetMulticast_PlayWrenchAttackMontage
	void NetMulticast_PlayWrenchAttackMontage() // [0x1e4e6e0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
};

/// Class /Script/BBQGameSession.CharacterCameraShakesConfig
/// Size: 0x0058 (88 bytes) (0x000030 - 0x000058) align 8 MaxSize: 0x0058
class UCharacterCameraShakesConfig : public UDataAsset
{ 
public:
	class UClass*                                      WalkCameraShake;                                            // 0x0030   (0x0008)  
	class UClass*                                      RunCameraShake;                                             // 0x0038   (0x0008)  
	class UClass*                                      CrouchCameraShake;                                          // 0x0040   (0x0008)  
	class UClass*                                      UnCrouchCameraShake;                                        // 0x0048   (0x0008)  
	class UClass*                                      GetHitCameraShake;                                          // 0x0050   (0x0008)  
};

/// Class /Script/BBQGameSession.GenerateDialogGameplayTagsCommandlet
/// Size: 0x0080 (128 bytes) (0x000080 - 0x000080) align 8 MaxSize: 0x0080
class UGenerateDialogGameplayTagsCommandlet : public UCommandlet
{ 
public:
};

/// Class /Script/BBQGameSession.GeneratorCattleGrid
/// Size: 0x02D0 (720 bytes) (0x000228 - 0x0002D0) align 8 MaxSize: 0x02D0
class AGeneratorCattleGrid : public AActor
{ 
public:
	TArray<FGameplayTag>                               BlockKnockBackForTags;                                      // 0x0228   (0x0010)  
	TMap<class UClass*, FGameplayTag>                  KnockIntoPerksMap;                                          // 0x0238   (0x0050)  
	FGameplayTag                                       OnKnockBackMovementStateTag;                                // 0x0288   (0x0008)  
	FGameplayTag                                       OnKnockBackStatusTag;                                       // 0x0290   (0x0008)  
	FGameplayTag                                       OnRecentlyElectrocutedTag;                                  // 0x0298   (0x0008)  
	float                                              ElectrocutionDamage;                                        // 0x02A0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02A4   (0x0004)  MISSED
	class UPrimitiveComponent*                         GridOverlappingComponent;                                   // 0x02A8   (0x0008)  
	unsigned char                                      UnknownData01_7[0x20];                                      // 0x02B0   (0x0020)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.GeneratorCattleGrid.SetupTriggerVolume
	void SetupTriggerVolume(UPrimitiveComponent* OverlappingShape) // [0x1e8dd50] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(OverlappingShape);
	}
	// Function /Script/BBQGameSession.GeneratorCattleGrid.SetIsTurnedOn
	void SetIsTurnedOn(bool bTurnedOn) // [0x1e8dcc0] Final|Native|Protected|BlueprintCallable 
	{
		typedef void (*FuncPtr)(bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(bTurnedOn);
	}
	// Function /Script/BBQGameSession.GeneratorCattleGrid.RemoveRecentlyElectrocutedTag
	void RemoveRecentlyElectrocutedTag(ABBQGameSessionCharacter* Player) // [0x1e8dc30] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(Player);
	}
	// Function /Script/BBQGameSession.GeneratorCattleGrid.OnPlayerTouchedGrid
	void OnPlayerTouchedGrid(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e8dad0] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.GeneratorCattleGrid.OnPlayerMovedAway
	void OnPlayerMovedAway(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex) // [0x1e8d970] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UPrimitiveComponent*, AActor*, UPrimitiveComponent*, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex);
	}
	// Function /Script/BBQGameSession.GeneratorCattleGrid.OnPlayerKnockBack
	void OnPlayerKnockBack(ABBQGameSessionCharacter* Player) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(Player);
	}
	// Function /Script/BBQGameSession.GeneratorCattleGrid.OnKnockBackOutOfMontageBlendOut
	void OnKnockBackOutOfMontageBlendOut(UAnimMontage* Montage, bool bInterrupted, ABBQGameSessionCharacter* Player) // [0x1e8d860] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool, ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(Montage, bInterrupted, Player);
	}
	// Function /Script/BBQGameSession.GeneratorCattleGrid.OnKnockBackIntoMontageBlendOut
	void OnKnockBackIntoMontageBlendOut(UAnimMontage* Montage, bool bInterrupted, ABBQGameSessionCharacter* Player) // [0x1e8d750] Final|Native|Protected 
	{
		typedef void (*FuncPtr)(UAnimMontage*, bool, ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(Montage, bInterrupted, Player);
	}
	// Function /Script/BBQGameSession.GeneratorCattleGrid.NetMulticast_ElectrocuteOverlappingPlayer
	void NetMulticast_ElectrocuteOverlappingPlayer(AActor* Actor) // [0x1e06fa0] Net|NetReliableNative|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(AActor*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(Actor);
	}
};

/// Class /Script/BBQGameSession.LocksContainer
/// Size: 0x0038 (56 bytes) (0x000028 - 0x000038) align 8 MaxSize: 0x0038
class ULocksContainer : public UObject
{ 
public:
	TArray<class ABBQLockBase*>                        ActualLocks;                                                // 0x0028   (0x0010)  
};

/// Class /Script/BBQGameSession.SSACosmeticCueNotify_Actor
/// Size: 0x0398 (920 bytes) (0x000288 - 0x000398) align 8 MaxSize: 0x0398
class ASSACosmeticCueNotify_Actor : public ABBQGameplayCueNotify_Actor
{ 
public:
	SDK_UNDEFINED(16,554) /* TArray<TWeakObjectPtr<UMaterial*>> */ __um(VFXMaterialsToDisable);                    // 0x0288   (0x0010)  
	TArray<FWeightedBlendable>                         BlendablesToEnableAfterDeactivation;                        // 0x0298   (0x0010)  
	class UMaterialInterface*                          VFXMaterial;                                                // 0x02A8   (0x0008)  
	bool                                               bApplyVFXToCinematicCamera;                                 // 0x02B0   (0x0001)  
	bool                                               bFadeVFXUsingBlendableWeight;                               // 0x02B1   (0x0001)  
	bool                                               bUseVFXMaterialAsDynamic;                                   // 0x02B2   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x02B3   (0x0001)  MISSED
	FName                                              VFXMaterialFadeParameterName;                               // 0x02B4   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x02BC   (0x0004)  MISSED
	TArray<FName>                                      CinematicCameraExclusionTags;                               // 0x02C0   (0x0010)  
	float                                              VFXMaterialFadeParameterValueMin;                           // 0x02D0   (0x0004)  
	float                                              VFXMaterialFadeParameterValueMax;                           // 0x02D4   (0x0004)  
	float                                              VFXMaterialFadeInTime;                                      // 0x02D8   (0x0004)  
	float                                              VFXMaterialFadeOutTime;                                     // 0x02DC   (0x0004)  
	TEnumAsByte<EEasingFunc>                           VFXMaterialFadeInFunction;                                  // 0x02E0   (0x0001)  
	TEnumAsByte<EEasingFunc>                           VFXMaterialFadeOutFunction;                                 // 0x02E1   (0x0001)  
	bool                                               bAllowAudioInSpectator;                                     // 0x02E2   (0x0001)  
	unsigned char                                      UnknownData02_6[0x5];                                       // 0x02E3   (0x0005)  MISSED
	class UAkAudioEvent*                               AkEventStart;                                               // 0x02E8   (0x0008)  
	class UAkAudioEvent*                               AkEventLoop;                                                // 0x02F0   (0x0008)  
	class UAkAudioEvent*                               AkEventEnd;                                                 // 0x02F8   (0x0008)  
	class UAkRtpc*                                     GlobalRTPCFlag;                                             // 0x0300   (0x0008)  
	class UAkRtpc*                                     RTPCValue;                                                  // 0x0308   (0x0008)  
	class UCurveFloat*                                 RTPCCurve;                                                  // 0x0310   (0x0008)  
	TMap<FName, class UAkSwitchValue*>                 AttributeAudioSwitchMap;                                    // 0x0318   (0x0050)  
	class UMaterialInstanceDynamic*                    VFXMaterialDynamic;                                         // 0x0368   (0x0008)  
	unsigned char                                      UnknownData03_7[0x28];                                      // 0x0370   (0x0028)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.SSACosmeticCueNotify_Actor.GetTargetCharacter
	ABBQGameSessionCharacter* GetTargetCharacter() // [0x1e8d710] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	{
		typedef class ABBQGameSessionCharacter* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		return func();
	}
	// Function /Script/BBQGameSession.SSACosmeticCueNotify_Actor.GetRtpcValue
	float GetRtpcValue() // [0x1e8d6d0] Native|Event|Protected|BlueprintEvent 
	{
		typedef float (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		return func();
	}
	// Function /Script/BBQGameSession.SSACosmeticCueNotify_Actor.GetOwnedAbility
	UBBQGameplayAbility* GetOwnedAbility() // [0x1e8d690] Final|Native|Private|BlueprintCallable|BlueprintPure 
	{
		typedef class UBBQGameplayAbility* (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		return func();
	}
	// Function /Script/BBQGameSession.SSACosmeticCueNotify_Actor.GetCameraComponent
	UCameraComponent* GetCameraComponent(ABBQGameSessionCharacter* Character) // [0x1e8d5f0] Native|Event|Protected|BlueprintEvent 
	{
		typedef class UCameraComponent* (*FuncPtr)(ABBQGameSessionCharacter*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		return func(Character);
	}
	// Function /Script/BBQGameSession.SSACosmeticCueNotify_Actor.BP_SetupVFX
	void BP_SetupVFX() // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func();
	}
	// Function /Script/BBQGameSession.SSACosmeticCueNotify_Actor.BP_PerformVFXUpdate
	void BP_PerformVFXUpdate(float DeltaSeconds) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(DeltaSeconds);
	}
	// Function /Script/BBQGameSession.SSACosmeticCueNotify_Actor.BP_PerformAudioUpdate
	void BP_PerformAudioUpdate(float DeltaSeconds) // [0x2438a30] Event|Protected|BlueprintEvent 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(DeltaSeconds);
	}
};

/// Class /Script/BBQGameSession.VisualDamageApplicationActor_Manual
/// Size: 0x0258 (600 bytes) (0x000228 - 0x000258) align 8 MaxSize: 0x0258
class AVisualDamageApplicationActor_Manual : public AActor
{ 
public:
	FGameplayTag                                       TargetTag;                                                  // 0x0228   (0x0008)  
	bool                                               bTargetFamily;                                              // 0x0230   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0231   (0x0007)  MISSED
	class USceneComponent*                             SceneComponent;                                             // 0x0238   (0x0008)  
	class UBBQBoxComponent*                            BoxComponent;                                               // 0x0240   (0x0008)  
	unsigned char                                      UnknownData01_7[0x10];                                      // 0x0248   (0x0010)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.VisualDamageApplicationActor_Manual.EnableHeadTrauma
	void EnableHeadTrauma() // [0x1e8d5b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.VisualDamageApplicationActor_Manual.ApplyVisualDamageToTarget
	void ApplyVisualDamageToTarget(EBBQAttackType AttackType, int32_t Variation) // [0x1e8d220] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EBBQAttackType, int32_t);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(AttackType, Variation);
	}
};

/// Class /Script/BBQGameSession.VisualDamageApplicationActor_Sweep
/// Size: 0x0260 (608 bytes) (0x000228 - 0x000260) align 8 MaxSize: 0x0260
class AVisualDamageApplicationActor_Sweep : public AActor
{ 
public:
	FGameplayTag                                       TargetTag;                                                  // 0x0228   (0x0008)  
	class USceneComponent*                             SceneComponent;                                             // 0x0230   (0x0008)  
	class UBBQBoxComponent*                            BoxComponent;                                               // 0x0238   (0x0008)  
	unsigned char                                      UnknownData00_7[0x20];                                      // 0x0240   (0x0020)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.VisualDamageApplicationActor_Sweep.EnableHeadTrauma
	void EnableHeadTrauma() // [0x1e8d5d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.VisualDamageApplicationActor_Sweep.ApplyVisualDamageToTarget
	void ApplyVisualDamageToTarget(EBBQAttackType AttackType, bool SuppressVFXSpawn, int32_t AttackVariation, EBBQAnimationAttackDirection AttackAnimationDirection) // [0x1e8d450] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EBBQAttackType, bool, int32_t, EBBQAnimationAttackDirection);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(AttackType, SuppressVFXSpawn, AttackVariation, AttackAnimationDirection);
	}
};

/// Class /Script/BBQGameSession.VisualDamageApplicationActor_Mesh
/// Size: 0x0278 (632 bytes) (0x000228 - 0x000278) align 8 MaxSize: 0x0278
class AVisualDamageApplicationActor_Mesh : public AActor
{ 
public:
	FName                                              AttackerTag;                                                // 0x0228   (0x0008)  
	FName                                              VictimTag;                                                  // 0x0230   (0x0008)  
	class USceneComponent*                             SceneComponent;                                             // 0x0238   (0x0008)  
	class UBBQBoxComponent*                            BoxComponent;                                               // 0x0240   (0x0008)  
	unsigned char                                      UnknownData00_7[0x30];                                      // 0x0248   (0x0030)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.VisualDamageApplicationActor_Mesh.ApplyVisualDamageToTarget
	void ApplyVisualDamageToTarget(EBBQAttackType AttackType, bool SuppressVFXSpawn, int32_t AttackVariation, EBBQAnimationAttackDirection AttackAnimationDirection) // [0x1e8d2f0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(EBBQAttackType, bool, int32_t, EBBQAnimationAttackDirection);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(AttackType, SuppressVFXSpawn, AttackVariation, AttackAnimationDirection);
	}
};

/// Class /Script/BBQGameSession.VisualDamageInstigatorComponent
/// Size: 0x01C8 (456 bytes) (0x0000B0 - 0x0001C8) align 8 MaxSize: 0x01C8
class UVisualDamageInstigatorComponent : public UActorComponent
{ 
public:
	TEnumAsByte<ECollisionChannel>                     DamageTraceChannel;                                         // 0x00B0   (0x0001)  
	TEnumAsByte<EPhysicalSurface>                      SkinSurfaceType;                                            // 0x00B1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x26];                                      // 0x00B2   (0x0026)  MISSED
	bool                                               bCanDealEnvironemntDamage;                                  // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x00D9   (0x0003)  MISSED
	FName                                              SocketName;                                                 // 0x00DC   (0x0008)  
	TEnumAsByte<ECollisionChannel>                     EnvAttackChannel;                                           // 0x00E4   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x00E5   (0x0003)  MISSED
	float                                              OneShotDeactivateParticleTime;                              // 0x00E8   (0x0004)  
	unsigned char                                      UnknownData03_6[0x1C];                                      // 0x00EC   (0x001C)  MISSED
	class UBBQEnvironmentDamageSettings*               DamageSettings;                                             // 0x0108   (0x0008)  
	float                                              DetectionRadius;                                            // 0x0110   (0x0004)  
	float                                              HitDetectionTickRate;                                       // 0x0114   (0x0004)  
	unsigned char                                      UnknownData04_6[0x10];                                      // 0x0118   (0x0010)  MISSED
	FEnvironmentDamageSettings                         CurrentDamageSettings;                                      // 0x0128   (0x0058)  
	class UBBQEnvHitReceiverSubObject*                 EnvHitReceiverSubObject;                                    // 0x0180   (0x0008)  
	unsigned char                                      UnknownData05_6[0x10];                                      // 0x0188   (0x0010)  MISSED
	bool                                               bUseSliceDirectionForDecals;                                // 0x0198   (0x0001)  
	unsigned char                                      UnknownData06_6[0x7];                                       // 0x0199   (0x0007)  MISSED
	class ABBQChainsawProp*                            ChainsawProp;                                               // 0x01A0   (0x0008)  
	unsigned char                                      UnknownData07_6[0x8];                                       // 0x01A8   (0x0008)  MISSED
	class UAnimMontage*                                LastAttackMontage;                                          // 0x01B0   (0x0008)  
	class UNiagaraComponent*                           AttachedPS;                                                 // 0x01B8   (0x0008)  
	unsigned char                                      UnknownData08_7[0x8];                                       // 0x01C0   (0x0008)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.VisualDamageInstigatorComponent.SweepAlongSurface
	void SweepAlongSurface() // [0x1e8f3a0] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func();
	}
	// Function /Script/BBQGameSession.VisualDamageInstigatorComponent.StopSweep
	void StopSweep() // [0x1e8f380] Final|Native|Public  
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func();
	}
	// Function /Script/BBQGameSession.VisualDamageInstigatorComponent.SpawnBloodDecal
	void SpawnBloodDecal(UMaterialInterface* DecalMaterial, FVector DecalLocation, FRotator DecalRotation, FVector DecalSize, float DecalLifetime, float DecalFadeDuration, bool bFloorDecal) // [0x1e8f130] Final|Native|Public|HasDefaults 
	{
		typedef void (*FuncPtr)(UMaterialInterface*, FVector, FRotator, FVector, float, float, bool);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func(DecalMaterial, DecalLocation, DecalRotation, DecalSize, DecalLifetime, DecalFadeDuration, bFloorDecal);
	}
	// Function /Script/BBQGameSession.VisualDamageInstigatorComponent.Server_TestHitEnvironment
	void Server_TestHitEnvironment(AActor* ObjectHit, EBBQAttackType AttackType) // [0x1e8f060] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(AActor*, EBBQAttackType);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func(ObjectHit, AttackType);
	}
	// Function /Script/BBQGameSession.VisualDamageInstigatorComponent.Server_InstigateVisualDamage
	void Server_InstigateVisualDamage(FVisualDamageAttack VisualDamageAttack) // [0x1e8efc0] Net|NetReliableNative|Event|Public|NetServer 
	{
		typedef void (*FuncPtr)(FVisualDamageAttack);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(VisualDamageAttack);
	}
	// Function /Script/BBQGameSession.VisualDamageInstigatorComponent.NetMutlicast_TestHitEnvironment
	void NetMutlicast_TestHitEnvironment(AActor* ObjectHit, EBBQAttackType AttackType) // [0x1e8eef0] Net|NetReliableNative|Event|NetMulticast|Public 
	{
		typedef void (*FuncPtr)(AActor*, EBBQAttackType);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[5]);
		func(ObjectHit, AttackType);
	}
	// Function /Script/BBQGameSession.VisualDamageInstigatorComponent.NetMulticast_InstigateVisualDamage
	void NetMulticast_InstigateVisualDamage(FVisualDamageAttack VisualDamageAttack) // [0x1e8ee50] Net|Native|Event|NetMulticast|Protected 
	{
		typedef void (*FuncPtr)(FVisualDamageAttack);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[6]);
		func(VisualDamageAttack);
	}
	// Function /Script/BBQGameSession.VisualDamageInstigatorComponent.Local_CheckEnvironmentBloodSplash
	void Local_CheckEnvironmentBloodSplash(FVisualDamageInstigatorSettings Settings, FVisualDamageInteractionParam InteractionParam, EBBQEnvironemntBloodSplashType SplashTraceVariant) // [0x1e8ebb0] Final|Native|Public  
	{
		typedef void (*FuncPtr)(FVisualDamageInstigatorSettings, FVisualDamageInteractionParam, EBBQEnvironemntBloodSplashType);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[7]);
		func(Settings, InteractionParam, SplashTraceVariant);
	}
	// Function /Script/BBQGameSession.VisualDamageInstigatorComponent.Local_CheckAttackerBloodSplash
	void Local_CheckAttackerBloodSplash(FVisualDamageInstigatorSettings Settings, FVisualDamageInteractionParam InteractionParam) // [0x1e8e960] Final|Native|Public  
	{
		typedef void (*FuncPtr)(FVisualDamageInstigatorSettings, FVisualDamageInteractionParam);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[8]);
		func(Settings, InteractionParam);
	}
	// Function /Script/BBQGameSession.VisualDamageInstigatorComponent.DestroyAttachedSystem
	void DestroyAttachedSystem() // [0x1e8e870] Final|Native|Protected 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[9]);
		func();
	}
};

/// Class /Script/BBQGameSession.VisualDamageReceiverComponent
/// Size: 0x0120 (288 bytes) (0x0000B0 - 0x000120) align 8 MaxSize: 0x0120
class UVisualDamageReceiverComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_8[0x4];                                       // 0x00B0   (0x0004)  MISSED
	int32_t                                            RenderTargetSize;                                           // 0x00B4   (0x0004)  
	TEnumAsByte<ETextureRenderTargetFormat>            RenderTargetFormat;                                         // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x00B9   (0x0007)  MISSED
	class USceneCaptureComponent2D*                    VisualDamageSceneCapture;                                   // 0x00C0   (0x0008)  
	class UTextureRenderTarget2D*                      RenderTarget;                                               // 0x00C8   (0x0008)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x00D0   (0x0010)  MISSED
	class UMaterialInterface*                          UnwrapMaterial;                                             // 0x00E0   (0x0008)  
	class UMaterialInterface*                          InvisibleMaterial;                                          // 0x00E8   (0x0008)  
	class UMaterialInstanceDynamic*                    UnwrapMID;                                                  // 0x00F0   (0x0008)  
	TArray<FDyanmicMaterialContainer>                  CharacterDynMatContainers;                                  // 0x00F8   (0x0010)  
	class UTexture2D*                                  ExecutionErodeTexture;                                      // 0x0108   (0x0008)  
	float                                              ExecutionErodeProgress;                                     // 0x0110   (0x0004)  
	unsigned char                                      UnknownData03_7[0xC];                                       // 0x0114   (0x000C)  MISSED


	/// Functions
	// Function /Script/BBQGameSession.VisualDamageReceiverComponent.UpdateExecutionErodeProgress
	void UpdateExecutionErodeProgress(float NewProgress) // [0x1e8f3c0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(float);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[0]);
		func(NewProgress);
	}
	// Function /Script/BBQGameSession.VisualDamageReceiverComponent.InitializeExecutionErode
	void InitializeExecutionErode(UTexture2D* NewErodeTexture) // [0x1e8e8d0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)(UTexture2D*);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[1]);
		func(NewErodeTexture);
	}
	// Function /Script/BBQGameSession.VisualDamageReceiverComponent.EnableHeadTrauma
	void EnableHeadTrauma() // [0x1e8e8b0] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[2]);
		func();
	}
	// Function /Script/BBQGameSession.VisualDamageReceiverComponent.DisableErosionUpdates
	void DisableErosionUpdates() // [0x1e8e890] Final|Native|Public|BlueprintCallable 
	{
		typedef void (*FuncPtr)();
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[3]);
		func();
	}
	// Function /Script/BBQGameSession.VisualDamageReceiverComponent.ApplyVisualDamage
	void ApplyVisualDamage(FVector HitLocation, FVector HitNormal, int32_t AttackVariation, EBBQAttackType AttackType, bool bUseManualRotationAndSize, FVector ManualBoxSize, FRotator ManualRotation) // [0x1e8e610] Final|Native|Public|HasDefaults|BlueprintCallable 
	{
		typedef void (*FuncPtr)(FVector, FVector, int32_t, EBBQAttackType, bool, FVector, FRotator);
		auto vtablePtr = reinterpret_cast<uintptr_t*>(vtable);
		auto func = reinterpret_cast<FuncPtr>(vtablePtr[4]);
		func(HitLocation, HitNormal, AttackVariation, AttackType, bUseManualRotationAndSize, ManualBoxSize, ManualRotation);
	}
};

#pragma pack(pop)


static_assert(sizeof(AABBQDismembermentActor) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(AAssetSelectionDebugActor) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(UBBQAbilityBarge) == 0x0738); // 1848 bytes (0x0004F0 - 0x000738)
static_assert(sizeof(UBBQAbilityTask_WaitGameplayTagWindow) == 0x00D0); // 208 bytes (0x0000A8 - 0x0000D0)
static_assert(sizeof(UBBQAbilityTask_WaitBargeAreaOfEffectOverlap) == 0x00C0); // 192 bytes (0x000080 - 0x0000C0)
static_assert(sizeof(UBBQAbilityTask_BargeAimingAssistTask) == 0x00D8); // 216 bytes (0x000080 - 0x0000D8)
static_assert(sizeof(UBBQAbilityBlowPowder) == 0x0500); // 1280 bytes (0x0004F0 - 0x000500)
static_assert(sizeof(UBBQAbilityClothesline) == 0x05D8); // 1496 bytes (0x0004F0 - 0x0005D8)
static_assert(sizeof(UHoldItemAnimNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(FConsumeItemEffects) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(UBBQAbilityConsumeItem) == 0x05A0); // 1440 bytes (0x0004F0 - 0x0005A0)
static_assert(sizeof(UBBQAbilityCookListen) == 0x0748); // 1864 bytes (0x0004F0 - 0x000748)
static_assert(sizeof(UBBQAbilityDetectGrandpa) == 0x0508); // 1288 bytes (0x0004F0 - 0x000508)
static_assert(sizeof(UUBBQAbilityDodge) == 0x0528); // 1320 bytes (0x0004F0 - 0x000528)
static_assert(sizeof(FMeleeAttackAnimSlotSet) == 0x0002); // 2 bytes (0x000000 - 0x000002)
static_assert(sizeof(UBBQAbilityMeleeAttack) == 0x0798); // 1944 bytes (0x0004F0 - 0x000798)
static_assert(sizeof(UBBQAbilityEnvironmentalAttack) == 0x07C0); // 1984 bytes (0x000798 - 0x0007C0)
static_assert(sizeof(UBBQAbilityFirstAid) == 0x0548); // 1352 bytes (0x0004F0 - 0x000548)
static_assert(sizeof(FGameplayCueData) == 0x000C); // 12 bytes (0x000000 - 0x00000C)
static_assert(sizeof(UBBQStarSignAbility) == 0x05E0); // 1504 bytes (0x0004F0 - 0x0005E0)
static_assert(sizeof(UBBQAbilityFocusPerk) == 0x0620); // 1568 bytes (0x0005E0 - 0x000620)
static_assert(sizeof(FBBQOutlineRendererConfig) == 0x0098); // 152 bytes (0x000000 - 0x000098)
static_assert(sizeof(UBBQAbilityFullVial) == 0x05B8); // 1464 bytes (0x0004F0 - 0x0005B8)
static_assert(sizeof(UBBQAbilityGrandpaSonar) == 0x0670); // 1648 bytes (0x0004F0 - 0x000670)
static_assert(sizeof(UBBQAbilityHearing) == 0x04F8); // 1272 bytes (0x0004F0 - 0x0004F8)
static_assert(sizeof(UBBQAbilityHeightenedSense) == 0x06B8); // 1720 bytes (0x0005E0 - 0x0006B8)
static_assert(sizeof(FBBQHuntModeDetectableObject) == 0x0058); // 88 bytes (0x000000 - 0x000058)
static_assert(sizeof(UBBQAbilityHuntMode) == 0x0808); // 2056 bytes (0x0004F0 - 0x000808)
static_assert(sizeof(UBBQAbilityIncapacitatedRecover) == 0x0508); // 1288 bytes (0x0004F0 - 0x000508)
static_assert(sizeof(UBBQAbilityInvestigateFootsteps) == 0x04F0); // 1264 bytes (0x0004F0 - 0x0004F0)
static_assert(sizeof(UBBQAbilityISeeYou) == 0x05B8); // 1464 bytes (0x0004F0 - 0x0005B8)
static_assert(sizeof(UBBQAbilityJohnnyBloodlust) == 0x0520); // 1312 bytes (0x0004F0 - 0x000520)
static_assert(sizeof(UBBQAbilityKnowWatch) == 0x05D0); // 1488 bytes (0x0004F0 - 0x0005D0)
static_assert(sizeof(UBBQAbilityListenTagChange) == 0x0528); // 1320 bytes (0x0004F0 - 0x000528)
static_assert(sizeof(UBBQAbilityLocateGrandpa) == 0x05E0); // 1504 bytes (0x0005E0 - 0x0005E0)
static_assert(sizeof(UBBQAbilityTask_ExecuteMeleeAttack) == 0x00D8); // 216 bytes (0x000080 - 0x0000D8)
static_assert(sizeof(UBBQMeleeHitFrameNotifyState) == 0x0038); // 56 bytes (0x000030 - 0x000038)
static_assert(sizeof(UMeleeAttackVisualiserComponent) == 0x00B8); // 184 bytes (0x0000B0 - 0x0000B8)
static_assert(sizeof(UBBQMeleeArcNotifyState) == 0x0050); // 80 bytes (0x000030 - 0x000050)
static_assert(sizeof(UBBQAbilityMeleeChainsaw) == 0x07F0); // 2032 bytes (0x000798 - 0x0007F0)
static_assert(sizeof(UBBQAbilityMeleeChainsawSlam) == 0x0800); // 2048 bytes (0x0007F0 - 0x000800)
static_assert(sizeof(UBBQAbilityMeleeReaction) == 0x04F8); // 1272 bytes (0x0004F0 - 0x0004F8)
static_assert(sizeof(UBBQAbilityPainIsNothing) == 0x06A0); // 1696 bytes (0x0005E0 - 0x0006A0)
static_assert(sizeof(UBBQPerfumeBottleBreakNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UBBQAbilityPerfume) == 0x05A0); // 1440 bytes (0x0005A0 - 0x0005A0)
static_assert(sizeof(UBBQAbilityPerkAdrenalineRush) == 0x0578); // 1400 bytes (0x0004F0 - 0x000578)
static_assert(sizeof(UBBQAbilityPerkAttributePoints) == 0x0638); // 1592 bytes (0x0004F0 - 0x000638)
static_assert(sizeof(UBBQAbilityPerkHelpMe) == 0x05A0); // 1440 bytes (0x0004F0 - 0x0005A0)
static_assert(sizeof(UBBQAbilityPerkNoStopping) == 0x0508); // 1288 bytes (0x0004F0 - 0x000508)
static_assert(sizeof(UBBQAbilityPerkSticksAndStones) == 0x05C0); // 1472 bytes (0x0004F0 - 0x0005C0)
static_assert(sizeof(UBBQAbilityPerkWellTrained) == 0x0570); // 1392 bytes (0x0004F0 - 0x000570)
static_assert(sizeof(UBBQAbilityPlaceTrap) == 0x05D0); // 1488 bytes (0x0004F0 - 0x0005D0)
static_assert(sizeof(UBBQAbilityRipstall) == 0x0508); // 1288 bytes (0x0004F0 - 0x000508)
static_assert(sizeof(UBBQAbilitySneakAttack) == 0x07B0); // 1968 bytes (0x000798 - 0x0007B0)
static_assert(sizeof(UBBQAbilitySpyOnPlayer) == 0x0588); // 1416 bytes (0x0004F0 - 0x000588)
static_assert(sizeof(UBBQAbilityStatusEffect) == 0x0508); // 1288 bytes (0x0004F0 - 0x000508)
static_assert(sizeof(FSenseInfo) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(ABBQAbilityTarget_SenseActors) == 0x04B0); // 1200 bytes (0x000338 - 0x0004B0)
static_assert(sizeof(ABBQAbilityTarget_HeightenedSense) == 0x0540); // 1344 bytes (0x0004B0 - 0x000540)
static_assert(sizeof(FHandleInfo) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(ABBQAbilityTarget_IKnowEngines) == 0x0570); // 1392 bytes (0x0004B0 - 0x000570)
static_assert(sizeof(FHighlightInfo) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(ABBQAbilityTarget_ThereTheyAre) == 0x05A0); // 1440 bytes (0x000338 - 0x0005A0)
static_assert(sizeof(UBBQAbilityTask_WaitAbilityBlocked) == 0x00D0); // 208 bytes (0x0000A8 - 0x0000D0)
static_assert(sizeof(UBBQAbilityTask_WaitInputHold) == 0x0110); // 272 bytes (0x000080 - 0x000110)
static_assert(sizeof(UBBQAbilityThickSkin) == 0x04F8); // 1272 bytes (0x0004F0 - 0x0004F8)
static_assert(sizeof(FBBQGameplayAbilityTargetingClueInfo) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(UBBQAbilityTrackFootprints) == 0x06B0); // 1712 bytes (0x0004F0 - 0x0006B0)
static_assert(sizeof(UBBQAbilityUltimateEscape) == 0x0608); // 1544 bytes (0x0005E0 - 0x000608)
static_assert(sizeof(UBBQAnimatedHoldCharacterBehaviourInterface) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(FBBQTurnInPlaceAsset) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(UBBQAnimInstance) == 0x0460); // 1120 bytes (0x0002B8 - 0x000460)
static_assert(sizeof(UBBQAnimNotify_Comm) == 0x0040); // 64 bytes (0x000038 - 0x000040)
static_assert(sizeof(UBBQAnimNotify_DisablePlayerPlayerCollision) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UBBQAnimNotify_Footsteps) == 0x0058); // 88 bytes (0x000038 - 0x000058)
static_assert(sizeof(UBBQAnimNotify_HingeDoorAkEvent) == 0x0040); // 64 bytes (0x000038 - 0x000040)
static_assert(sizeof(UBBQAnimNotifyState_HingeDoorAkEvent) == 0x0048); // 72 bytes (0x000030 - 0x000048)
static_assert(sizeof(UBBQAnimNotify_RunForwards) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UBBQAssetManager) == 0x0478); // 1144 bytes (0x000478 - 0x000478)
static_assert(sizeof(UBBQAttributeSet_CookListen) == 0x0060); // 96 bytes (0x000030 - 0x000060)
static_assert(sizeof(UBBQAttributeSet_SpyAbility) == 0x0058); // 88 bytes (0x000038 - 0x000058)
static_assert(sizeof(UBBQAudioDebugSubsystem) == 0x0050); // 80 bytes (0x000040 - 0x000050)
static_assert(sizeof(ABBQBarbedWire) == 0x0560); // 1376 bytes (0x000228 - 0x000560)
static_assert(sizeof(ABBQBarbedWireOnDoorFrame) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(UBBQBarbedWireSlot) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(FCommonBleedoutInfo) == 0x0028); // 40 bytes (0x000000 - 0x000028)
static_assert(sizeof(FTimeBasedBleedoutInfo) == 0x0030); // 48 bytes (0x000000 - 0x000030)
static_assert(sizeof(FTagBasedBleedoutInfo) == 0x0030); // 48 bytes (0x000000 - 0x000030)
static_assert(sizeof(UBBQBaseBleedoutData) == 0x0050); // 80 bytes (0x000030 - 0x000050)
static_assert(sizeof(FBleedoutHandle) == 0x000C); // 12 bytes (0x000000 - 0x00000C)
static_assert(sizeof(UBBQBleedoutComponent) == 0x0128); // 296 bytes (0x0000B0 - 0x000128)
static_assert(sizeof(ABBQBloodBucket) == 0x0320); // 800 bytes (0x000228 - 0x000320)
static_assert(sizeof(ABBQBloodPool) == 0x02F0); // 752 bytes (0x000228 - 0x0002F0)
static_assert(sizeof(UBBQBloodTrailComponent) == 0x0170); // 368 bytes (0x0000B0 - 0x000170)
static_assert(sizeof(UBBQBloodTrailPooledDecalComponent) == 0x0250); // 592 bytes (0x000240 - 0x000250)
static_assert(sizeof(ABBQTraversalActor) == 0x02D8); // 728 bytes (0x000228 - 0x0002D8)
static_assert(sizeof(ABBQBoltholeBase) == 0x0480); // 1152 bytes (0x0002D8 - 0x000480)
static_assert(sizeof(UBBQBoxComponent) == 0x0490); // 1168 bytes (0x000490 - 0x000490)
static_assert(sizeof(UBBQCalculationBleedingOutRate) == 0x0088); // 136 bytes (0x000040 - 0x000088)
static_assert(sizeof(UBBQCalculationRestoreChunk) == 0x0088); // 136 bytes (0x000040 - 0x000088)
static_assert(sizeof(UBBQCalculationSSACooldown) == 0x0138); // 312 bytes (0x000040 - 0x000138)
static_assert(sizeof(UResetCameraOverrideStateAnimNotify) == 0x0038); // 56 bytes (0x000038 - 0x000038)
static_assert(sizeof(FBBQCameraState_CameraShake) == 0x0028); // 40 bytes (0x000000 - 0x000028)
static_assert(sizeof(FBBQ_Camera_State) == 0x00C0); // 192 bytes (0x000008 - 0x0000C0)
static_assert(sizeof(FCameraStateBlendable) == 0x00E0); // 224 bytes (0x000000 - 0x0000E0)
static_assert(sizeof(FCameraStateModifier) == 0x0030); // 48 bytes (0x000000 - 0x000030)
static_assert(sizeof(UBBQCameraComponent) == 0x0AA0); // 2720 bytes (0x0007E0 - 0x000AA0)
static_assert(sizeof(UBBQCameraFadingSettings) == 0x0080); // 128 bytes (0x000028 - 0x000080)
static_assert(sizeof(UBBQCameraFadingSubobject) == 0x0038); // 56 bytes (0x000028 - 0x000038)
static_assert(sizeof(UBBQCameraShake) == 0x01B0); // 432 bytes (0x0001B0 - 0x0001B0)
static_assert(sizeof(UBBQAnimNotify_CameraShake) == 0x0058); // 88 bytes (0x000038 - 0x000058)
static_assert(sizeof(FBBQCameraFramingOffset) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(UBBQCameraFramingSettings) == 0x0098); // 152 bytes (0x000028 - 0x000098)
static_assert(sizeof(UBBQCameraSuggestedFramingSubobject) == 0x0088); // 136 bytes (0x000028 - 0x000088)
static_assert(sizeof(UBBQCameraTargetLockSettings) == 0x0040); // 64 bytes (0x000028 - 0x000040)
static_assert(sizeof(UBBQCameraTargetLockSubobject) == 0x0050); // 80 bytes (0x000028 - 0x000050)
static_assert(sizeof(UBBQCameraTerrainFollowSettings) == 0x0068); // 104 bytes (0x000028 - 0x000068)
static_assert(sizeof(UBBQCameraTerrainFollowSubobject) == 0x0168); // 360 bytes (0x000028 - 0x000168)
static_assert(sizeof(ABBQCar) == 0x0240); // 576 bytes (0x000228 - 0x000240)
static_assert(sizeof(ABBQCattleGridJunction) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(UBBQNotifyState_ChainsawPendingOverheat) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UBBQNotifyState_ChainsawRevvingDisabled) == 0x0040); // 64 bytes (0x000030 - 0x000040)
static_assert(sizeof(FChainsawHeatLevelTag) == 0x0080); // 128 bytes (0x000000 - 0x000080)
static_assert(sizeof(UBBQChainsawComponent) == 0x04D8); // 1240 bytes (0x0000B0 - 0x0004D8)
static_assert(sizeof(ABBQChainsawProp) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(FBBQCinematicCameraSetup) == 0x0048); // 72 bytes (0x000000 - 0x000048)
static_assert(sizeof(FBBQPairedAnimation) == 0x0100); // 256 bytes (0x000000 - 0x000100)
static_assert(sizeof(FBBQPairedAnimationSet) == 0x0150); // 336 bytes (0x000000 - 0x000150)
static_assert(sizeof(FBBQExecutionProperties) == 0x01D0); // 464 bytes (0x000000 - 0x0001D0)
static_assert(sizeof(UBBQExecutionSettings) == 0x0260); // 608 bytes (0x000030 - 0x000260)
static_assert(sizeof(UBBQCharacterAnimSettings) == 0x0ED0); // 3792 bytes (0x000030 - 0x000ED0)
static_assert(sizeof(UBBQCharacterAudioComponent) == 0x0138); // 312 bytes (0x0000B0 - 0x000138)
static_assert(sizeof(ABBQCharacterBehaviour) == 0x02E8); // 744 bytes (0x000228 - 0x0002E8)
static_assert(sizeof(UBBQCharacterBehaviourComponent) == 0x00C0); // 192 bytes (0x0000B0 - 0x0000C0)
static_assert(sizeof(UInventoryTagMapping) == 0x0080); // 128 bytes (0x000030 - 0x000080)
static_assert(sizeof(FBBQInventoryItem) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(UBBQCharacterInventoryComponent) == 0x0208); // 520 bytes (0x0000B0 - 0x000208)
static_assert(sizeof(FBBQLockOnTargetInfo) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(UBBQCharacterMovementComponent) == 0x1210); // 4624 bytes (0x000AF0 - 0x001210)
static_assert(sizeof(FBBQMapPosition) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(UBBQCheatManager) == 0x0228); // 552 bytes (0x0000E0 - 0x000228)
static_assert(sizeof(UBBQCinematicCameraModifier) == 0x0058); // 88 bytes (0x000048 - 0x000058)
static_assert(sizeof(UBBQCinematicCameraPlayerComponent) == 0x00F0); // 240 bytes (0x0000B0 - 0x0000F0)
static_assert(sizeof(UBBQCloseEncounterHitFrameState) == 0x0038); // 56 bytes (0x000030 - 0x000038)
static_assert(sizeof(FNoiseOutlineConfig) == 0x0048); // 72 bytes (0x000000 - 0x000048)
static_assert(sizeof(FBBQCloseEncounterStateRepInfo) == 0x0080); // 128 bytes (0x000000 - 0x000080)
static_assert(sizeof(FCloseEncounterParticipant) == 0x0028); // 40 bytes (0x000000 - 0x000028)
static_assert(sizeof(UBBQCloseEncounterComponent) == 0x02F0); // 752 bytes (0x0000B0 - 0x0002F0)
static_assert(sizeof(ABBQCollectable) == 0x0230); // 560 bytes (0x000228 - 0x000230)
static_assert(sizeof(UBBQDamageType) == 0x0170); // 368 bytes (0x000040 - 0x000170)
static_assert(sizeof(UBBQDamageType_DisconnectionTimeout) == 0x0170); // 368 bytes (0x000170 - 0x000170)
static_assert(sizeof(UBBQInteractionEventComponent) == 0x02C8); // 712 bytes (0x0000B0 - 0x0002C8)
static_assert(sizeof(UBBQCombatInteractionEvent) == 0x02D8); // 728 bytes (0x0002C8 - 0x0002D8)
static_assert(sizeof(ABBQCommTriggerBox) == 0x0248); // 584 bytes (0x000230 - 0x000248)
static_assert(sizeof(UBBQComponentInputInterface) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(ABBQContextualKillLocation) == 0x02F8); // 760 bytes (0x000228 - 0x0002F8)
static_assert(sizeof(ABBQDeathBloodApplicationActor) == 0x0240); // 576 bytes (0x000228 - 0x000240)
static_assert(sizeof(UBBQDeathBloodComponent) == 0x00F8); // 248 bytes (0x0000B0 - 0x0000F8)
static_assert(sizeof(UBBQDebugAchievementComponent) == 0x00B0); // 176 bytes (0x0000B0 - 0x0000B0)
static_assert(sizeof(UBBQDebugDrawComponent) == 0x00B0); // 176 bytes (0x0000B0 - 0x0000B0)
static_assert(sizeof(ABBQDestructibleActor) == 0x0268); // 616 bytes (0x000228 - 0x000268)
static_assert(sizeof(UBBQDialogComponent) == 0x01A0); // 416 bytes (0x0000B0 - 0x0001A0)
static_assert(sizeof(ABBQDismembermentActor) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(UBBQDismembermentComponent) == 0x00B0); // 176 bytes (0x0000B0 - 0x0000B0)
static_assert(sizeof(ABBQDismembermentMorphTargetLerper) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(ABBQDoorBase) == 0x0430); // 1072 bytes (0x000228 - 0x000430)
static_assert(sizeof(FHingeDoorAnimation) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FHingeDoorSoundState) == 0x0040); // 64 bytes (0x000000 - 0x000040)
static_assert(sizeof(ABBQDoorHinge) == 0x0550); // 1360 bytes (0x000430 - 0x000550)
static_assert(sizeof(FDoorSlicerStump) == 0x0030); // 48 bytes (0x000000 - 0x000030)
static_assert(sizeof(FDoorSlicerParts) == 0x00E8); // 232 bytes (0x000000 - 0x0000E8)
static_assert(sizeof(FDoorSlicerSmashable) == 0x0040); // 64 bytes (0x000000 - 0x000040)
static_assert(sizeof(UBBQDoorSlicerComponent) == 0x0140); // 320 bytes (0x0000B0 - 0x000140)
static_assert(sizeof(FBBQ_SlidingAnimationRepInfo) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(ABBQDoorSliding) == 0x04C0); // 1216 bytes (0x000430 - 0x0004C0)
static_assert(sizeof(FBBQElectroTrapInteractionSettings) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(UBBQElectroTrapComponent) == 0x0130); // 304 bytes (0x0000B0 - 0x000130)
static_assert(sizeof(UBBQEnvHitReceiverSubObject) == 0x0040); // 64 bytes (0x000028 - 0x000040)
static_assert(sizeof(FEnvironmentDamageSettings) == 0x0058); // 88 bytes (0x000000 - 0x000058)
static_assert(sizeof(UBBQEnvironmentDamageSettings) == 0x0040); // 64 bytes (0x000030 - 0x000040)
static_assert(sizeof(UBBQEnvironmentHitReceiver) == 0x00D0); // 208 bytes (0x0000B0 - 0x0000D0)
static_assert(sizeof(UBBQCalculationFamilySlowdown) == 0x0040); // 64 bytes (0x000040 - 0x000040)
static_assert(sizeof(FLockOnTargetVolumeInfo) == 0x0068); // 104 bytes (0x000000 - 0x000068)
static_assert(sizeof(ABBQEscapeZone) == 0x0438); // 1080 bytes (0x000228 - 0x000438)
static_assert(sizeof(UBBQExecutionComponent) == 0x0150); // 336 bytes (0x0000B0 - 0x000150)
static_assert(sizeof(ABBQFlickeringLight) == 0x0270); // 624 bytes (0x000228 - 0x000270)
static_assert(sizeof(ABBQFootprintClue) == 0x0258); // 600 bytes (0x000228 - 0x000258)
static_assert(sizeof(UBBQFootstepTrail) == 0x0138); // 312 bytes (0x0000B0 - 0x000138)
static_assert(sizeof(FFuse) == 0x0008); // 8 bytes (0x000000 - 0x000008)
static_assert(sizeof(FFuseboxInteractionState) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(ABBQFuseBoxBase) == 0x02F8); // 760 bytes (0x000228 - 0x0002F8)
static_assert(sizeof(ABBQFuseBoxDoorBase) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(ABBQFuseboxDoorDressing) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(ABBQFuseBoxLocator) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(FInputActionContainer) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FBBQMinigameState) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FBBQMinigameNetState_SweetSpot) == 0x0004); // 4 bytes (0x000000 - 0x000004)
static_assert(sizeof(FBBQMinigameNetState_FuseBox) == 0x0030); // 48 bytes (0x000000 - 0x000030)
static_assert(sizeof(FBBQMinigameNetState_Interaction) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(FBBQMinigameNetState) == 0x0068); // 104 bytes (0x000000 - 0x000068)
static_assert(sizeof(FBBQMinigameSavedState) == 0x0070); // 112 bytes (0x000000 - 0x000070)
static_assert(sizeof(FBBQMinigameInitialState) == 0x0088); // 136 bytes (0x000000 - 0x000088)
static_assert(sizeof(ABBQMinigameV2) == 0x0580); // 1408 bytes (0x000228 - 0x000580)
static_assert(sizeof(ABBQFuseBoxMinigame) == 0x0658); // 1624 bytes (0x000580 - 0x000658)
static_assert(sizeof(FSpottingVFXProperties) == 0x0070); // 112 bytes (0x000000 - 0x000070)
static_assert(sizeof(FCookListenPostProcessProperties) == 0x0050); // 80 bytes (0x000000 - 0x000050)
static_assert(sizeof(FBBQNoiseTargetInfo) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(ABBQGameplayAbilityTargetActor_CookListen) == 0x06A0); // 1696 bytes (0x000338 - 0x0006A0)
static_assert(sizeof(FBBQFootprint) == 0x0028); // 40 bytes (0x000000 - 0x000028)
static_assert(sizeof(FBBQFootprintVisualData) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(ABBQGameplayAbilityTargetActor_Footprints) == 0x04D0); // 1232 bytes (0x000338 - 0x0004D0)
static_assert(sizeof(FBBQTargetActorMeshState) == 0x0048); // 72 bytes (0x000000 - 0x000048)
static_assert(sizeof(ABBQGameplayAbilityTargetActor_PlaceTrap) == 0x04B0); // 1200 bytes (0x000338 - 0x0004B0)
static_assert(sizeof(ABBQGameplayCueNotify_Actor) == 0x0288); // 648 bytes (0x000288 - 0x000288)
static_assert(sizeof(ABBQGameplayLight) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(UBBQGameSessionBlueprintFunctionLibrary) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UBBQLabelNotify) == 0x0040); // 64 bytes (0x000038 - 0x000040)
static_assert(sizeof(UBBQGenericNotifyState) == 0x0038); // 56 bytes (0x000030 - 0x000038)
static_assert(sizeof(ABBQGameSessionCharacter) == 0x16D0); // 5840 bytes (0x0005F0 - 0x0016D0)
static_assert(sizeof(UBBQBarbedWiredCheckNotifyState) == 0x0038); // 56 bytes (0x000030 - 0x000038)
static_assert(sizeof(FBBQControlSchemeDefaults) == 0x0002); // 2 bytes (0x000000 - 0x000002)
static_assert(sizeof(FBBQTraversalData) == 0x0044); // 68 bytes (0x000000 - 0x000044)
static_assert(sizeof(FBBQDoorActionParams) == 0x0038); // 56 bytes (0x000000 - 0x000038)
static_assert(sizeof(FBBQMovementSettings) == 0x0038); // 56 bytes (0x000008 - 0x000038)
static_assert(sizeof(FBBQMovementSettingsStance) == 0x0078); // 120 bytes (0x000008 - 0x000078)
static_assert(sizeof(FBBQMovementSettingsState) == 0x01E8); // 488 bytes (0x000008 - 0x0001E8)
static_assert(sizeof(FBBQMovementSettingsMode) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FBBQAnimatedMontage) == 0x0048); // 72 bytes (0x000000 - 0x000048)
static_assert(sizeof(FBBQAnimationData) == 0x0038); // 56 bytes (0x000000 - 0x000038)
static_assert(sizeof(FBBQWellData) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FBBQAnimationState) == 0x0050); // 80 bytes (0x000000 - 0x000050)
static_assert(sizeof(FBBQDraggingInfo) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(FBBQWellInfo) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(ABBQGameSessionCharacterAnimated) == 0x22D0); // 8912 bytes (0x0016D0 - 0x0022D0)
static_assert(sizeof(ABBQGameSessionGameMode) == 0x0610); // 1552 bytes (0x0003B0 - 0x000610)
static_assert(sizeof(FBBQMinigameInstigatorSavedState) == 0x0050); // 80 bytes (0x000000 - 0x000050)
static_assert(sizeof(ABBQGameSessionGameState) == 0x0840); // 2112 bytes (0x0005D0 - 0x000840)
static_assert(sizeof(UBBQBlueprintFunctionLibraryGameSessionGameState) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(ABBQGameSessionPlayerState) == 0x0C58); // 3160 bytes (0x000BB0 - 0x000C58)
static_assert(sizeof(FBBQGlobalOutlineRendererConfig) == 0x0030); // 48 bytes (0x000000 - 0x000030)
static_assert(sizeof(UBBQGameSessionProjectSettings) == 0x0048); // 72 bytes (0x000028 - 0x000048)
static_assert(sizeof(ABBQGameSessionWorldSettings) == 0x03B8); // 952 bytes (0x0003A8 - 0x0003B8)
static_assert(sizeof(UBBQGameUtilitiesLibrary) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(ABBQGameWorldManager) == 0x02E0); // 736 bytes (0x0002E0 - 0x0002E0)
static_assert(sizeof(ABBQGarageControl) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(ABBQGarageDoor) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(ABBQGenerator) == 0x0260); // 608 bytes (0x000228 - 0x000260)
static_assert(sizeof(FGrandpaSpawnSettings) == 0x0002); // 2 bytes (0x000000 - 0x000002)
static_assert(sizeof(FGrandpaPerceptionInfo) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FGrandpaFeedingInfo) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(ABBQGrandpa) == 0x2B70); // 11120 bytes (0x0022D0 - 0x002B70)
static_assert(sizeof(ABBQGrandpaRandomiser) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(ABBQGrandpaSneakAttackBehaviour) == 0x0310); // 784 bytes (0x0002E8 - 0x000310)
static_assert(sizeof(ABBQGrandpaSpawn) == 0x0230); // 560 bytes (0x000228 - 0x000230)
static_assert(sizeof(UHarvestIntoEndedAnimNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UHarvestOutEndedAnimNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(ABBQHarvestLocation) == 0x0470); // 1136 bytes (0x000228 - 0x000470)
static_assert(sizeof(UFollowToHidingCameraAnimNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UDisableInterruptSearchSuccessAnimNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UEnterHidingSpotLoopAnimNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UOpenGrabWindowAnimNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UCloseGrabWindowAnimNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UDamageDiscoveredVictimAnimNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UDamageGrabbedVictimAnimNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(FBBQHidingSpotCurves) == 0x00C8); // 200 bytes (0x000000 - 0x0000C8)
static_assert(sizeof(FHidingPlayerCameraInfo) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(FHidingCharacterInfo) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(ABBQHidingSpot) == 0x0988); // 2440 bytes (0x000228 - 0x000988)
static_assert(sizeof(UBBQHidingVictimProximityComponent) == 0x04E0); // 1248 bytes (0x000480 - 0x0004E0)
static_assert(sizeof(ABBQHidingVolume) == 0x0250); // 592 bytes (0x000228 - 0x000250)
static_assert(sizeof(UBBQHidingVolumeComponent) == 0x0148); // 328 bytes (0x0000C8 - 0x000148)
static_assert(sizeof(UBBQHUDMainWidget) == 0x0280); // 640 bytes (0x000260 - 0x000280)
static_assert(sizeof(FBBQLevelSequenceAnimOverride) == 0x0050); // 80 bytes (0x000000 - 0x000050)
static_assert(sizeof(ABBQImposter) == 0x0288); // 648 bytes (0x000228 - 0x000288)
static_assert(sizeof(FIncapAnimSlotSet) == 0x0050); // 80 bytes (0x000000 - 0x000050)
static_assert(sizeof(FIncapResponse) == 0x00C8); // 200 bytes (0x000000 - 0x0000C8)
static_assert(sizeof(UIncapResponseTable) == 0x0040); // 64 bytes (0x000030 - 0x000040)
static_assert(sizeof(ABBQIncapacitatedBehaviour) == 0x03D0); // 976 bytes (0x0002E8 - 0x0003D0)
static_assert(sizeof(ABBQInspectableObjectBase) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(UBBQInteractableInterface) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UBBQInteractionComponent) == 0x0268); // 616 bytes (0x0000B0 - 0x000268)
static_assert(sizeof(ABBQInteractionMinigame) == 0x05A8); // 1448 bytes (0x000580 - 0x0005A8)
static_assert(sizeof(ABBQInteractionMinigame_DoorUnlock) == 0x05C0); // 1472 bytes (0x0005A8 - 0x0005C0)
static_assert(sizeof(UBBQInteractionMinigameAudioDataAsset) == 0x0298); // 664 bytes (0x000030 - 0x000298)
static_assert(sizeof(UBBQInteractionMinigameAudioPlayer) == 0x0070); // 112 bytes (0x000028 - 0x000070)
static_assert(sizeof(UBBQInteractionType) == 0x01A8); // 424 bytes (0x000028 - 0x0001A8)
static_assert(sizeof(ABBQInteractionUIActor) == 0x0230); // 560 bytes (0x000228 - 0x000230)
static_assert(sizeof(FLightSourceMaterialInfo) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FLightSourceInteraction) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(ABBQInteractiveLightSource) == 0x0330); // 816 bytes (0x000228 - 0x000330)
static_assert(sizeof(FInteractionPrimativePair) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FInteractionAvailabilityEventData) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(FInteractionAvailabilityData) == 0x0128); // 296 bytes (0x000000 - 0x000128)
static_assert(sizeof(UBBQInteractorComponent) == 0x0660); // 1632 bytes (0x000490 - 0x000660)
static_assert(sizeof(UBBQInventoryContainerWidget) == 0x0268); // 616 bytes (0x000260 - 0x000268)
static_assert(sizeof(UBBQInventorySlotWidget) == 0x0280); // 640 bytes (0x000260 - 0x000280)
static_assert(sizeof(UBBQInventoryWidget) == 0x0268); // 616 bytes (0x000260 - 0x000268)
static_assert(sizeof(ULadderFootingAnimNotify) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(ULadderGrabWindowAnimNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(ULadderClimbIntoTopCorrectionNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(ULadderClimbIntoBottomCorrectionNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(FLadderInteractionInfo) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FBBQLadderEnterTopCorrectionInfo) == 0x0014); // 20 bytes (0x000000 - 0x000014)
static_assert(sizeof(ABBQLadder) == 0x03D0); // 976 bytes (0x000228 - 0x0003D0)
static_assert(sizeof(ABBQLevelActorRandomizer) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(ABBQLevelIntro) == 0x0380); // 896 bytes (0x000228 - 0x000380)
static_assert(sizeof(ABBQLevelLobby) == 0x0238); // 568 bytes (0x000230 - 0x000238)
static_assert(sizeof(ABBQLevelOutro) == 0x0298); // 664 bytes (0x000228 - 0x000298)
static_assert(sizeof(ABBQLevelRoomVolume) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(ABBQLevelSequenceActor) == 0x02B0); // 688 bytes (0x0002B0 - 0x0002B0)
static_assert(sizeof(ABBQSampleLevelSequenceActor) == 0x02B0); // 688 bytes (0x0002B0 - 0x0002B0)
static_assert(sizeof(UBBQSampleLevelSequencePlayer) == 0x0608); // 1544 bytes (0x000600 - 0x000608)
static_assert(sizeof(FBBQLevelSequenceCollisionDataSample) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(UBBQLevelSequenceCollisionObject) == 0x0068); // 104 bytes (0x000030 - 0x000068)
static_assert(sizeof(UBBQLevelSequencePlayer) == 0x0618); // 1560 bytes (0x000600 - 0x000618)
static_assert(sizeof(ABBQLevelSequenceTrigger) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(UBBQLifeSaverAbilityBase) == 0x05E0); // 1504 bytes (0x0005E0 - 0x0005E0)
static_assert(sizeof(UBBQLifeSaverCooldownRequirement) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UBBQLineOfSightTrackerSubsystem) == 0x00D0); // 208 bytes (0x000030 - 0x0000D0)
static_assert(sizeof(ABBQLocationTrigger) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(FBBQLockLocations) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(ABBQLockBase) == 0x0270); // 624 bytes (0x000228 - 0x000270)
static_assert(sizeof(UBBQLockComponent) == 0x0138); // 312 bytes (0x0000B0 - 0x000138)
static_assert(sizeof(UBBQLockComponentV2) == 0x01B0); // 432 bytes (0x0000B0 - 0x0001B0)
static_assert(sizeof(ABBQMasterSingleObjectRandomiser) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(UBBQAttributeSet_Melee) == 0x0048); // 72 bytes (0x000038 - 0x000048)
static_assert(sizeof(FMeleeHitReactionAnimSlotSet) == 0x0004); // 4 bytes (0x000000 - 0x000004)
static_assert(sizeof(FMeleeHitReaction) == 0x0090); // 144 bytes (0x000000 - 0x000090)
static_assert(sizeof(UBBQMeleeComponent) == 0x01E0); // 480 bytes (0x0000B0 - 0x0001E0)
static_assert(sizeof(ABBQMercuryCarHidingSpot) == 0x09B8); // 2488 bytes (0x000988 - 0x0009B8)
static_assert(sizeof(ABBQMeshVisualiser) == 0x0258); // 600 bytes (0x000228 - 0x000258)
static_assert(sizeof(UBBQLevelSequenceMeshReplacer) == 0x0040); // 64 bytes (0x000030 - 0x000040)
static_assert(sizeof(UBBQMinigameGameplayComponent) == 0x00C0); // 192 bytes (0x0000B0 - 0x0000C0)
static_assert(sizeof(UBBQMinigameGameplayComponent_Interaction) == 0x00C0); // 192 bytes (0x0000C0 - 0x0000C0)
static_assert(sizeof(ABBQMinigameTestSpawner) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(UBBQMinigameSettingsV2) == 0x0050); // 80 bytes (0x000028 - 0x000050)
static_assert(sizeof(UBBQMinigameSettingsV2_SweetSpot) == 0x0068); // 104 bytes (0x000050 - 0x000068)
static_assert(sizeof(UBBQMinigameSettingsV2_Interaction) == 0x0078); // 120 bytes (0x000050 - 0x000078)
static_assert(sizeof(UBBQMinigameWidget) == 0x0260); // 608 bytes (0x000260 - 0x000260)
static_assert(sizeof(FBBQMovementOscillator) == 0x002C); // 44 bytes (0x000000 - 0x00002C)
static_assert(sizeof(UBBQMovementDisorder) == 0x0080); // 128 bytes (0x000030 - 0x000080)
static_assert(sizeof(UBBQMovementDisorderComponent) == 0x00F0); // 240 bytes (0x0000B0 - 0x0000F0)
static_assert(sizeof(UBBQMultiplayerMinigameManagerV2) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(ABBQMultiplayerMinigameTester) == 0x0248); // 584 bytes (0x000228 - 0x000248)
static_assert(sizeof(FBBQMultiplayerMinigameInfo) == 0x000C); // 12 bytes (0x000000 - 0x00000C)
static_assert(sizeof(ABBQMultiplayerMinigameV2) == 0x0590); // 1424 bytes (0x000580 - 0x000590)
static_assert(sizeof(FNetSyncedDoorAnimation) == 0x0034); // 52 bytes (0x000000 - 0x000034)
static_assert(sizeof(ABBQNetSyncedDoorBase) == 0x0340); // 832 bytes (0x000228 - 0x000340)
static_assert(sizeof(ABBQNoiseMaker) == 0x0278); // 632 bytes (0x000228 - 0x000278)
static_assert(sizeof(FPlayerInNoiseMakerInfo) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(ABBQNoiseMakerChicken) == 0x0310); // 784 bytes (0x000278 - 0x000310)
static_assert(sizeof(UBBQNoiseOutlineComponent) == 0x0270); // 624 bytes (0x0001F8 - 0x000270)
static_assert(sizeof(UBBQNoiseSpottableInterface) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(ABBQObstacleSpawnBlocker) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(FOutlineInstance) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(UBBQOutlineRenderer) == 0x01B8); // 440 bytes (0x0000B0 - 0x0001B8)
static_assert(sizeof(UPairedAnimationEnableElevationFixNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UPairedAnimationDisableElevationFixNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UPairedAnimationEndEarlyNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UPairedAnimationDisablePositionLockingNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(UBBQPairedAnimationComponent) == 0x0148); // 328 bytes (0x0000B0 - 0x000148)
static_assert(sizeof(UGrabItemAnimNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(FBBQPickupDispenserState) == 0x000C); // 12 bytes (0x000000 - 0x00000C)
static_assert(sizeof(ABBQPickupDispenser) == 0x0320); // 800 bytes (0x000228 - 0x000320)
static_assert(sizeof(ABBQPickupDistributor) == 0x02D0); // 720 bytes (0x000228 - 0x0002D0)
static_assert(sizeof(FPickupZoneSpawnData) == 0x000C); // 12 bytes (0x000000 - 0x00000C)
static_assert(sizeof(FPickupZoneData) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(UPickupZones) == 0x0040); // 64 bytes (0x000030 - 0x000040)
static_assert(sizeof(UBBQPickupSpawnerComponent) == 0x0210); // 528 bytes (0x0001F8 - 0x000210)
static_assert(sizeof(ABBQPickupSpawnerGroup) == 0x0230); // 560 bytes (0x000228 - 0x000230)
static_assert(sizeof(FBBQPickupSpawnerData) == 0x000C); // 12 bytes (0x000000 - 0x00000C)
static_assert(sizeof(ABBQPickupSpawnerMarker) == 0x0240); // 576 bytes (0x000228 - 0x000240)
static_assert(sizeof(ABBQPipeExit) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(ABBQPipeGate) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(FPipeValveInteractionInfo) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(ABBQPipeValve) == 0x02A0); // 672 bytes (0x000228 - 0x0002A0)
static_assert(sizeof(ABBQPlacementGuideArrow) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(ABBQPlayerCameraManager) == 0x28F0); // 10480 bytes (0x002880 - 0x0028F0)
static_assert(sizeof(UBBQPlayerCommandChannel) == 0x00B0); // 176 bytes (0x0000B0 - 0x0000B0)
static_assert(sizeof(ABBQPlayerController) == 0x07F8); // 2040 bytes (0x000618 - 0x0007F8)
static_assert(sizeof(ABBQPlayerRestrainer) == 0x0250); // 592 bytes (0x000228 - 0x000250)
static_assert(sizeof(UBBQPlayerRpcChannel) == 0x00B8); // 184 bytes (0x0000B0 - 0x0000B8)
static_assert(sizeof(UBBQPointOfInterestComponent) == 0x04C0); // 1216 bytes (0x000480 - 0x0004C0)
static_assert(sizeof(UBBQPointOfInterestLocatorComponent) == 0x0670); // 1648 bytes (0x000480 - 0x000670)
static_assert(sizeof(ABBQPoisonCloud) == 0x0328); // 808 bytes (0x000228 - 0x000328)
static_assert(sizeof(FPolicePhoneInteractionState) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(ABBQPolicePhone) == 0x02F8); // 760 bytes (0x000228 - 0x0002F8)
static_assert(sizeof(ABBQPowderCloud) == 0x0278); // 632 bytes (0x000228 - 0x000278)
static_assert(sizeof(UBBQCustomTriggerCondition) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UBBQCustomTriggerCondition_PowderCloud) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(ABBQProceduralFence) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(ABBQPushButton) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(ABBQRecoveryVolume) == 0x0238); // 568 bytes (0x000228 - 0x000238)
static_assert(sizeof(ABBQReplayPlayerController) == 0x0578); // 1400 bytes (0x000578 - 0x000578)
static_assert(sizeof(UBBQScriptDebugger) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(ABBQSidling) == 0x02F8); // 760 bytes (0x000228 - 0x0002F8)
static_assert(sizeof(UBBQSimpleCostCalculation) == 0x0180); // 384 bytes (0x000040 - 0x000180)
static_assert(sizeof(ABBQSissyPowderPickup) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(ABBQSkeletalMeshActor) == 0x02B0); // 688 bytes (0x0002B0 - 0x0002B0)
static_assert(sizeof(UBBQSkeletalMeshComponent) == 0x0F10); // 3856 bytes (0x000EF8 - 0x000F10)
static_assert(sizeof(FQuadrantInfo) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(FSneakAttackInfo) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(UBBQSneakAttackAreaComponent) == 0x0560); // 1376 bytes (0x000480 - 0x000560)
static_assert(sizeof(UBBQSneakAttackNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(ABBQSneakAttackBehaviour) == 0x0350); // 848 bytes (0x0002E8 - 0x000350)
static_assert(sizeof(ABBQSneakAttackTargetBehaviour) == 0x0378); // 888 bytes (0x0002E8 - 0x000378)
static_assert(sizeof(UBBQSneakAttackKnifeNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(ABBQSneakAttackKnifeBehaviour) == 0x0350); // 848 bytes (0x000350 - 0x000350)
static_assert(sizeof(ABBQSpectatorPawn) == 0x0650); // 1616 bytes (0x0002B0 - 0x000650)
static_assert(sizeof(ABBQSplineCameraVolume) == 0x0270); // 624 bytes (0x000260 - 0x000270)
static_assert(sizeof(UBBQCameraVolumeComponent) == 0x0198); // 408 bytes (0x0000B0 - 0x000198)
static_assert(sizeof(UBBQSplineCameraVolumeComponent) == 0x01F0); // 496 bytes (0x000198 - 0x0001F0)
static_assert(sizeof(UBBQSpringArmComponent) == 0x02F0); // 752 bytes (0x000280 - 0x0002F0)
static_assert(sizeof(FBBQSpyAbilityMontageData) == 0x00C0); // 192 bytes (0x000000 - 0x0000C0)
static_assert(sizeof(UBBQSpyAbilityHandlerComponent) == 0x01C0); // 448 bytes (0x0000B0 - 0x0001C0)
static_assert(sizeof(UBBQStudyAndTamperAbility) == 0x05E0); // 1504 bytes (0x0005E0 - 0x0005E0)
static_assert(sizeof(FBBQStudyAndTamperKnowledgePoints) == 0x000C); // 12 bytes (0x000000 - 0x00000C)
static_assert(sizeof(UBBQStudyAndTamperComponent) == 0x03A0); // 928 bytes (0x0000B0 - 0x0003A0)
static_assert(sizeof(FBBQStudyAndTamperInspection) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(UBBQStudyAndTamperObjectComponent) == 0x0180); // 384 bytes (0x0000B0 - 0x000180)
static_assert(sizeof(UBBQStudyAndTamperObjectInterface) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(ABBQSweetSpotMinigame) == 0x0588); // 1416 bytes (0x000580 - 0x000588)
static_assert(sizeof(UBBQTestRPCChannel) == 0x00B8); // 184 bytes (0x0000B0 - 0x0000B8)
static_assert(sizeof(ABBQTimeOfDayLoader) == 0x0230); // 560 bytes (0x000228 - 0x000230)
static_assert(sizeof(UBBQTimeOfDayLevelStreamingSubsystem) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(ABBQTrap) == 0x0348); // 840 bytes (0x000228 - 0x000348)
static_assert(sizeof(UBBQTraversalInterface) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(UBBQClamberableObstacle) == 0x0028); // 40 bytes (0x000028 - 0x000028)
static_assert(sizeof(FAttributeTrigger) == 0x0078); // 120 bytes (0x000000 - 0x000078)
static_assert(sizeof(FPlayerInTriggerAreaInfo) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(UBBQTriggerAreaComponent) == 0x0650); // 1616 bytes (0x000480 - 0x000650)
static_assert(sizeof(ABBQVfx) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(UVictimRestraintEndedAnimNotifyState) == 0x0038); // 56 bytes (0x000030 - 0x000038)
static_assert(sizeof(ABBQVictimRestrainedStart) == 0x0288); // 648 bytes (0x000228 - 0x000288)
static_assert(sizeof(FBBQFootprintTrail) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(UBBQVictimTrackerComponent) == 0x0130); // 304 bytes (0x0000B0 - 0x000130)
static_assert(sizeof(FActiveSpectatorState) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FSpectatorLevelSequenceInfo) == 0x0028); // 40 bytes (0x000000 - 0x000028)
static_assert(sizeof(UBBQViewTargetManagerComponent) == 0x0100); // 256 bytes (0x0000B0 - 0x000100)
static_assert(sizeof(ABBQWaterValve) == 0x0228); // 552 bytes (0x000228 - 0x000228)
static_assert(sizeof(ABBQWell) == 0x0370); // 880 bytes (0x000228 - 0x000370)
static_assert(sizeof(FBBQWindowJumpData) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(UBBQAnimNotify_WindowLandingAssist) == 0x0080); // 128 bytes (0x000030 - 0x000080)
static_assert(sizeof(UBBQWindowSmashVFX) == 0x00F8); // 248 bytes (0x0000B0 - 0x0000F8)
static_assert(sizeof(FReplicatedOutlineInfo) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(FReplicatedActorOutlineInfo) == 0x0028); // 40 bytes (0x00000C - 0x000028)
static_assert(sizeof(FPlayerOutlineContainer) == 0x0120); // 288 bytes (0x000108 - 0x000120)
static_assert(sizeof(UBBQWorldOutlineInfoComponent) == 0x01D8); // 472 bytes (0x0000B0 - 0x0001D8)
static_assert(sizeof(FDecalSettingBase) == 0x0050); // 80 bytes (0x000000 - 0x000050)
static_assert(sizeof(FBloodSplashDecalSettings) == 0x0050); // 80 bytes (0x000000 - 0x000050)
static_assert(sizeof(FPostHitSplashSettings) == 0x0068); // 104 bytes (0x000000 - 0x000068)
static_assert(sizeof(FVisualDamageInteractionParam) == 0x00D8); // 216 bytes (0x000000 - 0x0000D8)
static_assert(sizeof(UVisualDamageInteractionMappingAsset) == 0x0040); // 64 bytes (0x000030 - 0x000040)
static_assert(sizeof(UBBQWrenchAttackNotifyState) == 0x0030); // 48 bytes (0x000030 - 0x000030)
static_assert(sizeof(ABBQWrenchAttackBehaviour) == 0x0358); // 856 bytes (0x0002E8 - 0x000358)
static_assert(sizeof(UCharacterCameraShakesConfig) == 0x0058); // 88 bytes (0x000030 - 0x000058)
static_assert(sizeof(UGenerateDialogGameplayTagsCommandlet) == 0x0080); // 128 bytes (0x000080 - 0x000080)
static_assert(sizeof(AGeneratorCattleGrid) == 0x02D0); // 720 bytes (0x000228 - 0x0002D0)
static_assert(sizeof(ULocksContainer) == 0x0038); // 56 bytes (0x000028 - 0x000038)
static_assert(sizeof(ASSACosmeticCueNotify_Actor) == 0x0398); // 920 bytes (0x000288 - 0x000398)
static_assert(sizeof(AVisualDamageApplicationActor_Manual) == 0x0258); // 600 bytes (0x000228 - 0x000258)
static_assert(sizeof(AVisualDamageApplicationActor_Sweep) == 0x0260); // 608 bytes (0x000228 - 0x000260)
static_assert(sizeof(AVisualDamageApplicationActor_Mesh) == 0x0278); // 632 bytes (0x000228 - 0x000278)
static_assert(sizeof(UVisualDamageInstigatorComponent) == 0x01C8); // 456 bytes (0x0000B0 - 0x0001C8)
static_assert(sizeof(FDyanmicMaterialContainer) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(UVisualDamageReceiverComponent) == 0x0120); // 288 bytes (0x0000B0 - 0x000120)
static_assert(sizeof(FBBQFamilyBondActivity) == 0x0080); // 128 bytes (0x000008 - 0x000080)
static_assert(sizeof(FBBQBloodTrailDefinition) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FCommEventData) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(FMeleeAttackMontageSet) == 0x0008); // 8 bytes (0x000000 - 0x000008)
static_assert(sizeof(FBBQPairedAnimationRole) == 0x0050); // 80 bytes (0x000000 - 0x000050)
static_assert(sizeof(FBBQRotationSettings) == 0x000C); // 12 bytes (0x000000 - 0x00000C)
static_assert(sizeof(FBBQCloseEncounterDialogDefinition) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FBBQCloseEncounterDefinition) == 0x01F0); // 496 bytes (0x000008 - 0x0001F0)
static_assert(sizeof(FCommRuntimeState) == 0x0038); // 56 bytes (0x000000 - 0x000038)
static_assert(sizeof(FDialogRow) == 0x0050); // 80 bytes (0x000008 - 0x000050)
static_assert(sizeof(FCommRow) == 0x0070); // 112 bytes (0x000008 - 0x000070)
static_assert(sizeof(FFootstepData) == 0x0008); // 8 bytes (0x000000 - 0x000008)
static_assert(sizeof(FBBQGameplayAbilityTargetData_ClueInfo) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FBBQGameplayAbilityTargetData_SingleLocationInfo) == 0x0080); // 128 bytes (0x000008 - 0x000080)
static_assert(sizeof(FBBQGameplayAbilityTargetData_CookListen) == 0x0020); // 32 bytes (0x000008 - 0x000020)
static_assert(sizeof(FBBQGameplayActivityEvent) == 0x0098); // 152 bytes (0x000008 - 0x000098)
static_assert(sizeof(FBBQNotificationData) == 0x0038); // 56 bytes (0x000000 - 0x000038)
static_assert(sizeof(FBBQDynamicMontageParams) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(FBBQLeanAmount) == 0x0008); // 8 bytes (0x000000 - 0x000008)
static_assert(sizeof(FBBQVelocityBlend) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FBBQComponentAndTransform) == 0x0040); // 64 bytes (0x000000 - 0x000040)
static_assert(sizeof(FBBQHarvestAnimSections) == 0x0050); // 80 bytes (0x000000 - 0x000050)
static_assert(sizeof(FHidingPlayerInputState) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FInteractionEventTestFlags) == 0x000C); // 12 bytes (0x000000 - 0x00000C)
static_assert(sizeof(FBBQInteractionEventList) == 0x0020); // 32 bytes (0x000000 - 0x000020)
static_assert(sizeof(FBBQLockAnimInfo) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(FLockVisualState) == 0x0010); // 16 bytes (0x000000 - 0x000010)
static_assert(sizeof(FBBQMinigameInputState) == 0x0028); // 40 bytes (0x000000 - 0x000028)
static_assert(sizeof(FBBQPickupSpawnerMarkerDescription) == 0x0040); // 64 bytes (0x000000 - 0x000040)
static_assert(sizeof(FBBQPointOfInterestDefinition) == 0x0090); // 144 bytes (0x000008 - 0x000090)
static_assert(sizeof(FBBQPointOfInterestCategory) == 0x0018); // 24 bytes (0x000008 - 0x000018)
static_assert(sizeof(FVisualDamageInstigatorSettings) == 0x0060); // 96 bytes (0x000000 - 0x000060)
static_assert(sizeof(FVisualDamageAttack) == 0x0018); // 24 bytes (0x000000 - 0x000018)
static_assert(sizeof(FFamilyBondLevelProgressRow) == 0x0010); // 16 bytes (0x000008 - 0x000010)
static_assert(sizeof(FInteractionEventVisualParams) == 0x0030); // 48 bytes (0x000000 - 0x000030)
static_assert(sizeof(FInteractionHint) == 0x0030); // 48 bytes (0x000000 - 0x000030)
static_assert(sizeof(FInteractionVisualParams) == 0x0038); // 56 bytes (0x000000 - 0x000038)
static_assert(sizeof(FMottoPerkClassBonusRow) == 0x0060); // 96 bytes (0x000008 - 0x000060)
static_assert(sizeof(FNoiseEvent) == 0x0014); // 20 bytes (0x000000 - 0x000014)
static_assert(offsetof(UBBQAbilityBarge, ConeAngle) == 0x04F0);
static_assert(offsetof(UBBQAbilityBarge, MaxDistance) == 0x0548);
static_assert(offsetof(UBBQAbilityBarge, AffectVictimsOnly) == 0x05A0);
static_assert(offsetof(UBBQAbilityBarge, LineTraceChannel) == 0x05F8);
static_assert(offsetof(UBBQAbilityBarge, BargeImmunityTags) == 0x0600);
static_assert(offsetof(UBBQAbilityBarge, AreaOfEffectActivationTag) == 0x0620);
static_assert(offsetof(UBBQAbilityBarge, AbilityActivationGameplayCueTag) == 0x0628);
static_assert(offsetof(UBBQAbilityBarge, ActivationEffect) == 0x0630);
static_assert(offsetof(UBBQAbilityBarge, BargeAttackAnimSlot) == 0x0638);
static_assert(offsetof(UBBQAbilityBarge, ActivityEventBargingPlayer) == 0x0640);
static_assert(offsetof(UBBQAbilityBarge, ActivityEventBeingBarged) == 0x0650);
static_assert(offsetof(UBBQAbilityBarge, AimingAssistTask) == 0x0660);
static_assert(offsetof(UBBQAbilityBarge, OverlapTask) == 0x0730);
static_assert(offsetof(UBBQAbilityTask_WaitBargeAreaOfEffectOverlap, Instigator) == 0x0090);
static_assert(offsetof(UBBQAbilityTask_WaitBargeAreaOfEffectOverlap, ObservedCharacters) == 0x00B0);
static_assert(offsetof(UBBQAbilityTask_BargeAimingAssistTask, OwningAbility) == 0x0080);
static_assert(offsetof(UBBQAbilityTask_BargeAimingAssistTask, Instigator) == 0x0088);
static_assert(offsetof(UBBQAbilityTask_BargeAimingAssistTask, ObservedCharacters) == 0x00B0);
static_assert(offsetof(UBBQAbilityBlowPowder, PowderInventoryItemTag) == 0x04F0);
static_assert(offsetof(UBBQAbilityBlowPowder, NoPowderFailureReasonTag) == 0x04F8);
static_assert(offsetof(UBBQAbilityClothesline, AbilityActivationGameplayCueTag) == 0x04F0);
static_assert(offsetof(UBBQAbilityClothesline, ActivationEffect) == 0x04F8);
static_assert(offsetof(UBBQAbilityClothesline, MovementState) == 0x0500);
static_assert(offsetof(FConsumeItemEffects, Effects) == 0x0000);
static_assert(offsetof(UBBQAbilityConsumeItem, LookupEffectsToApply) == 0x04F0);
static_assert(offsetof(UBBQAbilityConsumeItem, AudioEvent) == 0x0540);
static_assert(offsetof(UBBQAbilityConsumeItem, ConsumingItemEffect) == 0x0548);
static_assert(offsetof(UBBQAbilityConsumeItem, PoisonedItemTypes) == 0x0550);
static_assert(offsetof(UBBQAbilityConsumeItem, ConsumeItemCharacterBehaviourClass) == 0x0570);
static_assert(offsetof(UBBQAbilityConsumeItem, ConsumingItemEffectHandle) == 0x0578);
static_assert(offsetof(UBBQAbilityConsumeItem, InventoryTagWeAreApplying) == 0x0580);
static_assert(offsetof(UBBQAbilityConsumeItem, ConsumeItemEffectInstigator) == 0x0588);
static_assert(offsetof(UBBQAbilityCookListen, DepletionGE) == 0x04F0);
static_assert(offsetof(UBBQAbilityCookListen, DepletionRate) == 0x04F8);
static_assert(offsetof(UBBQAbilityCookListen, BoostChargeGE) == 0x0550);
static_assert(offsetof(UBBQAbilityCookListen, BoostChargeEventTag) == 0x0558);
static_assert(offsetof(UBBQAbilityCookListen, BoostChargeMagnitudeTag) == 0x0560);
static_assert(offsetof(UBBQAbilityCookListen, CooldownTag) == 0x0568);
static_assert(offsetof(UBBQAbilityCookListen, AttributeSetInitDataTable) == 0x0570);
static_assert(offsetof(UBBQAbilityCookListen, FocusDurationMin) == 0x0578);
static_assert(offsetof(UBBQAbilityCookListen, FocusDurationMax) == 0x05D0);
static_assert(offsetof(UBBQAbilityCookListen, FocusSilhouetteHighlightDuration) == 0x0628);
static_assert(offsetof(UBBQAbilityCookListen, VictimSilhouetteVFX) == 0x0680);
static_assert(offsetof(UBBQAbilityCookListen, GameplayAbilityTargetActorClass) == 0x0688);
static_assert(offsetof(UBBQAbilityCookListen, SpottingCooldownEffect) == 0x0690);
static_assert(offsetof(UBBQAbilityCookListen, GivenAttributeSet) == 0x0698);
static_assert(offsetof(UBBQAbilityCookListen, DepletionTimerHandle) == 0x06A0);
static_assert(offsetof(UBBQAbilityCookListen, TaskWaitAbilityBlocked) == 0x06B8);
static_assert(offsetof(UBBQAbilityCookListen, TaskWaitTargetData) == 0x06C0);
static_assert(offsetof(UBBQAbilityCookListen, SpawnedTargetActor) == 0x06C8);
static_assert(offsetof(UBBQAbilityCookListen, ActorsSpotted) == 0x06E8);
static_assert(offsetof(UBBQAbilityCookListen, TaskWaitFocusTime) == 0x0738);
static_assert(offsetof(UBBQAbilityCookListen, AudioEventWhenTargetMarked) == 0x0740);
static_assert(offsetof(UBBQAbilityDetectGrandpa, DetectionEffectClass) == 0x04F0);
static_assert(offsetof(UUBBQAbilityDodge, RequiredTags) == 0x04F0);
static_assert(offsetof(UUBBQAbilityDodge, SuccessfulDodgeEffect) == 0x0510);
static_assert(offsetof(UUBBQAbilityDodge, UnsuccessfulDodgeEffect) == 0x0518);
static_assert(offsetof(UUBBQAbilityDodge, DefaultDirection) == 0x0520);
static_assert(offsetof(FMeleeAttackAnimSlotSet, AttackAnimSlot) == 0x0000);
static_assert(offsetof(FMeleeAttackAnimSlotSet, AttackAnimSlot_Stationary) == 0x0001);
static_assert(offsetof(UBBQAbilityMeleeAttack, DefaultAttackAnimSlot) == 0x04F0);
static_assert(offsetof(UBBQAbilityMeleeAttack, MeleeAnimMontageList) == 0x04F8);
static_assert(offsetof(UBBQAbilityMeleeAttack, AnimSelectionMethod) == 0x0508);
static_assert(offsetof(UBBQAbilityMeleeAttack, StationaryTransitionType) == 0x0518);
static_assert(offsetof(UBBQAbilityMeleeAttack, MeleeHitBoxTag) == 0x0528);
static_assert(offsetof(UBBQAbilityMeleeAttack, MeleeHitTag) == 0x0530);
static_assert(offsetof(UBBQAbilityMeleeAttack, MeleeCueTag) == 0x0538);
static_assert(offsetof(UBBQAbilityMeleeAttack, MeleeImmunityTags) == 0x0540);
static_assert(offsetof(UBBQAbilityMeleeAttack, CloseEncounterImmunityTags) == 0x0560);
static_assert(offsetof(UBBQAbilityMeleeAttack, DamageAmountToCauseVar) == 0x0580);
static_assert(offsetof(UBBQAbilityMeleeAttack, DamageTypeToInflictOnMeleeHit) == 0x05E0);
static_assert(offsetof(UBBQAbilityMeleeAttack, CloseEncounterDefinitionRow) == 0x05F0);
static_assert(offsetof(UBBQAbilityMeleeAttack, MeleeAttackerEffect) == 0x0608);
static_assert(offsetof(UBBQAbilityMeleeAttack, MeleeAttackerSuccessEffect) == 0x0610);
static_assert(offsetof(UBBQAbilityMeleeAttack, ComboType) == 0x0618);
static_assert(offsetof(UBBQAbilityMeleeAttack, MeleeAttackerComboHitEffect) == 0x0620);
static_assert(offsetof(UBBQAbilityMeleeAttack, MeleeAttackerComboMissEffect) == 0x0628);
static_assert(offsetof(UBBQAbilityMeleeAttack, LockOnType) == 0x0630);
static_assert(offsetof(UBBQAbilityMeleeAttack, TargetedActor) == 0x0650);
static_assert(offsetof(UBBQAbilityMeleeAttack, PrevTargetedActor) == 0x0658);
static_assert(offsetof(UBBQAbilityMeleeAttack, AttackCameraStateName) == 0x066C);
static_assert(offsetof(UBBQAbilityMeleeAttack, AttackType) == 0x0675);
static_assert(offsetof(UBBQAbilityMeleeAttack, AttackVisualTraceType) == 0x0676);
static_assert(offsetof(UBBQAbilityMeleeAttack, MeleeArcs) == 0x0680);
static_assert(offsetof(UBBQAbilityMeleeAttack, CurrentMeleeTask) == 0x06E8);
static_assert(offsetof(UBBQAbilityMeleeAttack, MeleeHitActors) == 0x06F0);
static_assert(offsetof(UBBQAbilityMeleeAttack, MeleeOverlappedActors) == 0x0710);
static_assert(offsetof(UBBQAbilityMeleeAttack, HitBoxes) == 0x0778);
static_assert(offsetof(UBBQAbilityMeleeAttack, OwnerMeleeComponent) == 0x0788);
static_assert(offsetof(UBBQAbilityMeleeAttack, OwnerVisualDamageInstigatorComponent) == 0x0790);
static_assert(offsetof(UBBQAbilityEnvironmentalAttack, EnvironmentAttackCollisionChannel) == 0x0798);
static_assert(offsetof(UBBQAbilityEnvironmentalAttack, TargetableClasses) == 0x07A8);
static_assert(offsetof(UBBQAbilityEnvironmentalAttack, CachedTraversalTarget) == 0x07B8);
static_assert(offsetof(UBBQAbilityFirstAid, FirstAidProgressEffect) == 0x04F0);
static_assert(offsetof(UBBQAbilityFirstAid, FirstAidTargetProgressEffect) == 0x04F8);
static_assert(offsetof(UBBQAbilityFirstAid, AfterEffects) == 0x0500);
static_assert(offsetof(UBBQAbilityFirstAid, ApplyFirstAidAnim) == 0x0510);
static_assert(offsetof(UBBQAbilityFirstAid, HandAttachment) == 0x0518);
static_assert(offsetof(UBBQAbilityFirstAid, FirstAidProgressTag) == 0x0520);
static_assert(offsetof(UBBQAbilityFirstAid, ProgressEffectRemovedTask) == 0x0528);
static_assert(offsetof(FGameplayCueData, GameplayCueTag) == 0x0000);
static_assert(offsetof(UBBQStarSignAbility, DurationEffect) == 0x04F8);
static_assert(offsetof(UBBQStarSignAbility, StartingCooldownEffect) == 0x0500);
static_assert(offsetof(UBBQStarSignAbility, LinkedPrimaryCharacterAttribute) == 0x0508);
static_assert(offsetof(UBBQStarSignAbility, GameplayCueDataMap) == 0x0510);
static_assert(offsetof(UBBQStarSignAbility, DurationEffectWaitTask) == 0x0560);
static_assert(offsetof(UBBQStarSignAbility, OnTakeDamageEffects) == 0x0578);
static_assert(offsetof(UBBQStarSignAbility, BuffDurationTag) == 0x0588);
static_assert(offsetof(UBBQStarSignAbility, DebuffDurationTag) == 0x0590);
static_assert(offsetof(UBBQStarSignAbility, ChargeTags) == 0x0598);
static_assert(offsetof(UBBQStarSignAbility, StartingCooldownBlockedTags) == 0x05B8);
static_assert(offsetof(UBBQAbilityFocusPerk, OnActivationEffects) == 0x05E0);
static_assert(offsetof(UBBQAbilityFocusPerk, FocusActiveEffectClass) == 0x05F8);
static_assert(offsetof(UBBQAbilityFocusPerk, FocusedCooldownTag) == 0x0600);
static_assert(offsetof(FBBQOutlineRendererConfig, InstanceName) == 0x0000);
static_assert(offsetof(FBBQOutlineRendererConfig, TeamVisible) == 0x000D);
static_assert(offsetof(FBBQOutlineRendererConfig, VisibilityRequiredTags) == 0x0010);
static_assert(offsetof(FBBQOutlineRendererConfig, VisiblityIgnoreTags) == 0x0030);
static_assert(offsetof(FBBQOutlineRendererConfig, OwnerRequiredTags) == 0x0050);
static_assert(offsetof(FBBQOutlineRendererConfig, OwnerIgnoreTags) == 0x0070);
static_assert(offsetof(FBBQOutlineRendererConfig, DurationStackRule) == 0x0090);
static_assert(offsetof(UBBQAbilityFullVial, OutlineConfig) == 0x04F0);
static_assert(offsetof(UBBQAbilityFullVial, BloodVialFullNotificationRow) == 0x0590);
static_assert(offsetof(UBBQAbilityFullVial, OwnerCharacter) == 0x05A8);
static_assert(offsetof(UBBQAbilityFullVial, GrandpaActor) == 0x05B0);
static_assert(offsetof(UBBQAbilityGrandpaSonar, IgnoreDetectionTags) == 0x04F8);
static_assert(offsetof(UBBQAbilityGrandpaSonar, VictimsInRadius) == 0x0518);
static_assert(offsetof(UBBQAbilityGrandpaSonar, OutlineConfig) == 0x0528);
static_assert(offsetof(UBBQAbilityGrandpaSonar, OutlineConfigMarkedForDeath) == 0x05C0);
static_assert(offsetof(UBBQAbilityGrandpaSonar, MarkedForDeathTag) == 0x0658);
static_assert(offsetof(UBBQAbilityGrandpaSonar, AffectedByGrandpasSonarEffect) == 0x0660);
static_assert(offsetof(UBBQAbilityHearing, EffectToApply) == 0x04F0);
static_assert(offsetof(UBBQAbilityHeightenedSense, ActivationEffects) == 0x05E0);
static_assert(offsetof(UBBQAbilityHeightenedSense, PerkChargeReductionEffect) == 0x05F0);
static_assert(offsetof(UBBQAbilityHeightenedSense, PerkChargeRechargeEffect) == 0x05F8);
static_assert(offsetof(UBBQAbilityHeightenedSense, PerkChargeAttribute) == 0x0600);
static_assert(offsetof(UBBQAbilityHeightenedSense, PerkChargeMaxAttribute) == 0x0638);
static_assert(offsetof(UBBQAbilityHeightenedSense, AbilityRechargingTag) == 0x0670);
static_assert(offsetof(UBBQAbilityHeightenedSense, SpottingTargetActor) == 0x0680);
static_assert(offsetof(UBBQAbilityHeightenedSense, ActivatedCameraState) == 0x0688);
static_assert(offsetof(FBBQHuntModeDetectableObject, ActorClass) == 0x0000);
static_assert(offsetof(FBBQHuntModeDetectableObject, RequiredCharacterTags) == 0x0028);
static_assert(offsetof(FBBQHuntModeDetectableObject, RequiredActorTag) == 0x0048);
static_assert(offsetof(UBBQAbilityHuntMode, ActivationEffect) == 0x04F0);
static_assert(offsetof(UBBQAbilityHuntMode, ChargeEffect) == 0x04F8);
static_assert(offsetof(UBBQAbilityHuntMode, DischargeEffect) == 0x0500);
static_assert(offsetof(UBBQAbilityHuntMode, OutlineInstanceName) == 0x050C);
static_assert(offsetof(UBBQAbilityHuntMode, LocalGameplayCue) == 0x0518);
static_assert(offsetof(UBBQAbilityHuntMode, DetectableObjects) == 0x0520);
static_assert(offsetof(UBBQAbilityHuntMode, ObjectsDetectionRange) == 0x0530);
static_assert(offsetof(UBBQAbilityHuntMode, BloodBucketDetectionRange) == 0x0590);
static_assert(offsetof(UBBQAbilityHuntMode, BloodBucketDetectionRangeHysteresis) == 0x05E8);
static_assert(offsetof(UBBQAbilityHuntMode, HighlightObjectsDetectedWhileActive) == 0x0648);
static_assert(offsetof(UBBQAbilityHuntMode, OnCooldownFailureReasonTag) == 0x06A0);
static_assert(offsetof(UBBQAbilityHuntMode, DetectableObjectsState) == 0x06A8);
static_assert(offsetof(UBBQAbilityHuntMode, BloodBucketsInRange) == 0x06F8);
static_assert(offsetof(UBBQAbilityHuntMode, ActorsWithActiveOutline) == 0x0708);
static_assert(offsetof(UBBQAbilityHuntMode, GameplayCueParameters) == 0x0718);
static_assert(offsetof(UBBQAbilityIncapacitatedRecover, SpendWillToLiveEffect) == 0x04F0);
static_assert(offsetof(UBBQAbilityISeeYou, HiddenTag) == 0x04F0);
static_assert(offsetof(UBBQAbilityISeeYou, DetectNewVictimsRepeatTask) == 0x0508);
static_assert(offsetof(UBBQAbilityISeeYou, HideDoneRunningTasksMap) == 0x0510);
static_assert(offsetof(UBBQAbilityISeeYou, HideStartRunningTasksMap) == 0x0560);
static_assert(offsetof(UBBQAbilityISeeYou, OwningCharacter) == 0x05B0);
static_assert(offsetof(UBBQAbilityJohnnyBloodlust, TempGameSessionPtr) == 0x04F0);
static_assert(offsetof(UBBQAbilityJohnnyBloodlust, ActivationEffect) == 0x04F8);
static_assert(offsetof(UBBQAbilityJohnnyBloodlust, CooldownTag) == 0x0508);
static_assert(offsetof(UBBQAbilityKnowWatch, KnowYouWatchMaterial) == 0x04F0);
static_assert(offsetof(UBBQAbilityKnowWatch, ProximityWarningZThresholdVar) == 0x04F8);
static_assert(offsetof(UBBQAbilityKnowWatch, ProximityCollisionChannel) == 0x0550);
static_assert(offsetof(UBBQAbilityKnowWatch, AbilityRadius) == 0x0558);
static_assert(offsetof(UBBQAbilityKnowWatch, ProximityWarningCurve) == 0x05B0);
static_assert(offsetof(UBBQAbilityKnowWatch, WatchingRepeatTask) == 0x05B8);
static_assert(offsetof(UBBQAbilityKnowWatch, KnowYouWatchDynamicMaterial) == 0x05C0);
static_assert(offsetof(UBBQAbilityListenTagChange, ListenTags) == 0x04F0);
static_assert(offsetof(UBBQAbilityListenTagChange, OwnerASC) == 0x0520);
static_assert(offsetof(UBBQAbilityTask_ExecuteMeleeAttack, MyCurrentMontage) == 0x0098);
static_assert(offsetof(UBBQMeleeHitFrameNotifyState, HitFrameType) == 0x0030);
static_assert(offsetof(UBBQMeleeArcNotifyState, CameraShakeOnHit) == 0x0040);
static_assert(offsetof(UBBQAbilityMeleeChainsaw, ClientActivationRequiredTags) == 0x0798);
static_assert(offsetof(UBBQAbilityMeleeChainsaw, ClientActivationBlockedTags) == 0x07B8);
static_assert(offsetof(UBBQAbilityMeleeChainsaw, CachedChainsawComponent) == 0x07E8);
static_assert(offsetof(UBBQAbilityMeleeChainsawSlam, NoTargetAnimSlot) == 0x07F0);
static_assert(offsetof(UBBQAbilityMeleeReaction, MeleeHitEffect) == 0x04F0);
static_assert(offsetof(UBBQAbilityPainIsNothing, MaxDamageEffectApplyCount) == 0x05E0);
static_assert(offsetof(UBBQAbilityPainIsNothing, AlwaysApplyDamageEffects) == 0x0638);
static_assert(offsetof(UBBQAbilityPerkAdrenalineRush, AdrenalineRushRestoreStaminaClass) == 0x04F8);
static_assert(offsetof(UBBQAbilityPerkAdrenalineRush, AdrenalineRushHasChargeEffectClass) == 0x0500);
static_assert(offsetof(UBBQAbilityPerkAdrenalineRush, PerkConsumptionVarMod) == 0x0508);
static_assert(offsetof(UBBQAbilityPerkAdrenalineRush, AdrenalineRushChargesVar) == 0x0510);
static_assert(offsetof(UBBQAbilityPerkAdrenalineRush, OwnerCharacter) == 0x0568);
static_assert(offsetof(UBBQAbilityPerkAttributePoints, CharacterAttribute) == 0x04F0);
static_assert(offsetof(UBBQAbilityPerkAttributePoints, AttributeLevelOffsetVariable) == 0x04F8);
static_assert(offsetof(UBBQAbilityPerkAttributePoints, PlayerCurrentAttribute) == 0x0550);
static_assert(offsetof(UBBQAbilityPerkAttributePoints, PlayerMaxAttribute) == 0x0588);
static_assert(offsetof(UBBQAbilityPerkAttributePoints, AttributeThresholdPercentVariable) == 0x05C0);
static_assert(offsetof(UBBQAbilityPerkAttributePoints, AbilityActiveEffectClass) == 0x0618);
static_assert(offsetof(UBBQAbilityPerkAttributePoints, AttributeChangeTask) == 0x0620);
static_assert(offsetof(UBBQAbilityPerkHelpMe, PerkActiveTag) == 0x04F0);
static_assert(offsetof(UBBQAbilityPerkHelpMe, PerkActivePercentage) == 0x04F8);
static_assert(offsetof(UBBQAbilityPerkHelpMe, RemoveHighlightTags) == 0x0550);
static_assert(offsetof(UBBQAbilityPerkHelpMe, OwnerCharacter) == 0x0570);
static_assert(offsetof(UBBQAbilityPerkNoStopping, AbilityLifetimeEffects) == 0x04F0);
static_assert(offsetof(UBBQAbilityPerkNoStopping, CurrentInteractable) == 0x0500);
static_assert(offsetof(UBBQAbilityPerkSticksAndStones, ShardItemTag) == 0x04F0);
static_assert(offsetof(UBBQAbilityPerkSticksAndStones, RequiredHealth) == 0x04F8);
static_assert(offsetof(UBBQAbilityPerkSticksAndStones, SticksAndStonesCharges) == 0x0550);
static_assert(offsetof(UBBQAbilityPerkSticksAndStones, PerkConsumptionVarMod) == 0x05A8);
static_assert(offsetof(UBBQAbilityPerkSticksAndStones, OwnerCharacter) == 0x05B0);
static_assert(offsetof(UBBQAbilityPerkWellTrained, PickupsToHighlight) == 0x04F8);
static_assert(offsetof(UBBQAbilityPerkWellTrained, HighlightDuration) == 0x0518);
static_assert(offsetof(UBBQAbilityPlaceTrap, TrapClass) == 0x04F0);
static_assert(offsetof(UBBQAbilityPlaceTrap, TrapPlacementTargetActorClass) == 0x04F8);
static_assert(offsetof(UBBQAbilityPlaceTrap, TrapOriginOffset) == 0x0500);
static_assert(offsetof(UBBQAbilityPlaceTrap, PlacementHoldTime) == 0x0558);
static_assert(offsetof(UBBQAbilityPlaceTrap, TrapInventoryItemTag) == 0x05B0);
static_assert(offsetof(UBBQAbilityPlaceTrap, NoTrapsFailureReasonTag) == 0x05B8);
static_assert(offsetof(UBBQAbilityPlaceTrap, OwnerCharacter) == 0x05C0);
static_assert(offsetof(UBBQAbilityRipstall, ActivationMessageEvent) == 0x04F0);
static_assert(offsetof(UBBQAbilitySneakAttack, SneakAttackTag) == 0x079C);
static_assert(offsetof(UBBQAbilitySneakAttack, SneakAttackEffect) == 0x07A8);
static_assert(offsetof(UBBQAbilitySpyOnPlayer, PowderInventoryItemTag) == 0x04F0);
static_assert(offsetof(UBBQAbilitySpyOnPlayer, RechargeEffect) == 0x0500);
static_assert(offsetof(UBBQAbilitySpyOnPlayer, VictimRequiredTags) == 0x0508);
static_assert(offsetof(UBBQAbilitySpyOnPlayer, VictimForbiddenTags) == 0x0528);
static_assert(offsetof(UBBQAbilitySpyOnPlayer, ActivityEventBeingSpied) == 0x0548);
static_assert(offsetof(UBBQAbilitySpyOnPlayer, ActivityEventFinishedSpying) == 0x0558);
static_assert(offsetof(UBBQAbilitySpyOnPlayer, CurrentVictim) == 0x0568);
static_assert(offsetof(UBBQAbilitySpyOnPlayer, AttributeSetInitDataTable) == 0x0578);
static_assert(offsetof(UBBQAbilitySpyOnPlayer, GivenAttributeSet) == 0x0580);
static_assert(offsetof(UBBQAbilityStatusEffect, GameplayEffectClass) == 0x04F0);
static_assert(offsetof(UBBQAbilityStatusEffect, CurrentAnimTask) == 0x04F8);
static_assert(offsetof(FSenseInfo, SpawnedPS) == 0x0000);
static_assert(offsetof(ABBQAbilityTarget_SenseActors, ParticleSystem) == 0x0338);
static_assert(offsetof(ABBQAbilityTarget_SenseActors, ColorDefault) == 0x0344);
static_assert(offsetof(ABBQAbilityTarget_SenseActors, ProximityCheckComponent) == 0x0358);
static_assert(offsetof(ABBQAbilityTarget_SenseActors, VolumeSize) == 0x0360);
static_assert(offsetof(ABBQAbilityTarget_SenseActors, FilterEnvironmentNoise) == 0x03B8);
static_assert(offsetof(ABBQAbilityTarget_SenseActors, DistanceScaleCurve) == 0x0410);
static_assert(offsetof(ABBQAbilityTarget_SenseActors, DistanceFadeCurve) == 0x0418);
static_assert(offsetof(ABBQAbilityTarget_SenseActors, ColorVariableName) == 0x0420);
static_assert(offsetof(ABBQAbilityTarget_SenseActors, SizeVariableName) == 0x0430);
static_assert(offsetof(ABBQAbilityTarget_SenseActors, SensedActors) == 0x0448);
static_assert(offsetof(ABBQAbilityTarget_SenseActors, AbilityOwner) == 0x0458);
static_assert(offsetof(ABBQAbilityTarget_SenseActors, SenseInfoMap) == 0x0460);
static_assert(offsetof(ABBQAbilityTarget_HeightenedSense, ColorVictim) == 0x04B0);
static_assert(offsetof(ABBQAbilityTarget_HeightenedSense, ColorFamily) == 0x04C0);
static_assert(offsetof(ABBQAbilityTarget_HeightenedSense, UseTeamIdentification) == 0x04D0);
static_assert(offsetof(ABBQAbilityTarget_HeightenedSense, EnterVisibilityAudioEvent) == 0x0528);
static_assert(offsetof(ABBQAbilityTarget_HeightenedSense, ExitVisibilityAudioEvent) == 0x0530);
static_assert(offsetof(ABBQAbilityTarget_IKnowEngines, ChainsawActiveTag) == 0x04B0);
static_assert(offsetof(ABBQAbilityTarget_IKnowEngines, SenseDurationBeforeRemoval) == 0x04B8);
static_assert(offsetof(ABBQAbilityTarget_IKnowEngines, PerkActiveTag) == 0x0510);
static_assert(offsetof(ABBQAbilityTarget_IKnowEngines, ActorHandleMap) == 0x0518);
static_assert(offsetof(ABBQAbilityTarget_ThereTheyAre, ProximityRadiusVar) == 0x0338);
static_assert(offsetof(ABBQAbilityTarget_ThereTheyAre, HighlightWaitDurationVar) == 0x0390);
static_assert(offsetof(ABBQAbilityTarget_ThereTheyAre, HighlightActiveDurationVar) == 0x03E8);
static_assert(offsetof(ABBQAbilityTarget_ThereTheyAre, OutlineRenderConfig) == 0x0440);
static_assert(offsetof(ABBQAbilityTarget_ThereTheyAre, AbilityOwner) == 0x04D8);
static_assert(offsetof(ABBQAbilityTarget_ThereTheyAre, StudyAndTamperActors) == 0x04E0);
static_assert(offsetof(ABBQAbilityTarget_ThereTheyAre, ActorHighlightInfoMap) == 0x04F0);
static_assert(offsetof(UBBQAbilityThickSkin, HealthEffectToApply) == 0x04F0);
static_assert(offsetof(FBBQGameplayAbilityTargetingClueInfo, OwnerCharacter) == 0x0000);
static_assert(offsetof(FBBQGameplayAbilityTargetingClueInfo, FootprintLocation) == 0x000C);
static_assert(offsetof(UBBQAbilityTrackFootprints, CooldownTag) == 0x04F0);
static_assert(offsetof(UBBQAbilityTrackFootprints, ClueDetectionRadius) == 0x04F8);
static_assert(offsetof(UBBQAbilityTrackFootprints, ViewFootprintsRadius) == 0x0550);
static_assert(offsetof(UBBQAbilityTrackFootprints, FootprintClueAsset) == 0x05A8);
static_assert(offsetof(UBBQAbilityTrackFootprints, ClueAnalyzedAudioPtr) == 0x05D0);
static_assert(offsetof(UBBQAbilityTrackFootprints, ClueAnalyzedAudioEvent) == 0x05F8);
static_assert(offsetof(UBBQAbilityTrackFootprints, FootprintClueClass) == 0x0610);
static_assert(offsetof(UBBQAbilityTrackFootprints, FollowingTrailTag) == 0x0618);
static_assert(offsetof(UBBQAbilityTrackFootprints, DecalPool) == 0x0628);
static_assert(offsetof(UBBQAbilityTrackFootprints, FootprintCluePool) == 0x0638);
static_assert(offsetof(UBBQAbilityTrackFootprints, FootprintClueMap) == 0x0648);
static_assert(offsetof(UBBQAbilityTrackFootprints, CachedFootprintClues) == 0x0698);
static_assert(offsetof(UBBQAbilityTrackFootprints, World) == 0x06A8);
static_assert(offsetof(UBBQAbilityUltimateEscape, CostGEAssetTag) == 0x05E0);
static_assert(offsetof(FBBQTurnInPlaceAsset, Animation) == 0x0000);
static_assert(offsetof(FBBQTurnInPlaceAsset, SlotName) == 0x000C);
static_assert(offsetof(UBBQAnimInstance, RagdollPhysicsAsset) == 0x02C0);
static_assert(offsetof(UBBQAnimInstance, Stance) == 0x02D4);
static_assert(offsetof(UBBQAnimInstance, StandingTurn45Left) == 0x02D8);
static_assert(offsetof(UBBQAnimInstance, StandingTurn45Right) == 0x02F8);
static_assert(offsetof(UBBQAnimInstance, StandingTurn90Left) == 0x0318);
static_assert(offsetof(UBBQAnimInstance, StandingTurn90Right) == 0x0338);
static_assert(offsetof(UBBQAnimInstance, StandingTurn180Left) == 0x0358);
static_assert(offsetof(UBBQAnimInstance, StandingTurn180Right) == 0x0378);
static_assert(offsetof(UBBQAnimInstance, CrouchingTurn45Left) == 0x0398);
static_assert(offsetof(UBBQAnimInstance, CrouchingTurn45Right) == 0x03B8);
static_assert(offsetof(UBBQAnimInstance, CrouchingTurn90Left) == 0x03D8);
static_assert(offsetof(UBBQAnimInstance, CrouchingTurn90Right) == 0x03F8);
static_assert(offsetof(UBBQAnimInstance, CrouchingTurn180Left) == 0x0418);
static_assert(offsetof(UBBQAnimInstance, CrouchingTurn180Right) == 0x0438);
static_assert(offsetof(UBBQAnimNotify_Comm, CommTag) == 0x0038);
static_assert(offsetof(UBBQAnimNotify_Footsteps, AttachName) == 0x0040);
static_assert(offsetof(UBBQAnimNotify_Footsteps, Event) == 0x0050);
static_assert(offsetof(UBBQAnimNotify_HingeDoorAkEvent, AkEvent) == 0x0038);
static_assert(offsetof(UBBQAnimNotifyState_HingeDoorAkEvent, AkEvent) == 0x0030);
static_assert(offsetof(UBBQAnimNotifyState_HingeDoorAkEvent, CachedDoor) == 0x0038);
static_assert(offsetof(UBBQAttributeSet_CookListen, Charges) == 0x0030);
static_assert(offsetof(UBBQAttributeSet_CookListen, MaxCharges) == 0x0040);
static_assert(offsetof(UBBQAttributeSet_CookListen, ChargesDepletedPerPeriod) == 0x0050);
static_assert(offsetof(UBBQAttributeSet_SpyAbility, Charge) == 0x0038);
static_assert(offsetof(UBBQAttributeSet_SpyAbility, ChargeMax) == 0x0048);
static_assert(offsetof(UBBQAudioDebugSubsystem, VisualisedCharacter) == 0x0040);
static_assert(offsetof(UBBQAudioDebugSubsystem, TestSpotAkComp) == 0x0048);
static_assert(offsetof(ABBQBarbedWire, TriggerImmuneTags) == 0x0228);
static_assert(offsetof(ABBQBarbedWire, TriggerTags) == 0x0248);
static_assert(offsetof(ABBQBarbedWire, TangleImmuneTags) == 0x0268);
static_assert(offsetof(ABBQBarbedWire, TangleImmuneTeam) == 0x0288);
static_assert(offsetof(ABBQBarbedWire, TriggerEffectTangled) == 0x0290);
static_assert(offsetof(ABBQBarbedWire, TriggerEffectTrampled) == 0x0298);
static_assert(offsetof(ABBQBarbedWire, TangledEffect) == 0x02A0);
static_assert(offsetof(ABBQBarbedWire, TangledLocalGameplayCueTag) == 0x02A8);
static_assert(offsetof(ABBQBarbedWire, UntangleMinigameClass) == 0x02B0);
static_assert(offsetof(ABBQBarbedWire, ActivityEventUntangle) == 0x02C0);
static_assert(offsetof(ABBQBarbedWire, ActivityEventUntangleFast) == 0x02D0);
static_assert(offsetof(ABBQBarbedWire, ActivityEventUntangleOther) == 0x02E0);
static_assert(offsetof(ABBQBarbedWire, ActivityEventCut) == 0x02F0);
static_assert(offsetof(ABBQBarbedWire, ActivityEventVictimCaught) == 0x0300);
static_assert(offsetof(ABBQBarbedWire, ActivityEventPlaced) == 0x0310);
static_assert(offsetof(ABBQBarbedWire, DetectableMovementSpeed) == 0x0328);
static_assert(offsetof(ABBQBarbedWire, OutlineVisibility) == 0x0380);
static_assert(offsetof(ABBQBarbedWire, InitialOutlineVisibility) == 0x0381);
static_assert(offsetof(ABBQBarbedWire, OutlineDuration) == 0x0388);
static_assert(offsetof(ABBQBarbedWire, InitialOutlineDuration) == 0x03E0);
static_assert(offsetof(ABBQBarbedWire, OutlineRange) == 0x0438);
static_assert(offsetof(ABBQBarbedWire, AudioEventActivated) == 0x0498);
static_assert(offsetof(ABBQBarbedWire, AudioEventTrampled) == 0x04A0);
static_assert(offsetof(ABBQBarbedWire, AudioEventNoiseStart) == 0x04A8);
static_assert(offsetof(ABBQBarbedWire, AudioEventNoiseEnd) == 0x04B0);
static_assert(offsetof(ABBQBarbedWire, AudioEventUntangleStart) == 0x04B8);
static_assert(offsetof(ABBQBarbedWire, AudioEventUntangleEnd) == 0x04C0);
static_assert(offsetof(ABBQBarbedWire, AudioEventUntangleSuccess) == 0x04C8);
static_assert(offsetof(ABBQBarbedWire, AudioEventUntangleFail) == 0x04D0);
static_assert(offsetof(ABBQBarbedWire, AnimSlotUntangleMinigame) == 0x04D8);
static_assert(offsetof(ABBQBarbedWire, AnimSlotUntangleWithShard) == 0x04D9);
static_assert(offsetof(ABBQBarbedWire, VfxOnTrigger) == 0x04E0);
static_assert(offsetof(ABBQBarbedWire, VfxOnMovement) == 0x04E8);
static_assert(offsetof(ABBQBarbedWire, VfxOnTriggerVisibility) == 0x04FC);
static_assert(offsetof(ABBQBarbedWire, VfxOnMovementVisibility) == 0x04FD);
static_assert(offsetof(ABBQBarbedWire, BarbedWireOwner) == 0x0500);
static_assert(offsetof(ABBQBarbedWire, BarbedWireSlot) == 0x0508);
static_assert(offsetof(ABBQBarbedWire, State) == 0x0510);
static_assert(offsetof(ABBQBarbedWire, InteractionComponent) == 0x0518);
static_assert(offsetof(ABBQBarbedWire, UntangleMinigame) == 0x0520);
static_assert(offsetof(ABBQBarbedWire, VfxOnMovementComponent) == 0x0528);
static_assert(offsetof(FCommonBleedoutInfo, NotificationRow) == 0x0010);
static_assert(offsetof(FTimeBasedBleedoutInfo, BleedoutData) == 0x0008);
static_assert(offsetof(FTagBasedBleedoutInfo, Tag) == 0x0000);
static_assert(offsetof(FTagBasedBleedoutInfo, BleedoutData) == 0x0008);
static_assert(offsetof(UBBQBaseBleedoutData, TimeBasedBleedoutInfo) == 0x0030);
static_assert(offsetof(UBBQBaseBleedoutData, TagBasedBleedoutInfo) == 0x0040);
static_assert(offsetof(UBBQBleedoutComponent, BleedoutDataAsset) == 0x00C8);
static_assert(offsetof(UBBQBleedoutComponent, BaseBleedoutEffectClass) == 0x00D0);
static_assert(offsetof(UBBQBleedoutComponent, BaseBleedoutEffectHandle) == 0x00D8);
static_assert(offsetof(UBBQBleedoutComponent, TimeBasedBleedoutInfo) == 0x00E0);
static_assert(offsetof(UBBQBleedoutComponent, ActiveBleedoutHandle) == 0x0118);
static_assert(offsetof(ABBQBloodBucket, RootComp) == 0x0238);
static_assert(offsetof(ABBQBloodBucket, StaticMeshComponent) == 0x0240);
static_assert(offsetof(ABBQBloodBucket, BloodMeshComponent) == 0x0248);
static_assert(offsetof(ABBQBloodBucket, BoxComponent) == 0x0250);
static_assert(offsetof(ABBQBloodBucket, BloodBucketAudio) == 0x0258);
static_assert(offsetof(ABBQBloodBucket, InteractionComponent) == 0x0260);
static_assert(offsetof(ABBQBloodBucket, CollectBloodVialInteraction) == 0x0268);
static_assert(offsetof(ABBQBloodBucket, NotEnoughBloodVialInteraction) == 0x0270);
static_assert(offsetof(ABBQBloodBucket, CollectBloodInteractionEventName) == 0x0278);
static_assert(offsetof(ABBQBloodBucket, BloodVialObtainedSFX) == 0x0288);
static_assert(offsetof(ABBQBloodBucket, BloodCollectionMultiplier) == 0x02A0);
static_assert(offsetof(ABBQBloodBucket, BloodCollectingActor) == 0x0318);
static_assert(offsetof(ABBQBloodPool, RootComp) == 0x0228);
static_assert(offsetof(ABBQBloodPool, DecalComponent) == 0x0248);
static_assert(offsetof(ABBQBloodPool, PoolExpandTimeline) == 0x0250);
static_assert(offsetof(ABBQBloodPool, SizeIncreaseCurve) == 0x0258);
static_assert(offsetof(ABBQBloodPool, BloodPoolMat) == 0x0268);
static_assert(offsetof(ABBQBloodPool, MaterialAnimatableParamName) == 0x0270);
static_assert(offsetof(ABBQBloodPool, BleedingActor) == 0x0278);
static_assert(offsetof(ABBQBloodPool, CharactersInPool) == 0x0288);
static_assert(offsetof(UBBQBloodTrailComponent, BloodTrailMats) == 0x00B0);
static_assert(offsetof(UBBQBloodTrailComponent, BloodTrailDecalSizes) == 0x00C0);
static_assert(offsetof(UBBQBloodTrailComponent, BloodTrailIntervalCurve) == 0x00D0);
static_assert(offsetof(UBBQBloodTrailComponent, BloodTrailRandomSeedCurve) == 0x00D8);
static_assert(offsetof(UBBQBloodTrailComponent, BloodTrailGameplayEffectClass) == 0x00E0);
static_assert(offsetof(UBBQBloodTrailComponent, BleedOutMultiplierModifierTag) == 0x00E8);
static_assert(offsetof(UBBQBloodTrailComponent, BloodTrailRaycastCheckCollisionChannel) == 0x0115);
static_assert(offsetof(UBBQBloodTrailComponent, BloodPoolToSpawn) == 0x0118);
static_assert(offsetof(UBBQBloodTrailComponent, PooledBloodTrailDecalComponents) == 0x0160);
static_assert(offsetof(ABBQTraversalActor, Entry1) == 0x0248);
static_assert(offsetof(ABBQTraversalActor, Entry2) == 0x0250);
static_assert(offsetof(ABBQTraversalActor, SmartLink) == 0x0258);
static_assert(offsetof(ABBQTraversalActor, InteractionBox) == 0x0260);
static_assert(offsetof(ABBQTraversalActor, Interaction) == 0x0268);
static_assert(offsetof(ABBQTraversalActor, InteractionEvent) == 0x0270);
static_assert(offsetof(ABBQTraversalActor, InTraversalEffects) == 0x0280);
static_assert(offsetof(ABBQTraversalActor, BlockingActor) == 0x0290);
static_assert(offsetof(ABBQTraversalActor, FirstInteractingActor) == 0x0298);
static_assert(offsetof(ABBQTraversalActor, InteractingActors) == 0x02A0);
static_assert(offsetof(ABBQTraversalActor, GameplayTags) == 0x02B0);
static_assert(offsetof(ABBQTraversalActor, CooldownTimerHandle) == 0x02D0);
static_assert(offsetof(ABBQBoltholeBase, SequencePlayer_Into) == 0x02E0);
static_assert(offsetof(ABBQBoltholeBase, SequencePlayer_Success) == 0x02E8);
static_assert(offsetof(ABBQBoltholeBase, StartingOverrideState) == 0x02F0);
static_assert(offsetof(ABBQBoltholeBase, LFThrustMeleeTag) == 0x02F4);
static_assert(offsetof(ABBQBoltholeBase, ImmunityTag) == 0x02FC);
static_assert(offsetof(ABBQBoltholeBase, IsBarricadedTag) == 0x0304);
static_assert(offsetof(ABBQBoltholeBase, BoltholeOpeningMinigameClass) == 0x0310);
static_assert(offsetof(ABBQBoltholeBase, BarbedWireEffect) == 0x0318);
static_assert(offsetof(ABBQBoltholeBase, MontageSectionsForMinigameResult) == 0x0320);
static_assert(offsetof(ABBQBoltholeBase, BoltHoleDoorMesh) == 0x0378);
static_assert(offsetof(ABBQBoltholeBase, BoltHoleFrameMesh) == 0x0380);
static_assert(offsetof(ABBQBoltholeBase, AnimTimeline) == 0x0388);
static_assert(offsetof(ABBQBoltholeBase, OpenIntroCurve) == 0x0390);
static_assert(offsetof(ABBQBoltholeBase, OpenLoopCurve) == 0x0398);
static_assert(offsetof(ABBQBoltholeBase, OpenOutroCurve) == 0x03A0);
static_assert(offsetof(ABBQBoltholeBase, OpenFailCurve) == 0x03A8);
static_assert(offsetof(ABBQBoltholeBase, CloseIntroCurve) == 0x03B0);
static_assert(offsetof(ABBQBoltholeBase, CloseOutroCurve) == 0x03B8);
static_assert(offsetof(ABBQBoltholeBase, DestroyIntroCurve) == 0x03C0);
static_assert(offsetof(ABBQBoltholeBase, DestroyOutroCurve) == 0x03C8);
static_assert(offsetof(ABBQBoltholeBase, PoseOpenCurve) == 0x03D0);
static_assert(offsetof(ABBQBoltholeBase, PoseClosedCurve) == 0x03D8);
static_assert(offsetof(ABBQBoltholeBase, OpenFailAudioEvents) == 0x03E0);
static_assert(offsetof(ABBQBoltholeBase, InterruptMontageEndTimer) == 0x0430);
static_assert(offsetof(ABBQBoltholeBase, AkPortalPtr) == 0x0440);
static_assert(offsetof(ABBQBoltholeBase, MinigameInstigator) == 0x0450);
static_assert(offsetof(ABBQBoltholeBase, NetworkAnimCurve) == 0x0458);
static_assert(offsetof(ABBQBoltholeBase, MinigameEndReason) == 0x0460);
static_assert(offsetof(ABBQBoltholeBase, MinigameInst_Opening) == 0x0470);
static_assert(offsetof(UBBQCalculationRestoreChunk, AttributeToRestore) == 0x0040);
static_assert(offsetof(UBBQCalculationSSACooldown, StartingCooldownTime) == 0x0040);
static_assert(offsetof(UBBQCalculationSSACooldown, AbilityCooldownTime) == 0x0098);
static_assert(offsetof(FBBQCameraState_CameraShake, ShakeClass) == 0x0000);
static_assert(offsetof(FBBQCameraState_CameraShake, PlaySpace) == 0x000C);
static_assert(offsetof(FBBQCameraState_CameraShake, UserPlaySpaceRot) == 0x0010);
static_assert(offsetof(FBBQ_Camera_State, TargetOffset) == 0x0030);
static_assert(offsetof(FBBQ_Camera_State, PositionOffset) == 0x003C);
static_assert(offsetof(FBBQ_Camera_State, LookAtPointOffset) == 0x0048);
static_assert(offsetof(FBBQ_Camera_State, TransitionCurve) == 0x0078);
static_assert(offsetof(FBBQ_Camera_State, OutTransitionCurve) == 0x0088);
static_assert(offsetof(FBBQ_Camera_State, CameraShake) == 0x0090);
static_assert(offsetof(FCameraStateBlendable, State) == 0x0018);
static_assert(offsetof(FCameraStateBlendable, ActiveCameraShake) == 0x00D8);
static_assert(offsetof(FCameraStateModifier, SourceCameraVolume) == 0x0000);
static_assert(offsetof(FCameraStateModifier, CameraStateRowHandle) == 0x0008);
static_assert(offsetof(UBBQCameraComponent, FadingSubobject) == 0x07E0);
static_assert(offsetof(UBBQCameraComponent, TerrainFollowSubobject) == 0x07E8);
static_assert(offsetof(UBBQCameraComponent, TargetLockSubobject) == 0x07F0);
static_assert(offsetof(UBBQCameraComponent, SuggestedFramingSubobject) == 0x07F8);
static_assert(offsetof(UBBQCameraComponent, FadingSettingsClass) == 0x0800);
static_assert(offsetof(UBBQCameraComponent, TerrainFollowSettingsClass) == 0x0808);
static_assert(offsetof(UBBQCameraComponent, TargetLockSettingsClass) == 0x0810);
static_assert(offsetof(UBBQCameraComponent, DefaultFramingSettingsClass) == 0x0818);
static_assert(offsetof(UBBQCameraComponent, AutoRotateSpeedMultFromMovementSpeedCurve) == 0x0838);
static_assert(offsetof(UBBQCameraComponent, AutoRotateSpeedMultFromAngularDistanceCurve) == 0x0840);
static_assert(offsetof(UBBQCameraComponent, AutoRotateInterpSpeedMultFromAngleCurve) == 0x0858);
static_assert(offsetof(UBBQCameraComponent, CameraStates) == 0x0880);
static_assert(offsetof(UBBQCameraComponent, CameraStateBlendables) == 0x09B0);
static_assert(offsetof(UBBQCameraComponent, CameraStateModifiers) == 0x09C0);
static_assert(offsetof(UBBQCameraComponent, CameraTransformTransitionCurve) == 0x0A40);
static_assert(offsetof(UBBQCameraComponent, YawRateAccelerationCurve) == 0x0A58);
static_assert(offsetof(UBBQCameraComponent, PitchRateAccelerationCurve) == 0x0A68);
static_assert(offsetof(UBBQCameraComponent, ControllingCameraVolume) == 0x0A88);
static_assert(offsetof(UBBQCameraComponent, ReplicatedCameraVolume) == 0x0A98);
static_assert(offsetof(UBBQCameraFadingSettings, MaterialParamName) == 0x0030);
static_assert(offsetof(UBBQCameraFadingSettings, MaterialParamValueCurve) == 0x0038);
static_assert(offsetof(UBBQCameraFadingSettings, CollisionChannel) == 0x0040);
static_assert(offsetof(UBBQCameraFadingSettings, ObstructingActorsToFadeTag) == 0x0044);
static_assert(offsetof(UBBQCameraFadingSettings, CollidingActorsToFadeTag) == 0x004C);
static_assert(offsetof(UBBQCameraFadingSettings, CharacterMaterialParamName) == 0x0068);
static_assert(offsetof(UBBQCameraFadingSettings, CharacterMaterialParamValueCurve) == 0x0070);
static_assert(offsetof(UBBQAnimNotify_CameraShake, ShakeClass) == 0x0038);
static_assert(offsetof(UBBQAnimNotify_CameraShake, PlaySpace) == 0x0044);
static_assert(offsetof(UBBQAnimNotify_CameraShake, UserPlaySpaceRot) == 0x0048);
static_assert(offsetof(UBBQCameraFramingSettings, Origin_PlayerCharacterSocketOrBone) == 0x0028);
static_assert(offsetof(UBBQCameraFramingSettings, Origin_OtherCharacterSocketOrBone) == 0x0030);
static_assert(offsetof(UBBQCameraFramingSettings, Origin_OffsetList) == 0x0040);
static_assert(offsetof(UBBQCameraFramingSettings, Target_PlayerCharacterSocketOrBone) == 0x0050);
static_assert(offsetof(UBBQCameraFramingSettings, Target_OtherCharacterSocketOrBone) == 0x0058);
static_assert(offsetof(UBBQCameraFramingSettings, BlendInCurve) == 0x0070);
static_assert(offsetof(UBBQCameraFramingSettings, BlendOutCurve) == 0x0080);
static_assert(offsetof(UBBQCameraFramingSettings, CameraState) == 0x008C);
static_assert(offsetof(UBBQCameraSuggestedFramingSubobject, OwningCamera) == 0x0028);
static_assert(offsetof(UBBQCameraSuggestedFramingSubobject, CurrentFramingSettings) == 0x0030);
static_assert(offsetof(UBBQCameraSuggestedFramingSubobject, PlayerCharacter) == 0x0078);
static_assert(offsetof(UBBQCameraSuggestedFramingSubobject, OtherCharacter) == 0x0080);
static_assert(offsetof(UBBQCameraTargetLockSettings, CheckVisibilityTraceChannel) == 0x003C);
static_assert(offsetof(UBBQCameraTerrainFollowSettings, PositionOffsetCurve) == 0x0028);
static_assert(offsetof(UBBQCameraTerrainFollowSettings, TargetOffsetCurve) == 0x0038);
static_assert(offsetof(UBBQCameraTerrainFollowSettings, PitchOffsetCurve) == 0x0048);
static_assert(offsetof(UBBQCameraTerrainFollowSettings, TerrainTracePointOffsetCurve) == 0x0058);
static_assert(offsetof(ABBQCar, HidingSpotEnterSlaveAnim) == 0x0228);
static_assert(offsetof(ABBQCar, HidingSpotLeaveSlaveAnim) == 0x0230);
static_assert(offsetof(ABBQCar, HidingSpotBurstOutSlaveAnim) == 0x0238);
static_assert(offsetof(UBBQNotifyState_ChainsawRevvingDisabled, CachedChainsawComp) == 0x0038);
static_assert(offsetof(FChainsawHeatLevelTag, HeatLevel) == 0x0000);
static_assert(offsetof(FChainsawHeatLevelTag, GameplayTag) == 0x0058);
static_assert(offsetof(FChainsawHeatLevelTag, LowMarginGameplayTag) == 0x0060);
static_assert(offsetof(FChainsawHeatLevelTag, HighMarginGameplayTag) == 0x006C);
static_assert(offsetof(UBBQChainsawComponent, RevHeatPerSecond) == 0x00B8);
static_assert(offsetof(UBBQChainsawComponent, HeatLostPerSecond) == 0x0110);
static_assert(offsetof(UBBQChainsawComponent, HeatGainPerSecond) == 0x0168);
static_assert(offsetof(UBBQChainsawComponent, HeatAttackMultiplier) == 0x01C0);
static_assert(offsetof(UBBQChainsawComponent, OverheatDuration) == 0x0218);
static_assert(offsetof(UBBQChainsawComponent, StallDuration) == 0x0270);
static_assert(offsetof(UBBQChainsawComponent, RevHeatCurve) == 0x02D0);
static_assert(offsetof(UBBQChainsawComponent, ActivationMinigameClass) == 0x02E0);
static_assert(offsetof(UBBQChainsawComponent, RPM_AccelerationCurve) == 0x0308);
static_assert(offsetof(UBBQChainsawComponent, RPM_DecelerationCurve) == 0x0310);
static_assert(offsetof(UBBQChainsawComponent, AkEvent_TurnOn) == 0x0318);
static_assert(offsetof(UBBQChainsawComponent, AkEvent_TurnOn3P) == 0x0320);
static_assert(offsetof(UBBQChainsawComponent, AkEvent_TurnOff) == 0x0328);
static_assert(offsetof(UBBQChainsawComponent, AkEvent_TurnOff3P) == 0x0330);
static_assert(offsetof(UBBQChainsawComponent, AkEvent_Stall_Manual) == 0x0338);
static_assert(offsetof(UBBQChainsawComponent, AkEvent_Stall_LowHeat) == 0x0340);
static_assert(offsetof(UBBQChainsawComponent, AkEvent_Overheat) == 0x0348);
static_assert(offsetof(UBBQChainsawComponent, AkEvent_Overheat_Loop) == 0x0350);
static_assert(offsetof(UBBQChainsawComponent, AkEvent_Overheat_End) == 0x0358);
static_assert(offsetof(UBBQChainsawComponent, AkRtpc_EngineRPM) == 0x0360);
static_assert(offsetof(UBBQChainsawComponent, AkRtpc_EngineOnloading) == 0x0368);
static_assert(offsetof(UBBQChainsawComponent, AkRtpc_Heat) == 0x0370);
static_assert(offsetof(UBBQChainsawComponent, AkRtpc_Stalling) == 0x0378);
static_assert(offsetof(UBBQChainsawComponent, ChainsawHeatLevelTags) == 0x0388);
static_assert(offsetof(UBBQChainsawComponent, ChainsawStateTags) == 0x0398);
static_assert(offsetof(UBBQChainsawComponent, ChainsawRevvingTag) == 0x03C0);
static_assert(offsetof(UBBQChainsawComponent, ChainsawDisabledTags) == 0x03C8);
static_assert(offsetof(UBBQChainsawComponent, ChainsawTurnOffTags) == 0x03E8);
static_assert(offsetof(UBBQChainsawComponent, CurrentChainsawState) == 0x0450);
static_assert(offsetof(UBBQChainsawComponent, OwnerASC) == 0x04A0);
static_assert(offsetof(UBBQChainsawComponent, ActivationMinigameInstance) == 0x04A8);
static_assert(offsetof(UBBQChainsawComponent, OwnerAkComponent) == 0x04B0);
static_assert(offsetof(FBBQCinematicCameraSetup, LevelSequence) == 0x0008);
static_assert(offsetof(FBBQCinematicCameraSetup, LevelSequenceCollision) == 0x0018);
static_assert(offsetof(FBBQCinematicCameraSetup, FallbackFramingSettings) == 0x0028);
static_assert(offsetof(FBBQCinematicCameraSetup, MusicPlayerState) == 0x0038);
static_assert(offsetof(FBBQPairedAnimation, LeaderAnimationMontage) == 0x0000);
static_assert(offsetof(FBBQPairedAnimation, LeaderCameraSetup) == 0x0008);
static_assert(offsetof(FBBQPairedAnimation, LeaderAssetSequence) == 0x0050);
static_assert(offsetof(FBBQPairedAnimation, OverrideCameraFramingCharacter) == 0x005F);
static_assert(offsetof(FBBQPairedAnimation, FollowerAnimationMontage) == 0x0068);
static_assert(offsetof(FBBQPairedAnimation, FollowerCameraSetup) == 0x0070);
static_assert(offsetof(FBBQPairedAnimation, FollowerAssetSequence) == 0x00B8);
static_assert(offsetof(FBBQPairedAnimation, AnimationTransformRule) == 0x00C1);
static_assert(offsetof(FBBQPairedAnimation, FollowerOffset) == 0x00D0);
static_assert(offsetof(FBBQPairedAnimationSet, TagSpecificOverrides) == 0x0000);
static_assert(offsetof(FBBQPairedAnimationSet, BaseSetup) == 0x0050);
static_assert(offsetof(FBBQExecutionProperties, ExecutionDataName) == 0x0000);
static_assert(offsetof(FBBQExecutionProperties, ExecutionerEffect) == 0x0008);
static_assert(offsetof(FBBQExecutionProperties, VictimEffect) == 0x0010);
static_assert(offsetof(FBBQExecutionProperties, ErosionTextureMap) == 0x0018);
static_assert(offsetof(FBBQExecutionProperties, PairedAnimationSet) == 0x0070);
static_assert(offsetof(UBBQExecutionSettings, CelebrationCameraSetup) == 0x0030);
static_assert(offsetof(UBBQExecutionSettings, ExecutionSetups) == 0x0080);
static_assert(offsetof(UBBQExecutionSettings, BackupExecution) == 0x0090);
static_assert(offsetof(UBBQCharacterAnimSettings, AnimSlots) == 0x0030);
static_assert(offsetof(UBBQCharacterAnimSettings, AnimSlots_AddOn1) == 0x0820);
static_assert(offsetof(UBBQCharacterAnimSettings, HidingSpotAnimSlots) == 0x08B8);
static_assert(offsetof(UBBQCharacterAnimSettings, CombatAnimSlots) == 0x0A08);
static_assert(offsetof(UBBQCharacterAnimSettings, AnimSlotMap) == 0x0C80);
static_assert(offsetof(UBBQCharacterAnimSettings, AnimSlot_AddOn1_Map) == 0x0CD0);
static_assert(offsetof(UBBQCharacterAnimSettings, HidingSpotAnimSlotMap) == 0x0D20);
static_assert(offsetof(UBBQCharacterAnimSettings, CombatAnimSlotMap) == 0x0D70);
static_assert(offsetof(UBBQCharacterAnimSettings, PairedAnimSlotSetMap) == 0x0DC0);
static_assert(offsetof(UBBQCharacterAnimSettings, SkeletalMeshPtr) == 0x0E10);
static_assert(offsetof(UBBQCharacterAnimSettings, AnimationClass) == 0x0E38);
static_assert(offsetof(UBBQCharacterAnimSettings, MantleCurveFloat) == 0x0E40);
static_assert(offsetof(UBBQCharacterAnimSettings, Mantle2MPositionCorrectionCurve) == 0x0E48);
static_assert(offsetof(UBBQCharacterAnimSettings, Mantle1MPositionCorrectionCurve) == 0x0E50);
static_assert(offsetof(UBBQCharacterAnimSettings, Mantle1MLHPositionCorrectionCurve) == 0x0E58);
static_assert(offsetof(UBBQCharacterAnimSettings, Mantle1MRHPositionCorrectionCurve) == 0x0E60);
static_assert(offsetof(UBBQCharacterAnimSettings, Mantle1M2HPositionCorrectionCurve) == 0x0E68);
static_assert(offsetof(UBBQCharacterAnimSettings, Mantle1MBoxPositionCorrectionCurve) == 0x0E70);
static_assert(offsetof(UBBQCharacterAnimSettings, MantleWindowPositionCorrectionCurve) == 0x0E78);
static_assert(offsetof(UBBQCharacterAnimSettings, MantleJumpOverPositionCorrectionCurve) == 0x0E80);
static_assert(offsetof(UBBQCharacterAnimSettings, LadderAttachRotationCurveFloat) == 0x0E88);
static_assert(offsetof(UBBQCharacterAnimSettings, LadderGroundToTopLocationCurveFloat) == 0x0E90);
static_assert(offsetof(UBBQCharacterAnimSettings, LadderTopToGroundLocationCurveFloat) == 0x0E98);
static_assert(offsetof(UBBQCharacterAnimSettings, LadderClimbUpCurveFloat) == 0x0EA0);
static_assert(offsetof(UBBQCharacterAnimSettings, LadderClimbDownCurveFloat) == 0x0EA8);
static_assert(offsetof(UBBQCharacterAnimSettings, FallRecoveryCurve) == 0x0EB0);
static_assert(offsetof(UBBQCharacterAnimSettings, JumpIntoWellCurveVector) == 0x0EB8);
static_assert(offsetof(UBBQCharacterAnimSettings, ClamberIntoWellCurveVector) == 0x0EC0);
static_assert(offsetof(UBBQCharacterAnimSettings, BeThrownIntoWellCurveVector) == 0x0EC8);
static_assert(offsetof(UBBQCharacterAudioComponent, OwnerChar) == 0x0108);
static_assert(offsetof(UBBQCharacterAudioComponent, LOSSys) == 0x0110);
static_assert(offsetof(ABBQCharacterBehaviour, TagsWhilstInBehaviour) == 0x0238);
static_assert(offsetof(ABBQCharacterBehaviour, TargetTagsWhilstInBehaviour) == 0x0258);
static_assert(offsetof(ABBQCharacterBehaviour, BehaviourDispatchType) == 0x0278);
static_assert(offsetof(ABBQCharacterBehaviour, CancelOnGainTags) == 0x0280);
static_assert(offsetof(ABBQCharacterBehaviour, CancelOnRemoveTags) == 0x02A0);
static_assert(offsetof(ABBQCharacterBehaviour, TargetActor) == 0x02C0);
static_assert(offsetof(UBBQCharacterBehaviourComponent, CurrentBehaviour) == 0x00B8);
static_assert(offsetof(UInventoryTagMapping, TagToItemMapping) == 0x0030);
static_assert(offsetof(FBBQInventoryItem, Type) == 0x0000);
static_assert(offsetof(FBBQInventoryItem, SlotTexture) == 0x0008);
static_assert(offsetof(FBBQInventoryItem, EffectInstigator) == 0x0010);
static_assert(offsetof(UBBQCharacterInventoryComponent, OwnerPlayerController) == 0x0118);
static_assert(offsetof(UBBQCharacterInventoryComponent, InventoryTag) == 0x0120);
static_assert(offsetof(UBBQCharacterInventoryComponent, Items) == 0x0128);
static_assert(offsetof(UBBQCharacterInventoryComponent, HeldItemTag) == 0x0138);
static_assert(offsetof(UBBQCharacterInventoryComponent, TagToItemMappingAsset) == 0x0148);
static_assert(offsetof(UBBQCharacterInventoryComponent, ItemToStatMapping) == 0x0150);
static_assert(offsetof(UBBQCharacterInventoryComponent, ItemToEventMapping) == 0x01A0);
static_assert(offsetof(UBBQCharacterInventoryComponent, ConsumeItemCharacterBehaviourClass) == 0x0200);
static_assert(offsetof(FBBQLockOnTargetInfo, LockOnTarget) == 0x0000);
static_assert(offsetof(UBBQCharacterMovementComponent, LockOnTarget) == 0x1138);
static_assert(offsetof(UBBQCharacterMovementComponent, PotentialLockOnTargets) == 0x1150);
static_assert(offsetof(UBBQCharacterMovementComponent, PredictedOverlaps) == 0x1188);
static_assert(offsetof(FBBQMapPosition, Location) == 0x0000);
static_assert(offsetof(FBBQMapPosition, Name) == 0x0010);
static_assert(offsetof(UBBQCheatManager, GlobalRtpcs) == 0x00E8);
static_assert(offsetof(UBBQCheatManager, SissyCharacterTag) == 0x00F8);
static_assert(offsetof(UBBQCheatManager, DELTACharacterTag) == 0x0100);
static_assert(offsetof(UBBQCheatManager, PoisonImmuneGE) == 0x0108);
static_assert(offsetof(UBBQCheatManager, PowderImmuneGE) == 0x0110);
static_assert(offsetof(UBBQCheatManager, PoisonEffectGE) == 0x0118);
static_assert(offsetof(UBBQCheatManager, PowderCloudClass) == 0x0120);
static_assert(offsetof(UBBQCheatManager, DebugCharacterWidgetClass) == 0x0128);
static_assert(offsetof(UBBQCheatManager, DebugCharacterWidget) == 0x0130);
static_assert(offsetof(UBBQCheatManager, CurrentMapPositions) == 0x0140);
static_assert(offsetof(UBBQCheatManager, CurrentMapName) == 0x0190);
static_assert(offsetof(UBBQCheatManager, SaveAllSequence) == 0x01A0);
static_assert(offsetof(UBBQCheatManager, StatsDelayTimer) == 0x01B0);
static_assert(offsetof(UBBQCheatManager, OriginalPosition) == 0x01C0);
static_assert(offsetof(UBBQCheatManager, LastActor) == 0x01E8);
static_assert(offsetof(UBBQCheatManager, EscapeZoneClass) == 0x01F8);
static_assert(offsetof(UBBQCheatManager, PoisonImmuneGEHandle) == 0x0200);
static_assert(offsetof(UBBQCheatManager, PowderImmuneGEHandle) == 0x0208);
static_assert(offsetof(UBBQCheatManager, PoisonEffectGECopy) == 0x0210);
static_assert(offsetof(UBBQCheatManager, PowderCloudActorInstance) == 0x0218);
static_assert(offsetof(UBBQCheatManager, AssetSelectionActor) == 0x0220);
static_assert(offsetof(UBBQCinematicCameraModifier, CurrentLevelSequence) == 0x0050);
static_assert(offsetof(UBBQCinematicCameraPlayerComponent, CharacterOwner) == 0x00B0);
static_assert(offsetof(UBBQCinematicCameraPlayerComponent, CurrentSecondCharacter) == 0x00B8);
static_assert(offsetof(UBBQCinematicCameraPlayerComponent, CurrentSequenceRootMesh) == 0x00C0);
static_assert(offsetof(UBBQCinematicCameraPlayerComponent, CurrentSequenceOtherMesh) == 0x00C8);
static_assert(offsetof(UBBQCinematicCameraPlayerComponent, CurrentSequenceTrackedMontage) == 0x00D0);
static_assert(offsetof(UBBQCinematicCameraPlayerComponent, SequencePlayer) == 0x00D8);
static_assert(offsetof(UBBQCinematicCameraPlayerComponent, SequenceActor) == 0x00E0);
static_assert(offsetof(UBBQCloseEncounterHitFrameState, HitFrameType) == 0x0030);
static_assert(offsetof(FNoiseOutlineConfig, PSTemplate) == 0x0000);
static_assert(offsetof(FNoiseOutlineConfig, AudioEvent) == 0x0010);
static_assert(offsetof(FNoiseOutlineConfig, SoleRecipientOfEffect) == 0x0020);
static_assert(offsetof(FNoiseOutlineConfig, Team) == 0x0028);
static_assert(offsetof(FNoiseOutlineConfig, TaggedComponentsToHighlight) == 0x0030);
static_assert(offsetof(FBBQCloseEncounterStateRepInfo, CloseEncounterState) == 0x0000);
static_assert(offsetof(FBBQCloseEncounterStateRepInfo, OverrideWinner) == 0x0001);
static_assert(offsetof(FBBQCloseEncounterStateRepInfo, CloseEncounterDefinition) == 0x0008);
static_assert(offsetof(FBBQCloseEncounterStateRepInfo, Defender) == 0x0018);
static_assert(offsetof(FBBQCloseEncounterStateRepInfo, AttackerTransform) == 0x0020);
static_assert(offsetof(FBBQCloseEncounterStateRepInfo, DefenderTransform) == 0x0050);
static_assert(offsetof(FCloseEncounterParticipant, ParticipantActor) == 0x0000);
static_assert(offsetof(FCloseEncounterParticipant, ParticipantPairedAnimationComponent) == 0x0008);
static_assert(offsetof(FCloseEncounterParticipant, ParticipantCloseEncounterComponent) == 0x0010);
static_assert(offsetof(UBBQCloseEncounterComponent, AreaEffectLineTraceChannel) == 0x00C4);
static_assert(offsetof(UBBQCloseEncounterComponent, CloseEncounterDamageType) == 0x00C8);
static_assert(offsetof(UBBQCloseEncounterComponent, CloseEncounterParticipantsOutlineConfig) == 0x00D0);
static_assert(offsetof(UBBQCloseEncounterComponent, CloseEncounterSpectatorsOutlineConfig) == 0x0168);
static_assert(offsetof(UBBQCloseEncounterComponent, MyPairedAnimationComponent) == 0x01E0);
static_assert(offsetof(UBBQCloseEncounterComponent, MyExecutionComponent) == 0x01E8);
static_assert(offsetof(UBBQCloseEncounterComponent, HostCloseEncounter) == 0x01F0);
static_assert(offsetof(UBBQCloseEncounterComponent, CloseEncounterStateRepInfo) == 0x0200);
static_assert(offsetof(UBBQCloseEncounterComponent, Partner) == 0x0280);
static_assert(offsetof(UBBQCloseEncounterComponent, MinigameInstance) == 0x02C0);
static_assert(offsetof(ABBQCollectable, InventoryType) == 0x0228);
static_assert(offsetof(UBBQDamageType, DamageTypeTag) == 0x0044);
static_assert(offsetof(UBBQDamageType, BloodToCollect) == 0x0050);
static_assert(offsetof(UBBQDamageType, CollectBloodMultiplier) == 0x00A8);
static_assert(offsetof(UBBQDamageType, DamageMultiplier) == 0x0100);
static_assert(offsetof(UBBQDamageType, BloodTrailDefinition) == 0x0160);
static_assert(offsetof(UBBQInteractionEventComponent, EventName) == 0x00B0);
static_assert(offsetof(UBBQInteractionEventComponent, CharacterBehaviourClass) == 0x00C0);
static_assert(offsetof(UBBQInteractionEventComponent, NotifyType) == 0x00C8);
static_assert(offsetof(UBBQInteractionEventComponent, InteractionMethod) == 0x00C9);
static_assert(offsetof(UBBQInteractionEventComponent, PromptText) == 0x00D8);
static_assert(offsetof(UBBQInteractionEventComponent, PromptType) == 0x00F0);
static_assert(offsetof(UBBQInteractionEventComponent, UIAssetIdentifier) == 0x00F4);
static_assert(offsetof(UBBQInteractionEventComponent, GameplayEffect) == 0x0100);
static_assert(offsetof(UBBQInteractionEventComponent, CustomConditionsFunction) == 0x0108);
static_assert(offsetof(UBBQInteractionEventComponent, RequiredTeam) == 0x0110);
static_assert(offsetof(UBBQInteractionEventComponent, RequiredItemTag) == 0x0114);
static_assert(offsetof(UBBQInteractionEventComponent, ItemRequiredHint) == 0x0128);
static_assert(offsetof(UBBQInteractionEventComponent, InteractionType) == 0x0140);
static_assert(offsetof(UBBQInteractionEventComponent, RequiredTagsContainer) == 0x0148);
static_assert(offsetof(UBBQInteractionEventComponent, ForbiddenTagsContainer) == 0x0168);
static_assert(offsetof(UBBQInteractionEventComponent, OwnerRequiredTagsContainer) == 0x0188);
static_assert(offsetof(UBBQInteractionEventComponent, OwnerForbiddenTagsContainer) == 0x01A8);
static_assert(offsetof(UBBQInteractionEventComponent, CombinedRequiredTags) == 0x01C8);
static_assert(offsetof(UBBQInteractionEventComponent, CombinedForbiddenTags) == 0x01E8);
static_assert(offsetof(UBBQInteractionEventComponent, CombinedOwnerRequiredTags) == 0x0208);
static_assert(offsetof(UBBQInteractionEventComponent, CombinedOwnerForbiddenTags) == 0x0228);
static_assert(offsetof(UBBQInteractionEventComponent, RequiredTagsHint) == 0x0248);
static_assert(offsetof(UBBQInteractionEventComponent, ForbiddenTagsHint) == 0x0260);
static_assert(offsetof(UBBQInteractionEventComponent, InUseHint) == 0x0280);
static_assert(offsetof(UBBQInteractionEventComponent, OwningInteractionComponent) == 0x0298);
static_assert(offsetof(ABBQCommTriggerBox, CommTag) == 0x0230);
static_assert(offsetof(ABBQCommTriggerBox, TriggeredBy) == 0x0238);
static_assert(offsetof(ABBQContextualKillLocation, FamilyLocator) == 0x0238);
static_assert(offsetof(ABBQContextualKillLocation, CameraOffsetRoot) == 0x0240);
static_assert(offsetof(ABBQContextualKillLocation, OutlineComponent) == 0x0248);
static_assert(offsetof(ABBQContextualKillLocation, ContextualKillLocationMesh) == 0x0250);
static_assert(offsetof(ABBQContextualKillLocation, PropMesh) == 0x0258);
static_assert(offsetof(ABBQContextualKillLocation, InteractionBox) == 0x0260);
static_assert(offsetof(ABBQContextualKillLocation, Interaction) == 0x0268);
static_assert(offsetof(ABBQContextualKillLocation, ExecuteVictimInteractionEvent) == 0x0270);
static_assert(offsetof(ABBQContextualKillLocation, FamilyAnim) == 0x0278);
static_assert(offsetof(ABBQContextualKillLocation, MaleVictimAnim) == 0x0280);
static_assert(offsetof(ABBQContextualKillLocation, FemaleVictimAnim) == 0x0288);
static_assert(offsetof(ABBQContextualKillLocation, MaleVictimDeathAnim) == 0x0290);
static_assert(offsetof(ABBQContextualKillLocation, FemaleVictimDeathAnim) == 0x0298);
static_assert(offsetof(ABBQContextualKillLocation, CameraSequenceExecuteVictim) == 0x02A0);
static_assert(offsetof(ABBQContextualKillLocation, AssetSequenceVictimMale) == 0x02A8);
static_assert(offsetof(ABBQContextualKillLocation, AssetSequenceVictimFemale) == 0x02B0);
static_assert(offsetof(ABBQContextualKillLocation, Family) == 0x02C0);
static_assert(offsetof(ABBQContextualKillLocation, Victim) == 0x02C8);
static_assert(offsetof(ABBQDeathBloodApplicationActor, TargetTag) == 0x0228);
static_assert(offsetof(ABBQDeathBloodApplicationActor, SceneComponent) == 0x0230);
static_assert(offsetof(ABBQDeathBloodApplicationActor, TargetActor) == 0x0238);
static_assert(offsetof(UBBQDeathBloodComponent, AttachBoneName) == 0x00D0);
static_assert(offsetof(UBBQDeathBloodComponent, BloodPoolToSpawn) == 0x00D8);
static_assert(offsetof(UBBQDeathBloodComponent, CurrentBloodPool) == 0x00E0);
static_assert(offsetof(UBBQDeathBloodComponent, CharacterOwner) == 0x00E8);
static_assert(offsetof(UBBQDeathBloodComponent, CachedOwnerMesh) == 0x00F0);
static_assert(offsetof(ABBQDestructibleActor, HitParticles) == 0x0240);
static_assert(offsetof(ABBQDestructibleActor, SmashableTag) == 0x0248);
static_assert(offsetof(UBBQDialogComponent, CommDataTable) == 0x00B0);
static_assert(offsetof(UBBQDialogComponent, DialogDataTable) == 0x00B8);
static_assert(offsetof(UBBQDialogComponent, DialogStringTable) == 0x00C0);
static_assert(offsetof(UBBQDialogComponent, AkEvent_MutteredFP) == 0x00D0);
static_assert(offsetof(UBBQDialogComponent, AkEvent_SpokenFP) == 0x00D8);
static_assert(offsetof(UBBQDialogComponent, AkEvent_ShoutedFP) == 0x00E0);
static_assert(offsetof(UBBQDialogComponent, AkEvent_ScreamedFP) == 0x00E8);
static_assert(offsetof(UBBQDialogComponent, AkEvent_Muttered3P) == 0x00F0);
static_assert(offsetof(UBBQDialogComponent, AkEvent_Spoken3P) == 0x00F8);
static_assert(offsetof(UBBQDialogComponent, AkEvent_Shouted3P) == 0x0100);
static_assert(offsetof(UBBQDialogComponent, AkEvent_Screamed3P) == 0x0108);
static_assert(offsetof(UBBQDialogComponent, CanHearAllCommsTag) == 0x0110);
static_assert(offsetof(UBBQDialogComponent, OwnerCharacter) == 0x0148);
static_assert(offsetof(UBBQDialogComponent, OwnerAkComponent) == 0x0150);
static_assert(offsetof(ABBQDoorBase, DestroyDoorInterruptDamageType) == 0x0250);
static_assert(offsetof(ABBQDoorBase, DestroyDoorInterruptDamageVar) == 0x0258);
static_assert(offsetof(ABBQDoorBase, DestroyDoorInterruptReactAnimSlot) == 0x02B0);
static_assert(offsetof(ABBQDoorBase, HandleLocator) == 0x02B8);
static_assert(offsetof(ABBQDoorBase, FrontOpenLocator) == 0x02C0);
static_assert(offsetof(ABBQDoorBase, FrontCloseLocator) == 0x02C8);
static_assert(offsetof(ABBQDoorBase, BackOpenLocator) == 0x02D0);
static_assert(offsetof(ABBQDoorBase, BackCloseLocator) == 0x02D8);
static_assert(offsetof(ABBQDoorBase, FrontSprintingLocator) == 0x02E0);
static_assert(offsetof(ABBQDoorBase, BackSprintingLocator) == 0x02E8);
static_assert(offsetof(ABBQDoorBase, FrontDamageLocator) == 0x02F0);
static_assert(offsetof(ABBQDoorBase, BackDamageLocator) == 0x02F8);
static_assert(offsetof(ABBQDoorBase, FrontDestroyLocator) == 0x0300);
static_assert(offsetof(ABBQDoorBase, BackDestroyLocator) == 0x0308);
static_assert(offsetof(ABBQDoorBase, FrontRetrieveLockAfterBargeLocator) == 0x0310);
static_assert(offsetof(ABBQDoorBase, BackRetrieveLockAfterBargeLocator) == 0x0318);
static_assert(offsetof(ABBQDoorBase, FrontBargeLocator) == 0x0320);
static_assert(offsetof(ABBQDoorBase, BackBargeLocator) == 0x0328);
static_assert(offsetof(ABBQDoorBase, SmartLink) == 0x0330);
static_assert(offsetof(ABBQDoorBase, NoiseComponent) == 0x0338);
static_assert(offsetof(ABBQDoorBase, LockLocators) == 0x0340);
static_assert(offsetof(ABBQDoorBase, FrameLockLocators) == 0x0350);
static_assert(offsetof(ABBQDoorBase, Door) == 0x0360);
static_assert(offsetof(ABBQDoorBase, DoorOverlap) == 0x0370);
static_assert(offsetof(ABBQDoorBase, AkPortalPtr) == 0x0378);
static_assert(offsetof(ABBQDoorBase, InteractionComponent) == 0x0390);
static_assert(offsetof(ABBQDoorBase, LockComponent) == 0x0398);
static_assert(offsetof(ABBQDoorBase, LockComponentV2) == 0x03A0);
static_assert(offsetof(ABBQDoorBase, GameplayTags) == 0x03B8);
static_assert(offsetof(ABBQDoorBase, LatchActor) == 0x03D8);
static_assert(offsetof(ABBQDoorBase, OpenDirection) == 0x03EA);
static_assert(offsetof(ABBQDoorBase, RearInteractingPlayer) == 0x0400);
static_assert(offsetof(ABBQDoorBase, RearAction) == 0x0408);
static_assert(offsetof(ABBQDoorBase, RearMiniGame) == 0x0410);
static_assert(offsetof(ABBQDoorBase, FrontInteractingPlayer) == 0x0418);
static_assert(offsetof(ABBQDoorBase, FrontAction) == 0x0420);
static_assert(offsetof(ABBQDoorBase, FrontMiniGame) == 0x0428);
static_assert(offsetof(FHingeDoorSoundState, AkEvent) == 0x0000);
static_assert(offsetof(FHingeDoorSoundState, IsLocalRtpc) == 0x0008);
static_assert(offsetof(FHingeDoorSoundState, World) == 0x0010);
static_assert(offsetof(FHingeDoorSoundState, RoomOverride) == 0x0018);
static_assert(offsetof(ABBQDoorHinge, DoubleDoor) == 0x0440);
static_assert(offsetof(ABBQDoorHinge, DoubleDoorOverlap) == 0x0448);
static_assert(offsetof(ABBQDoorHinge, DoubleHandleLocator) == 0x0450);
static_assert(offsetof(ABBQDoorHinge, BargeFinalAkEvent) == 0x0468);
static_assert(offsetof(ABBQDoorHinge, DoorSlicerComponent) == 0x0470);
static_assert(offsetof(ABBQDoorHinge, BargeMinigameClass) == 0x0478);
static_assert(offsetof(ABBQDoorHinge, BargeDoorWinEffect) == 0x0480);
static_assert(offsetof(ABBQDoorHinge, BargeDoorWinEffectDuration) == 0x0488);
static_assert(offsetof(ABBQDoorHinge, DoorSlamStunEffectClass) == 0x04A0);
static_assert(offsetof(ABBQDoorHinge, AnimationInfo) == 0x04A8);
static_assert(offsetof(ABBQDoorHinge, DelayTimer) == 0x04C8);
static_assert(offsetof(ABBQDoorHinge, SoundState) == 0x04D0);
static_assert(offsetof(ABBQDoorHinge, MiniGameStart) == 0x0518);
static_assert(offsetof(ABBQDoorHinge, OverlappingActors) == 0x0520);
static_assert(offsetof(ABBQDoorHinge, BargeDirection) == 0x0530);
static_assert(offsetof(ABBQDoorHinge, DestroyingActor) == 0x0538);
static_assert(offsetof(ABBQDoorHinge, BargingCharacter) == 0x0540);
static_assert(offsetof(FDoorSlicerStump, StumpMeshReference) == 0x0008);
static_assert(offsetof(FDoorSlicerParts, SliceVFXPathReference) == 0x0000);
static_assert(offsetof(FDoorSlicerParts, DoorSliceVFXPath) == 0x0028);
static_assert(offsetof(FDoorSlicerParts, SliceMeshReference) == 0x0030);
static_assert(offsetof(FDoorSlicerParts, DoorSliceMesh) == 0x0058);
static_assert(offsetof(FDoorSlicerParts, DoorSliceStumps) == 0x0060);
static_assert(offsetof(FDoorSlicerParts, DoorSliceDynamicMaterials) == 0x0080);
static_assert(offsetof(FDoorSlicerParts, DoorSliceProgressParamterMap) == 0x0090);
static_assert(offsetof(FDoorSlicerSmashable, SmashableComponents) == 0x0008);
static_assert(offsetof(FDoorSlicerSmashable, SmashableSliceDependencies) == 0x0018);
static_assert(offsetof(FDoorSlicerSmashable, SmashableForce) == 0x0028);
static_assert(offsetof(FDoorSlicerSmashable, SmashableVFX) == 0x0030);
static_assert(offsetof(UBBQDoorSlicerComponent, WoodchipParticles) == 0x00B0);
static_assert(offsetof(UBBQDoorSlicerComponent, DoorDestructionParticles) == 0x00B8);
static_assert(offsetof(UBBQDoorSlicerComponent, VFXDefaultFacingDirection) == 0x00C0);
static_assert(offsetof(UBBQDoorSlicerComponent, WoodchipParticleComponent) == 0x00D0);
static_assert(offsetof(UBBQDoorSlicerComponent, DoorSlices) == 0x00D8);
static_assert(offsetof(UBBQDoorSlicerComponent, SliceSequence) == 0x00E8);
static_assert(offsetof(UBBQDoorSlicerComponent, FinishedDoorSlices) == 0x00F8);
static_assert(offsetof(UBBQDoorSlicerComponent, DoorSmashables) == 0x0108);
static_assert(offsetof(UBBQDoorSlicerComponent, DoorFinalDestructibleActorTemplate) == 0x0118);
static_assert(offsetof(UBBQDoorSlicerComponent, FinalBreakVfxPivotOffset) == 0x0128);
static_assert(offsetof(FBBQ_SlidingAnimationRepInfo, AnimationCurve) == 0x0000);
static_assert(offsetof(ABBQDoorSliding, AnimTimeline) == 0x0440);
static_assert(offsetof(ABBQDoorSliding, LeatherfaceOpenRightCurve) == 0x0448);
static_assert(offsetof(ABBQDoorSliding, LeatherfaceCloseRightCurve) == 0x0450);
static_assert(offsetof(ABBQDoorSliding, LeatherfaceOpenLeftCurve) == 0x0458);
static_assert(offsetof(ABBQDoorSliding, LeatherfaceCloseLeftCurve) == 0x0460);
static_assert(offsetof(ABBQDoorSliding, FamilyOpenRightCurve) == 0x0468);
static_assert(offsetof(ABBQDoorSliding, FamilyCloseRightCurve) == 0x0470);
static_assert(offsetof(ABBQDoorSliding, FamilyOpenLeftCurve) == 0x0478);
static_assert(offsetof(ABBQDoorSliding, FamilyCloseLeftCurve) == 0x0480);
static_assert(offsetof(ABBQDoorSliding, VictimOpenRightCurve) == 0x0488);
static_assert(offsetof(ABBQDoorSliding, VictimCloseRightCurve) == 0x0490);
static_assert(offsetof(ABBQDoorSliding, VictimOpenLeftCurve) == 0x0498);
static_assert(offsetof(ABBQDoorSliding, VictimCloseLeftCurve) == 0x04A0);
static_assert(offsetof(ABBQDoorSliding, SlidingAnimationRepInfo) == 0x04B0);
static_assert(offsetof(FBBQElectroTrapInteractionSettings, InteractionMethod) == 0x0000);
static_assert(offsetof(FBBQElectroTrapInteractionSettings, AnimSlot) == 0x0001);
static_assert(offsetof(FBBQElectroTrapInteractionSettings, MontageToPlay) == 0x0008);
static_assert(offsetof(UBBQElectroTrapComponent, InteractionSettings) == 0x00D0);
static_assert(offsetof(UBBQElectroTrapComponent, BatteryInventoryItem) == 0x0110);
static_assert(offsetof(UBBQElectroTrapComponent, DisableBatteryInventoryItem) == 0x0118);
static_assert(offsetof(UBBQElectroTrapComponent, TrapOwner) == 0x0120);
static_assert(offsetof(UBBQElectroTrapComponent, TrapState) == 0x0128);
static_assert(offsetof(FEnvironmentDamageSettings, AttackMontage) == 0x0000);
static_assert(offsetof(FEnvironmentDamageSettings, AttackReference) == 0x0014);
static_assert(offsetof(FEnvironmentDamageSettings, AttackDirectionNormal) == 0x0018);
static_assert(offsetof(FEnvironmentDamageSettings, DecalSpawnProbabilityCurve) == 0x0048);
static_assert(offsetof(UBBQEnvironmentDamageSettings, EnvironmentAttackSettings) == 0x0030);
static_assert(offsetof(UBBQEnvironmentHitReceiver, SurfaceType) == 0x00B0);
static_assert(offsetof(FLockOnTargetVolumeInfo, LockOnBoxComponentRef) == 0x0000);
static_assert(offsetof(FLockOnTargetVolumeInfo, LockOnTargetSceneComponentRef) == 0x0028);
static_assert(offsetof(FLockOnTargetVolumeInfo, LockOnBoxComponent) == 0x0058);
static_assert(offsetof(FLockOnTargetVolumeInfo, LockOnTarget) == 0x0060);
static_assert(offsetof(ABBQEscapeZone, MainCollisionArea) == 0x0228);
static_assert(offsetof(ABBQEscapeZone, FamilyDeadzoneCollisionArea) == 0x0230);
static_assert(offsetof(ABBQEscapeZone, FamilyRotationDirection) == 0x0238);
static_assert(offsetof(ABBQEscapeZone, VictimRunDestination) == 0x0240);
static_assert(offsetof(ABBQEscapeZone, FamilyWalkBackDestination) == 0x0248);
static_assert(offsetof(ABBQEscapeZone, FamilySlowdownClass) == 0x0250);
static_assert(offsetof(ABBQEscapeZone, EscapedVictims) == 0x0268);
static_assert(offsetof(ABBQEscapeZone, EscapeZoneType) == 0x0278);
static_assert(offsetof(ABBQEscapeZone, LockOnOverrideVolumes) == 0x0280);
static_assert(offsetof(ABBQEscapeZone, EscapeZoneName) == 0x0290);
static_assert(offsetof(ABBQEscapeZone, EscapeZoneID) == 0x02A8);
static_assert(offsetof(ABBQEscapeZone, FamilyInsideVolume) == 0x02C8);
static_assert(offsetof(ABBQEscapeZone, SlowdownEffectQuery) == 0x02D8);
static_assert(offsetof(ABBQEscapeZone, PendingEscapeVictims) == 0x0428);
static_assert(offsetof(UBBQExecutionComponent, VictimEffect) == 0x00C8);
static_assert(offsetof(UBBQExecutionComponent, ExecutionDamageType) == 0x00D0);
static_assert(offsetof(UBBQExecutionComponent, ExecutionImmunityTags) == 0x00D8);
static_assert(offsetof(UBBQExecutionComponent, CachedVictim) == 0x0100);
static_assert(offsetof(ABBQFlickeringLight, LightMesh) == 0x0228);
static_assert(offsetof(ABBQFlickeringLight, AudioComponent) == 0x0248);
static_assert(offsetof(ABBQFlickeringLight, DynamicEmissiveMaterial) == 0x0250);
static_assert(offsetof(ABBQFlickeringLight, LightComponent) == 0x0258);
static_assert(offsetof(ABBQFlickeringLight, MeshComponent) == 0x0260);
static_assert(offsetof(ABBQFootprintClue, Root) == 0x0228);
static_assert(offsetof(ABBQFootprintClue, InteractionBox) == 0x0230);
static_assert(offsetof(ABBQFootprintClue, InteractionComponent) == 0x0238);
static_assert(offsetof(ABBQFootprintClue, ClueInfo) == 0x0240);
static_assert(offsetof(UBBQFootstepTrail, FootstepMaterial) == 0x00B0);
static_assert(offsetof(UBBQFootstepTrail, FootstepMaterialDynamic) == 0x00B8);
static_assert(offsetof(UBBQFootstepTrail, FootstepSize) == 0x00C0);
static_assert(offsetof(UBBQFootstepTrail, ForbiddenTags) == 0x00D0);
static_assert(offsetof(FFuseboxInteractionState, InteractingCharacter) == 0x0000);
static_assert(offsetof(FFuseboxInteractionState, Action) == 0x0008);
static_assert(offsetof(ABBQFuseBoxBase, FuseAmpValueRange) == 0x024C);
static_assert(offsetof(ABBQFuseBoxBase, FuseDataArray) == 0x0258);
static_assert(offsetof(ABBQFuseBoxBase, AMPValues) == 0x0268);
static_assert(offsetof(ABBQFuseBoxBase, SolutionColorIndexes) == 0x0278);
static_assert(offsetof(ABBQFuseBoxBase, MinigameStartForbiddenTags) == 0x0290);
static_assert(offsetof(ABBQFuseBoxBase, MinigameClass) == 0x02B0);
static_assert(offsetof(ABBQFuseBoxBase, MinigameInstance) == 0x02B8);
static_assert(offsetof(ABBQFuseBoxBase, RootSceneComponent) == 0x02C0);
static_assert(offsetof(ABBQFuseBoxBase, CameraComponent) == 0x02C8);
static_assert(offsetof(ABBQFuseBoxBase, FuseboxInteractionLocator) == 0x02D0);
static_assert(offsetof(ABBQFuseBoxBase, InteractionState) == 0x02E0);
static_assert(offsetof(FInputActionContainer, InputActions) == 0x0000);
static_assert(offsetof(FBBQMinigameState, ActiveTimerId) == 0x000C);
static_assert(offsetof(FBBQMinigameState, EndReason) == 0x000D);
static_assert(offsetof(FBBQMinigameNetState_FuseBox, FuseSlots) == 0x0000);
static_assert(offsetof(FBBQMinigameNetState_FuseBox, FreeFuses) == 0x0010);
static_assert(offsetof(FBBQMinigameNetState, BaseState) == 0x0008);
static_assert(offsetof(FBBQMinigameNetState, SweetSpotState) == 0x0018);
static_assert(offsetof(FBBQMinigameNetState, FuseBoxState) == 0x0020);
static_assert(offsetof(FBBQMinigameNetState, InteractionState) == 0x0050);
static_assert(offsetof(FBBQMinigameSavedState, NetState) == 0x0008);
static_assert(offsetof(FBBQMinigameInitialState, MinigameSettings) == 0x0008);
static_assert(offsetof(FBBQMinigameInitialState, SavedState) == 0x0010);
static_assert(offsetof(FBBQMinigameInitialState, MinigameInstigatorActor) == 0x0080);
static_assert(offsetof(ABBQMinigameV2, PlayingCharacterCameraState) == 0x0294);
static_assert(offsetof(ABBQMinigameV2, PrimaryAbilityActivationTags) == 0x02A0);
static_assert(offsetof(ABBQMinigameV2, GameplayComponentClass) == 0x02E0);
static_assert(offsetof(ABBQMinigameV2, MinigameInstigatorActorSkMeshComponentTag) == 0x02E8);
static_assert(offsetof(ABBQMinigameV2, MinigameSettings) == 0x02F0);
static_assert(offsetof(ABBQMinigameV2, ActionToValidate) == 0x02F8);
static_assert(offsetof(ABBQMinigameV2, TimeoutEndReason) == 0x0358);
static_assert(offsetof(ABBQMinigameV2, EffectsToApply) == 0x0360);
static_assert(offsetof(ABBQMinigameV2, InputActionOverrideMap) == 0x0378);
static_assert(offsetof(ABBQMinigameV2, AudioConfig) == 0x03D0);
static_assert(offsetof(ABBQMinigameV2, AudioPlayer) == 0x03D8);
static_assert(offsetof(ABBQMinigameV2, MinigameInstigatorActor) == 0x03E0);
static_assert(offsetof(ABBQMinigameV2, MinigameInstigatoSkMeshComponent) == 0x03E8);
static_assert(offsetof(ABBQMinigameV2, GameplayComponent) == 0x03F0);
static_assert(offsetof(ABBQMinigameV2, RandomStream) == 0x03F8);
static_assert(offsetof(ABBQMinigameV2, InitialState) == 0x0400);
static_assert(offsetof(ABBQMinigameV2, State) == 0x0488);
static_assert(offsetof(ABBQMinigameV2, EndReason) == 0x0498);
static_assert(offsetof(ABBQMinigameV2, ActiveMontage) == 0x0540);
static_assert(offsetof(ABBQFuseBoxMinigame, FuseAmpValueRange) == 0x058C);
static_assert(offsetof(ABBQFuseBoxMinigame, FuseDataArray) == 0x0598);
static_assert(offsetof(ABBQFuseBoxMinigame, AMPValues) == 0x05A8);
static_assert(offsetof(ABBQFuseBoxMinigame, SolutionColorIndexes) == 0x05B8);
static_assert(offsetof(ABBQFuseBoxMinigame, FuseBoxState) == 0x05C8);
static_assert(offsetof(ABBQFuseBoxMinigame, AuxFuseState) == 0x05F8);
static_assert(offsetof(FSpottingVFXProperties, TemplateIdle) == 0x0000);
static_assert(offsetof(FSpottingVFXProperties, TemplateNoiseDetected) == 0x0008);
static_assert(offsetof(FSpottingVFXProperties, TemplateFocusing) == 0x0010);
static_assert(offsetof(FSpottingVFXProperties, RotationVariableName) == 0x0018);
static_assert(offsetof(FSpottingVFXProperties, DirectionVariableName) == 0x0028);
static_assert(offsetof(FSpottingVFXProperties, SizeVariableName) == 0x0038);
static_assert(offsetof(FSpottingVFXProperties, ScaleVariableName) == 0x0048);
static_assert(offsetof(FSpottingVFXProperties, PositionOffset) == 0x0058);
static_assert(offsetof(FSpottingVFXProperties, ScaleCurve) == 0x0068);
static_assert(offsetof(FCookListenPostProcessProperties, Material) == 0x0000);
static_assert(offsetof(FCookListenPostProcessProperties, SizeParameterName) == 0x0008);
static_assert(offsetof(FCookListenPostProcessProperties, AngleVectorParameterName) == 0x0010);
static_assert(offsetof(FCookListenPostProcessProperties, AmplitudeVectorParameterName) == 0x0018);
static_assert(offsetof(FCookListenPostProcessProperties, OmniNoiseParameterName) == 0x0020);
static_assert(offsetof(FCookListenPostProcessProperties, SizeScaleCurve) == 0x0040);
static_assert(offsetof(FBBQNoiseTargetInfo, SpawnedVFX) == 0x0000);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, NoiseTargetVFXTemplate) == 0x0340);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, NoiseTargetDefaultColor) == 0x0348);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, NoiseTargetSpottedColor) == 0x0358);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, ColorVariableName) == 0x0368);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, SizeVariableName) == 0x0378);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, DistanceScaleCurve) == 0x0388);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, SpottingVFX) == 0x0390);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, SpottingPostProcess) == 0x0400);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, TargetingThreshold) == 0x0450);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, TargetingThresholdFocusing) == 0x04A8);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, TargetingRange) == 0x0500);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, HearingIntensityRTPC) == 0x0560);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, HearingHorizontalDirectionRTPC) == 0x0568);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, HearingVerticalDirectionRTPC) == 0x0570);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, Root) == 0x0580);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, NoiseTargetInfoMap) == 0x0588);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, SpottedActor) == 0x05D8);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, LastFocusActor) == 0x05E0);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, TargetDataHandle) == 0x05E8);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, VFX_Idle) == 0x0610);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, VFX_NoiseDetected) == 0x0618);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, VFX_Focusing) == 0x0620);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_CookListen, PPMaterial) == 0x0628);
static_assert(offsetof(FBBQFootprint, Location) == 0x0008);
static_assert(offsetof(FBBQFootprint, Direction) == 0x0014);
static_assert(offsetof(FBBQFootprint, OwnerCharacter) == 0x0020);
static_assert(offsetof(FBBQFootprintVisualData, DecalComponent) == 0x0000);
static_assert(offsetof(FBBQFootprintVisualData, VfxComponent) == 0x0008);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, Root) == 0x0340);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, ClueAnalysedTag) == 0x0348);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, ColouredTrailTag) == 0x0350);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, DecalMaterialMale) == 0x0358);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, DecalMaterialFemale) == 0x0360);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, DecalSize) == 0x0368);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, FootprintVfxSystemTemplate) == 0x0378);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, FootprintVfxScale) == 0x0380);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, ClueAnalysedAudioEvent) == 0x0398);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, PlayFollowingTrailLoopAudioEvent) == 0x03A0);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, StopFollowingTrailLoopAudioEvent) == 0x03A8);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, LockOnFootprintActorClass) == 0x03B0);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, LockOnFootprintActor) == 0x03C8);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, OwningAbilityCasted) == 0x03D0);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, SourceCharacter) == 0x03D8);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, ClueMap) == 0x03E0);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_Footprints, FootprintVisualDataArray) == 0x0430);
static_assert(offsetof(FBBQTargetActorMeshState, MaterialOverride) == 0x0008);
static_assert(offsetof(FBBQTargetActorMeshState, ParameterName) == 0x0014);
static_assert(offsetof(FBBQTargetActorMeshState, ParameterValue) == 0x001C);
static_assert(offsetof(FBBQTargetActorMeshState, StaticMeshComponent) == 0x0030);
static_assert(offsetof(FBBQTargetActorMeshState, Materials) == 0x0038);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_PlaceTrap, PlaceNotAllowedColor) == 0x0338);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_PlaceTrap, PlaceAllowedColor) == 0x0348);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_PlaceTrap, Root) == 0x0358);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_PlaceTrap, TrapCollision) == 0x0360);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_PlaceTrap, TrapMesh) == 0x0368);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_PlaceTrap, MaterialColorName) == 0x037C);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_PlaceTrap, FloorTraceChannel) == 0x0384);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_PlaceTrap, PlacementProfileName) == 0x0388);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_PlaceTrap, PlacementAllowedTag) == 0x0390);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_PlaceTrap, PlacementAllowedState) == 0x0398);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_PlaceTrap, PlacementNotAllowedState) == 0x03E0);
static_assert(offsetof(ABBQGameplayAbilityTargetActor_PlaceTrap, OwningAbilityPlaceTrap) == 0x0428);
static_assert(offsetof(UBBQLabelNotify, Label) == 0x0038);
static_assert(offsetof(UBBQGenericNotifyState, EventName) == 0x0030);
static_assert(offsetof(ABBQGameSessionCharacter, CameraBoom) == 0x0628);
static_assert(offsetof(ABBQGameSessionCharacter, FollowCamera) == 0x0630);
static_assert(offsetof(ABBQGameSessionCharacter, DefaultCameraShakesConfig) == 0x0640);
static_assert(offsetof(ABBQGameSessionCharacter, AkComponent) == 0x0690);
static_assert(offsetof(ABBQGameSessionCharacter, VictimExecuteFamilyBondActivityRow) == 0x0698);
static_assert(offsetof(ABBQGameSessionCharacter, TeammatesSeen) == 0x06B0);
static_assert(offsetof(ABBQGameSessionCharacter, DeadVictimsSeen) == 0x06C0);
static_assert(offsetof(ABBQGameSessionCharacter, BleedoutComponent) == 0x06D0);
static_assert(offsetof(ABBQGameSessionCharacter, DepthRenderingMeshComponent) == 0x06D8);
static_assert(offsetof(ABBQGameSessionCharacter, DraggingTag) == 0x06E0);
static_assert(offsetof(ABBQGameSessionCharacter, DraggedTag) == 0x06E8);
static_assert(offsetof(ABBQGameSessionCharacter, InteractionPreventedTag) == 0x06F4);
static_assert(offsetof(ABBQGameSessionCharacter, IncapacitatedRecoverAbilityTag) == 0x0708);
static_assert(offsetof(ABBQGameSessionCharacter, TrapAbilityActivationTag) == 0x0710);
static_assert(offsetof(ABBQGameSessionCharacter, ExhaustedTag) == 0x0718);
static_assert(offsetof(ABBQGameSessionCharacter, StuckInTrapTag) == 0x0720);
static_assert(offsetof(ABBQGameSessionCharacter, TrackingLookingForClues) == 0x0728);
static_assert(offsetof(ABBQGameSessionCharacter, ExhaustedEffectClass) == 0x0730);
static_assert(offsetof(ABBQGameSessionCharacter, PoisonedHitEffectClass) == 0x0738);
static_assert(offsetof(ABBQGameSessionCharacter, EscapedTag) == 0x0740);
static_assert(offsetof(ABBQGameSessionCharacter, Mercury_TrackingTag) == 0x0748);
static_assert(offsetof(ABBQGameSessionCharacter, Mercury_BloodlustTag) == 0x0750);
static_assert(offsetof(ABBQGameSessionCharacter, ActivityEventVictimLevel1) == 0x0758);
static_assert(offsetof(ABBQGameSessionCharacter, ActivityEventVictimLevel2) == 0x0768);
static_assert(offsetof(ABBQGameSessionCharacter, ActivityEventVictimLevel3) == 0x0778);
static_assert(offsetof(ABBQGameSessionCharacter, ActivityEventVictimLevel4) == 0x0788);
static_assert(offsetof(ABBQGameSessionCharacter, ActivityEventVictimLevel5) == 0x0798);
static_assert(offsetof(ABBQGameSessionCharacter, ActivityEventJohnnyLevel1) == 0x07A8);
static_assert(offsetof(ABBQGameSessionCharacter, ActivityEventJohnnyLevel2) == 0x07B8);
static_assert(offsetof(ABBQGameSessionCharacter, ActivityEventJohnnyLevel4) == 0x07C8);
static_assert(offsetof(ABBQGameSessionCharacter, HarvestTag) == 0x07D8);
static_assert(offsetof(ABBQGameSessionCharacter, PoisonedTag) == 0x07E0);
static_assert(offsetof(ABBQGameSessionCharacter, PoisonImmuneTag) == 0x07E8);
static_assert(offsetof(ABBQGameSessionCharacter, ConsumingItemTag) == 0x07F0);
static_assert(offsetof(ABBQGameSessionCharacter, StunnedTag) == 0x07F8);
static_assert(offsetof(ABBQGameSessionCharacter, StunnedLargeTag) == 0x0800);
static_assert(offsetof(ABBQGameSessionCharacter, StunEffectCurve) == 0x0808);
static_assert(offsetof(ABBQGameSessionCharacter, StunRTPC) == 0x0820);
static_assert(offsetof(ABBQGameSessionCharacter, StunPostProcessTimelineComponent) == 0x0840);
static_assert(offsetof(ABBQGameSessionCharacter, CharacterBehaviourComponent) == 0x0848);
static_assert(offsetof(ABBQGameSessionCharacter, CinematicCameraPlayerComponent) == 0x0850);
static_assert(offsetof(ABBQGameSessionCharacter, SpyHandlerComponent) == 0x0858);
static_assert(offsetof(ABBQGameSessionCharacter, MeleeBloodTrailDefinition) == 0x0860);
static_assert(offsetof(ABBQGameSessionCharacter, ControlScheme) == 0x0880);
static_assert(offsetof(ABBQGameSessionCharacter, MoveMode) == 0x08E4);
static_assert(offsetof(ABBQGameSessionCharacter, PairedAnimationComponent) == 0x08F8);
static_assert(offsetof(ABBQGameSessionCharacter, ProximityAreaComponent) == 0x0900);
static_assert(offsetof(ABBQGameSessionCharacter, BloodTrailComponent) == 0x0908);
static_assert(offsetof(ABBQGameSessionCharacter, AudioComp) == 0x0910);
static_assert(offsetof(ABBQGameSessionCharacter, DialogComponent) == 0x0918);
static_assert(offsetof(ABBQGameSessionCharacter, IsLocalRtpc) == 0x0920);
static_assert(offsetof(ABBQGameSessionCharacter, DamageTakenRtpc) == 0x0928);
static_assert(offsetof(ABBQGameSessionCharacter, HitMarkFP) == 0x0930);
static_assert(offsetof(ABBQGameSessionCharacter, HitMarkTP) == 0x0938);
static_assert(offsetof(ABBQGameSessionCharacter, HitMarkChainsawFP) == 0x0940);
static_assert(offsetof(ABBQGameSessionCharacter, HitMarkChainsawTP) == 0x0948);
static_assert(offsetof(ABBQGameSessionCharacter, HitMarkHapticsFP) == 0x0950);
static_assert(offsetof(ABBQGameSessionCharacter, MercuryFearAkEvent) == 0x0958);
static_assert(offsetof(ABBQGameSessionCharacter, FirstHitByLeatherfaceMusicSting) == 0x0960);
static_assert(offsetof(ABBQGameSessionCharacter, VelocityRtpc) == 0x0968);
static_assert(offsetof(ABBQGameSessionCharacter, HeartRateRtpc) == 0x0970);
static_assert(offsetof(ABBQGameSessionCharacter, StaminaRtpc) == 0x0978);
static_assert(offsetof(ABBQGameSessionCharacter, HealthRtpc) == 0x0980);
static_assert(offsetof(ABBQGameSessionCharacter, PlayerHealthPercentageRtpc) == 0x0988);
static_assert(offsetof(ABBQGameSessionCharacter, HeartrateAudioEvent) == 0x0990);
static_assert(offsetof(ABBQGameSessionCharacter, BreathingAudioEvent) == 0x0998);
static_assert(offsetof(ABBQGameSessionCharacter, OnSneakAttackedEvent) == 0x09A0);
static_assert(offsetof(ABBQGameSessionCharacter, SpottedBySonarEvent) == 0x09B0);
static_assert(offsetof(ABBQGameSessionCharacter, CharacterAudioSwitch) == 0x09B8);
static_assert(offsetof(ABBQGameSessionCharacter, CurrentSurfaceType) == 0x0A10);
static_assert(offsetof(ABBQGameSessionCharacter, CommUseAbilityBlocked_RequiredTags) == 0x0A18);
static_assert(offsetof(ABBQGameSessionCharacter, KickupSpawnOffset) == 0x0A94);
static_assert(offsetof(ABBQGameSessionCharacter, KickupSpawnRotation) == 0x0AA0);
static_assert(offsetof(ABBQGameSessionCharacter, StartingCosmeticsInfo) == 0x0AB0);
static_assert(offsetof(ABBQGameSessionCharacter, AppliedCosmeticsInfo) == 0x0AC0);
static_assert(offsetof(ABBQGameSessionCharacter, VisualDmgInstigatorComp) == 0x0AD0);
static_assert(offsetof(ABBQGameSessionCharacter, VisualDmgReceiverComp) == 0x0AD8);
static_assert(offsetof(ABBQGameSessionCharacter, FootstepTrailComponent) == 0x0AE0);
static_assert(offsetof(ABBQGameSessionCharacter, CameraStatesTable) == 0x0AF0);
static_assert(offsetof(ABBQGameSessionCharacter, InventoryTag) == 0x0AFC);
static_assert(offsetof(ABBQGameSessionCharacter, PlayerConsideredMovingTag) == 0x0B04);
static_assert(offsetof(ABBQGameSessionCharacter, LandingDamage) == 0x0B10);
static_assert(offsetof(ABBQGameSessionCharacter, DebugName) == 0x0B20);
static_assert(offsetof(ABBQGameSessionCharacter, MercuryFearDynamicMaterial) == 0x0B28);
static_assert(offsetof(ABBQGameSessionCharacter, HidingMaterial) == 0x0B68);
static_assert(offsetof(ABBQGameSessionCharacter, MercuryFearMaterial) == 0x0B70);
static_assert(offsetof(ABBQGameSessionCharacter, HidingDynamicMaterial) == 0x0B78);
static_assert(offsetof(ABBQGameSessionCharacter, DefaultMeshMaterials) == 0x0B80);
static_assert(offsetof(ABBQGameSessionCharacter, HidingTriggerTags) == 0x0BA0);
static_assert(offsetof(ABBQGameSessionCharacter, CurrentHidingSpot) == 0x0BC0);
static_assert(offsetof(ABBQGameSessionCharacter, CurrentlySearchedHidingSpot) == 0x0BD0);
static_assert(offsetof(ABBQGameSessionCharacter, CurrentPickupDispenser) == 0x0BD8);
static_assert(offsetof(ABBQGameSessionCharacter, ActiveMinigameV2) == 0x0BE0);
static_assert(offsetof(ABBQGameSessionCharacter, LastActiveMinigameV2) == 0x0BE8);
static_assert(offsetof(ABBQGameSessionCharacter, ProximityDynamicMaterial) == 0x0C00);
static_assert(offsetof(ABBQGameSessionCharacter, StunDynamicMaterial) == 0x0C08);
static_assert(offsetof(ABBQGameSessionCharacter, DisallowPlayerMovementTags) == 0x0C10);
static_assert(offsetof(ABBQGameSessionCharacter, DisallowCrouchTags) == 0x0C30);
static_assert(offsetof(ABBQGameSessionCharacter, NoiseSpottingImmuneTags) == 0x0C50);
static_assert(offsetof(ABBQGameSessionCharacter, HitCharacterIgnoreTunnelThrough) == 0x0C70);
static_assert(offsetof(ABBQGameSessionCharacter, FootprintMats) == 0x0C98);
static_assert(offsetof(ABBQGameSessionCharacter, FollowingTrailTag) == 0x0CBC);
static_assert(offsetof(ABBQGameSessionCharacter, CastHiddenShadowsTag) == 0x0CC4);
static_assert(offsetof(ABBQGameSessionCharacter, EnableProximityWarningForFamilyTag) == 0x0CD0);
static_assert(offsetof(ABBQGameSessionCharacter, ProximityWarningCurve) == 0x0CF0);
static_assert(offsetof(ABBQGameSessionCharacter, ProximityMaterial) == 0x0D00);
static_assert(offsetof(ABBQGameSessionCharacter, StunMaterial) == 0x0D08);
static_assert(offsetof(ABBQGameSessionCharacter, ProximityAudioEvent) == 0x0D18);
static_assert(offsetof(ABBQGameSessionCharacter, ProximityStingerAudioEvent) == 0x0D28);
static_assert(offsetof(ABBQGameSessionCharacter, ProximityRtpc) == 0x0D30);
static_assert(offsetof(ABBQGameSessionCharacter, AnimationSettingsAsset) == 0x0D38);
static_assert(offsetof(ABBQGameSessionCharacter, ExecutionSettingsAsset) == 0x0D40);
static_assert(offsetof(ABBQGameSessionCharacter, MainAnimInstance) == 0x0D48);
static_assert(offsetof(ABBQGameSessionCharacter, FullBodyAnimSlotName) == 0x0D50);
static_assert(offsetof(ABBQGameSessionCharacter, UpperBodyAnimSlotName) == 0x0D58);
static_assert(offsetof(ABBQGameSessionCharacter, MercuryDecreaseFearItems) == 0x0DE0);
static_assert(offsetof(ABBQGameSessionCharacter, VictimLowHealthLoop) == 0x0E08);
static_assert(offsetof(ABBQGameSessionCharacter, VictimLowHealthLoopStop) == 0x0E10);
static_assert(offsetof(ABBQGameSessionCharacter, VictimHealthNotify75) == 0x0E20);
static_assert(offsetof(ABBQGameSessionCharacter, VictimHealthNotify50) == 0x0E28);
static_assert(offsetof(ABBQGameSessionCharacter, VictimHealthNotify25) == 0x0E30);
static_assert(offsetof(ABBQGameSessionCharacter, VictimHealthNotifyDeath) == 0x0E38);
static_assert(offsetof(ABBQGameSessionCharacter, VictimWillToLive) == 0x0E40);
static_assert(offsetof(ABBQGameSessionCharacter, VictimIncapacitatedLoop) == 0x0E48);
static_assert(offsetof(ABBQGameSessionCharacter, HidingRTPCName) == 0x0E50);
static_assert(offsetof(ABBQGameSessionCharacter, LastKnownAttacker) == 0x0E78);
static_assert(offsetof(ABBQGameSessionCharacter, LastKnownDamageType) == 0x0E80);
static_assert(offsetof(ABBQGameSessionCharacter, ResumeCollisionWhenNotTouchingList) == 0x0ED8);
static_assert(offsetof(ABBQGameSessionCharacter, ContextSpecificCollisionIgnoreActorList) == 0x0F28);
static_assert(offsetof(ABBQGameSessionCharacter, BeingTrackedActivityEvent) == 0x0FC8);
static_assert(offsetof(ABBQGameSessionCharacter, CurrentTeamNearbyCharacters) == 0x0FD8);
static_assert(offsetof(ABBQGameSessionCharacter, OpponentTeamNearbyCharacters) == 0x0FE8);
static_assert(offsetof(ABBQGameSessionCharacter, TeamBoostNearbyCharacters) == 0x0FF8);
static_assert(offsetof(ABBQGameSessionCharacter, ProximityClosestCharacter) == 0x1008);
static_assert(offsetof(ABBQGameSessionCharacter, CharacterBeingFollowed) == 0x1010);
static_assert(offsetof(ABBQGameSessionCharacter, LineOfSightChannel) == 0x1038);
static_assert(offsetof(ABBQGameSessionCharacter, EnemyLOSTriggerPreventionTags) == 0x1040);
static_assert(offsetof(ABBQGameSessionCharacter, CurrentAssociatedEscapeZone) == 0x1060);
static_assert(offsetof(ABBQGameSessionCharacter, OverlappingPlayers) == 0x1068);
static_assert(offsetof(ABBQGameSessionCharacter, TimeBehindFamilyMembers) == 0x1098);
static_assert(offsetof(ABBQGameSessionCharacter, BloodlustVFXDynamicMaterial) == 0x11F0);
static_assert(offsetof(ABBQGameSessionCharacter, BloodlustVFXMaterial) == 0x11F8);
static_assert(offsetof(ABBQGameSessionCharacter, CarryingFullBloodVialEffect) == 0x1208);
static_assert(offsetof(ABBQGameSessionCharacter, MeleeImmunityEffectClass) == 0x1210);
static_assert(offsetof(ABBQGameSessionCharacter, IncapacitatedBehaviourClass) == 0x1218);
static_assert(offsetof(ABBQGameSessionCharacter, WrenchAttackBehaviourClass) == 0x1220);
static_assert(offsetof(ABBQGameSessionCharacter, TrapCurrentlyBeingCaughtIn) == 0x1230);
static_assert(offsetof(ABBQGameSessionCharacter, DoorThatStaggeredMe) == 0x1238);
static_assert(offsetof(ABBQGameSessionCharacter, LastBloodCollectionSource) == 0x1240);
static_assert(offsetof(ABBQGameSessionCharacter, ReplicatedCameraState) == 0x1244);
static_assert(offsetof(ABBQGameSessionCharacter, PerkAbilityInRangeTag) == 0x1268);
static_assert(offsetof(ABBQGameSessionCharacter, LifeSaverPerkTag) == 0x1270);
static_assert(offsetof(ABBQGameSessionCharacter, FocusedPerkTag) == 0x1278);
static_assert(offsetof(ABBQGameSessionCharacter, DoorUnlockMinigameActiveTag) == 0x1280);
static_assert(offsetof(ABBQGameSessionCharacter, StudyAndTamperPerkTag) == 0x1288);
static_assert(offsetof(ABBQGameSessionCharacter, MinigameActiveTag) == 0x1290);
static_assert(offsetof(ABBQGameSessionCharacter, AbilityActiveTags) == 0x1298);
static_assert(offsetof(ABBQGameSessionCharacter, RestoreSmallHealth) == 0x12D8);
static_assert(offsetof(ABBQGameSessionCharacter, RestoreLargeHealth) == 0x12E0);
static_assert(offsetof(ABBQGameSessionCharacter, Stance) == 0x12E9);
static_assert(offsetof(ABBQGameSessionCharacter, MovementState) == 0x12EC);
static_assert(offsetof(ABBQGameSessionCharacter, PrevMovementState) == 0x12F4);
static_assert(offsetof(ABBQGameSessionCharacter, MovementAction) == 0x12FC);
static_assert(offsetof(ABBQGameSessionCharacter, TargetRotation) == 0x1300);
static_assert(offsetof(ABBQGameSessionCharacter, BloodVialSize) == 0x1318);
static_assert(offsetof(ABBQGameSessionCharacter, BloodCollectedFromMeleeHit) == 0x1370);
static_assert(offsetof(ABBQGameSessionCharacter, BloodCollectedFromCloseEncounter) == 0x13C8);
static_assert(offsetof(ABBQGameSessionCharacter, BloodCollectedFromExecutionMultiplier) == 0x1420);
static_assert(offsetof(ABBQGameSessionCharacter, BloodCollectedFromLeatherfaceBarge) == 0x1478);
static_assert(offsetof(ABBQGameSessionCharacter, SidleSpeedPerkMultiplier) == 0x14D0);
static_assert(offsetof(ABBQGameSessionCharacter, BoltholeSpeedPerkMultiplier) == 0x1528);
static_assert(offsetof(ABBQGameSessionCharacter, SneakAttackStunDuration) == 0x1580);
static_assert(offsetof(ABBQGameSessionCharacter, DoorStaggerStunDuration) == 0x15D8);
static_assert(offsetof(ABBQGameSessionCharacter, CattleGridStunDuration) == 0x1630);
static_assert(offsetof(ABBQGameSessionCharacter, CurrentRoomTag) == 0x1688);
static_assert(offsetof(ABBQGameSessionCharacter, HealthState) == 0x1690);
static_assert(offsetof(ABBQGameSessionCharacter, PoisonedMovementCurve) == 0x1698);
static_assert(offsetof(ABBQGameSessionCharacter, CachedInventoryComponent) == 0x16A0);
static_assert(offsetof(UBBQBarbedWiredCheckNotifyState, AnimSlotToPlay) == 0x0030);
static_assert(offsetof(FBBQControlSchemeDefaults, Gait) == 0x0000);
static_assert(offsetof(FBBQControlSchemeDefaults, Stance) == 0x0001);
static_assert(offsetof(FBBQTraversalData, SlideToLocation) == 0x0000);
static_assert(offsetof(FBBQTraversalData, SlideToRotation) == 0x000C);
static_assert(offsetof(FBBQTraversalData, TraversalAnimSlot) == 0x0018);
static_assert(offsetof(FBBQTraversalData, FastTraversalAnimSlot) == 0x0019);
static_assert(offsetof(FBBQTraversalData, IntroSection) == 0x001C);
static_assert(offsetof(FBBQTraversalData, MainSection) == 0x0024);
static_assert(offsetof(FBBQTraversalData, OutroIdleSection) == 0x002C);
static_assert(offsetof(FBBQTraversalData, OutroDownedSection) == 0x0034);
static_assert(offsetof(FBBQDoorActionParams, Door) == 0x0000);
static_assert(offsetof(FBBQDoorActionParams, Montage) == 0x0008);
static_assert(offsetof(FBBQDoorActionParams, Type) == 0x0010);
static_assert(offsetof(FBBQDoorActionParams, Location) == 0x0014);
static_assert(offsetof(FBBQDoorActionParams, Rotation) == 0x0020);
static_assert(offsetof(FBBQMovementSettings, MovementCurve) == 0x0018);
static_assert(offsetof(FBBQMovementSettings, RotationRateCurve) == 0x0020);
static_assert(offsetof(FBBQMovementSettings, StrideBlendCurve) == 0x0028);
static_assert(offsetof(FBBQMovementSettings, GaitBlendCurve) == 0x0030);
static_assert(offsetof(FBBQMovementSettingsStance, Standing) == 0x0008);
static_assert(offsetof(FBBQMovementSettingsStance, Crouching) == 0x0040);
static_assert(offsetof(FBBQMovementSettingsState, VelocityDirection) == 0x0008);
static_assert(offsetof(FBBQMovementSettingsState, LookingDirection) == 0x0080);
static_assert(offsetof(FBBQMovementSettingsState, Aiming) == 0x00F8);
static_assert(offsetof(FBBQMovementSettingsState, DraggingVictim) == 0x0170);
static_assert(offsetof(FBBQAnimatedMontage, Type) == 0x0000);
static_assert(offsetof(FBBQAnimatedMontage, Montage) == 0x0008);
static_assert(offsetof(FBBQAnimatedMontage, StartingSection) == 0x0018);
static_assert(offsetof(FBBQAnimatedMontage, GrantedTags) == 0x0020);
static_assert(offsetof(FBBQAnimationData, StartLocation) == 0x0000);
static_assert(offsetof(FBBQAnimationData, EndLocation) == 0x000C);
static_assert(offsetof(FBBQAnimationData, ExitLocation) == 0x0018);
static_assert(offsetof(FBBQAnimationData, Rotation) == 0x0024);
static_assert(offsetof(FBBQAnimationData, TargetMovementState) == 0x0030);
static_assert(offsetof(FBBQWellData, Well) == 0x0000);
static_assert(offsetof(FBBQWellData, EnteringMethod) == 0x0008);
static_assert(offsetof(FBBQAnimationState, State) == 0x0000);
static_assert(offsetof(FBBQAnimationState, Data) == 0x0004);
static_assert(offsetof(FBBQAnimationState, WellData) == 0x0040);
static_assert(offsetof(FBBQDraggingInfo, DraggedPlayer) == 0x0000);
static_assert(offsetof(FBBQDraggingInfo, ContextualKillLocation) == 0x0008);
static_assert(offsetof(FBBQDraggingInfo, State) == 0x0010);
static_assert(offsetof(FBBQWellInfo, WellBeingUsed) == 0x0000);
static_assert(offsetof(FBBQWellInfo, WellEnteringMethod) == 0x0008);
static_assert(offsetof(FBBQWellInfo, UsingWellState) == 0x0009);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, ControlSchemeDefaults) == 0x16D0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, EscapeZoneRunDestination) == 0x16E8);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, TurnInPlaceForbiddingTags) == 0x1708);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, SprintTurnForbiddenTags) == 0x1728);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, TagsWhileStaggered) == 0x1748);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, RunningEffectClass) == 0x17A0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, SprintingEffectClass) == 0x17A8);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, DashingEffectClass) == 0x17B0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, WalkingEffectClass) == 0x17B8);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, DraggingEffectClass) == 0x17C0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, DraggingExhaustionEffectClass) == 0x17C8);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, StunnedEffectClass) == 0x17D0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, ReplicatedTraversalData) == 0x1824);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, TraversalCurrentActor) == 0x1870);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, RotationMode) == 0x188D);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, SecondaryRotationMode) == 0x188E);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, DefaultRotationMode) == 0x1894);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, Gait) == 0x1895);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, OverlayState) == 0x1896);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, PhysicsAnimComponent) == 0x1898);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, PlayerAcceleration) == 0x18A0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, LastVelocityRotation) == 0x18BC);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, LastMovementInputRotation) == 0x18C8);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, DoorAction) == 0x18E8);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, ExecutionLocation) == 0x1940);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, ExecutionRotation) == 0x194C);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, ExecutionActor) == 0x1960);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, ExecutionTransitionAnim) == 0x1968);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, NetworkExecutionState) == 0x1969);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, LocalExecutionState) == 0x196A);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, NetworkAnimationMontage) == 0x1978);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, AimingRotation) == 0x1980);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, CurrentEmotion) == 0x1998);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, CurrentMovementSettings) == 0x19B8);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, MovementData) == 0x19F0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, MovementModeData) == 0x1BD8);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, MovementModel) == 0x1BF0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, SidleAndClimbModel) == 0x1C00);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, SlideInPlaceTimeline) == 0x1C10);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, TurnInPlaceTimeline) == 0x1C18);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, TurnInPlaceCurveFloat) == 0x1C20);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, AnimatedMontage) == 0x1CA0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, DashCurve) == 0x1D28);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, SprintedRecentlyTag) == 0x1D30);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, LadderDismountReason) == 0x1D85);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, AnimationState) == 0x1DC0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, WindowDmgPlayerFallEffect) == 0x1E48);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, WindowDmgPlayerHigherFallEffect) == 0x1E50);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, WindowDmgBreakWindowEffect) == 0x1E58);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, BargeHitframeName) == 0x1E60);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, FallRecoveryTimeline) == 0x1E68);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, TakeDamageHandle) == 0x1E90);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, DoorActionTimerHandle) == 0x1E98);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, SlidingDoorOpenAudioTimerHandle) == 0x1EA0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, SlidingDoorCloseAudioTimerHandle) == 0x1EA8);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, BargeDoorTimerHandle) == 0x1EB0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, WellJumpIntoTimeline) == 0x1EC0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, WellClamberIntoTimeline) == 0x1F58);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, WellBeThrownIntoTimeline) == 0x1FF0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, WellInterruptionResponse) == 0x20C6);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, LastRagdollVelocity) == 0x20CC);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, ShardMesh) == 0x20E0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, EquippedExecution) == 0x2110);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, CurrentInteractableBeingUsed) == 0x2128);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, DraggedPlayer) == 0x2160);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, DraggingPlayer) == 0x2168);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, ReplicatedDraggingPlayer) == 0x2170);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, ReplicatedDraggingInfo) == 0x2178);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, FinalContextualKillLocation) == 0x2190);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, ReleasingPlayer) == 0x2198);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, ReplicatedWellBeingUsedInfo) == 0x21A0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, ReplicatedLadderClimbingState) == 0x21B0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, PerformingTraversalType) == 0x21B1);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, PerformTraversalSection) == 0x21B2);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, MaxCarryTime) == 0x21B8);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, WellRecoveryMontagePlayRate) == 0x2210);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, GrabTimerHandle) == 0x2270);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, DropTimerHandle) == 0x2278);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, RootBoneName) == 0x2280);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, PelvisBoneName) == 0x2288);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, TraversalCollisionChannel) == 0x2290);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, ReachedEscapeZone) == 0x22B0);
static_assert(offsetof(ABBQGameSessionCharacterAnimated, OriginalPhysicsAsset) == 0x22B8);
static_assert(offsetof(ABBQGameSessionGameMode, HUDClassSoftPtr) == 0x03E8);
static_assert(offsetof(ABBQGameSessionGameMode, PlayerRestrainer) == 0x0410);
static_assert(offsetof(ABBQGameSessionGameMode, AlwaysAppliedFamilyMottoPerks) == 0x0428);
static_assert(offsetof(ABBQGameSessionGameMode, BleedoutEffectClass) == 0x0438);
static_assert(offsetof(ABBQGameSessionGameMode, MultiplayerMinigameManagerV2) == 0x04B0);
static_assert(offsetof(ABBQGameSessionGameMode, PickupDistributorClass) == 0x04B8);
static_assert(offsetof(ABBQGameSessionGameMode, PickupDistributor) == 0x04C0);
static_assert(offsetof(FBBQMinigameInstigatorSavedState, SavedMinigameStateMap) == 0x0000);
static_assert(offsetof(ABBQGameSessionGameState, MatchResult) == 0x0622);
static_assert(offsetof(ABBQGameSessionGameState, GameplayVariableModStackComponent) == 0x0630);
static_assert(offsetof(ABBQGameSessionGameState, HasHearingAbilityTag) == 0x0650);
static_assert(offsetof(ABBQGameSessionGameState, MatchResultSwitchValues) == 0x0658);
static_assert(offsetof(ABBQGameSessionGameState, VictimEscapedAudioEvents) == 0x06A8);
static_assert(offsetof(ABBQGameSessionGameState, VictimKilledAudioEvents) == 0x06B8);
static_assert(offsetof(ABBQGameSessionGameState, VisualDamageInteractionMapping) == 0x06C8);
static_assert(offsetof(ABBQGameSessionGameState, VictimTrackerComponentClass) == 0x06D0);
static_assert(offsetof(ABBQGameSessionGameState, LastVictimStandingTag) == 0x06D8);
static_assert(offsetof(ABBQGameSessionGameState, LastVictimStandingEffect) == 0x06E0);
static_assert(offsetof(ABBQGameSessionGameState, DebugServerName) == 0x06F0);
static_assert(offsetof(ABBQGameSessionGameState, SavedMinigameInstigatorMap) == 0x0720);
static_assert(offsetof(ABBQGameSessionGameState, VictimTrackerComponent) == 0x07C0);
static_assert(offsetof(ABBQGameSessionGameState, CachedGrandpa) == 0x07C8);
static_assert(offsetof(ABBQGameSessionPlayerState, SneakAttackTargets) == 0x0BB8);
static_assert(offsetof(ABBQGameSessionPlayerState, LastControlledCharacter) == 0x0C28);
static_assert(offsetof(ABBQGameSessionPlayerState, ActivityEvents) == 0x0C30);
static_assert(offsetof(ABBQGameSessionPlayerState, OutlineInfoComponent) == 0x0C50);
static_assert(offsetof(FBBQGlobalOutlineRendererConfig, OwnerIgnoreTags) == 0x0000);
static_assert(offsetof(FBBQGlobalOutlineRendererConfig, OutlineInstancesIgnored) == 0x0020);
static_assert(offsetof(UBBQGameSessionProjectSettings, DefaultInteractionType) == 0x0028);
static_assert(offsetof(UBBQGameSessionProjectSettings, GlobalOutlineSettings) == 0x0030);
static_assert(offsetof(ABBQGameSessionWorldSettings, PickupDistributorClassOverride) == 0x03B0);
static_assert(offsetof(ABBQGenerator, GeneratorUser) == 0x0248);
static_assert(offsetof(ABBQGenerator, SwitchOnMinigame) == 0x0250);
static_assert(offsetof(ABBQGenerator, SwitchOnMinigameClass) == 0x0258);
static_assert(offsetof(FGrandpaFeedingInfo, CharacterFeedingBlood) == 0x0000);
static_assert(offsetof(FGrandpaFeedingInfo, LocatorBeingUsed) == 0x0008);
static_assert(offsetof(ABBQGrandpa, InteractWithMeSphere) == 0x2308);
static_assert(offsetof(ABBQGrandpa, PostitionCheckBox) == 0x2310);
static_assert(offsetof(ABBQGrandpa, CloseEncounterComponent) == 0x2318);
static_assert(offsetof(ABBQGrandpa, VisionPerceptionComponent) == 0x2320);
static_assert(offsetof(ABBQGrandpa, PerceptionStimuiSourceComponent) == 0x2328);
static_assert(offsetof(ABBQGrandpa, GrandpaAlertRange) == 0x2330);
static_assert(offsetof(ABBQGrandpa, Sight) == 0x2338);
static_assert(offsetof(ABBQGrandpa, SneakAttackAreaComponent) == 0x2340);
static_assert(offsetof(ABBQGrandpa, InstigatingActor) == 0x2348);
static_assert(offsetof(ABBQGrandpa, Locators) == 0x2350);
static_assert(offsetof(ABBQGrandpa, CooldownPerLevel) == 0x2368);
static_assert(offsetof(ABBQGrandpa, SpawnSettings) == 0x2378);
static_assert(offsetof(ABBQGrandpa, GrandFeedBloodEventName) == 0x237C);
static_assert(offsetof(ABBQGrandpa, ScreamAbilityTag) == 0x2384);
static_assert(offsetof(ABBQGrandpa, DetectionAbilityTag) == 0x238C);
static_assert(offsetof(ABBQGrandpa, BloodVialTag) == 0x2394);
static_assert(offsetof(ABBQGrandpa, ReadyToolTipText) == 0x23A0);
static_assert(offsetof(ABBQGrandpa, NotReadyToolTipText) == 0x23B8);
static_assert(offsetof(ABBQGrandpa, IncapacitatedToolTipText) == 0x23D0);
static_assert(offsetof(ABBQGrandpa, CooldownTag) == 0x23E8);
static_assert(offsetof(ABBQGrandpa, FeedGrandpaLocatorLeft) == 0x23F0);
static_assert(offsetof(ABBQGrandpa, FeedGrandpaLocatorRight) == 0x23F8);
static_assert(offsetof(ABBQGrandpa, FeedGrandpaLocatorLeftLF) == 0x2400);
static_assert(offsetof(ABBQGrandpa, FeedGrandpaLocatorRightLF) == 0x2408);
static_assert(offsetof(ABBQGrandpa, FeedingGrandpaTags) == 0x2410);
static_assert(offsetof(ABBQGrandpa, FeedingCooldownEffectClass) == 0x2438);
static_assert(offsetof(ABBQGrandpa, FeedingCooldownTag) == 0x2440);
static_assert(offsetof(ABBQGrandpa, CooldownEffectClass) == 0x2448);
static_assert(offsetof(ABBQGrandpa, IdleSFX) == 0x2450);
static_assert(offsetof(ABBQGrandpa, ScreamSFX) == 0x2458);
static_assert(offsetof(ABBQGrandpa, ScreamSFX_SweetTalked) == 0x2460);
static_assert(offsetof(ABBQGrandpa, DeathSFX) == 0x2468);
static_assert(offsetof(ABBQGrandpa, AlertedSFX) == 0x2470);
static_assert(offsetof(ABBQGrandpa, HalfAlertedSFX) == 0x2478);
static_assert(offsetof(ABBQGrandpa, BloodVialSmashSFX) == 0x2480);
static_assert(offsetof(ABBQGrandpa, BloodFeedStart) == 0x2488);
static_assert(offsetof(ABBQGrandpa, BloodFeedStop) == 0x2490);
static_assert(offsetof(ABBQGrandpa, SonarFirstPing) == 0x2498);
static_assert(offsetof(ABBQGrandpa, SonarRepeatingPing) == 0x24A0);
static_assert(offsetof(ABBQGrandpa, SonarRepeatingPing_SweetTalked) == 0x24A8);
static_assert(offsetof(ABBQGrandpa, SonarFeedbackLoopStart) == 0x24B0);
static_assert(offsetof(ABBQGrandpa, SonarFeedbackLoopStop) == 0x24B8);
static_assert(offsetof(ABBQGrandpa, SonarFamilyFeedbackLoopStart) == 0x24C0);
static_assert(offsetof(ABBQGrandpa, SonarFamilyFeedbackLoopStop) == 0x24C8);
static_assert(offsetof(ABBQGrandpa, SonarFeedbackLoopEnd) == 0x24D0);
static_assert(offsetof(ABBQGrandpa, SpottedNearbyVictimSFX) == 0x24E0);
static_assert(offsetof(ABBQGrandpa, ThreatRtpc) == 0x24E8);
static_assert(offsetof(ABBQGrandpa, IncapActivityEvent) == 0x24F0);
static_assert(offsetof(ABBQGrandpa, DetectedActivityEvent) == 0x2500);
static_assert(offsetof(ABBQGrandpa, FeedGrandpaActivityEvent) == 0x2510);
static_assert(offsetof(ABBQGrandpa, FeedCooldownEndActivityEvent) == 0x2520);
static_assert(offsetof(ABBQGrandpa, InDangerAlertActivityEvent) == 0x2530);
static_assert(offsetof(ABBQGrandpa, LineOfSightRaycastChannel) == 0x2551);
static_assert(offsetof(ABBQGrandpa, IgnoreDetectionTags) == 0x2570);
static_assert(offsetof(ABBQGrandpa, InterruptFeedingTags) == 0x2590);
static_assert(offsetof(ABBQGrandpa, IncapOutOfSection) == 0x25BC);
static_assert(offsetof(ABBQGrandpa, VictimsInVisionRange) == 0x25C8);
static_assert(offsetof(ABBQGrandpa, CurrentStateMontage) == 0x25F8);
static_assert(offsetof(ABBQGrandpa, GrandpaState) == 0x2620);
static_assert(offsetof(ABBQGrandpa, CurrentlyPerceivedActors) == 0x2638);
static_assert(offsetof(ABBQGrandpa, CrouchedActors) == 0x2648);
static_assert(offsetof(ABBQGrandpa, CurrentFeedingInfo) == 0x2658);
static_assert(offsetof(ABBQGrandpa, TargetTeam) == 0x2984);
static_assert(offsetof(ABBQGrandpa, OutlineConfig) == 0x2988);
static_assert(offsetof(ABBQGrandpa, OutlineConfigMarkedForDeath) == 0x2A20);
static_assert(offsetof(ABBQGrandpa, MarkedForDeathTag) == 0x2AB8);
static_assert(offsetof(ABBQGrandpa, AffectedByGrandpasSonarEffect) == 0x2AC0);
static_assert(offsetof(ABBQGrandpa, AffectedBySonarTag) == 0x2AC8);
static_assert(offsetof(ABBQGrandpa, AffectedBySonarDurationIdTag) == 0x2AD0);
static_assert(offsetof(ABBQGrandpa, SonarState) == 0x2AD8);
static_assert(offsetof(ABBQGrandpa, VictimsInActiveSonarRadius) == 0x2AE0);
static_assert(offsetof(ABBQGrandpa, VictimsDetectedInActiveSonarRadius) == 0x2AF0);
static_assert(offsetof(ABBQGrandpa, SonarDurationIgnoredPlayers) == 0x2B00);
static_assert(offsetof(ABBQGrandpaSneakAttackBehaviour, CameraState) == 0x02E8);
static_assert(offsetof(ABBQGrandpaSneakAttackBehaviour, SneakAttackAnimSlot) == 0x02F0);
static_assert(offsetof(ABBQGrandpaSneakAttackBehaviour, VictimCharacter) == 0x02F8);
static_assert(offsetof(ABBQGrandpaSneakAttackBehaviour, GrandpaCharacter) == 0x0300);
static_assert(offsetof(ABBQGrandpaSpawn, SpawnSettings) == 0x0228);
static_assert(offsetof(ABBQHarvestLocation, VictimLocator) == 0x0238);
static_assert(offsetof(ABBQHarvestLocation, FamilyLocator) == 0x0240);
static_assert(offsetof(ABBQHarvestLocation, BloodBucketLocator) == 0x0248);
static_assert(offsetof(ABBQHarvestLocation, FamilyEndFleeLocator) == 0x0250);
static_assert(offsetof(ABBQHarvestLocation, OutlineComponent) == 0x0258);
static_assert(offsetof(ABBQHarvestLocation, HarvestLocationMesh) == 0x0260);
static_assert(offsetof(ABBQHarvestLocation, InteractionBox) == 0x0268);
static_assert(offsetof(ABBQHarvestLocation, Interaction) == 0x0270);
static_assert(offsetof(ABBQHarvestLocation, InteractionEvent) == 0x0278);
static_assert(offsetof(ABBQHarvestLocation, InteractionEventAlreadyOccupied) == 0x0280);
static_assert(offsetof(ABBQHarvestLocation, InteractionEventRescueVictim) == 0x0288);
static_assert(offsetof(ABBQHarvestLocation, VictimEffectClass) == 0x0290);
static_assert(offsetof(ABBQHarvestLocation, FamilyEffectClass) == 0x0298);
static_assert(offsetof(ABBQHarvestLocation, BloodBucketClass) == 0x02A0);
static_assert(offsetof(ABBQHarvestLocation, StunnedEffectClass) == 0x02B0);
static_assert(offsetof(ABBQHarvestLocation, RecoveryEffectClass) == 0x02B8);
static_assert(offsetof(ABBQHarvestLocation, HarvestRestrainedTag) == 0x02C0);
static_assert(offsetof(ABBQHarvestLocation, HarvestVictimKnockedOutTag) == 0x02C8);
static_assert(offsetof(ABBQHarvestLocation, MarkedForDeathTag) == 0x02D0);
static_assert(offsetof(ABBQHarvestLocation, VictimEscapingHarvestEffectClass) == 0x02D8);
static_assert(offsetof(ABBQHarvestLocation, KnockoutTimeWhenPlaced) == 0x02E8);
static_assert(offsetof(ABBQHarvestLocation, KnockoutTimeAfterBloodLet) == 0x0340);
static_assert(offsetof(ABBQHarvestLocation, StunLineTraceChannel) == 0x039C);
static_assert(offsetof(ABBQHarvestLocation, AssociatedAnimSlotType) == 0x039E);
static_assert(offsetof(ABBQHarvestLocation, CameraSequenceRestrainVictim) == 0x03A0);
static_assert(offsetof(ABBQHarvestLocation, CameraSequenceRestrainFamily) == 0x03A8);
static_assert(offsetof(ABBQHarvestLocation, CameraSequenceIntoHarvestVictim) == 0x03B0);
static_assert(offsetof(ABBQHarvestLocation, CameraSequenceIntoHarvestFamily) == 0x03B8);
static_assert(offsetof(ABBQHarvestLocation, CameraSequenceFleeVictim) == 0x03C0);
static_assert(offsetof(ABBQHarvestLocation, CameraSequenceFleeFamily) == 0x03C8);
static_assert(offsetof(ABBQHarvestLocation, CameraSequenceExecuteVictim) == 0x03D0);
static_assert(offsetof(ABBQHarvestLocation, CameraSequenceExecuteFamily) == 0x03D8);
static_assert(offsetof(ABBQHarvestLocation, AttachedBloodBucket) == 0x03E8);
static_assert(offsetof(ABBQHarvestLocation, Family) == 0x03F0);
static_assert(offsetof(ABBQHarvestLocation, Victim) == 0x03F8);
static_assert(offsetof(FBBQHidingSpotCurves, EnterCurve) == 0x0000);
static_assert(offsetof(FBBQHidingSpotCurves, LeaveCurve) == 0x0008);
static_assert(offsetof(FBBQHidingSpotCurves, BurstOutCurve) == 0x0010);
static_assert(offsetof(FBBQHidingSpotCurves, SearchFailDefaultCurve) == 0x0018);
static_assert(offsetof(FBBQHidingSpotCurves, SearchFailCurveBySearchingCharacter) == 0x0020);
static_assert(offsetof(FBBQHidingSpotCurves, SearchSuccessDefaultCurve) == 0x0070);
static_assert(offsetof(FBBQHidingSpotCurves, SearchSuccessCurveBySearchingCharacter) == 0x0078);
static_assert(offsetof(FHidingPlayerCameraInfo, HidingPlayerLocation) == 0x0000);
static_assert(offsetof(FHidingPlayerCameraInfo, HidingPlayerRotation) == 0x000C);
static_assert(offsetof(FHidingCharacterInfo, HidingCharacter) == 0x0000);
static_assert(offsetof(FHidingCharacterInfo, CurrentState) == 0x0008);
static_assert(offsetof(ABBQHidingSpot, HidingCharacter) == 0x02E8);
static_assert(offsetof(ABBQHidingSpot, RootSceneComponent) == 0x02F8);
static_assert(offsetof(ABBQHidingSpot, OutPosition) == 0x0300);
static_assert(offsetof(ABBQHidingSpot, ArrowOut) == 0x0308);
static_assert(offsetof(ABBQHidingSpot, HidingLocator) == 0x0310);
static_assert(offsetof(ABBQHidingSpot, ArrowHidingLocator) == 0x0318);
static_assert(offsetof(ABBQHidingSpot, BurstOutStartLocator) == 0x0320);
static_assert(offsetof(ABBQHidingSpot, ArrowBurstOutStartLocator) == 0x0328);
static_assert(offsetof(ABBQHidingSpot, AutoAddTagForLineOfSightCheck) == 0x0330);
static_assert(offsetof(ABBQHidingSpot, DoorMesh) == 0x0338);
static_assert(offsetof(ABBQHidingSpot, CameraOriginLocator) == 0x0340);
static_assert(offsetof(ABBQHidingSpot, CameraComponent) == 0x0348);
static_assert(offsetof(ABBQHidingSpot, SplineCameraVolumeComponent) == 0x0350);
static_assert(offsetof(ABBQHidingSpot, SplineCameraVolumeSpline) == 0x0358);
static_assert(offsetof(ABBQHidingSpot, SplineCameraVolumeCollision) == 0x0360);
static_assert(offsetof(ABBQHidingSpot, InteractionBox) == 0x0368);
static_assert(offsetof(ABBQHidingSpot, PositionBox) == 0x0370);
static_assert(offsetof(ABBQHidingSpot, InteractionComponent) == 0x0378);
static_assert(offsetof(ABBQHidingSpot, InteractionLocator) == 0x0380);
static_assert(offsetof(ABBQHidingSpot, ArrowInteractionLocator) == 0x0388);
static_assert(offsetof(ABBQHidingSpot, SearchInteractionLocator) == 0x0390);
static_assert(offsetof(ABBQHidingSpot, SearchInteractionLocatorLeatherface) == 0x0398);
static_assert(offsetof(ABBQHidingSpot, ArrowSearchInteractionLocator) == 0x03A0);
static_assert(offsetof(ABBQHidingSpot, ArrowSearchInteractionLocatorLeatherface) == 0x03A8);
static_assert(offsetof(ABBQHidingSpot, InteractionLocatorByCharacter) == 0x03B0);
static_assert(offsetof(ABBQHidingSpot, SearchInteractionLocatorByCharacter) == 0x0400);
static_assert(offsetof(ABBQHidingSpot, HidingLocatorByCharacter) == 0x0450);
static_assert(offsetof(ABBQHidingSpot, BurstOutStartLocatorByCharacter) == 0x04A0);
static_assert(offsetof(ABBQHidingSpot, OutPositionLocatorByCharacter) == 0x04F0);
static_assert(offsetof(ABBQHidingSpot, SearchingCharacter) == 0x0540);
static_assert(offsetof(ABBQHidingSpot, TraversalChannel) == 0x0548);
static_assert(offsetof(ABBQHidingSpot, HidingCharacterCachedResponses) == 0x0549);
static_assert(offsetof(ABBQHidingSpot, HidingSpotType) == 0x05B7);
static_assert(offsetof(ABBQHidingSpot, SlowEnterHidingSpotAnimSlot) == 0x05B8);
static_assert(offsetof(ABBQHidingSpot, FastEnterHidingSpotAnimSlot) == 0x05B9);
static_assert(offsetof(ABBQHidingSpot, LeaveHidingSpotAnimSlot) == 0x05BA);
static_assert(offsetof(ABBQHidingSpot, DyingLeaveHidingSpotAnimSlot) == 0x05BB);
static_assert(offsetof(ABBQHidingSpot, BurstOutOfHidingSpotAnimSlot) == 0x05BC);
static_assert(offsetof(ABBQHidingSpot, SearchFailHidingSpotAnimSlot) == 0x05BD);
static_assert(offsetof(ABBQHidingSpot, SearchSuccessHidingSpotAnimSlot) == 0x05BE);
static_assert(offsetof(ABBQHidingSpot, DraggedOutOfHidingSpotAnimSlot) == 0x05BF);
static_assert(offsetof(ABBQHidingSpot, DraggedOutOfHidingSpotAnimSlotByCharacter) == 0x05C0);
static_assert(offsetof(ABBQHidingSpot, GrabbedWhileEnteringHidingSpotAnimSlot) == 0x0610);
static_assert(offsetof(ABBQHidingSpot, GrabEnteringCharacterHidingSpotAnimSlot) == 0x0611);
static_assert(offsetof(ABBQHidingSpot, GrabbedWhileLeavingHidingSpotAnimSlot) == 0x0612);
static_assert(offsetof(ABBQHidingSpot, GrabLeavingCharacterHidingSpotAnimSlot) == 0x0613);
static_assert(offsetof(ABBQHidingSpot, DefaultCurveSet) == 0x0618);
static_assert(offsetof(ABBQHidingSpot, CurveSetByHidingCharacter) == 0x06E0);
static_assert(offsetof(ABBQHidingSpot, AnimTimeline) == 0x0730);
static_assert(offsetof(ABBQHidingSpot, EnteringAkEvent) == 0x0738);
static_assert(offsetof(ABBQHidingSpot, EnterAkEvent) == 0x0740);
static_assert(offsetof(ABBQHidingSpot, ExitAkEvent) == 0x0748);
static_assert(offsetof(ABBQHidingSpot, BurstOutAkEvent) == 0x0750);
static_assert(offsetof(ABBQHidingSpot, OpenAkEvent) == 0x0758);
static_assert(offsetof(ABBQHidingSpot, AmbientAkEvent) == 0x0760);
static_assert(offsetof(ABBQHidingSpot, SearchAkEvent) == 0x0768);
static_assert(offsetof(ABBQHidingSpot, SearchSuccessfulAkEvent) == 0x0770);
static_assert(offsetof(ABBQHidingSpot, PanicBeginAkEvent) == 0x0778);
static_assert(offsetof(ABBQHidingSpot, PanicEndAkEvent) == 0x0780);
static_assert(offsetof(ABBQHidingSpot, OnForcedOutOfHidingAkEvent) == 0x0788);
static_assert(offsetof(ABBQHidingSpot, PanicBreathVolumeRTPC) == 0x0790);
static_assert(offsetof(ABBQHidingSpot, HiddenFocusRTPC) == 0x0798);
static_assert(offsetof(ABBQHidingSpot, InHidingSpotTags) == 0x07A8);
static_assert(offsetof(ABBQHidingSpot, TagsWhilstSearching) == 0x07C8);
static_assert(offsetof(ABBQHidingSpot, IsHidingTag) == 0x07E8);
static_assert(offsetof(ABBQHidingSpot, StunnedEffectClass) == 0x07F0);
static_assert(offsetof(ABBQHidingSpot, VictimFoundFamilyBondActivityRow) == 0x0800);
static_assert(offsetof(ABBQHidingSpot, GameplayTags) == 0x0820);
static_assert(offsetof(ABBQHidingSpot, EnteringHidingSpotCameraStateName) == 0x0840);
static_assert(offsetof(ABBQHidingSpot, DiscoveredDamage) == 0x0870);
static_assert(offsetof(ABBQHidingSpot, GrabDamage) == 0x08C8);
static_assert(offsetof(ABBQHidingSpot, DiscoveredDamageType) == 0x0920);
static_assert(offsetof(ABBQHidingSpot, GrabbedDamageType) == 0x0928);
static_assert(offsetof(ABBQHidingSpot, HidingPlayerCameraInfo) == 0x0940);
static_assert(offsetof(ABBQHidingSpot, HidingCharacterInfo) == 0x0958);
static_assert(offsetof(UBBQHidingVictimProximityComponent, HidingVolumeCurveFloat) == 0x0480);
static_assert(offsetof(UBBQHidingVictimProximityComponent, VictimsInHidingVolumes) == 0x0488);
static_assert(offsetof(ABBQHidingVolume, Root) == 0x0228);
static_assert(offsetof(ABBQHidingVolume, HidingVolumeComponent) == 0x0230);
static_assert(offsetof(ABBQHidingVolume, VolumeCollision) == 0x0238);
static_assert(offsetof(ABBQHidingVolume, HidingMovementStartAudioEvent) == 0x0240);
static_assert(offsetof(ABBQHidingVolume, HidingMovementStopAudioEvent) == 0x0248);
static_assert(offsetof(UBBQHidingVolumeComponent, PlayersInHidingVolume) == 0x00C8);
static_assert(offsetof(UBBQHidingVolumeComponent, PrimitiveComponents) == 0x00D8);
static_assert(offsetof(UBBQHidingVolumeComponent, CameraStateHidingName) == 0x00F0);
static_assert(offsetof(UBBQHidingVolumeComponent, PrimitiveComponentsOverlappingPlayer) == 0x00F8);
static_assert(offsetof(FBBQLevelSequenceAnimOverride, Overrides) == 0x0000);
static_assert(offsetof(ABBQImposter, AssociatedPlayerName) == 0x0228);
static_assert(offsetof(ABBQImposter, LevelSequenceAnimOverrides) == 0x0238);
static_assert(offsetof(FIncapAnimSlotSet, CameraSetup) == 0x0000);
static_assert(offsetof(FIncapAnimSlotSet, DownAnimSlot_Stationary) == 0x0048);
static_assert(offsetof(FIncapAnimSlotSet, DownAnimSlot_Moving) == 0x0049);
static_assert(offsetof(FIncapAnimSlotSet, ToNeutralAnimSlot) == 0x004A);
static_assert(offsetof(FIncapResponse, Name) == 0x0000);
static_assert(offsetof(FIncapResponse, InResponseToTags) == 0x0018);
static_assert(offsetof(FIncapResponse, CharacterRequiredTags) == 0x0038);
static_assert(offsetof(FIncapResponse, CharacterForbiddenTags) == 0x0058);
static_assert(offsetof(FIncapResponse, IncapAnimSlotSets) == 0x0078);
static_assert(offsetof(UIncapResponseTable, IncapResponses) == 0x0030);
static_assert(offsetof(ABBQIncapacitatedBehaviour, CurrentAnimMontageForTimeout) == 0x02F0);
static_assert(offsetof(ABBQIncapacitatedBehaviour, PreviousTickAnimMontage) == 0x02F8);
static_assert(offsetof(ABBQIncapacitatedBehaviour, IncapacitationRestoreEffect) == 0x0318);
static_assert(offsetof(ABBQIncapacitatedBehaviour, BleedingOutEffect) == 0x0320);
static_assert(offsetof(ABBQIncapacitatedBehaviour, GatherStrengthAnimSlot) == 0x0328);
static_assert(offsetof(ABBQIncapacitatedBehaviour, IncapResponseTable) == 0x0330);
static_assert(offsetof(ABBQIncapacitatedBehaviour, ChosenDownAnimSlot) == 0x0348);
static_assert(offsetof(ABBQIncapacitatedBehaviour, ChosenToNeutralAnimSlot) == 0x0349);
static_assert(offsetof(ABBQIncapacitatedBehaviour, ChosenIncapResponseDirection) == 0x0350);
static_assert(offsetof(ABBQIncapacitatedBehaviour, IncapacitatedTransform) == 0x0360);
static_assert(offsetof(ABBQIncapacitatedBehaviour, SequencePlayer) == 0x0398);
static_assert(offsetof(ABBQIncapacitatedBehaviour, SequenceActor) == 0x03A0);
static_assert(offsetof(ABBQIncapacitatedBehaviour, ActiveIncapRecoveryEffectHandle) == 0x03A8);
static_assert(offsetof(ABBQIncapacitatedBehaviour, ActiveBleedOutEffectHandle) == 0x03B0);
static_assert(offsetof(UBBQInteractionComponent, AutoAddTagForInteractivePrims) == 0x00E0);
static_assert(offsetof(UBBQInteractionComponent, AutoAddTagForPositionCheckPrims) == 0x00E8);
static_assert(offsetof(UBBQInteractionComponent, AutoAddTagForLineOfSightCheck) == 0x00F0);
static_assert(offsetof(UBBQInteractionComponent, AutoAddTagForUILocation) == 0x00F8);
static_assert(offsetof(UBBQInteractionComponent, AlignmentCheck) == 0x0118);
static_assert(offsetof(UBBQInteractionComponent, InteractivePrimatives) == 0x0128);
static_assert(offsetof(UBBQInteractionComponent, PositionCheckPrimatives) == 0x0138);
static_assert(offsetof(UBBQInteractionComponent, LineOfSightTargets) == 0x0148);
static_assert(offsetof(UBBQInteractionComponent, UILocations) == 0x0158);
static_assert(offsetof(UBBQInteractionComponent, OverlappingCharacters) == 0x0168);
static_assert(offsetof(UBBQInteractionComponent, BlueprintInteractingActors) == 0x0178);
static_assert(offsetof(UBBQInteractionComponent, CurrentlyHoldingInteractor) == 0x0188);
static_assert(offsetof(UBBQInteractionComponent, NoiseOutlineComponent) == 0x0260);
static_assert(offsetof(ABBQInteractionMinigame, MaxNoiseEndReason) == 0x0581);
static_assert(offsetof(ABBQInteractionMinigame, InteractionState) == 0x0584);
static_assert(offsetof(ABBQInteractionMinigame, CachedGC_Interaction) == 0x05A0);
static_assert(offsetof(ABBQInteractionMinigame_DoorUnlock, SweetSpotAngleStream) == 0x05A8);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, OnStarted) == 0x0030);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, PrimaryAbilityUsed) == 0x00A8);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, SectionCompleted) == 0x00D0);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, Tap) == 0x00F8);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, SweetSpotHit) == 0x0120);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, MovementLoopStart) == 0x0148);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, MovementLoopStop) == 0x0170);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, MovementRtpc) == 0x0198);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, ProgressLoopStart) == 0x01A8);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, ProgressLoopStop) == 0x01D0);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, ProgressRtpc) == 0x01F8);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, NoiseLoopStart) == 0x0208);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, NoiseLoopStop) == 0x0230);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, NoiseLevelRtpc) == 0x0258);
static_assert(offsetof(UBBQInteractionMinigameAudioDataAsset, NoiseAlertOneShot) == 0x0268);
static_assert(offsetof(UBBQInteractionMinigameAudioPlayer, Config) == 0x0028);
static_assert(offsetof(UBBQInteractionMinigameAudioPlayer, Character) == 0x0030);
static_assert(offsetof(UBBQInteractionType, RequiredTags) == 0x0028);
static_assert(offsetof(UBBQInteractionType, ForbiddenTags) == 0x0088);
static_assert(offsetof(UBBQInteractionType, OwnerRequiredTags) == 0x00E8);
static_assert(offsetof(UBBQInteractionType, OwnerForbiddenTags) == 0x0148);
static_assert(offsetof(FLightSourceMaterialInfo, MaterialInterface) == 0x0008);
static_assert(offsetof(FLightSourceInteraction, InteractingPlayer) == 0x0000);
static_assert(offsetof(FLightSourceInteraction, FinalState) == 0x0008);
static_assert(offsetof(ABBQInteractiveLightSource, PointLightComponent) == 0x0238);
static_assert(offsetof(ABBQInteractiveLightSource, LightSourceMeshComponent) == 0x0240);
static_assert(offsetof(ABBQInteractiveLightSource, InteractionArea) == 0x0248);
static_assert(offsetof(ABBQInteractiveLightSource, PositionCheckBox) == 0x0250);
static_assert(offsetof(ABBQInteractiveLightSource, ExplodeTimelineComponent) == 0x0258);
static_assert(offsetof(ABBQInteractiveLightSource, AkComponent) == 0x0260);
static_assert(offsetof(ABBQInteractiveLightSource, ExplodeCurve) == 0x0268);
static_assert(offsetof(ABBQInteractiveLightSource, RootSceneComponent) == 0x0270);
static_assert(offsetof(ABBQInteractiveLightSource, MaterialAppliedOn) == 0x0278);
static_assert(offsetof(ABBQInteractiveLightSource, MaterialAppliedOff) == 0x0288);
static_assert(offsetof(ABBQInteractiveLightSource, LinkedHidingVolumes) == 0x0298);
static_assert(offsetof(ABBQInteractiveLightSource, StunEffectClass) == 0x02A8);
static_assert(offsetof(ABBQInteractiveLightSource, LightOnEvent) == 0x02B0);
static_assert(offsetof(ABBQInteractiveLightSource, LightOffEvent) == 0x02B8);
static_assert(offsetof(ABBQInteractiveLightSource, LightTrappedEvent) == 0x02C0);
static_assert(offsetof(ABBQInteractiveLightSource, LightExplodeEvent) == 0x02C8);
static_assert(offsetof(ABBQInteractiveLightSource, LightOnLoopEvent) == 0x02D0);
static_assert(offsetof(ABBQInteractiveLightSource, LightsOnOffMontageSlot) == 0x02DE);
static_assert(offsetof(ABBQInteractiveLightSource, IgnoreStunTags) == 0x02E0);
static_assert(offsetof(ABBQInteractiveLightSource, CurrentState) == 0x0300);
static_assert(offsetof(ABBQInteractiveLightSource, StunnedCharacter) == 0x0308);
static_assert(offsetof(ABBQInteractiveLightSource, InteractionState) == 0x0318);
static_assert(offsetof(ABBQInteractiveLightSource, SetLightStateTimerHandle) == 0x0328);
static_assert(offsetof(FInteractionPrimativePair, InteractionComponent) == 0x0000);
static_assert(offsetof(FInteractionPrimativePair, PrimitiveComponent) == 0x0008);
static_assert(offsetof(FInteractionAvailabilityEventData, InteractionEventComponent) == 0x0000);
static_assert(offsetof(FInteractionAvailabilityData, InteractionComponent) == 0x0000);
static_assert(offsetof(FInteractionAvailabilityData, EventAvailabiltyData) == 0x0030);
static_assert(offsetof(FInteractionAvailabilityData, InteractionMethodToAvailableEventMap_Press) == 0x0088);
static_assert(offsetof(FInteractionAvailabilityData, InteractionMethodToAvailableEventMap_Hold) == 0x00D8);
static_assert(offsetof(UBBQInteractorComponent, InteractionPreventionTags) == 0x0490);
static_assert(offsetof(UBBQInteractorComponent, UIActorClass) == 0x04C0);
static_assert(offsetof(UBBQInteractorComponent, OverlappedInteractionPrims) == 0x0520);
static_assert(offsetof(UBBQInteractorComponent, AvailabilityDataMap) == 0x0580);
static_assert(offsetof(UBBQInteractorComponent, UIActorInstances) == 0x05D0);
static_assert(offsetof(UBBQInteractorComponent, CurrentlySelectedInteractable) == 0x0620);
static_assert(offsetof(UBBQInteractorComponent, CurrentlyHeldInteractable) == 0x0628);
static_assert(offsetof(UBBQInventoryContainerWidget, InventoryGrid) == 0x0260);
static_assert(offsetof(UBBQInventorySlotWidget, ItemIcon) == 0x0260);
static_assert(offsetof(UBBQInventorySlotWidget, EmptyItemTexture) == 0x0268);
static_assert(offsetof(UBBQInventorySlotWidget, SelectedBorder) == 0x0270);
static_assert(offsetof(UBBQInventoryWidget, InventoryContainerWidget) == 0x0260);
static_assert(offsetof(FLadderInteractionInfo, InteractingCharacter) == 0x0000);
static_assert(offsetof(FLadderInteractionInfo, TargetState) == 0x0008);
static_assert(offsetof(FBBQLadderEnterTopCorrectionInfo, CharacterName) == 0x0000);
static_assert(offsetof(ABBQLadder, InteractionInfo) == 0x0258);
static_assert(offsetof(ABBQLadder, EntryBottom) == 0x0268);
static_assert(offsetof(ABBQLadder, ExitBottom) == 0x0270);
static_assert(offsetof(ABBQLadder, EntryTop) == 0x0278);
static_assert(offsetof(ABBQLadder, ExitTop) == 0x0280);
static_assert(offsetof(ABBQLadder, SmartLink) == 0x0288);
static_assert(offsetof(ABBQLadder, FamilyGrabbingPosition) == 0x0290);
static_assert(offsetof(ABBQLadder, VictimGrabbingPosition) == 0x0298);
static_assert(offsetof(ABBQLadder, InteractionCollisionBox) == 0x02A0);
static_assert(offsetof(ABBQLadder, Interaction) == 0x02A8);
static_assert(offsetof(ABBQLadder, InteractionEvent) == 0x02B0);
static_assert(offsetof(ABBQLadder, LadderType) == 0x02B8);
static_assert(offsetof(ABBQLadder, BlockerName) == 0x02BC);
static_assert(offsetof(ABBQLadder, UnfoldMinigameClass) == 0x02D8);
static_assert(offsetof(ABBQLadder, UnfoldMinigameInstance) == 0x02E0);
static_assert(offsetof(ABBQLadder, wpCurrentInstigatorPlayer) == 0x02E8);
static_assert(offsetof(ABBQLadder, GrabMeleeImmunityTag) == 0x02FC);
static_assert(offsetof(ABBQLadder, FamilyMeleeBlockingTag) == 0x0304);
static_assert(offsetof(ABBQLadder, LadderGrabbingMontage_Master) == 0x0310);
static_assert(offsetof(ABBQLadder, LadderGrabbingMontage_Slave) == 0x0318);
static_assert(offsetof(ABBQLadder, EnterTopCorrectionInfo) == 0x0320);
static_assert(offsetof(ABBQLadder, EnterBottomCorrectionInfo) == 0x0330);
static_assert(offsetof(ABBQLadder, LadderUnfoldLocator) == 0x0348);
static_assert(offsetof(ABBQLadder, LadderPlayers) == 0x0350);
static_assert(offsetof(ABBQLadder, SortedPlayerArrayCache) == 0x03A0);
static_assert(offsetof(ABBQLadder, DismountableCharacter) == 0x03B0);
static_assert(offsetof(ABBQLadder, GrabbingCharacter) == 0x03B8);
static_assert(offsetof(ABBQLadder, LastUsedEntryMarker) == 0x03C8);
static_assert(offsetof(ABBQLevelIntro, LevelSequencePlayer) == 0x0250);
static_assert(offsetof(ABBQLevelIntro, FamilyImposterName1) == 0x0258);
static_assert(offsetof(ABBQLevelIntro, FamilyImposterName2) == 0x0268);
static_assert(offsetof(ABBQLevelIntro, VictimImposterName) == 0x0278);
static_assert(offsetof(ABBQLevelIntro, ImposterVictimOutfit) == 0x0288);
static_assert(offsetof(ABBQLevelIntro, ImposterFamily1Outfit) == 0x0290);
static_assert(offsetof(ABBQLevelIntro, ImposterFamily2Outfit) == 0x0298);
static_assert(offsetof(ABBQLevelIntro, ImposterLeatherfaceOutfit) == 0x02A0);
static_assert(offsetof(ABBQLevelIntro, FamilyImposterClass1) == 0x02A8);
static_assert(offsetof(ABBQLevelIntro, FamilyImposterClass2) == 0x02B0);
static_assert(offsetof(ABBQLevelIntro, VictimImposterClass) == 0x02B8);
static_assert(offsetof(ABBQLevelIntro, VictimGender) == 0x02C0);
static_assert(offsetof(ABBQLevelIntro, LeatherfaceChainsawClass) == 0x02C8);
static_assert(offsetof(ABBQLevelIntro, SkinnedReplacementChainsaw) == 0x02D0);
static_assert(offsetof(ABBQLevelOutro, LeatherfaceImposterClass) == 0x0228);
static_assert(offsetof(ABBQLevelOutro, LeatherfaceChainsawClass) == 0x0230);
static_assert(offsetof(ABBQLevelOutro, PostMatchEndSequence) == 0x0238);
static_assert(offsetof(ABBQLevelOutro, SpawnedLFImposter) == 0x0240);
static_assert(offsetof(ABBQLevelOutro, WinningTeam) == 0x0248);
static_assert(offsetof(ABBQLevelOutro, SawDanceSFX) == 0x0250);
static_assert(offsetof(ABBQLevelOutro, VictimWinSFX) == 0x0258);
static_assert(offsetof(ABBQLevelOutro, FamilyWinSFX) == 0x0260);
static_assert(offsetof(ABBQLevelOutro, FamilyVictimDrawSFX) == 0x0268);
static_assert(offsetof(ABBQLevelOutro, LevelSequenceActor) == 0x0270);
static_assert(offsetof(ABBQLevelOutro, SkinnedReplacementChainsaw) == 0x0278);
static_assert(offsetof(ABBQLevelOutro, PooledAkComp) == 0x0280);
static_assert(offsetof(FBBQLevelSequenceCollisionDataSample, TraceStartPoint) == 0x0000);
static_assert(offsetof(FBBQLevelSequenceCollisionDataSample, TraceEndPoint) == 0x000C);
static_assert(offsetof(UBBQLevelSequenceCollisionObject, LevelSequenceList) == 0x0038);
static_assert(offsetof(UBBQLevelSequenceCollisionObject, SampleData) == 0x0058);
static_assert(offsetof(UBBQLineOfSightTrackerSubsystem, CharactersInMatch) == 0x0040);
static_assert(offsetof(FBBQLockLocations, Front) == 0x0000);
static_assert(offsetof(FBBQLockLocations, Rear) == 0x0008);
static_assert(offsetof(FBBQLockLocations, Frame) == 0x0010);
static_assert(offsetof(ABBQLockBase, LockAnimSlot) == 0x0228);
static_assert(offsetof(ABBQLockBase, UnlockAnimSlot) == 0x0229);
static_assert(offsetof(ABBQLockBase, LockFront) == 0x0230);
static_assert(offsetof(ABBQLockBase, FrameFront) == 0x0238);
static_assert(offsetof(ABBQLockBase, LockRear) == 0x0240);
static_assert(offsetof(ABBQLockBase, FrameRear) == 0x0248);
static_assert(offsetof(ABBQLockBase, LockLocations) == 0x0250);
static_assert(offsetof(UBBQLockComponent, Stages) == 0x00B0);
static_assert(offsetof(UBBQLockComponent, ByPassGameplayTag) == 0x00D4);
static_assert(offsetof(UBBQLockComponent, ActiveTagsContainer) == 0x00E0);
static_assert(offsetof(UBBQLockComponent, LockClass) == 0x0108);
static_assert(offsetof(UBBQLockComponent, PlayerAddedLockClass) == 0x0110);
static_assert(offsetof(UBBQLockComponent, LockMinigameClass) == 0x0128);
static_assert(offsetof(UBBQLockComponent, UnlockMinigameClass) == 0x0130);
static_assert(offsetof(UBBQLockComponentV2, Stages) == 0x00B0);
static_assert(offsetof(UBBQLockComponentV2, LockMinigameClass) == 0x00D8);
static_assert(offsetof(UBBQLockComponentV2, UnlockMinigameClass) == 0x00E0);
static_assert(offsetof(UBBQLockComponentV2, LockClass) == 0x00E8);
static_assert(offsetof(UBBQLockComponentV2, PlayerAddedLockClass) == 0x00F0);
static_assert(offsetof(UBBQLockComponentV2, ByPassGameplayTag) == 0x0118);
static_assert(offsetof(UBBQLockComponentV2, ActiveTagsContainer) == 0x0120);
static_assert(offsetof(UBBQLockComponentV2, LockArray) == 0x0140);
static_assert(offsetof(UBBQLockComponentV2, DeactivatedTagsContainer) == 0x0150);
static_assert(offsetof(UBBQLockComponentV2, CompletedTagsContainer) == 0x0170);
static_assert(offsetof(UBBQLockComponentV2, InactiveTagsContainer) == 0x0190);
static_assert(offsetof(UBBQAttributeSet_Melee, DamageMultiplier) == 0x0038);
static_assert(offsetof(FMeleeHitReactionAnimSlotSet, Default) == 0x0000);
static_assert(offsetof(FMeleeHitReactionAnimSlotSet, Stationary) == 0x0001);
static_assert(offsetof(FMeleeHitReactionAnimSlotSet, Crouched) == 0x0002);
static_assert(offsetof(FMeleeHitReactionAnimSlotSet, Stationary_Crouched) == 0x0003);
static_assert(offsetof(FMeleeHitReaction, DamageTypeTriggers) == 0x0000);
static_assert(offsetof(FMeleeHitReaction, HitReactionAnimSlotSets) == 0x0020);
static_assert(offsetof(FMeleeHitReaction, OnHitAkEvent) == 0x0078);
static_assert(offsetof(FMeleeHitReaction, OnHitAkEvent3P) == 0x0080);
static_assert(offsetof(UBBQMeleeComponent, AttributeSetInitDataTable) == 0x00B8);
static_assert(offsetof(UBBQMeleeComponent, MeleeAbilityTags) == 0x00C0);
static_assert(offsetof(UBBQMeleeComponent, DisableHitReactionTags) == 0x00D0);
static_assert(offsetof(UBBQMeleeComponent, HitReactions) == 0x00F0);
static_assert(offsetof(UBBQMeleeComponent, GivenAttributeSet) == 0x0100);
static_assert(offsetof(UBBQMeleeComponent, CharacterOwner) == 0x0108);
static_assert(offsetof(UBBQMeleeComponent, OwnerASC) == 0x0110);
static_assert(offsetof(UBBQMeleeComponent, CurrentReactionMontage) == 0x0118);
static_assert(offsetof(ABBQMercuryCarHidingSpot, ActivationMinigameClass) == 0x0990);
static_assert(offsetof(ABBQMercuryCarHidingSpot, ActivationMinigameInstance) == 0x0998);
static_assert(offsetof(ABBQMercuryCarHidingSpot, RadioCallDialogTimerHandle) == 0x09A0);
static_assert(offsetof(ABBQMeshVisualiser, TargetMesh) == 0x0228);
static_assert(offsetof(ABBQMeshVisualiser, Mesh) == 0x0250);
static_assert(offsetof(UBBQLevelSequenceMeshReplacer, MeshVisualiserClasses) == 0x0030);
static_assert(offsetof(UBBQMinigameGameplayComponent, MinigameOwner) == 0x00B8);
static_assert(offsetof(FBBQMovementOscillator, ForwardMovementOscillator) == 0x0000);
static_assert(offsetof(FBBQMovementOscillator, SideMovementOscillator) == 0x000C);
static_assert(offsetof(FBBQMovementOscillator, StanceOnBegin) == 0x0029);
static_assert(offsetof(FBBQMovementOscillator, StanceOnEnd) == 0x002A);
static_assert(offsetof(UBBQMovementDisorder, CameraShake) == 0x0030);
static_assert(offsetof(UBBQMovementDisorder, CameraShakePlaySpace) == 0x003C);
static_assert(offsetof(UBBQMovementDisorder, CameraShakeUserPlaySpaceRot) == 0x0040);
static_assert(offsetof(UBBQMovementDisorder, MovementOscillators) == 0x0050);
static_assert(offsetof(UBBQMovementDisorderComponent, MovementDisorder) == 0x00B0);
static_assert(offsetof(UBBQMovementDisorderComponent, ActiveCameraShake) == 0x00B8);
static_assert(offsetof(ABBQMultiplayerMinigameTester, TriggerVolume) == 0x0228);
static_assert(offsetof(ABBQMultiplayerMinigameTester, MinigameClass) == 0x0230);
static_assert(offsetof(ABBQMultiplayerMinigameTester, CharacterInsideVolume) == 0x0238);
static_assert(offsetof(FBBQMultiplayerMinigameInfo, OpponentCharacter) == 0x0000);
static_assert(offsetof(ABBQMultiplayerMinigameV2, MultiplayerInfo) == 0x0580);
static_assert(offsetof(FNetSyncedDoorAnimation, StartRotator) == 0x0004);
static_assert(offsetof(FNetSyncedDoorAnimation, EndRotator) == 0x0010);
static_assert(offsetof(FNetSyncedDoorAnimation, StartOffset) == 0x001C);
static_assert(offsetof(FNetSyncedDoorAnimation, EndOffset) == 0x0028);
static_assert(offsetof(ABBQNetSyncedDoorBase, Door) == 0x0230);
static_assert(offsetof(ABBQNetSyncedDoorBase, OverlappingActors) == 0x0240);
static_assert(offsetof(ABBQNetSyncedDoorBase, OpenRotator) == 0x0268);
static_assert(offsetof(ABBQNetSyncedDoorBase, RotatorFloatCurve) == 0x0278);
static_assert(offsetof(ABBQNetSyncedDoorBase, OpenOffset) == 0x0280);
static_assert(offsetof(ABBQNetSyncedDoorBase, OffsetFloatCurve) == 0x0290);
static_assert(offsetof(ABBQNetSyncedDoorBase, AnimationInfo) == 0x029C);
static_assert(offsetof(ABBQNetSyncedDoorBase, DoorOverlap) == 0x02E0);
static_assert(offsetof(ABBQNetSyncedDoorBase, ForwardLocator) == 0x02E8);
static_assert(offsetof(ABBQNetSyncedDoorBase, AkPortal) == 0x02F0);
static_assert(offsetof(ABBQNetSyncedDoorBase, GameplayTags) == 0x0308);
static_assert(offsetof(ABBQNetSyncedDoorBase, SmartLink) == 0x0328);
static_assert(offsetof(ABBQNetSyncedDoorBase, FrontOpenLocator) == 0x0330);
static_assert(offsetof(ABBQNetSyncedDoorBase, BackOpenLocator) == 0x0338);
static_assert(offsetof(ABBQNoiseMaker, Root) == 0x0240);
static_assert(offsetof(ABBQNoiseMaker, NoiseOutlineComponent) == 0x0248);
static_assert(offsetof(ABBQNoiseMaker, POIComponent) == 0x0250);
static_assert(offsetof(ABBQNoiseMaker, TriggerTeam) == 0x0258);
static_assert(offsetof(ABBQNoiseMaker, LineOfSightChannel) == 0x025C);
static_assert(offsetof(ABBQNoiseMaker, AkComponent) == 0x0260);
static_assert(offsetof(ABBQNoiseMaker, IdleAudioEvent) == 0x0268);
static_assert(offsetof(ABBQNoiseMaker, InteractingCharacter) == 0x0270);
static_assert(offsetof(FPlayerInNoiseMakerInfo, Character) == 0x0000);
static_assert(offsetof(ABBQNoiseMakerChicken, IgnoreTriggerTagContainer) == 0x0278);
static_assert(offsetof(ABBQNoiseMakerChicken, ChickenIdleMontage) == 0x0298);
static_assert(offsetof(ABBQNoiseMakerChicken, ChickenAlertedMontage) == 0x02A0);
static_assert(offsetof(ABBQNoiseMakerChicken, ChickenSemiAlertedMontage) == 0x02A8);
static_assert(offsetof(ABBQNoiseMakerChicken, ChickenDeadMontage) == 0x02B0);
static_assert(offsetof(ABBQNoiseMakerChicken, ShardItemTag) == 0x02B8);
static_assert(offsetof(ABBQNoiseMakerChicken, NoiseMakerDisarmedRow) == 0x02C0);
static_assert(offsetof(ABBQNoiseMakerChicken, TriggerArea) == 0x02D8);
static_assert(offsetof(ABBQNoiseMakerChicken, TriggerAreaClose) == 0x02E0);
static_assert(offsetof(ABBQNoiseMakerChicken, ChickenMesh) == 0x02E8);
static_assert(offsetof(ABBQNoiseMakerChicken, PlayersInArea) == 0x02F0);
static_assert(offsetof(ABBQNoiseMakerChicken, ChickenState) == 0x0300);
static_assert(offsetof(UBBQNoiseOutlineComponent, Config) == 0x01F8);
static_assert(offsetof(UBBQNoiseOutlineComponent, CurrentSpawnedPS) == 0x0240);
static_assert(offsetof(FOutlineInstance, InstanceName) == 0x0000);
static_assert(offsetof(FOutlineInstance, TimeByColorIndex) == 0x0008);
static_assert(offsetof(UBBQOutlineRenderer, DefaultOutlineInstanceName) == 0x00B4);
static_assert(offsetof(UBBQOutlineRenderer, TeamVisibility) == 0x00BC);
static_assert(offsetof(UBBQOutlineRenderer, VisibilityRequiredTags) == 0x00C8);
static_assert(offsetof(UBBQOutlineRenderer, VisibilityIgnoreTags) == 0x00E8);
static_assert(offsetof(UBBQOutlineRenderer, OwnerRequiredTags) == 0x0108);
static_assert(offsetof(UBBQOutlineRenderer, OwnerIgnoreTags) == 0x0128);
static_assert(offsetof(UBBQOutlineRenderer, OutlineInstances) == 0x0158);
static_assert(offsetof(UBBQPairedAnimationComponent, PairedAnimCharacterChannel) == 0x00B0);
static_assert(offsetof(UBBQPairedAnimationComponent, CharacterOwner) == 0x00F0);
static_assert(offsetof(UBBQPairedAnimationComponent, Partner) == 0x00F8);
static_assert(offsetof(UBBQPairedAnimationComponent, AssetSequencePlayer) == 0x0100);
static_assert(offsetof(UBBQPairedAnimationComponent, AssetSequenceActor) == 0x0108);
static_assert(offsetof(UBBQPairedAnimationComponent, MoveIgnoredComponents) == 0x0110);
static_assert(offsetof(FBBQPickupDispenserState, CurrentEventInstigator) == 0x0000);
static_assert(offsetof(FBBQPickupDispenserState, GrabPickupAnimSlot) == 0x0008);
static_assert(offsetof(FBBQPickupDispenserState, MinigameEndReason) == 0x0009);
static_assert(offsetof(ABBQPickupDispenser, RootSceneComponent) == 0x0248);
static_assert(offsetof(ABBQPickupDispenser, MeshComponent) == 0x0250);
static_assert(offsetof(ABBQPickupDispenser, InteractionBox) == 0x0258);
static_assert(offsetof(ABBQPickupDispenser, PositionBox) == 0x0260);
static_assert(offsetof(ABBQPickupDispenser, InteractionComponent) == 0x0268);
static_assert(offsetof(ABBQPickupDispenser, InteractionEventSpawnPickup) == 0x0270);
static_assert(offsetof(ABBQPickupDispenser, InteractionEventSwapPickup) == 0x0278);
static_assert(offsetof(ABBQPickupDispenser, PossiblePickupTypes) == 0x0280);
static_assert(offsetof(ABBQPickupDispenser, PickupDispenserType) == 0x02B0);
static_assert(offsetof(ABBQPickupDispenser, PickupMinigame) == 0x02B8);
static_assert(offsetof(ABBQPickupDispenser, PickupMinigameClass) == 0x02C0);
static_assert(offsetof(ABBQPickupDispenser, GrabbingItemMovementState) == 0x02C8);
static_assert(offsetof(ABBQPickupDispenser, PickupDispenserState) == 0x02D0);
static_assert(offsetof(ABBQPickupDispenser, ItemEffectInstigator) == 0x02E0);
static_assert(offsetof(ABBQPickupDispenser, PickupAkEvent) == 0x0310);
static_assert(offsetof(ABBQPickupDispenser, DropAkEvent) == 0x0318);
static_assert(offsetof(ABBQPickupDistributor, PickupZones) == 0x0228);
static_assert(offsetof(FPickupZoneSpawnData, PickupDispenserType) == 0x0000);
static_assert(offsetof(FPickupZoneData, Zone) == 0x0000);
static_assert(offsetof(FPickupZoneData, PickupSpawnData) == 0x0008);
static_assert(offsetof(UPickupZones, ZoneData) == 0x0030);
static_assert(offsetof(ABBQPickupSpawnerGroup, SpawnerComponent) == 0x0228);
static_assert(offsetof(FBBQPickupSpawnerData, PickupZone) == 0x0000);
static_assert(offsetof(ABBQPickupSpawnerMarker, Spawner) == 0x0228);
static_assert(offsetof(ABBQPickupSpawnerMarker, PickupGroup) == 0x0238);
static_assert(offsetof(FPipeValveInteractionInfo, InteractingCharacter) == 0x0000);
static_assert(offsetof(FPipeValveInteractionInfo, TargetState) == 0x0008);
static_assert(offsetof(ABBQPipeValve, PipeValveState) == 0x0240);
static_assert(offsetof(ABBQPipeValve, InteractionInfo) == 0x0248);
static_assert(offsetof(ABBQPipeValve, MinigameInstance) == 0x0258);
static_assert(offsetof(ABBQPipeValve, MinigameClass) == 0x0260);
static_assert(offsetof(ABBQPipeValve, Root) == 0x0268);
static_assert(offsetof(ABBQPipeValve, PipeValveUseLocator) == 0x0270);
static_assert(offsetof(ABBQPipeValve, PipeValveUseLocatorLeatherface) == 0x0278);
static_assert(offsetof(ABBQPipeValve, AttachValveLocator) == 0x0280);
static_assert(offsetof(ABBQPipeValve, AttachValveLocatorMale) == 0x0288);
static_assert(offsetof(ABBQPlayerCameraManager, LoopingShake) == 0x2880);
static_assert(offsetof(ABBQPlayerCameraManager, FadeCurve) == 0x2888);
static_assert(offsetof(ABBQPlayerCameraManager, CachedCinematicCameraMod) == 0x2890);
static_assert(offsetof(ABBQPlayerCameraManager, GameplayViewTargetOverride) == 0x28D8);
static_assert(offsetof(ABBQPlayerController, ViewTargetManager) == 0x0660);
static_assert(offsetof(ABBQPlayerController, GamepadSensitivity) == 0x06AC);
static_assert(offsetof(ABBQPlayerController, MouseSensitivityLimits) == 0x06B4);
static_assert(offsetof(ABBQPlayerController, GamepadXSensitivityLimits) == 0x06BC);
static_assert(offsetof(ABBQPlayerController, GamepadYSensitivityLimits) == 0x06C4);
static_assert(offsetof(ABBQPlayerController, StartSpectatingSFX) == 0x06D0);
static_assert(offsetof(ABBQPlayerController, ControllingCharacter) == 0x0780);
static_assert(offsetof(ABBQPlayerController, LastViewTargetPawn) == 0x0788);
static_assert(offsetof(ABBQPlayerController, InputActionTable) == 0x0790);
static_assert(offsetof(ABBQPlayerController, RequestedHiddenActorList) == 0x0798);
static_assert(offsetof(ABBQPlayerController, CommandChannel) == 0x07E8);
static_assert(offsetof(ABBQPlayerController, PlayerStart) == 0x07F0);
static_assert(offsetof(ABBQPlayerRestrainer, RestrainLocations) == 0x0230);
static_assert(offsetof(UBBQPlayerRpcChannel, CachedGrandpaRef) == 0x00B0);
static_assert(offsetof(UBBQPointOfInterestComponent, Definition) == 0x0490);
static_assert(offsetof(UBBQPointOfInterestLocatorComponent, LineOfSightTraceChannel) == 0x0480);
static_assert(offsetof(UBBQPointOfInterestLocatorComponent, RequiredAllCharacterTags) == 0x0488);
static_assert(offsetof(UBBQPointOfInterestLocatorComponent, RequiredAnyCharacterTags) == 0x04A8);
static_assert(offsetof(UBBQPointOfInterestLocatorComponent, ForbiddenCharacterTags) == 0x04C8);
static_assert(offsetof(UBBQPointOfInterestLocatorComponent, AimingRequiredAllCharacterTags) == 0x04F8);
static_assert(offsetof(UBBQPointOfInterestLocatorComponent, AimingRequiredAnyCharacterTags) == 0x0518);
static_assert(offsetof(UBBQPointOfInterestLocatorComponent, AimingForbiddenCharacterTags) == 0x0538);
static_assert(offsetof(UBBQPointOfInterestLocatorComponent, AimingPitchOverride) == 0x0558);
static_assert(offsetof(UBBQPointOfInterestLocatorComponent, CurrentPOI) == 0x05A8);
static_assert(offsetof(UBBQPointOfInterestLocatorComponent, IgnoredPOIs) == 0x05B0);
static_assert(offsetof(ABBQPoisonCloud, PoisonCloudSphere) == 0x0228);
static_assert(offsetof(ABBQPoisonCloud, PoisonEffectClass) == 0x0230);
static_assert(offsetof(ABBQPoisonCloud, PoisonEffectTeamOverrideClass) == 0x0238);
static_assert(offsetof(ABBQPoisonCloud, TraceChannel) == 0x0288);
static_assert(offsetof(ABBQPoisonCloud, TargetTeamID) == 0x0289);
static_assert(offsetof(ABBQPoisonCloud, PoisonImmunityTags) == 0x0290);
static_assert(offsetof(ABBQPoisonCloud, CharactersInside) == 0x02B8);
static_assert(offsetof(FPolicePhoneInteractionState, InteractingCharacter) == 0x0000);
static_assert(offsetof(FPolicePhoneInteractionState, Action) == 0x0008);
static_assert(offsetof(ABBQPolicePhone, FuseAmpValueRange) == 0x024C);
static_assert(offsetof(ABBQPolicePhone, FuseDataArray) == 0x0258);
static_assert(offsetof(ABBQPolicePhone, AMPValues) == 0x0268);
static_assert(offsetof(ABBQPolicePhone, SolutionColorIndexes) == 0x0278);
static_assert(offsetof(ABBQPolicePhone, MinigameStartForbiddenTags) == 0x0290);
static_assert(offsetof(ABBQPolicePhone, MinigameClass) == 0x02B0);
static_assert(offsetof(ABBQPolicePhone, MinigameInstance) == 0x02B8);
static_assert(offsetof(ABBQPolicePhone, RootSceneComponent) == 0x02C0);
static_assert(offsetof(ABBQPolicePhone, CameraComponent) == 0x02C8);
static_assert(offsetof(ABBQPolicePhone, PolicePhoneInteractionLocator) == 0x02D0);
static_assert(offsetof(ABBQPolicePhone, InteractionState) == 0x02E0);
static_assert(offsetof(ABBQPowderCloud, HealVictims) == 0x0228);
static_assert(offsetof(ABBQPowderCloud, OwnerCharacterTag) == 0x0238);
static_assert(offsetof(ABBQPowderCloud, HealVictimsPerkTag) == 0x0240);
static_assert(offsetof(ABBQPowderCloud, MedicalBenefitsPerkTag) == 0x0248);
static_assert(offsetof(ABBQPowderCloud, RescueMedicPerkPerkTag) == 0x0250);
static_assert(offsetof(ABBQPowderCloud, HealVictimsGameplayEffect) == 0x0258);
static_assert(offsetof(ABBQPowderCloud, MedicalBenefitsGameplayEffect) == 0x0260);
static_assert(offsetof(ABBQPowderCloud, RescueMedicPerkGameplayEffect) == 0x0268);
static_assert(offsetof(ABBQRecoveryVolume, Root) == 0x0228);
static_assert(offsetof(ABBQRecoveryVolume, RecoveryVolume) == 0x0230);
static_assert(offsetof(ABBQSidling, EntryLeftMarker) == 0x0240);
static_assert(offsetof(ABBQSidling, EntryRightMarker) == 0x0248);
static_assert(offsetof(ABBQSidling, ExitLeft) == 0x0250);
static_assert(offsetof(ABBQSidling, ExitRight) == 0x0258);
static_assert(offsetof(ABBQSidling, SmartLink) == 0x0260);
static_assert(offsetof(ABBQSidling, InteractionBox) == 0x0268);
static_assert(offsetof(ABBQSidling, Interaction) == 0x0270);
static_assert(offsetof(ABBQSidling, InteractionEvent) == 0x0278);
static_assert(offsetof(ABBQSidling, SidlePlayers) == 0x0288);
static_assert(offsetof(ABBQSidling, SortedPlayerArrayCache) == 0x02D8);
static_assert(offsetof(ABBQSidling, LastUsedEntryMarker) == 0x02F0);
static_assert(offsetof(UBBQSimpleCostCalculation, cost) == 0x0040);
static_assert(offsetof(UBBQSimpleCostCalculation, Multiplier) == 0x00E0);
static_assert(offsetof(UBBQSkeletalMeshComponent, RagdollOverlapTestLift) == 0x0EF8);
static_assert(offsetof(FQuadrantInfo, AnimationLocator) == 0x0008);
static_assert(offsetof(FQuadrantInfo, SneakAttackBehaviour) == 0x0018);
static_assert(offsetof(FSneakAttackInfo, AttackingPlayer) == 0x0000);
static_assert(offsetof(UBBQSneakAttackAreaComponent, CanSneakAttackTag) == 0x04A0);
static_assert(offsetof(UBBQSneakAttackAreaComponent, CanSneakAttackGrandpaEffectClass) == 0x04A8);
static_assert(offsetof(UBBQSneakAttackAreaComponent, MaxFamilyBondLevelModifierTag) == 0x04B0);
static_assert(offsetof(UBBQSneakAttackAreaComponent, ShardItemTag) == 0x04B8);
static_assert(offsetof(UBBQSneakAttackAreaComponent, AttackerTagWhileSlideInPlace) == 0x04C0);
static_assert(offsetof(UBBQSneakAttackAreaComponent, TagsWhileBeingSneakAttacked) == 0x04C8);
static_assert(offsetof(UBBQSneakAttackAreaComponent, FamilyBondLockEffectClass) == 0x04F0);
static_assert(offsetof(UBBQSneakAttackAreaComponent, GrandpaSneakAttackedEffect) == 0x04F8);
static_assert(offsetof(UBBQSneakAttackAreaComponent, FamilyBondLockEffectHandles) == 0x0508);
static_assert(offsetof(UBBQSneakAttackAreaComponent, AllQuadDividers) == 0x0518);
static_assert(offsetof(UBBQSneakAttackAreaComponent, PlayersInArea) == 0x0530);
static_assert(offsetof(UBBQSneakAttackAreaComponent, OngoingSneakAttackInfo) == 0x0540);
static_assert(offsetof(ABBQSneakAttackBehaviour, CinematicCameraSetup) == 0x02E8);
static_assert(offsetof(ABBQSneakAttackBehaviour, ItemTag) == 0x0330);
static_assert(offsetof(ABBQSneakAttackBehaviour, CharacterOwner) == 0x0338);
static_assert(offsetof(ABBQSneakAttackBehaviour, CharacterTarget) == 0x0340);
static_assert(offsetof(ABBQSneakAttackTargetBehaviour, GameplayEffectToApply) == 0x02E8);
static_assert(offsetof(ABBQSneakAttackTargetBehaviour, CinematicCameraSetup) == 0x02F0);
static_assert(offsetof(ABBQSneakAttackTargetBehaviour, CharacterOwner) == 0x0338);
static_assert(offsetof(ABBQSneakAttackTargetBehaviour, CharacterAttacker) == 0x0340);
static_assert(offsetof(ABBQSneakAttackTargetBehaviour, CachedOwnerASC) == 0x0348);
static_assert(offsetof(ABBQSneakAttackTargetBehaviour, CachedAttackerASC) == 0x0350);
static_assert(offsetof(ABBQSpectatorPawn, ExitSpectatorPopUpSpec) == 0x02B0);
static_assert(offsetof(ABBQSpectatorPawn, ExitSpectatorCustomPopUpSpec) == 0x0390);
static_assert(offsetof(ABBQSpectatorPawn, ExitAsHostSpectatorPopUpSpec) == 0x0470);
static_assert(offsetof(ABBQSpectatorPawn, ExitAsGuestSpectatorPopUpSpec) == 0x0550);
static_assert(offsetof(ABBQSplineCameraVolume, SplineCameraVolumeComponent) == 0x0260);
static_assert(offsetof(ABBQSplineCameraVolume, SplineComponent) == 0x0268);
static_assert(offsetof(UBBQCameraVolumeComponent, CameraState) == 0x00B0);
static_assert(offsetof(UBBQCameraVolumeComponent, InTransitionCurve) == 0x00C0);
static_assert(offsetof(UBBQCameraVolumeComponent, OutTransitionCurve) == 0x00D8);
static_assert(offsetof(UBBQCameraVolumeComponent, RequiredMovementStateTags) == 0x00E8);
static_assert(offsetof(UBBQCameraVolumeComponent, OngoingRequiredMovementStateTags) == 0x0118);
static_assert(offsetof(UBBQCameraVolumeComponent, CameraBoomAttachBone) == 0x0140);
static_assert(offsetof(UBBQCameraVolumeComponent, CameraStateModifier) == 0x0150);
static_assert(offsetof(UBBQCameraVolumeComponent, PrimitiveComponentReferences) == 0x0178);
static_assert(offsetof(UBBQCameraVolumeComponent, PrimitiveComponents) == 0x0188);
static_assert(offsetof(UBBQSplineCameraVolumeComponent, SplineComponentReference) == 0x0198);
static_assert(offsetof(UBBQSplineCameraVolumeComponent, SplineComponent) == 0x01C0);
static_assert(offsetof(UBBQSplineCameraVolumeComponent, DesiredDistanceMultCurve) == 0x01E0);
static_assert(offsetof(UBBQSplineCameraVolumeComponent, DesiredCameraDirection) == 0x01E8);
static_assert(offsetof(UBBQSpringArmComponent, LookAtPointOffset) == 0x0280);
static_assert(offsetof(UBBQSpringArmComponent, PlayersCollisionProbeChannel) == 0x0290);
static_assert(offsetof(FBBQSpyAbilityMontageData, AnimSlot) == 0x0000);
static_assert(offsetof(FBBQSpyAbilityMontageData, Duration) == 0x0008);
static_assert(offsetof(FBBQSpyAbilityMontageData, RequiredTags) == 0x0060);
static_assert(offsetof(FBBQSpyAbilityMontageData, ForbiddenTags) == 0x0080);
static_assert(offsetof(FBBQSpyAbilityMontageData, MontageDurationTags) == 0x00A0);
static_assert(offsetof(UBBQSpyAbilityHandlerComponent, ChargeDepletionEffect) == 0x00E0);
static_assert(offsetof(UBBQSpyAbilityHandlerComponent, VictimViewActiveTag) == 0x00E8);
static_assert(offsetof(UBBQSpyAbilityHandlerComponent, AbilityActivationGameplayCueTag) == 0x00F0);
static_assert(offsetof(UBBQSpyAbilityHandlerComponent, VictimViewGameplayCueTag) == 0x00F8);
static_assert(offsetof(UBBQSpyAbilityHandlerComponent, VictimGameplayCueTag) == 0x0100);
static_assert(offsetof(UBBQSpyAbilityHandlerComponent, FadeCurveToVictim) == 0x0108);
static_assert(offsetof(UBBQSpyAbilityHandlerComponent, FadeCurveToOwner) == 0x0110);
static_assert(offsetof(UBBQSpyAbilityHandlerComponent, MontageToPlay) == 0x0120);
static_assert(offsetof(UBBQSpyAbilityHandlerComponent, ActiveAbility) == 0x0170);
static_assert(offsetof(UBBQSpyAbilityHandlerComponent, TargetVictim) == 0x0178);
static_assert(offsetof(UBBQSpyAbilityHandlerComponent, Phase) == 0x0180);
static_assert(offsetof(UBBQSpyAbilityHandlerComponent, CurrentAnimMontage) == 0x01A0);
static_assert(offsetof(FBBQStudyAndTamperKnowledgePoints, Group) == 0x0000);
static_assert(offsetof(UBBQStudyAndTamperComponent, KnowledgePoints) == 0x00D0);
static_assert(offsetof(UBBQStudyAndTamperComponent, PerformedInspections) == 0x00E0);
static_assert(offsetof(UBBQStudyAndTamperComponent, InspectionDefinitionsDataTable) == 0x00F0);
static_assert(offsetof(UBBQStudyAndTamperComponent, MaxTotalKnowledgePoints) == 0x00F8);
static_assert(offsetof(UBBQStudyAndTamperComponent, MaxGroupKnowledgePoints) == 0x0158);
static_assert(offsetof(UBBQStudyAndTamperComponent, GainedKnowledgePointsMultiplier) == 0x01B0);
static_assert(offsetof(UBBQStudyAndTamperComponent, AllowMultipleInspections) == 0x0208);
static_assert(offsetof(UBBQStudyAndTamperComponent, RequireInspectionBeforeTamper) == 0x0260);
static_assert(offsetof(UBBQStudyAndTamperComponent, TamperEffectDuration) == 0x02B8);
static_assert(offsetof(UBBQStudyAndTamperComponent, InspectXorTamperModeTag) == 0x0310);
static_assert(offsetof(UBBQStudyAndTamperComponent, KnowledgePointsTag) == 0x0318);
static_assert(offsetof(UBBQStudyAndTamperComponent, ActivityEventObjectInspected) == 0x0320);
static_assert(offsetof(UBBQStudyAndTamperComponent, ActivityEventObjectTampered) == 0x0330);
static_assert(offsetof(UBBQStudyAndTamperComponent, TamperMinigameClass) == 0x0340);
static_assert(offsetof(FBBQStudyAndTamperInspection, Group) == 0x0008);
static_assert(offsetof(UBBQStudyAndTamperObjectComponent, InspectionDefinition) == 0x00F0);
static_assert(offsetof(UBBQStudyAndTamperObjectComponent, CachedInspectionDefinition) == 0x0100);
static_assert(offsetof(UBBQStudyAndTamperObjectComponent, InteractionLocatorComponent) == 0x0120);
static_assert(offsetof(UBBQStudyAndTamperObjectComponent, TamperingAnimSlot) == 0x0148);
static_assert(offsetof(UBBQStudyAndTamperObjectComponent, InspectingAnimSlot) == 0x0149);
static_assert(offsetof(UBBQStudyAndTamperObjectComponent, TamperingStartSound) == 0x0150);
static_assert(offsetof(UBBQStudyAndTamperObjectComponent, TamperingEndSound) == 0x0158);
static_assert(offsetof(UBBQStudyAndTamperObjectComponent, TamperingFailureSound) == 0x0160);
static_assert(offsetof(UBBQStudyAndTamperObjectComponent, InspectedBy) == 0x0168);
static_assert(offsetof(UBBQStudyAndTamperObjectComponent, TamperedBy) == 0x0170);
static_assert(offsetof(ABBQSweetSpotMinigame, SweetSpotState) == 0x0580);
static_assert(offsetof(ABBQTimeOfDayLoader, DefaultTimeOfDay) == 0x0228);
static_assert(offsetof(ABBQTrap, TriggerEffectClass) == 0x0228);
static_assert(offsetof(ABBQTrap, PoisonEffectClass) == 0x0230);
static_assert(offsetof(ABBQTrap, EscapeTrapMinigameClass) == 0x0238);
static_assert(offsetof(ABBQTrap, TrapTriggeredDamageType) == 0x0240);
static_assert(offsetof(ABBQTrap, TrapTriggerDamage) == 0x0248);
static_assert(offsetof(ABBQTrap, EscapeTrapMinigame) == 0x02A0);
static_assert(offsetof(ABBQTrap, TriggerPreventionTags) == 0x02B8);
static_assert(offsetof(ABBQTrap, MovementStateIgnoreTags) == 0x02D8);
static_assert(offsetof(ABBQTrap, TrapMesh) == 0x02F8);
static_assert(offsetof(ABBQTrap, TrapCollision) == 0x0300);
static_assert(offsetof(ABBQTrap, CaughtVictim) == 0x0308);
static_assert(offsetof(ABBQTrap, TrapState) == 0x0310);
static_assert(offsetof(ABBQTrap, PoisonInstigator) == 0x0318);
static_assert(offsetof(ABBQTrap, FreeVictimAnimSlot) == 0x0322);
static_assert(offsetof(ABBQTrap, FreeVictimEndSectionName) == 0x0324);
static_assert(offsetof(ABBQTrap, PendingVictim) == 0x0338);
static_assert(offsetof(FAttributeTrigger, TriggerAttribute) == 0x0000);
static_assert(offsetof(FAttributeTrigger, TriggerAttributeMax) == 0x0038);
static_assert(offsetof(FAttributeTrigger, Comparison) == 0x0074);
static_assert(offsetof(FPlayerInTriggerAreaInfo, Character) == 0x0000);
static_assert(offsetof(UBBQTriggerAreaComponent, RadiusMultiplier) == 0x04A0);
static_assert(offsetof(UBBQTriggerAreaComponent, AttributeTrigger) == 0x04F8);
static_assert(offsetof(UBBQTriggerAreaComponent, RequiredPerks) == 0x0570);
static_assert(offsetof(UBBQTriggerAreaComponent, IgnoreTriggerTags) == 0x0590);
static_assert(offsetof(UBBQTriggerAreaComponent, NotifyType) == 0x05B8);
static_assert(offsetof(UBBQTriggerAreaComponent, TriggerConditionClass) == 0x05C0);
static_assert(offsetof(UBBQTriggerAreaComponent, CharactersInArea) == 0x05E0);
static_assert(offsetof(UBBQTriggerAreaComponent, PrevCharactersInArea) == 0x05F0);
static_assert(offsetof(UBBQTriggerAreaComponent, PlayerToRadiusMap) == 0x0600);
static_assert(offsetof(UVictimRestraintEndedAnimNotifyState, MovementState) == 0x0030);
static_assert(offsetof(ABBQVictimRestrainedStart, VictimLocator) == 0x0230);
static_assert(offsetof(ABBQVictimRestrainedStart, HarvestLocationMesh) == 0x0238);
static_assert(offsetof(ABBQVictimRestrainedStart, BreakLooseMinigameClass) == 0x0240);
static_assert(offsetof(ABBQVictimRestrainedStart, Victim) == 0x0258);
static_assert(offsetof(ABBQVictimRestrainedStart, MinigameEndReason) == 0x0260);
static_assert(offsetof(ABBQVictimRestrainedStart, ReservedAssociatedVictim) == 0x0268);
static_assert(offsetof(ABBQVictimRestrainedStart, BreakLooseMinigame) == 0x0270);
static_assert(offsetof(FBBQFootprintTrail, OwnerCharacter) == 0x0004);
static_assert(offsetof(FBBQFootprintTrail, Footprints) == 0x0010);
static_assert(offsetof(UBBQVictimTrackerComponent, TrackingBlockedTags) == 0x00C0);
static_assert(offsetof(UBBQVictimTrackerComponent, FootprintTrailMap) == 0x00E0);
static_assert(offsetof(FActiveSpectatorState, PlayerState) == 0x0000);
static_assert(offsetof(FActiveSpectatorState, ViewTarget) == 0x0008);
static_assert(offsetof(FSpectatorLevelSequenceInfo, OwningPlayer) == 0x0000);
static_assert(offsetof(FSpectatorLevelSequenceInfo, LevelSequencePlayer) == 0x0008);
static_assert(offsetof(UBBQViewTargetManagerComponent, SpectateNextSFX) == 0x00C8);
static_assert(offsetof(UBBQViewTargetManagerComponent, ActiveState) == 0x00D0);
static_assert(offsetof(UBBQViewTargetManagerComponent, AllLevelSequenceInfo) == 0x00E0);
static_assert(offsetof(UBBQViewTargetManagerComponent, PreviousViewTarget) == 0x00F0);
static_assert(offsetof(UBBQViewTargetManagerComponent, CheckValidPlayerStateHandle) == 0x00F8);
static_assert(offsetof(ABBQWell, FadeCurve) == 0x0250);
static_assert(offsetof(ABBQWell, LandingEffects) == 0x0268);
static_assert(offsetof(ABBQWell, TagsWhilstUsing) == 0x02B8);
static_assert(offsetof(ABBQWell, TagsWhilstFallingAndRecovery) == 0x02D8);
static_assert(offsetof(ABBQWell, ClamberIntoAnimSlot) == 0x02F9);
static_assert(offsetof(ABBQWell, JumpIntoAnimSlot) == 0x02FA);
static_assert(offsetof(ABBQWell, BeThrownIntoAnimSlot) == 0x02FB);
static_assert(offsetof(ABBQWell, ApplyPositionCorrectionOnEntry) == 0x0300);
static_assert(offsetof(ABBQWell, InteractionPoint) == 0x0350);
static_assert(offsetof(ABBQWell, EntryPoint) == 0x0358);
static_assert(offsetof(ABBQWell, ExitPoint) == 0x0360);
static_assert(offsetof(ABBQWell, CurrentInstigatorPlayer) == 0x0368);
static_assert(offsetof(UBBQAnimNotify_WindowLandingAssist, ActiveJumpData) == 0x0030);
static_assert(offsetof(UBBQWindowSmashVFX, WindowSmashParticles) == 0x00B0);
static_assert(offsetof(UBBQWindowSmashVFX, WinFinalDestructibleActorTemplate) == 0x00B8);
static_assert(offsetof(UBBQWindowSmashVFX, IntactMeshToHideReference) == 0x00C8);
static_assert(offsetof(FReplicatedOutlineInfo, OutlineInstance) == 0x0000);
static_assert(offsetof(FReplicatedActorOutlineInfo, HighlightedActor) == 0x0010);
static_assert(offsetof(FReplicatedActorOutlineInfo, OutlineInfo) == 0x0018);
static_assert(offsetof(FPlayerOutlineContainer, OutlineInfoArr) == 0x0108);
static_assert(offsetof(FPlayerOutlineContainer, OwnerPlayerState) == 0x0118);
static_assert(offsetof(UBBQWorldOutlineInfoComponent, Outlines) == 0x00B0);
static_assert(offsetof(UBBQWorldOutlineInfoComponent, ViewPlayerState) == 0x01D0);
static_assert(offsetof(FDecalSettingBase, DecalMaterial) == 0x0000);
static_assert(offsetof(FDecalSettingBase, DecalSize) == 0x0008);
static_assert(offsetof(FDecalSettingBase, RandomDeltaRoll) == 0x001C);
static_assert(offsetof(FDecalSettingBase, DecalScaleRange) == 0x0024);
static_assert(offsetof(FDecalSettingBase, SubUVLimitsParam) == 0x0040);
static_assert(offsetof(FDecalSettingBase, SubUVSelectionParam) == 0x0048);
static_assert(offsetof(FBloodSplashDecalSettings, SplashDecalMaterialsFloor) == 0x0000);
static_assert(offsetof(FBloodSplashDecalSettings, SplashDecalMaterialsWall) == 0x0010);
static_assert(offsetof(FBloodSplashDecalSettings, BaseDecalSizeFloor) == 0x0020);
static_assert(offsetof(FBloodSplashDecalSettings, BaseDecalSizeWall) == 0x002C);
static_assert(offsetof(FBloodSplashDecalSettings, DecalScaleRange) == 0x0044);
static_assert(offsetof(FPostHitSplashSettings, AttackerSplashType) == 0x0000);
static_assert(offsetof(FPostHitSplashSettings, BystanderSplashType) == 0x0001);
static_assert(offsetof(FPostHitSplashSettings, EnvironmentBloodSplashSettings) == 0x0008);
static_assert(offsetof(FPostHitSplashSettings, SplashRandomPitchYawRange) == 0x0058);
static_assert(offsetof(FVisualDamageInteractionParam, AttackType) == 0x0000);
static_assert(offsetof(FVisualDamageInteractionParam, ObjectSurfaceType) == 0x0001);
static_assert(offsetof(FVisualDamageInteractionParam, ParticleEffect) == 0x0008);
static_assert(offsetof(FVisualDamageInteractionParam, DamageDecalSettings) == 0x0018);
static_assert(offsetof(FVisualDamageInteractionParam, ImpactSound) == 0x0068);
static_assert(offsetof(FVisualDamageInteractionParam, SplashSettings) == 0x0070);
static_assert(offsetof(UVisualDamageInteractionMappingAsset, DamageMappings) == 0x0030);
static_assert(offsetof(ABBQWrenchAttackBehaviour, CinematicCameraSetup) == 0x02E8);
static_assert(offsetof(ABBQWrenchAttackBehaviour, CombatAnimSlotAttack) == 0x0330);
static_assert(offsetof(ABBQWrenchAttackBehaviour, WrenchItemTag) == 0x0334);
static_assert(offsetof(ABBQWrenchAttackBehaviour, CharacterOwner) == 0x0340);
static_assert(offsetof(ABBQWrenchAttackBehaviour, CharacterTarget) == 0x0348);
static_assert(offsetof(UCharacterCameraShakesConfig, WalkCameraShake) == 0x0030);
static_assert(offsetof(UCharacterCameraShakesConfig, RunCameraShake) == 0x0038);
static_assert(offsetof(UCharacterCameraShakesConfig, CrouchCameraShake) == 0x0040);
static_assert(offsetof(UCharacterCameraShakesConfig, UnCrouchCameraShake) == 0x0048);
static_assert(offsetof(UCharacterCameraShakesConfig, GetHitCameraShake) == 0x0050);
static_assert(offsetof(AGeneratorCattleGrid, BlockKnockBackForTags) == 0x0228);
static_assert(offsetof(AGeneratorCattleGrid, KnockIntoPerksMap) == 0x0238);
static_assert(offsetof(AGeneratorCattleGrid, OnKnockBackMovementStateTag) == 0x0288);
static_assert(offsetof(AGeneratorCattleGrid, OnKnockBackStatusTag) == 0x0290);
static_assert(offsetof(AGeneratorCattleGrid, OnRecentlyElectrocutedTag) == 0x0298);
static_assert(offsetof(AGeneratorCattleGrid, GridOverlappingComponent) == 0x02A8);
static_assert(offsetof(ULocksContainer, ActualLocks) == 0x0028);
static_assert(offsetof(ASSACosmeticCueNotify_Actor, BlendablesToEnableAfterDeactivation) == 0x0298);
static_assert(offsetof(ASSACosmeticCueNotify_Actor, VFXMaterial) == 0x02A8);
static_assert(offsetof(ASSACosmeticCueNotify_Actor, VFXMaterialFadeParameterName) == 0x02B4);
static_assert(offsetof(ASSACosmeticCueNotify_Actor, CinematicCameraExclusionTags) == 0x02C0);
static_assert(offsetof(ASSACosmeticCueNotify_Actor, VFXMaterialFadeInFunction) == 0x02E0);
static_assert(offsetof(ASSACosmeticCueNotify_Actor, VFXMaterialFadeOutFunction) == 0x02E1);
static_assert(offsetof(ASSACosmeticCueNotify_Actor, AkEventStart) == 0x02E8);
static_assert(offsetof(ASSACosmeticCueNotify_Actor, AkEventLoop) == 0x02F0);
static_assert(offsetof(ASSACosmeticCueNotify_Actor, AkEventEnd) == 0x02F8);
static_assert(offsetof(ASSACosmeticCueNotify_Actor, GlobalRTPCFlag) == 0x0300);
static_assert(offsetof(ASSACosmeticCueNotify_Actor, RTPCValue) == 0x0308);
static_assert(offsetof(ASSACosmeticCueNotify_Actor, RTPCCurve) == 0x0310);
static_assert(offsetof(ASSACosmeticCueNotify_Actor, AttributeAudioSwitchMap) == 0x0318);
static_assert(offsetof(ASSACosmeticCueNotify_Actor, VFXMaterialDynamic) == 0x0368);
static_assert(offsetof(AVisualDamageApplicationActor_Manual, TargetTag) == 0x0228);
static_assert(offsetof(AVisualDamageApplicationActor_Manual, SceneComponent) == 0x0238);
static_assert(offsetof(AVisualDamageApplicationActor_Manual, BoxComponent) == 0x0240);
static_assert(offsetof(AVisualDamageApplicationActor_Sweep, TargetTag) == 0x0228);
static_assert(offsetof(AVisualDamageApplicationActor_Sweep, SceneComponent) == 0x0230);
static_assert(offsetof(AVisualDamageApplicationActor_Sweep, BoxComponent) == 0x0238);
static_assert(offsetof(AVisualDamageApplicationActor_Mesh, AttackerTag) == 0x0228);
static_assert(offsetof(AVisualDamageApplicationActor_Mesh, VictimTag) == 0x0230);
static_assert(offsetof(AVisualDamageApplicationActor_Mesh, SceneComponent) == 0x0238);
static_assert(offsetof(AVisualDamageApplicationActor_Mesh, BoxComponent) == 0x0240);
static_assert(offsetof(UVisualDamageInstigatorComponent, DamageTraceChannel) == 0x00B0);
static_assert(offsetof(UVisualDamageInstigatorComponent, SkinSurfaceType) == 0x00B1);
static_assert(offsetof(UVisualDamageInstigatorComponent, SocketName) == 0x00DC);
static_assert(offsetof(UVisualDamageInstigatorComponent, EnvAttackChannel) == 0x00E4);
static_assert(offsetof(UVisualDamageInstigatorComponent, DamageSettings) == 0x0108);
static_assert(offsetof(UVisualDamageInstigatorComponent, CurrentDamageSettings) == 0x0128);
static_assert(offsetof(UVisualDamageInstigatorComponent, EnvHitReceiverSubObject) == 0x0180);
static_assert(offsetof(UVisualDamageInstigatorComponent, ChainsawProp) == 0x01A0);
static_assert(offsetof(UVisualDamageInstigatorComponent, LastAttackMontage) == 0x01B0);
static_assert(offsetof(UVisualDamageInstigatorComponent, AttachedPS) == 0x01B8);
static_assert(offsetof(FDyanmicMaterialContainer, DynamicMaterial) == 0x0000);
static_assert(offsetof(FDyanmicMaterialContainer, OriginalMeshMaterial) == 0x0008);
static_assert(offsetof(UVisualDamageReceiverComponent, RenderTargetFormat) == 0x00B8);
static_assert(offsetof(UVisualDamageReceiverComponent, VisualDamageSceneCapture) == 0x00C0);
static_assert(offsetof(UVisualDamageReceiverComponent, RenderTarget) == 0x00C8);
static_assert(offsetof(UVisualDamageReceiverComponent, UnwrapMaterial) == 0x00E0);
static_assert(offsetof(UVisualDamageReceiverComponent, InvisibleMaterial) == 0x00E8);
static_assert(offsetof(UVisualDamageReceiverComponent, UnwrapMID) == 0x00F0);
static_assert(offsetof(UVisualDamageReceiverComponent, CharacterDynMatContainers) == 0x00F8);
static_assert(offsetof(UVisualDamageReceiverComponent, ExecutionErodeTexture) == 0x0108);
static_assert(offsetof(FBBQFamilyBondActivity, Event_Name) == 0x0008);
static_assert(offsetof(FBBQFamilyBondActivity, OffsetGameplayVariable) == 0x0028);
static_assert(offsetof(FCommEventData, EventTag) == 0x0000);
static_assert(offsetof(FCommEventData, Instigator) == 0x0008);
static_assert(offsetof(FCommEventData, Addressee) == 0x0010);
static_assert(offsetof(FCommEventData, EventId) == 0x0018);
static_assert(offsetof(FBBQPairedAnimationRole, AnimationMontage) == 0x0000);
static_assert(offsetof(FBBQPairedAnimationRole, LevelSequence) == 0x0008);
static_assert(offsetof(FBBQPairedAnimationRole, AnimationTransformRule) == 0x0010);
static_assert(offsetof(FBBQPairedAnimationRole, AdditionalOffset) == 0x0020);
static_assert(offsetof(FBBQRotationSettings, Mode) == 0x0000);
static_assert(offsetof(FBBQCloseEncounterDialogDefinition, CommEventTag) == 0x0000);
static_assert(offsetof(FBBQCloseEncounterDefinition, PairedAnimSlotMap) == 0x0008);
static_assert(offsetof(FBBQCloseEncounterDefinition, GameplayTagMap) == 0x0058);
static_assert(offsetof(FBBQCloseEncounterDefinition, TagsWhilstAttacking) == 0x00A8);
static_assert(offsetof(FBBQCloseEncounterDefinition, TagsWhilstDefending) == 0x00C8);
static_assert(offsetof(FBBQCloseEncounterDefinition, CancelAbilitiesWithTag) == 0x00E8);
static_assert(offsetof(FBBQCloseEncounterDefinition, AttackerWinEffect) == 0x0108);
static_assert(offsetof(FBBQCloseEncounterDefinition, AttackerLoseEffect) == 0x0110);
static_assert(offsetof(FBBQCloseEncounterDefinition, AttackerLoseDueToInterruptEffect) == 0x0118);
static_assert(offsetof(FBBQCloseEncounterDefinition, DefenderWinEffect) == 0x0120);
static_assert(offsetof(FBBQCloseEncounterDefinition, DefenderLoseEffect) == 0x0128);
static_assert(offsetof(FBBQCloseEncounterDefinition, DefenderAreaEffect) == 0x0130);
static_assert(offsetof(FBBQCloseEncounterDefinition, WinnerSelection) == 0x0140);
static_assert(offsetof(FBBQCloseEncounterDefinition, MinigameClass) == 0x0148);
static_assert(offsetof(FBBQCloseEncounterDefinition, AttackerCameraState) == 0x0164);
static_assert(offsetof(FBBQCloseEncounterDefinition, MainDefenderCameraState) == 0x016C);
static_assert(offsetof(FBBQCloseEncounterDefinition, CloseEncounterActiveEvent) == 0x0178);
static_assert(offsetof(FBBQCloseEncounterDefinition, AttackerWinEvent) == 0x0180);
static_assert(offsetof(FBBQCloseEncounterDefinition, DefenderWinEvent) == 0x0188);
static_assert(offsetof(FBBQCloseEncounterDefinition, MinigameActiveRTPC) == 0x0190);
static_assert(offsetof(FBBQCloseEncounterDefinition, MinigameProgressRTPC) == 0x0198);
static_assert(offsetof(FBBQCloseEncounterDefinition, CloseEncounterStateDialogMap) == 0x01A0);
static_assert(offsetof(FDialogRow, CommId) == 0x0008);
static_assert(offsetof(FDialogRow, TextLocKey) == 0x0010);
static_assert(offsetof(FDialogRow, CharacterName) == 0x0020);
static_assert(offsetof(FDialogRow, AddresseeName) == 0x0030);
static_assert(offsetof(FDialogRow, FacialAnim) == 0x0040);
static_assert(offsetof(FCommRow, SubCommId) == 0x0008);
static_assert(offsetof(FCommRow, RequiredTags) == 0x0018);
static_assert(offsetof(FCommRow, BlockedTags) == 0x0038);
static_assert(offsetof(FCommRow, FamilyBroadcastRule) == 0x005C);
static_assert(offsetof(FCommRow, VictimBroadcastRule) == 0x005D);
static_assert(offsetof(FCommRow, VocalisationType) == 0x005E);
static_assert(offsetof(FBBQGameplayAbilityTargetData_ClueInfo, TargetClueArray) == 0x0008);
static_assert(offsetof(FBBQGameplayAbilityTargetData_SingleLocationInfo, TargetLocation) == 0x0010);
static_assert(offsetof(FBBQGameplayActivityEvent, EventName) == 0x0008);
static_assert(offsetof(FBBQGameplayActivityEvent, HUDMessage) == 0x0020);
static_assert(offsetof(FBBQGameplayActivityEvent, EventIcon) == 0x0038);
static_assert(offsetof(FBBQGameplayActivityEvent, ExperiencePointsBeneficiary) == 0x0068);
static_assert(offsetof(FBBQGameplayActivityEvent, EventReceiver) == 0x0070);
static_assert(offsetof(FBBQGameplayActivityEvent, NotificationType) == 0x0072);
static_assert(offsetof(FBBQGameplayActivityEvent, NotificationWidget) == 0x0078);
static_assert(offsetof(FBBQGameplayActivityEvent, NotificationSound) == 0x0088);
static_assert(offsetof(FBBQNotificationData, PlayerState) == 0x0000);
static_assert(offsetof(FBBQNotificationData, NotificationTexts) == 0x0008);
static_assert(offsetof(FBBQNotificationData, NotificationDisplayedPlatforms) == 0x0028);
static_assert(offsetof(FBBQDynamicMontageParams, Animation) == 0x0000);
static_assert(offsetof(FBBQComponentAndTransform, Transform) == 0x0000);
static_assert(offsetof(FBBQComponentAndTransform, Component) == 0x0030);
static_assert(offsetof(FBBQHarvestAnimSections, SectionNames) == 0x0000);
static_assert(offsetof(FBBQInteractionEventList, PressEvents) == 0x0000);
static_assert(offsetof(FBBQInteractionEventList, HoldEvents) == 0x0010);
static_assert(offsetof(FBBQLockAnimInfo, BeginMontage) == 0x0000);
static_assert(offsetof(FBBQLockAnimInfo, LoopMontage) == 0x0008);
static_assert(offsetof(FBBQLockAnimInfo, EndMontage) == 0x0010);
static_assert(offsetof(FLockVisualState, StaticMesh) == 0x0000);
static_assert(offsetof(FLockVisualState, Material) == 0x0008);
static_assert(offsetof(FBBQPointOfInterestDefinition, Category) == 0x0008);
static_assert(offsetof(FBBQPointOfInterestDefinition, RequiredTeam) == 0x0018);
static_assert(offsetof(FBBQPointOfInterestDefinition, RequiredAnyCharacterTags) == 0x0020);
static_assert(offsetof(FBBQPointOfInterestDefinition, RequiredAllCharacterTags) == 0x0040);
static_assert(offsetof(FBBQPointOfInterestDefinition, ForbiddenCharacterTags) == 0x0060);
static_assert(offsetof(FVisualDamageInstigatorSettings, AttackTypeToUse) == 0x0000);
static_assert(offsetof(FVisualDamageInstigatorSettings, HitLocation) == 0x0004);
static_assert(offsetof(FVisualDamageInstigatorSettings, HitNormal) == 0x0010);
static_assert(offsetof(FVisualDamageInstigatorSettings, HitActor) == 0x0020);
static_assert(offsetof(FVisualDamageInstigatorSettings, Attacker) == 0x0028);
static_assert(offsetof(FVisualDamageInstigatorSettings, HitActorMesh) == 0x0030);
static_assert(offsetof(FVisualDamageInstigatorSettings, AttackerMesh) == 0x0038);
static_assert(offsetof(FVisualDamageInstigatorSettings, AnimationAttackDirection) == 0x0040);
static_assert(offsetof(FVisualDamageInstigatorSettings, OverrideWoundRotation) == 0x0044);
static_assert(offsetof(FVisualDamageInstigatorSettings, OverrideActorWoundSize) == 0x0050);
static_assert(offsetof(FVisualDamageAttack, ActorCausingDamage) == 0x0000);
static_assert(offsetof(FVisualDamageAttack, ActorReceivingDamage) == 0x0008);
static_assert(offsetof(FVisualDamageAttack, AttackType) == 0x0010);
static_assert(offsetof(FVisualDamageAttack, AttackVisualTraceType) == 0x0011);
static_assert(offsetof(FInteractionEventVisualParams, Text) == 0x0000);
static_assert(offsetof(FInteractionEventVisualParams, InteractButton) == 0x0018);
static_assert(offsetof(FInteractionEventVisualParams, PromptType) == 0x0020);
static_assert(offsetof(FInteractionEventVisualParams, UIAssetIdentifier) == 0x0024);
static_assert(offsetof(FInteractionHint, Content) == 0x0008);
static_assert(offsetof(FInteractionHint, EventName) == 0x0020);
static_assert(offsetof(FInteractionVisualParams, InteractionEventData) == 0x0000);
static_assert(offsetof(FInteractionVisualParams, Icon) == 0x0010);
static_assert(offsetof(FInteractionVisualParams, AdditionalHints) == 0x0028);
static_assert(offsetof(FMottoPerkClassBonusRow, RequiredMottoPerks) == 0x0008);
static_assert(offsetof(FMottoPerkClassBonusRow, BonusPerks) == 0x0058);
static_assert(offsetof(FNoiseEvent, NoiseEmitterType) == 0x0000);
static_assert(offsetof(FNoiseEvent, WorldLocation) == 0x0004);
